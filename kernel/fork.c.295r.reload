
;; Function _get_base (_get_base, funcdef_no=0, decl_uid=1278, cgraph_uid=1, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 6:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            0 Early clobber: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 12:  (0) =&d  (1) m  (2) m  (3) m
      Creating newreg=94 from oldreg=91, assigning class DREG to r94
   12: {r94:SI=asm_operands;clobber flags:CC;}
      REG_DEAD r85:SI
      REG_DEAD r84:SI
      REG_DEAD r83:SI
      REG_UNUSED flags:CC
    Inserting insn reload after:
   25: r91:SI=r94:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 21: point = 0, n_alt = -1
   Insn 20: point = 0, n_alt = -2
   Insn 16: point = 1, n_alt = -2
   Insn 13: point = 3, n_alt = 0
   Insn 11: point = 4, n_alt = 1
   Insn 25: point = 5, n_alt = -2
	Hard reg 0 is preferable by r94 with profit 1000
   Insn 12: point = 7, n_alt = 0
   Insn 10: point = 8, n_alt = 0
   Insn 9: point = 10, n_alt = 0
   Insn 8: point = 11, n_alt = 0
   Insn 7: point = 13, n_alt = 0
   Insn 6: point = 14, n_alt = 0
   Insn 5: point = 16, n_alt = 0
   Insn 23: point = 17, n_alt = 0
 r82: [17..17]
 r83: [7..14]
 r84: [7..11]
 r85: [7..8]
 r86: [2..3]
 r87: [0..1]
 r88: [15..16]
 r89: [12..13]
 r90: [9..10]
 r91: [4..5]
 r94: [6..7]
Compressing live ranges: from 18 to 16 - 88%
Ranges after the compression:
 r82: [15..15]
 r83: [7..12]
 r84: [7..10]
 r85: [7..8]
 r86: [2..3]
 r87: [0..1]
 r88: [13..14]
 r89: [11..12]
 r90: [9..10]
 r91: [4..5]
 r94: [6..7]

********** Assignment #1: **********

	 Assigning to 94 (cl=DREG, orig=91, freq=2000, tfirst=94, tfreq=2000)...
	 Trying 1: spill 84(freq=2000)	 Now best 1(cost=0, bad_spills=0, insn_pseudos=1)

      Spill r84(hr=1, freq=2000) for r94
	   Assign 1 to reload r94 (freq=2000)
  Reassigning non-reload pseudos
	   Assign 3 to r84 (freq=2000)

********** Undoing inheritance #1: **********


********** Pseudos coalescing #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =&d  (1) m  (2) m  (3) m
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 8:  (0) r  (1) r  (2) le {*addsi_1}
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=24)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
changing reg in insn 23
changing reg in insn 6
changing reg in insn 12
changing reg in insn 8
changing reg in insn 12
changing reg in insn 10
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 16
changing reg in insn 20
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
deleting insn with uid = 16.
deleting insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns


_get_base

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;;  ref usage 	r0={6d,5u} r1={3d,2u} r2={3d,2u} r3={1d,1u} r7={1d,7u} r16={3e} r17={5d} 
;;    total ref usage 39{19d,17u,3e} in 12{12 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 23 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 23 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 23 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [88])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [16 addr+0 S4 A32])) "include/linux/sched.h":181:28 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
                (plus:SI (reg/f:SI 0 ax [88])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":181:28 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [16 addr+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 7 6 8 2 (set (reg/f:SI 1 dx [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [16 addr+0 S4 A32])) "include/linux/sched.h":181:48 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 3 bx [orig:84 _2 ] [84])
                (plus:SI (reg/f:SI 1 dx [89])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":181:48 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [16 addr+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 9 8 10 2 (set (reg/f:SI 2 cx [90])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [16 addr+0 S4 A32])) "include/linux/sched.h":181:68 75 {*movsi_internal}
     (nil))
(insn 10 9 12 2 (parallel [
            (set (reg/f:SI 2 cx [orig:85 _3 ] [85])
                (plus:SI (reg/f:SI 2 cx [90])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":181:68 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [16 addr+0 S4 A32])
            (const_int 7 [0x7]))
        (nil)))
(insn 12 10 25 2 (parallel [
            (set (reg:SI 1 dx [orig:91 __base ] [91])
                (asm_operands:SI ("movb %3, %%dh
	movb %2, %%dl
	shll $16, %%edx
	movw %1, %%dx") ("=&d") 0 [
                        (mem:QI (reg/f:SI 0 ax [orig:83 _1 ] [83]) [0 *_1+0 S1 A8])
                        (mem:QI (reg/f:SI 3 bx [orig:84 _2 ] [84]) [0 *_2+0 S1 A8])
                        (mem:QI (reg/f:SI 2 cx [orig:85 _3 ] [85]) [0 *_3+0 S1 A8])
                    ]
                     [
                        (asm_input:QI ("m") include/linux/sched.h:177)
                        (asm_input:QI ("m") include/linux/sched.h:177)
                        (asm_input:QI ("m") include/linux/sched.h:177)
                    ]
                     [] include/linux/sched.h:177))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":177:5 -1
     (nil))
(insn 25 12 11 2 (set (reg:SI 0 ax [orig:91 __base ] [91])
        (reg:SI 1 dx [orig:91 __base ] [91])) "include/linux/sched.h":177:5 75 {*movsi_internal}
     (nil))
(insn 11 25 13 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 __base+0 S4 A32])
        (reg:SI 0 ax [orig:91 __base ] [91])) "include/linux/sched.h":177:5 75 {*movsi_internal}
     (nil))
(insn 13 11 21 2 (set (reg:SI 0 ax [orig:86 _7 ] [86])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 __base+0 S4 A32])) "include/linux/sched.h":182:12 75 {*movsi_internal}
     (nil))
(insn 21 13 24 2 (use (reg/i:SI 0 ax)) "include/linux/sched.h":183:1 -1
     (nil))
(note 24 21 0 NOTE_INSN_DELETED)

;; Function verify_area (verify_area, funcdef_no=1, decl_uid=1315, cgraph_uid=2, symbol_order=2)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            alt=2: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*andsi_1}
      Creating newreg=93 from oldreg=90, assigning class GENERAL_REGS to r93
    8: {r93:SI=r93:SI&0xfff;clobber flags:CC;}
      REG_DEAD r90:SI
      REG_UNUSED flags:CC
      REG_EQUAL [frame:SI-0x4]&0xfff
    Inserting insn reload before:
   49: r93:SI=r90:SI
    Inserting insn reload after:
   50: r83:SI=r93:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 10
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 12:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (1) lBwBz {*call_value} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 18:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 20:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 24:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 25:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 29:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 30:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) ?mr {*cmpsi_ccno_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 6 5 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 46: point = 0, n_alt = -1
  BB 5
  BB 6
   Insn 44: point = 0, n_alt = -1
  BB 4
   Insn 37: point = 0, n_alt = -1
   Insn 36: point = 0, n_alt = 1
  BB 2
   Insn 41: point = 1, n_alt = -1
   Insn 20: point = 1, n_alt = 0
   Insn 19: point = 2, n_alt = -2
   Insn 18: point = 3, n_alt = 0
   Insn 17: point = 3, n_alt = 0
   Insn 16: point = 3, n_alt = 0
   Insn 15: point = 4, n_alt = 0
   Insn 14: point = 6, n_alt = 0
   Insn 13: point = 8, n_alt = 0
   Insn 12: point = 9, n_alt = 0
   Insn 11: point = 9, n_alt = 1
   Insn 10: point = 10, n_alt = 0
   Insn 9: point = 12, n_alt = 0
   Insn 50: point = 13, n_alt = -2
	Hard reg 1 is preferable by r93 with profit 1000
   Insn 8: point = 15, n_alt = 0
   Insn 49: point = 16, n_alt = -2
	Hard reg 1 is preferable by r93 with profit 1000
	Hard reg 0 is preferable by r93 with profit 1000
   Insn 7: point = 18, n_alt = 0
   Insn 6: point = 19, n_alt = 1
   Insn 5: point = 20, n_alt = 0
   Insn 47: point = 21, n_alt = 0
  BB 3
   Insn 30: point = 22, n_alt = 0
   Insn 29: point = 22, n_alt = 0
   Insn 28: point = 22, n_alt = 0
   Insn 27: point = 22, n_alt = -2
   Insn 26: point = 22, n_alt = 0
   Insn 25: point = 22, n_alt = 0
   Insn 24: point = 22, n_alt = 0
 r82: [0..22]
 r83: [11..13]
 r84: [11..12]
 r85: [9..10]
 r86: [5..6]
 r87: [3..4]
 r88: [1..2]
 r89: [19..20]
 r90: [17..18]
 r91: [7..8]
 r93: [14..16]
Compressing live ranges: from 23 to 18 - 78%
Ranges after the compression:
 r82: [0..17]
 r83: [10..11]
 r84: [10..11]
 r85: [8..9]
 r86: [4..5]
 r87: [2..3]
 r88: [0..1]
 r89: [16..17]
 r90: [14..15]
 r91: [6..7]
 r93: [12..13]

********** Assignment #1: **********

	 Assigning to 93 (cl=GENERAL_REGS, orig=90, freq=3000, tfirst=93, tfreq=3000)...
	   Assign 0 to reload r93 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 47
changing reg in insn 27
changing reg in insn 13
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 16
changing reg in insn 19
changing reg in insn 20
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 13
changing reg in insn 14
deleting insn with uid = 49.
deleting insn with uid = 19.
deleting insn with uid = 27.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 28.


verify_area

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={11d,9u} r1={4d,1u} r2={3d} r3={1d,2u} r7={6d,32u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={14d,1u} r18={2d} r19={1e} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 215{169d,45u,1e} in 28{26 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 47 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 47 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 47 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [17 addr+0 S4 A32])) "kernel/fork.c":21:11 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 start+0 S4 A32])
        (reg/f:SI 0 ax [89])) "kernel/fork.c":21:11 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 0 ax [90])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 start+0 S4 A32])) "kernel/fork.c":22:19 75 {*movsi_internal}
     (nil))
(insn 8 7 50 2 (parallel [
            (set (reg:SI 0 ax [90])
                (and:SI (reg:SI 0 ax [90])
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":22:19 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 start+0 S4 A32])
            (const_int 4095 [0xfff]))
        (nil)))
(insn 50 8 9 2 (set (reg:SI 1 dx [orig:83 _1 ] [83])
        (reg:SI 0 ax [90])) "kernel/fork.c":22:19 75 {*movsi_internal}
     (nil))
(insn 9 50 10 2 (set (reg:SI 0 ax [orig:84 size.0_2 ] [84])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [5 size+0 S4 A32])) "kernel/fork.c":22:10 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 0 ax [orig:85 _3 ] [85])
                (plus:SI (reg:SI 0 ax [orig:84 size.0_2 ] [84])
                    (reg:SI 1 dx [orig:83 _1 ] [83])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":22:10 209 {*addsi_1}
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [5 size+0 S4 A32])
        (reg:SI 0 ax [orig:85 _3 ] [85])) "kernel/fork.c":22:10 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [1 start+0 S4 A32])
                (and:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [1 start+0 S4 A32])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":23:11 490 {*andsi_1}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 0 ax [91])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7c5bf252e120 current>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":24:14 75 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 0 ax [orig:86 current.1_4 ] [86])
        (mem/f/c:SI (reg/f:SI 0 ax [91]) [13 current+0 S4 A32])) "kernel/fork.c":24:14 75 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg/f:SI 0 ax [orig:87 _5 ] [87])
                (plus:SI (reg/f:SI 0 ax [orig:86 current.1_4 ] [86])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":24:14 209 {*addsi_1}
     (nil))
(insn 16 15 17 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg/f:SI 0 ax [orig:87 _5 ] [87])) "kernel/fork.c":24:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(call_insn 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_get_base") [flags 0x3]  <function_decl 0x7c5bf2515900 _get_base>) [0 _get_base S1 A8])
            (const_int 4 [0x4]))) "kernel/fork.c":24:14 823 {*call_value}
     (nil)
    (nil))
(insn 18 17 20 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":24:14 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 20 18 41 2 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [1 start+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [1 start+0 S4 A32])
                    (reg:SI 0 ax [orig:88 _16 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":24:11 209 {*addsi_1}
     (nil))
(jump_insn 41 20 42 2 (set (pc)
        (label_ref 31)) "kernel/fork.c":25:11 807 {jump}
     (nil)
 -> 31)
(barrier 42 41 33)
(code_label 33 42 23 3 5 (nil) [1 uses])
(note 23 33 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 3 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 36 [0x24])) [5 size+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 36 [0x24])) [5 size+0 S4 A32])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":26:14 209 {*addsi_1}
     (nil))
(insn 25 24 26 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":27:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 26 25 28 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 start+0 S4 A32])) "kernel/fork.c":27:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 28 26 29 3 (call (mem:QI (symbol_ref:SI ("write_verify") [flags 0x41]  <function_decl 0x7c5bf2538f00 write_verify>) [0 write_verify S1 A8])
        (const_int 16 [0x10])) "kernel/fork.c":27:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 29 28 30 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":27:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 30 29 31 3 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [1 start+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [1 start+0 S4 A32])
                    (const_int 4096 [0x1000])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":28:15 209 {*addsi_1}
     (nil))
(code_label 31 30 32 4 4 (nil) [1 uses])
(note 32 31 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 32 37 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [5 size+0 S4 A32])
            (const_int 0 [0]))) "kernel/fork.c":25:17 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 37 36 43 4 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "kernel/fork.c":25:17 806 {*jcc}
     (nil)
 -> 33)
(note 43 37 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 38 6 (const_int 0 [0]) "kernel/fork.c":30:1 843 {nop}
     (nil))
(note 38 44 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 45 38 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 48 7 (const_int 0 [0]) "kernel/fork.c":30:1 843 {nop}
     (nil))
(note 48 46 0 NOTE_INSN_DELETED)

;; Function find_empty_process (find_empty_process, funcdef_no=2, decl_uid=1356, cgraph_uid=3, symbol_order=3)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 7:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 64:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5
EBB 6 7 8
EBB 9
EBB 10 11
EBB 12 13
EBB 14
EBB 15 16
EBB 17

********** Pseudo live ranges #1: **********

  BB 17
   Insn 81: point = 0, n_alt = -1
   Insn 80: point = 0, n_alt = -2
   Insn 76: point = 1, n_alt = -2
  BB 13
   Insn 89: point = 4, n_alt = -1
   Insn 59: point = 4, n_alt = 0
  BB 16
   Insn 73: point = 5, n_alt = 0
  BB 15
   Insn 71: point = 6, n_alt = -1
   Insn 70: point = 6, n_alt = 0
  BB 11
   Insn 87: point = 7, n_alt = -1
   Insn 49: point = 7, n_alt = 1
  BB 10
   Insn 47: point = 8, n_alt = -1
   Insn 46: point = 8, n_alt = 0
  BB 5
   Insn 83: point = 9, n_alt = -1
   Insn 18: point = 9, n_alt = 1
  BB 4
   Insn 15: point = 10, n_alt = 1
  BB 3
   Insn 13: point = 11, n_alt = -1
   Insn 12: point = 11, n_alt = 0
   Insn 9: point = 12, n_alt = 0
   Insn 8: point = 13, n_alt = 1
   Insn 7: point = 14, n_alt = 0
   Insn 6: point = 16, n_alt = 0
  BB 8
   Insn 85: point = 18, n_alt = -1
  BB 2
   Insn 91: point = 19, n_alt = 0
  BB 9
   Insn 40: point = 20, n_alt = 0
  BB 7
   Insn 34: point = 21, n_alt = -1
   Insn 33: point = 21, n_alt = 0
   Insn 32: point = 22, n_alt = 0
   Insn 31: point = 23, n_alt = 0
   Insn 30: point = 25, n_alt = 0
   Insn 29: point = 27, n_alt = 0
   Insn 28: point = 28, n_alt = 0
  BB 6
   Insn 26: point = 30, n_alt = -1
   Insn 25: point = 30, n_alt = 0
   Insn 24: point = 31, n_alt = 0
   Insn 23: point = 33, n_alt = 0
   Insn 22: point = 34, n_alt = 0
  BB 14
   Insn 64: point = 36, n_alt = 0
  BB 12
   Insn 57: point = 37, n_alt = -1
   Insn 56: point = 37, n_alt = 0
   Insn 55: point = 38, n_alt = 0
   Insn 54: point = 40, n_alt = 0
   Insn 53: point = 41, n_alt = 0
 r82: [6..42]
 r83: [15..16]
 r84: [13..14]
 r85: [11..12]
 r86: [30..31]
 r87: [24..25]
 r88: [21..23]
 r89: [21..22]
 r90: [37..38]
 r91: [2..5]
 r92: [0..1]
 r93: [32..34]
 r94: [32..33]
 r95: [26..28]
 r96: [26..27]
 r97: [39..41]
 r98: [39..40]
Compressing live ranges: from 43 to 24 - 55%
Ranges after the compression:
 r82: [4..23]
 r83: [8..9]
 r84: [6..7]
 r85: [4..5]
 r86: [16..17]
 r87: [12..13]
 r88: [10..11]
 r89: [10..11]
 r90: [20..21]
 r91: [2..3]
 r92: [0..1]
 r93: [18..19]
 r94: [18..19]
 r95: [14..15]
 r96: [14..15]
 r97: [22..23]
 r98: [22..23]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 91
changing reg in insn 53
changing reg in insn 32
changing reg in insn 28
changing reg in insn 22
changing reg in insn 15
changing reg in insn 9
changing reg in insn 8
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 12
changing reg in insn 24
changing reg in insn 25
changing reg in insn 30
changing reg in insn 31
changing reg in insn 31
changing reg in insn 33
changing reg in insn 32
changing reg in insn 33
changing reg in insn 55
changing reg in insn 56
changing reg in insn 73
changing reg in insn 59
changing reg in insn 76
changing reg in insn 76
changing reg in insn 80
changing reg in insn 22
changing reg in insn 24
changing reg in insn 23
changing reg in insn 24
changing reg in insn 28
changing reg in insn 30
changing reg in insn 29
changing reg in insn 30
changing reg in insn 53
changing reg in insn 55
changing reg in insn 54
changing reg in insn 55
deleting insn with uid = 76.
deleting insn with uid = 80.
starting the processing of deferred insns
ending the processing of deferred insns


find_empty_process

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={4d,10u} r1={11d,10u} r2={5d,4u} r7={1d,29u} r17={10d,6u} 
;;    total ref usage 90{31d,59u,0e} in 40{40 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 91 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 91 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 91 4 2 NOTE_INSN_FUNCTION_BEG)
(code_label 4 2 5 3 7 ("repeat") [1 uses])
(note 5 4 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 6 5 7 3 (set (reg:SI 1 dx [orig:83 last_pid.2_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_pid") [flags 0x2]  <var_decl 0x7c5bf252e750 last_pid>)
                        ] UNSPEC_GOTOFF))) [1 last_pid+0 S4 A32])) "kernel/fork.c":37:10 75 {*movsi_internal}
     (nil))
(insn 7 6 8 3 (parallel [
            (set (reg:SI 1 dx [orig:84 _2 ] [84])
                (plus:SI (reg:SI 1 dx [orig:83 last_pid.2_1 ] [83])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":37:10 209 {*addsi_1}
     (nil))
(insn 8 7 9 3 (set (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_pid") [flags 0x2]  <var_decl 0x7c5bf252e750 last_pid>)
                        ] UNSPEC_GOTOFF))) [1 last_pid+0 S4 A32])
        (reg:SI 1 dx [orig:84 _2 ] [84])) "kernel/fork.c":37:8 75 {*movsi_internal}
     (nil))
(insn 9 8 12 3 (set (reg:SI 1 dx [orig:85 last_pid.3_3 ] [85])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_pid") [flags 0x2]  <var_decl 0x7c5bf252e750 last_pid>)
                        ] UNSPEC_GOTOFF))) [1 last_pid+0 S4 A32])) "kernel/fork.c":37:10 75 {*movsi_internal}
     (nil))
(insn 12 9 13 3 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 1 dx [orig:85 last_pid.3_3 ] [85])
            (const_int 0 [0]))) "kernel/fork.c":37:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) "kernel/fork.c":37:8 806 {*jcc}
     (nil)
 -> 16)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_pid") [flags 0x2]  <var_decl 0x7c5bf252e750 last_pid>)
                        ] UNSPEC_GOTOFF))) [1 last_pid+0 S4 A32])
        (const_int 1 [0x1])) "kernel/fork.c":38:18 75 {*movsi_internal}
     (nil))
(code_label 16 15 17 5 8 (nil) [1 uses])
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 83 5 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])
        (const_int 0 [0])) "kernel/fork.c":39:12 75 {*movsi_internal}
     (nil))
(jump_insn 83 18 84 5 (set (pc)
        (label_ref 41)) "kernel/fork.c":39:5 807 {jump}
     (nil)
 -> 41)
(barrier 84 83 43)
(code_label 43 84 21 6 11 (nil) [1 uses])
(note 21 43 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:SI 1 dx [93])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7c5bf252e1b0 task>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":42:17 75 {*movsi_internal}
     (nil))
(insn 23 22 24 6 (set (reg:SI 2 cx [94])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])) "kernel/fork.c":42:17 75 {*movsi_internal}
     (nil))
(insn 24 23 25 6 (set (reg/f:SI 1 dx [orig:86 _4 ] [86])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 2 cx [94])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 dx [93])) [13 task[i_9]+0 S4 A32])) "kernel/fork.c":42:17 75 {*movsi_internal}
     (nil))
(insn 25 24 26 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 1 dx [orig:86 _4 ] [86])
            (const_int 0 [0]))) "kernel/fork.c":42:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 26 25 27 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "kernel/fork.c":42:12 806 {*jcc}
     (nil)
 -> 38)
(note 27 26 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 7 (set (reg/f:SI 1 dx [95])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7c5bf252e1b0 task>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":42:28 75 {*movsi_internal}
     (nil))
(insn 29 28 30 7 (set (reg:SI 2 cx [96])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])) "kernel/fork.c":42:28 75 {*movsi_internal}
     (nil))
(insn 30 29 31 7 (set (reg/f:SI 1 dx [orig:87 _5 ] [87])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 2 cx [96])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 dx [95])) [13 task[i_9]+0 S4 A32])) "kernel/fork.c":42:28 75 {*movsi_internal}
     (nil))
(insn 31 30 32 7 (set (reg:SI 2 cx [orig:88 _6 ] [88])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:87 _5 ] [87])
                (const_int 556 [0x22c])) [1 _5->pid+0 S4 A32])) "kernel/fork.c":42:31 75 {*movsi_internal}
     (nil))
(insn 32 31 33 7 (set (reg:SI 1 dx [orig:89 last_pid.4_7 ] [89])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_pid") [flags 0x2]  <var_decl 0x7c5bf252e750 last_pid>)
                        ] UNSPEC_GOTOFF))) [1 last_pid+0 S4 A32])) "kernel/fork.c":42:37 75 {*movsi_internal}
     (nil))
(insn 33 32 34 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 2 cx [orig:88 _6 ] [88])
            (reg:SI 1 dx [orig:89 last_pid.4_7 ] [89]))) "kernel/fork.c":42:21 11 {*cmpsi_1}
     (nil))
(jump_insn 34 33 35 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "kernel/fork.c":42:21 806 {*jcc}
     (nil)
 -> 38)
(note 35 34 85 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 85 35 86 8 (set (pc)
        (label_ref 4)) "kernel/fork.c":43:13 807 {jump}
     (nil)
 -> 4)
(barrier 86 85 38)
(code_label 38 86 39 9 10 (nil) [2 uses])
(note 39 38 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [5 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [5 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":39:32 209 {*addsi_1}
     (nil))
(code_label 41 40 42 10 9 (nil) [1 uses])
(note 42 41 46 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 46 42 47 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [5 i+0 S4 A32])
            (const_int 63 [0x3f]))) "kernel/fork.c":39:19 11 {*cmpsi_1}
     (nil))
(jump_insn 47 46 48 10 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "kernel/fork.c":39:19 806 {*jcc}
     (nil)
 -> 43)
(note 48 47 49 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 87 11 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])
        (const_int 1 [0x1])) "kernel/fork.c":45:12 75 {*movsi_internal}
     (nil))
(jump_insn 87 49 88 11 (set (pc)
        (label_ref 65)) "kernel/fork.c":45:5 807 {jump}
     (nil)
 -> 65)
(barrier 88 87 67)
(code_label 67 88 52 12 15 (nil) [1 uses])
(note 52 67 53 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 12 (set (reg/f:SI 1 dx [97])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7c5bf252e1b0 task>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":47:18 75 {*movsi_internal}
     (nil))
(insn 54 53 55 12 (set (reg:SI 2 cx [98])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])) "kernel/fork.c":47:18 75 {*movsi_internal}
     (nil))
(insn 55 54 56 12 (set (reg/f:SI 1 dx [orig:90 _8 ] [90])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 2 cx [98])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 dx [97])) [13 task[i_10]+0 S4 A32])) "kernel/fork.c":47:18 75 {*movsi_internal}
     (nil))
(insn 56 55 57 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 1 dx [orig:90 _8 ] [90])
            (const_int 0 [0]))) "kernel/fork.c":47:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 57 56 58 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) "kernel/fork.c":47:12 806 {*jcc}
     (nil)
 -> 62)
(note 58 57 59 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 89 13 (set (reg:SI 0 ax [orig:91 _11 ] [91])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])) "kernel/fork.c":48:20 75 {*movsi_internal}
     (nil))
(jump_insn 89 59 90 13 (set (pc)
        (label_ref 74)) "kernel/fork.c":48:20 807 {jump}
     (nil)
 -> 74)
(barrier 90 89 62)
(code_label 62 90 63 14 13 (nil) [1 uses])
(note 63 62 64 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 14 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [5 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [5 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":45:32 209 {*addsi_1}
     (nil))
(code_label 65 64 66 15 12 (nil) [1 uses])
(note 66 65 70 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 70 66 71 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [5 i+0 S4 A32])
            (const_int 63 [0x3f]))) "kernel/fork.c":45:19 11 {*cmpsi_1}
     (nil))
(jump_insn 71 70 72 15 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "kernel/fork.c":45:19 806 {*jcc}
     (nil)
 -> 67)
(note 72 71 73 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 16 (set (reg:SI 0 ax [orig:91 _11 ] [91])
        (const_int -11 [0xfffffffffffffff5])) "kernel/fork.c":50:12 75 {*movsi_internal}
     (nil))
(code_label 74 73 75 17 14 (nil) [1 uses])
(note 75 74 81 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 81 75 92 17 (use (reg/i:SI 0 ax)) "kernel/fork.c":51:1 -1
     (nil))
(note 92 81 0 NOTE_INSN_DELETED)

;; Function copy_mem (copy_mem, funcdef_no=3, decl_uid=1370, cgraph_uid=4, symbol_order=4)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) r
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) r
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 17:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (1) lBwBz {*call_value} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 20:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-4)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 25:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (1) lBwBz {*call_value} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 28:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-4)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 35:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 47:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 52:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 64:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 65:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 67:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 68:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 70:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 71:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
            3 Small class reload: reject+=3
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 73:  (0) m  (1) m  (2) m  (3) d
      Creating newreg=133 from oldreg=125, assigning class DREG to r133
   73: {asm_operands;clobber flags:CC;}
      REG_DEAD r125:SI
      REG_DEAD r93:SI
      REG_DEAD r91:SI
      REG_DEAD r89:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  128: r133:SI=r125:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 75:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 76:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 78:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 79:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 81:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 82:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}
            3 Small class reload: reject+=3
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 84:  (0) m  (1) m  (2) m  (3) d
      Creating newreg=134 from oldreg=129, assigning class DREG to r134
   84: {asm_operands;clobber flags:CC;}
      REG_DEAD r129:SI
      REG_DEAD r99:SI
      REG_DEAD r97:SI
      REG_DEAD r95:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  129: r134:SI=r129:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 86:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 92:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 97:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 102:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 103:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 108:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8
EBB 9

********** Pseudo live ranges #1: **********

  BB 9
   Insn 122: point = 0, n_alt = -1
   Insn 121: point = 0, n_alt = -2
   Insn 117: point = 1, n_alt = -2
  BB 7
   Insn 124: point = 4, n_alt = -1
   Insn 109: point = 4, n_alt = 0
   Insn 108: point = 5, n_alt = 0
   Insn 107: point = 5, n_alt = 0
   Insn 106: point = 5, n_alt = -2
   Insn 105: point = 6, n_alt = 0
   Insn 104: point = 6, n_alt = 0
   Insn 103: point = 6, n_alt = 0
   Insn 102: point = 6, n_alt = 0
   Insn 101: point = 6, n_alt = 0
   Insn 100: point = 6, n_alt = -2
   Insn 99: point = 6, n_alt = 0
   Insn 98: point = 7, n_alt = 0
   Insn 97: point = 8, n_alt = 0
  BB 8
   Insn 114: point = 9, n_alt = 0
  BB 6
   Insn 95: point = 10, n_alt = -1
   Insn 94: point = 10, n_alt = 0
   Insn 93: point = 11, n_alt = -2
   Insn 92: point = 12, n_alt = 0
   Insn 91: point = 12, n_alt = 0
   Insn 90: point = 12, n_alt = -2
   Insn 89: point = 12, n_alt = 0
   Insn 88: point = 12, n_alt = 0
   Insn 87: point = 12, n_alt = 0
   Insn 86: point = 13, n_alt = 0
   Insn 85: point = 13, n_alt = 0
   Insn 84: point = 14, n_alt = 0
   Insn 129: point = 15, n_alt = -2
	Hard reg 0 is preferable by r134 with profit 1000
   Insn 83: point = 17, n_alt = 0
   Insn 82: point = 18, n_alt = 3
   Insn 81: point = 20, n_alt = 0
   Insn 80: point = 22, n_alt = 0
   Insn 79: point = 23, n_alt = 3
   Insn 78: point = 25, n_alt = 0
   Insn 77: point = 27, n_alt = 0
   Insn 76: point = 28, n_alt = 3
   Insn 75: point = 30, n_alt = 0
   Insn 74: point = 32, n_alt = 0
   Insn 73: point = 33, n_alt = 0
   Insn 128: point = 34, n_alt = -2
	Hard reg 0 is preferable by r133 with profit 1000
   Insn 72: point = 36, n_alt = 0
   Insn 71: point = 37, n_alt = 3
   Insn 70: point = 39, n_alt = 0
   Insn 69: point = 41, n_alt = 0
   Insn 68: point = 42, n_alt = 3
   Insn 67: point = 44, n_alt = 0
   Insn 66: point = 46, n_alt = 0
   Insn 65: point = 47, n_alt = 3
   Insn 64: point = 49, n_alt = 0
   Insn 63: point = 51, n_alt = 0
   Insn 62: point = 52, n_alt = 1
   Insn 61: point = 53, n_alt = 0
   Insn 60: point = 54, n_alt = 0
   Insn 59: point = 55, n_alt = 1
   Insn 58: point = 56, n_alt = 0
   Insn 57: point = 57, n_alt = 1
   Insn 56: point = 58, n_alt = 0
   Insn 55: point = 60, n_alt = 0
  BB 5
   Insn 52: point = 62, n_alt = 0
   Insn 51: point = 62, n_alt = 0
   Insn 50: point = 62, n_alt = -2
   Insn 49: point = 62, n_alt = 0
   Insn 48: point = 63, n_alt = 0
   Insn 47: point = 64, n_alt = 0
  BB 4
   Insn 45: point = 65, n_alt = -1
   Insn 44: point = 65, n_alt = 1
   Insn 43: point = 66, n_alt = 0
  BB 3
   Insn 40: point = 68, n_alt = 0
   Insn 39: point = 68, n_alt = 0
   Insn 38: point = 68, n_alt = -2
   Insn 37: point = 68, n_alt = 0
   Insn 36: point = 69, n_alt = 0
   Insn 35: point = 70, n_alt = 0
  BB 2
   Insn 33: point = 71, n_alt = -1
   Insn 32: point = 71, n_alt = 1
   Insn 31: point = 72, n_alt = 0
   Insn 30: point = 73, n_alt = 1
   Insn 29: point = 74, n_alt = -2
   Insn 28: point = 75, n_alt = 0
   Insn 27: point = 75, n_alt = 0
   Insn 26: point = 75, n_alt = 0
   Insn 25: point = 76, n_alt = 0
   Insn 24: point = 78, n_alt = 0
   Insn 23: point = 80, n_alt = 0
   Insn 22: point = 81, n_alt = 1
   Insn 21: point = 82, n_alt = -2
   Insn 20: point = 83, n_alt = 0
   Insn 19: point = 83, n_alt = 0
   Insn 18: point = 83, n_alt = 0
   Insn 17: point = 84, n_alt = 0
   Insn 16: point = 86, n_alt = 0
   Insn 15: point = 88, n_alt = 0
   Insn 14: point = 89, n_alt = 1
   Insn 13: point = 90, n_alt = 0
   Insn 10: point = 91, n_alt = 1
   Insn 12: point = 92, n_alt = 0
   Insn 11: point = 94, n_alt = 0
   Insn 9: point = 95, n_alt = 1
   Insn 8: point = 96, n_alt = 0
   Insn 5: point = 97, n_alt = 1
   Insn 7: point = 98, n_alt = 0
   Insn 6: point = 100, n_alt = 0
   Insn 126: point = 101, n_alt = 0
 r82: [10..101] [5..8]
 r83: [85..86]
 r84: [83..84]
 r85: [77..78]
 r86: [75..76]
 r87: [57..58]
 r88: [48..49]
 r89: [33..47]
 r90: [43..44]
 r91: [33..42]
 r92: [38..39]
 r93: [33..37]
 r94: [29..30]
 r95: [14..28]
 r96: [24..25]
 r97: [14..23]
 r98: [19..20]
 r99: [14..18]
 r100: [12..13]
 r101: [10..11]
 r102: [9..9] [2..4]
 r103: [95..96]
 r104: [89..90]
 r105: [0..1]
 r106: [97..98]
 r107: [99..100]
 r108: [91..92]
 r109: [93..94]
 r110: [87..88]
 r111: [81..82]
 r112: [79..80]
 r113: [73..74]
 r114: [71..72]
 r115: [68..69]
 r116: [65..66]
 r117: [62..63]
 r118: [59..60]
 r119: [55..56]
 r120: [52..54]
 r121: [52..53]
 r122: [50..51]
 r123: [45..46]
 r124: [40..41]
 r125: [35..36]
 r126: [31..32]
 r127: [26..27]
 r128: [21..22]
 r129: [16..17]
 r130: [6..7]
 r133: [33..34]
 r134: [14..15]
Compressing live ranges: from 102 to 87 - 85%
Ranges after the compression:
 r82: [7..86] [4..5]
 r83: [71..72]
 r84: [69..70]
 r85: [63..64]
 r86: [61..62]
 r87: [47..48]
 r88: [39..40]
 r89: [27..38]
 r90: [35..36]
 r91: [27..34]
 r92: [31..32]
 r93: [27..30]
 r94: [23..24]
 r95: [11..22]
 r96: [19..20]
 r97: [11..18]
 r98: [15..16]
 r99: [11..14]
 r100: [9..10]
 r101: [7..8]
 r102: [6..6] [2..3]
 r103: [81..82]
 r104: [75..76]
 r105: [0..1]
 r106: [83..84]
 r107: [85..86]
 r108: [77..78]
 r109: [79..80]
 r110: [73..74]
 r111: [67..68]
 r112: [65..66]
 r113: [59..60]
 r114: [57..58]
 r115: [55..56]
 r116: [53..54]
 r117: [51..52]
 r118: [49..50]
 r119: [45..46]
 r120: [43..44]
 r121: [43..44]
 r122: [41..42]
 r123: [37..38]
 r124: [33..34]
 r125: [29..30]
 r126: [25..26]
 r127: [21..22]
 r128: [17..18]
 r129: [13..14]
 r130: [4..5]
 r133: [27..28]
 r134: [11..12]

********** Assignment #1: **********

	 Assigning to 133 (cl=DREG, orig=125, freq=2000, tfirst=133, tfreq=2000)...
	   Assign 1 to reload r133 (freq=2000)
	 Assigning to 134 (cl=DREG, orig=129, freq=2000, tfirst=134, tfreq=2000)...
	   Assign 1 to reload r134 (freq=2000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 126
changing reg in insn 106
changing reg in insn 100
changing reg in insn 98
changing reg in insn 90
changing reg in insn 50
changing reg in insn 48
changing reg in insn 38
changing reg in insn 36
changing reg in insn 23
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 26
changing reg in insn 56
changing reg in insn 57
changing reg in insn 64
changing reg in insn 65
changing reg in insn 65
changing reg in insn 73
changing reg in insn 67
changing reg in insn 68
changing reg in insn 68
changing reg in insn 73
changing reg in insn 70
changing reg in insn 71
changing reg in insn 71
changing reg in insn 73
changing reg in insn 75
changing reg in insn 76
changing reg in insn 76
changing reg in insn 84
changing reg in insn 78
changing reg in insn 79
changing reg in insn 79
changing reg in insn 84
changing reg in insn 81
changing reg in insn 82
changing reg in insn 82
changing reg in insn 84
changing reg in insn 85
changing reg in insn 87
changing reg in insn 93
changing reg in insn 94
changing reg in insn 114
changing reg in insn 109
changing reg in insn 117
changing reg in insn 8
changing reg in insn 9
changing reg in insn 13
changing reg in insn 14
changing reg in insn 117
changing reg in insn 121
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 12
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15
changing reg in insn 16
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 36
changing reg in insn 37
changing reg in insn 43
changing reg in insn 44
changing reg in insn 48
changing reg in insn 49
changing reg in insn 55
changing reg in insn 56
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 62
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 64
changing reg in insn 66
changing reg in insn 67
changing reg in insn 69
changing reg in insn 70
changing reg in insn 72
changing reg in insn 74
changing reg in insn 75
changing reg in insn 77
changing reg in insn 78
changing reg in insn 80
changing reg in insn 81
changing reg in insn 83
changing reg in insn 98
changing reg in insn 99
deleting insn with uid = 21.
deleting insn with uid = 29.
deleting insn with uid = 38.
deleting insn with uid = 50.
deleting insn with uid = 90.
deleting insn with uid = 93.
deleting insn with uid = 100.
deleting insn with uid = 106.
deleting insn with uid = 117.
deleting insn with uid = 121.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 39.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 91.
verify found no changes in insn with uid = 101.
verify found no changes in insn with uid = 107.


copy_mem

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={46d,41u} r1={11d,3u} r2={10d,2u} r3={1d,10u} r4={2d,2u} r5={2d,2u} r7={23d,81u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={7e} r17={42d,3u} r18={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} 
;;    total ref usage 743{592d,144u,7e} in 96{89 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 126 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 126 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 126 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg:SI 0 ax [107])
        (const_int 15 [0xf])) "kernel/fork.c":58:18 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:SI 0 ax [orig:106 __limit ] [106])
                (asm_operands:SI ("lsll %1, %0
	incl %0") ("=r") 0 [
                        (reg:SI 0 ax [107])
                    ]
                     [
                        (asm_input:SI ("r") kernel/fork.c:58)
                    ]
                     [] kernel/fork.c:58))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":58:18 -1
     (nil))
(insn 5 7 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [1 __limit+0 S4 A32])
        (reg:SI 0 ax [orig:106 __limit ] [106])) "kernel/fork.c":58:18 75 {*movsi_internal}
     (nil))
(insn 8 5 9 2 (set (reg:SI 0 ax [orig:103 _25 ] [103])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [1 __limit+0 S4 A32])) "kernel/fork.c":58:18 75 {*movsi_internal}
     (nil))
(insn 9 8 11 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 code_limit+0 S4 A32])
        (reg:SI 0 ax [orig:103 _25 ] [103])) "kernel/fork.c":58:16 75 {*movsi_internal}
     (nil))
(insn 11 9 12 2 (set (reg:SI 0 ax [109])
        (const_int 23 [0x17])) "kernel/fork.c":59:18 75 {*movsi_internal}
     (nil))
(insn 12 11 10 2 (parallel [
            (set (reg:SI 0 ax [orig:108 __limit ] [108])
                (asm_operands:SI ("lsll %1, %0
	incl %0") ("=r") 0 [
                        (reg:SI 0 ax [109])
                    ]
                     [
                        (asm_input:SI ("r") kernel/fork.c:59)
                    ]
                     [] kernel/fork.c:59))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":59:18 -1
     (nil))
(insn 10 12 13 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 __limit+0 S4 A32])
        (reg:SI 0 ax [orig:108 __limit ] [108])) "kernel/fork.c":59:18 75 {*movsi_internal}
     (nil))
(insn 13 10 14 2 (set (reg:SI 0 ax [orig:104 _28 ] [104])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 __limit+0 S4 A32])) "kernel/fork.c":59:18 75 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 data_limit+0 S4 A32])
        (reg:SI 0 ax [orig:104 _28 ] [104])) "kernel/fork.c":59:16 75 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg/f:SI 0 ax [110])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7c5bf252e120 current>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":60:21 75 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 0 ax [orig:83 current.5_1 ] [83])
        (mem/f/c:SI (reg/f:SI 0 ax [110]) [13 current+0 S4 A32])) "kernel/fork.c":60:21 75 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg/f:SI 0 ax [orig:84 _2 ] [84])
                (plus:SI (reg/f:SI 0 ax [orig:83 current.5_1 ] [83])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":60:21 209 {*addsi_1}
     (nil))
(insn 18 17 19 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg/f:SI 0 ax [orig:84 _2 ] [84])) "kernel/fork.c":60:21 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_get_base") [flags 0x3]  <function_decl 0x7c5bf2515900 _get_base>) [0 _get_base S1 A8])
            (const_int 4 [0x4]))) "kernel/fork.c":60:21 823 {*call_value}
     (nil)
    (nil))
(insn 20 19 22 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":60:21 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 22 20 23 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 old_code_base+0 S4 A32])
        (reg:SI 0 ax [111])) "kernel/fork.c":60:21 75 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg/f:SI 0 ax [112])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7c5bf252e120 current>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":61:21 75 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg/f:SI 0 ax [orig:85 current.6_3 ] [85])
        (mem/f/c:SI (reg/f:SI 0 ax [112]) [13 current+0 S4 A32])) "kernel/fork.c":61:21 75 {*movsi_internal}
     (nil))
(insn 25 24 26 2 (parallel [
            (set (reg/f:SI 0 ax [orig:86 _4 ] [86])
                (plus:SI (reg/f:SI 0 ax [orig:85 current.6_3 ] [85])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":61:21 209 {*addsi_1}
     (nil))
(insn 26 25 27 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg/f:SI 0 ax [orig:86 _4 ] [86])) "kernel/fork.c":61:21 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(call_insn 27 26 28 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_get_base") [flags 0x3]  <function_decl 0x7c5bf2515900 _get_base>) [0 _get_base S1 A8])
            (const_int 4 [0x4]))) "kernel/fork.c":61:21 823 {*call_value}
     (nil)
    (nil))
(insn 28 27 30 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":61:21 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 30 28 31 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 old_data_base+0 S4 A32])
        (reg:SI 0 ax [113])) "kernel/fork.c":61:21 75 {*movsi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:SI 0 ax [114])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 old_data_base+0 S4 A32])) "kernel/fork.c":62:8 75 {*movsi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [114])
            (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [1 old_code_base+0 S4 A32]))) "kernel/fork.c":62:8 11 {*cmpsi_1}
     (nil))
(jump_insn 33 32 34 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) "kernel/fork.c":62:8 806 {*jcc}
     (nil)
 -> 41)
(note 34 33 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":63:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 36 35 37 3 (set (reg/f:SI 0 ax [115])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7c5bf257f2d0 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "kernel/fork.c":63:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7c5bf257f2d0 *.LC0>)
        (nil)))
(insn 37 36 39 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [16  S4 A32])
        (reg/f:SI 0 ax [115])) "kernel/fork.c":63:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 39 37 40 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7c5bf2538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "kernel/fork.c":63:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 40 39 41 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":63:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 41 40 42 4 17 (nil) [1 uses])
(note 42 41 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 4 (set (reg:SI 0 ax [116])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 data_limit+0 S4 A32])) "kernel/fork.c":64:8 75 {*movsi_internal}
     (nil))
(insn 44 43 45 4 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [116])
            (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [1 code_limit+0 S4 A32]))) "kernel/fork.c":64:8 11 {*cmpsi_1}
     (nil))
(jump_insn 45 44 46 4 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "kernel/fork.c":64:8 806 {*jcc}
     (nil)
 -> 53)
(note 46 45 47 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":65:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 48 47 49 5 (set (reg/f:SI 0 ax [117])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7c5bf257f360 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "kernel/fork.c":65:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7c5bf257f360 *.LC1>)
        (nil)))
(insn 49 48 51 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [16  S4 A32])
        (reg/f:SI 0 ax [117])) "kernel/fork.c":65:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 51 49 52 5 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7c5bf2538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "kernel/fork.c":65:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 52 51 53 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":65:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 53 52 54 6 18 (nil) [1 uses])
(note 54 53 55 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 6 (set (reg:SI 0 ax [118])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [5 nr+0 S4 A32])) "kernel/fork.c":66:40 75 {*movsi_internal}
     (nil))
(insn 56 55 57 6 (parallel [
            (set (reg:SI 0 ax [orig:87 _5 ] [87])
                (ashift:SI (reg:SI 0 ax [118])
                    (const_int 26 [0x1a])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":66:40 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (reg/f:SI 16 argp) [5 nr+0 S4 A32])
            (const_int 26 [0x1a]))
        (nil)))
(insn 57 56 58 6 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 new_code_base+0 S4 A32])
        (reg:SI 0 ax [orig:87 _5 ] [87])) "kernel/fork.c":66:35 75 {*movsi_internal}
     (nil))
(insn 58 57 59 6 (set (reg:SI 0 ax [119])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 new_code_base+0 S4 A32])) "kernel/fork.c":66:19 75 {*movsi_internal}
     (nil))
(insn 59 58 60 6 (set (mem/c:SI (reg/f:SI 7 sp) [1 new_data_base+0 S4 A32])
        (reg:SI 0 ax [119])) "kernel/fork.c":66:19 75 {*movsi_internal}
     (nil))
(insn 60 59 61 6 (set (reg/f:SI 0 ax [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [13 p+0 S4 A32])) "kernel/fork.c":67:19 75 {*movsi_internal}
     (nil))
(insn 61 60 62 6 (set (reg:SI 1 dx [121])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 new_code_base+0 S4 A32])) "kernel/fork.c":67:19 75 {*movsi_internal}
     (nil))
(insn 62 61 63 6 (set (mem:SI (plus:SI (reg/f:SI 0 ax [120])
                (const_int 536 [0x218])) [1 p_40(D)->start_code+0 S4 A32])
        (reg:SI 1 dx [121])) "kernel/fork.c":67:19 75 {*movsi_internal}
     (nil))
(insn 63 62 64 6 (set (reg/f:SI 0 ax [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [13 p+0 S4 A32])) "kernel/fork.c":68:5 75 {*movsi_internal}
     (nil))
(insn 64 63 65 6 (parallel [
            (set (reg/f:SI 0 ax [orig:88 _6 ] [88])
                (plus:SI (reg/f:SI 0 ax [122])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":68:5 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [13 p+0 S4 A32])
            (const_int 728 [0x2d8]))
        (nil)))
(insn 65 64 66 6 (parallel [
            (set (reg/f:SI 2 cx [orig:89 _7 ] [89])
                (plus:SI (reg/f:SI 0 ax [orig:88 _6 ] [88])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":68:5 209 {*addsi_1}
     (nil))
(insn 66 65 67 6 (set (reg/f:SI 0 ax [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [13 p+0 S4 A32])) "kernel/fork.c":68:5 75 {*movsi_internal}
     (nil))
(insn 67 66 68 6 (parallel [
            (set (reg/f:SI 0 ax [orig:90 _8 ] [90])
                (plus:SI (reg/f:SI 0 ax [123])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":68:5 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [13 p+0 S4 A32])
            (const_int 728 [0x2d8]))
        (nil)))
(insn 68 67 69 6 (parallel [
            (set (reg/f:SI 4 si [orig:91 _9 ] [91])
                (plus:SI (reg/f:SI 0 ax [orig:90 _8 ] [90])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":68:5 209 {*addsi_1}
     (nil))
(insn 69 68 70 6 (set (reg/f:SI 0 ax [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [13 p+0 S4 A32])) "kernel/fork.c":68:5 75 {*movsi_internal}
     (nil))
(insn 70 69 71 6 (parallel [
            (set (reg/f:SI 0 ax [orig:92 _10 ] [92])
                (plus:SI (reg/f:SI 0 ax [124])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":68:5 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [13 p+0 S4 A32])
            (const_int 728 [0x2d8]))
        (nil)))
(insn 71 70 72 6 (parallel [
            (set (reg/f:SI 5 di [orig:93 _11 ] [93])
                (plus:SI (reg/f:SI 0 ax [orig:92 _10 ] [92])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":68:5 209 {*addsi_1}
     (nil))
(insn 72 71 128 6 (set (reg:SI 0 ax [125])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 new_code_base+0 S4 A32])) "kernel/fork.c":68:5 75 {*movsi_internal}
     (nil))
(insn 128 72 73 6 (set (reg:SI 1 dx [125])
        (reg:SI 0 ax [125])) "kernel/fork.c":68:5 75 {*movsi_internal}
     (nil))
(insn 73 128 74 6 (parallel [
            (asm_operands/v ("push %%edx
	movw %%dx, %0
	rorl $16, %%edx
	movb %%dl, %1
	movb %%dh, %2
	pop %%edx") ("") 0 [
                    (mem:QI (reg/f:SI 2 cx [orig:89 _7 ] [89]) [0 *_7+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:91 _9 ] [91]) [0 *_9+0 S1 A8])
                    (mem:QI (reg/f:SI 5 di [orig:93 _11 ] [93]) [0 *_11+0 S1 A8])
                    (reg:SI 1 dx [125])
                ]
                 [
                    (asm_input:QI ("m") kernel/fork.c:68)
                    (asm_input:QI ("m") kernel/fork.c:68)
                    (asm_input:QI ("m") kernel/fork.c:68)
                    (asm_input:SI ("d") kernel/fork.c:68)
                ]
                 [] kernel/fork.c:68)
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":68:5 -1
     (nil))
(insn 74 73 75 6 (set (reg/f:SI 0 ax [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [13 p+0 S4 A32])) "kernel/fork.c":69:5 75 {*movsi_internal}
     (nil))
(insn 75 74 76 6 (parallel [
            (set (reg/f:SI 0 ax [orig:94 _12 ] [94])
                (plus:SI (reg/f:SI 0 ax [126])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":69:5 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [13 p+0 S4 A32])
            (const_int 736 [0x2e0]))
        (nil)))
(insn 76 75 77 6 (parallel [
            (set (reg/f:SI 2 cx [orig:95 _13 ] [95])
                (plus:SI (reg/f:SI 0 ax [orig:94 _12 ] [94])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":69:5 209 {*addsi_1}
     (nil))
(insn 77 76 78 6 (set (reg/f:SI 0 ax [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [13 p+0 S4 A32])) "kernel/fork.c":69:5 75 {*movsi_internal}
     (nil))
(insn 78 77 79 6 (parallel [
            (set (reg/f:SI 0 ax [orig:96 _14 ] [96])
                (plus:SI (reg/f:SI 0 ax [127])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":69:5 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [13 p+0 S4 A32])
            (const_int 736 [0x2e0]))
        (nil)))
(insn 79 78 80 6 (parallel [
            (set (reg/f:SI 4 si [orig:97 _15 ] [97])
                (plus:SI (reg/f:SI 0 ax [orig:96 _14 ] [96])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":69:5 209 {*addsi_1}
     (nil))
(insn 80 79 81 6 (set (reg/f:SI 0 ax [128])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [13 p+0 S4 A32])) "kernel/fork.c":69:5 75 {*movsi_internal}
     (nil))
(insn 81 80 82 6 (parallel [
            (set (reg/f:SI 0 ax [orig:98 _16 ] [98])
                (plus:SI (reg/f:SI 0 ax [128])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":69:5 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [13 p+0 S4 A32])
            (const_int 736 [0x2e0]))
        (nil)))
(insn 82 81 83 6 (parallel [
            (set (reg/f:SI 5 di [orig:99 _17 ] [99])
                (plus:SI (reg/f:SI 0 ax [orig:98 _16 ] [98])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":69:5 209 {*addsi_1}
     (nil))
(insn 83 82 129 6 (set (reg:SI 0 ax [129])
        (mem/c:SI (reg/f:SI 7 sp) [1 new_data_base+0 S4 A32])) "kernel/fork.c":69:5 75 {*movsi_internal}
     (nil))
(insn 129 83 84 6 (set (reg:SI 1 dx [129])
        (reg:SI 0 ax [129])) "kernel/fork.c":69:5 75 {*movsi_internal}
     (nil))
(insn 84 129 85 6 (parallel [
            (asm_operands/v ("push %%edx
	movw %%dx, %0
	rorl $16, %%edx
	movb %%dl, %1
	movb %%dh, %2
	pop %%edx") ("") 0 [
                    (mem:QI (reg/f:SI 2 cx [orig:95 _13 ] [95]) [0 *_13+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:97 _15 ] [97]) [0 *_15+0 S1 A8])
                    (mem:QI (reg/f:SI 5 di [orig:99 _17 ] [99]) [0 *_17+0 S1 A8])
                    (reg:SI 1 dx [129])
                ]
                 [
                    (asm_input:QI ("m") kernel/fork.c:69)
                    (asm_input:QI ("m") kernel/fork.c:69)
                    (asm_input:QI ("m") kernel/fork.c:69)
                    (asm_input:SI ("d") kernel/fork.c:69)
                ]
                 [] kernel/fork.c:69)
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":69:5 -1
     (nil))
(insn 85 84 86 6 (set (reg:SI 0 ax [orig:100 data_limit.7_18 ] [100])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 data_limit+0 S4 A32])) "kernel/fork.c":70:9 75 {*movsi_internal}
     (nil))
(insn 86 85 87 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":70:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 87 86 88 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 0 ax [orig:100 data_limit.7_18 ] [100])) "kernel/fork.c":70:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 88 87 89 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 new_data_base+0 S4 A32])) "kernel/fork.c":70:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 89 88 91 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 old_data_base+0 S4 A32])) "kernel/fork.c":70:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 91 89 92 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("copy_page_tables") [flags 0x41]  <function_decl 0x7c5bf2538300 copy_page_tables>) [0 copy_page_tables S1 A8])
            (const_int 16 [0x10]))) "kernel/fork.c":70:9 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 92 91 94 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":70:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 94 92 95 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:101 _19 ] [101])
            (const_int 0 [0]))) "kernel/fork.c":70:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 95 94 96 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) "kernel/fork.c":70:8 806 {*jcc}
     (nil)
 -> 112)
(note 96 95 97 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":71:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 98 97 99 7 (set (reg/f:SI 0 ax [130])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7c5bf257f3f0 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "kernel/fork.c":71:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7c5bf257f3f0 *.LC2>)
        (nil)))
(insn 99 98 101 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [16  S4 A32])
        (reg/f:SI 0 ax [130])) "kernel/fork.c":71:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 101 99 102 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7c5bf2538e00 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/fork.c":71:9 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 102 101 103 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":71:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 103 102 104 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":72:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 104 103 105 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 data_limit+0 S4 A32])) "kernel/fork.c":72:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 105 104 107 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 new_data_base+0 S4 A32])) "kernel/fork.c":72:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 107 105 108 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("free_page_tables") [flags 0x41]  <function_decl 0x7c5bf2538400 free_page_tables>) [0 free_page_tables S1 A8])
            (const_int 16 [0x10]))) "kernel/fork.c":72:9 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 108 107 109 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":72:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 109 108 124 7 (set (reg:SI 0 ax [orig:102 _20 ] [102])
        (const_int -12 [0xfffffffffffffff4])) "kernel/fork.c":73:16 75 {*movsi_internal}
     (nil))
(jump_insn 124 109 125 7 (set (pc)
        (label_ref 115)) "kernel/fork.c":73:16 807 {jump}
     (nil)
 -> 115)
(barrier 125 124 112)
(code_label 112 125 113 8 19 (nil) [1 uses])
(note 113 112 114 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 8 (set (reg:SI 0 ax [orig:102 _20 ] [102])
        (const_int 0 [0])) "kernel/fork.c":75:12 75 {*movsi_internal}
     (nil))
(code_label 115 114 116 9 20 (nil) [1 uses])
(note 116 115 122 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 122 116 127 9 (use (reg/i:SI 0 ax)) "kernel/fork.c":76:1 -1
     (nil))
(note 127 122 0 NOTE_INSN_DELETED)

;; Function copy_process (copy_process, funcdef_no=4, decl_uid=1399, cgraph_uid=5, symbol_order=5)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-28, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 369:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (1) lBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
            1 Non input pseudo reload: reject++
            2 Small class reload: reject+=3
            2 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
            4 Small class reload: reject+=3
            5 Small class reload: reject+=3
          alt=0,overall=57,losers=6,rld_nregs=6
	 Choosing alt 0 in insn 27:  (0) =D  (1) =S  (2) =c  (3) 0  (4) 1  (5) 2 {*rep_movsi}
      Creating newreg=323 from oldreg=209, assigning class DIREG to r323
      Creating newreg=324 from oldreg=210, assigning class SIREG to r324
      Creating newreg=325 from oldreg=211, assigning class CREG to r325
   27: {r325:SI=0;r323:SI=r325:SI<<0x2+r323:SI;r324:SI=r325:SI<<0x2+r324:SI;[r323:SI]=[r324:SI];use r325:SI;}
      REG_UNUSED r211:SI
      REG_UNUSED r210:SI
      REG_UNUSED r209:SI
    Inserting insn reload before:
  371: r323:SI=r209:SI
  372: r324:SI=r210:SI
  373: r325:SI=r211:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 43:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 55:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 67:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 69:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 71:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 77:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 79:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 85:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 88:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 91:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 94:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 97:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 100:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 104:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 108:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 112:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 116:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 120:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 124:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 127:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 130:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 132:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) m
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 144:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 148:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 155:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 157:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 161:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 167:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 173:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 175:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 176:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 180:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 181:  (0) Yp  (1) Yp  (2) ln {*addhi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 183:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 186:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 204:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 205:  (0) =rm  (1) %0  (2) rn {*addhi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 206:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 216:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 218:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 219:  (0) =rm  (1) %0  (2) rn {*addhi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 220:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 223:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 224:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 226:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 231:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 232:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 233:  (0) =rm  (1) %0  (2) rn {*addhi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 234:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 237:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 238:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 239:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 240:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 241:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 243:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 244:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 245:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 247:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 248:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 251:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 252:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 253:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 254:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 256:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 258:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 260:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 262:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 263:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 265:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 266:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 267:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 269:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 270:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 271:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 272:  (0) =r  (1) g {*movsi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=20,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=0,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            alt=1,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 274:  (0) r  (1) r  (2) le {*addsi_1}
      Creating newreg=326 from oldreg=152, assigning class GENERAL_REGS to r326
  274: {r326:SI=r151:SI+r293:SI;clobber flags:CC;}
      REG_DEAD r293:SI
      REG_DEAD r151:SI
      REG_UNUSED flags:CC
    Inserting insn reload after:
  374: r152:SI=r326:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 374:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 275:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 276:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 278:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 279:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 280:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 281:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 283:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 284:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 285:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 287:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 288:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 289:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 290:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 292:  (0) =rm  (1) %0  (2) re {*addsi_1}
      Creating newreg=327 from oldreg=152, assigning class GENERAL_REGS to address r327
	   Change to class INDEX_REGS for r327
            0 Small class reload: reject+=3
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 293:  (0) a  (1) m  (2) m  (3) m  (4) m  (5) m  (6) m
      Creating newreg=328 from oldreg=129, assigning class AREG to r328
  293: {asm_operands;clobber flags:CC;}
      REG_DEAD r164:SI
      REG_DEAD r158:SI
      REG_DEAD r152:SI
      REG_DEAD r146:SI
      REG_DEAD r140:SI
      REG_DEAD r134:SI
      REG_DEAD r129:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  375: r327:SI=r152:SI
  376: r328:SI=r129:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 375:  (0) =r  (1) g {*movsi_internal}
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 376:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 294:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 295:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 296:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 297:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 298:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 300:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 301:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 302:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 304:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 305:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 306:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 308:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 309:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 310:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 311:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 313:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 314:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 315:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 317:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 318:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 319:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 320:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 322:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 324:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 326:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 327:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 328:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 329:  (0) =r  (1) g {*movsi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=20,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=0,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            alt=1,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 331:  (0) r  (1) r  (2) le {*addsi_1}
      Creating newreg=329 from oldreg=189, assigning class GENERAL_REGS to r329
  331: {r329:SI=r188:SI+r312:SI;clobber flags:CC;}
      REG_DEAD r312:SI
      REG_DEAD r188:SI
      REG_UNUSED flags:CC
    Inserting insn reload after:
  377: r189:SI=r329:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 377:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 332:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 333:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 335:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 336:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 337:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 338:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 340:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 341:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 342:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 344:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 345:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 346:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 347:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 349:  (0) =rm  (1) %0  (2) re {*addsi_1}
      Creating newreg=330 from oldreg=189, assigning class GENERAL_REGS to address r330
	   Change to class INDEX_REGS for r330
            0 Small class reload: reject+=3
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 350:  (0) a  (1) m  (2) m  (3) m  (4) m  (5) m  (6) m
      Creating newreg=331 from oldreg=166, assigning class AREG to r331
  350: {asm_operands;clobber flags:CC;}
      REG_DEAD r201:SI
      REG_DEAD r195:SI
      REG_DEAD r189:SI
      REG_DEAD r183:SI
      REG_DEAD r177:SI
      REG_DEAD r171:SI
      REG_DEAD r166:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  378: r330:SI=r189:SI
  379: r331:SI=r166:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 378:  (0) =r  (1) g {*movsi_internal}
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 379:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 351:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 352:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 353:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8
EBB 9 10
EBB 11
EBB 12 13 14
EBB 15 16
EBB 17 18
EBB 19
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=332 from oldreg=189, assigning class GENERAL_REGS to inheritance r332
    Original reg change 189->332 (bb19):
  377: r332:SI=r329:SI
    Add original<-inheritance after:
  380: r189:SI=r332:SI

    Inheritance reuse change 189->332 (bb19):
  378: r330:SI=r332:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=333 from oldreg=166, assigning class GENERAL_REGS to inheritance r333
    Original reg change 166->333 (bb19):
  296: r333:SI=r165:SI
      REG_DEAD r165:SI
    Add original<-inheritance after:
  381: r166:SI=r333:SI

    Inheritance reuse change 166->333 (bb19):
  379: r331:SI=r333:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=334 from oldreg=152, assigning class GENERAL_REGS to inheritance r334
    Original reg change 152->334 (bb19):
  374: r334:SI=r326:SI
    Add original<-inheritance after:
  382: r152:SI=r334:SI

    Inheritance reuse change 152->334 (bb19):
  375: r327:SI=r334:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=335 from oldreg=129, assigning class GENERAL_REGS to inheritance r335
    Original reg change 129->335 (bb19):
  239: r335:SI=r128:SI
      REG_DEAD r128:SI
    Add original<-inheritance after:
  383: r129:SI=r335:SI

    Inheritance reuse change 129->335 (bb19):
  376: r328:SI=r335:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   380: r189:SI=r332:SI
deleting insn with uid = 380.
	    Removing dead insn:
   381: r166:SI=r333:SI
deleting insn with uid = 381.
	    Removing dead insn:
   382: r152:SI=r334:SI
deleting insn with uid = 382.
	    Removing dead insn:
   383: r129:SI=r335:SI
deleting insn with uid = 383.
EBB 20

********** Pseudo live ranges #1: **********

  BB 20
   Insn 361: point = 0, n_alt = -1
   Insn 360: point = 0, n_alt = -2
   Insn 356: point = 1, n_alt = -2
  BB 7
   Insn 365: point = 4, n_alt = -1
   Insn 162: point = 4, n_alt = 0
   Insn 161: point = 5, n_alt = 0
   Insn 160: point = 5, n_alt = 0
   Insn 159: point = 5, n_alt = -2
   Insn 158: point = 6, n_alt = 0
   Insn 157: point = 7, n_alt = 0
   Insn 156: point = 7, n_alt = 0
   Insn 155: point = 8, n_alt = 1
   Insn 154: point = 9, n_alt = 0
   Insn 153: point = 10, n_alt = 0
  BB 3
   Insn 363: point = 12, n_alt = -1
   Insn 12: point = 12, n_alt = 0
  BB 19
   Insn 353: point = 13, n_alt = 0
   Insn 352: point = 15, n_alt = 1
   Insn 351: point = 16, n_alt = 0
   Insn 350: point = 17, n_alt = 0
   Insn 379: point = 18, n_alt = 0
	   Creating copy r331<-r333@1000
   Insn 378: point = 20, n_alt = 0
	   Creating copy r330<-r332@1000
   Insn 349: point = 22, n_alt = 0
   Insn 348: point = 24, n_alt = -2
   Insn 347: point = 26, n_alt = 0
   Insn 346: point = 27, n_alt = 3
   Insn 345: point = 29, n_alt = 0
   Insn 344: point = 31, n_alt = 0
   Insn 343: point = 33, n_alt = -2
   Insn 342: point = 35, n_alt = 0
   Insn 341: point = 37, n_alt = 0
   Insn 340: point = 38, n_alt = 3
   Insn 339: point = 40, n_alt = -2
   Insn 338: point = 42, n_alt = 0
   Insn 337: point = 43, n_alt = 3
   Insn 336: point = 45, n_alt = 0
   Insn 335: point = 47, n_alt = 0
   Insn 334: point = 49, n_alt = -2
   Insn 333: point = 51, n_alt = 0
   Insn 332: point = 53, n_alt = 0
   Insn 377: point = 54, n_alt = 1
	   Creating copy r329->r332@1000
   Insn 331: point = 56, n_alt = 3
   Insn 330: point = 58, n_alt = -2
   Insn 329: point = 60, n_alt = 0
   Insn 328: point = 61, n_alt = 3
   Insn 327: point = 63, n_alt = 0
   Insn 326: point = 65, n_alt = 0
   Insn 325: point = 67, n_alt = -2
   Insn 324: point = 69, n_alt = 0
   Insn 323: point = 71, n_alt = 0
   Insn 322: point = 72, n_alt = 3
   Insn 321: point = 74, n_alt = -2
   Insn 320: point = 76, n_alt = 0
   Insn 319: point = 77, n_alt = 3
   Insn 318: point = 79, n_alt = 0
   Insn 317: point = 81, n_alt = 0
   Insn 316: point = 83, n_alt = -2
   Insn 315: point = 85, n_alt = 0
   Insn 314: point = 87, n_alt = 0
   Insn 313: point = 88, n_alt = 3
   Insn 312: point = 90, n_alt = -2
   Insn 311: point = 92, n_alt = 0
   Insn 310: point = 93, n_alt = 3
   Insn 309: point = 95, n_alt = 0
   Insn 308: point = 97, n_alt = 0
   Insn 307: point = 99, n_alt = -2
   Insn 306: point = 101, n_alt = 0
   Insn 305: point = 103, n_alt = 0
   Insn 304: point = 104, n_alt = 3
   Insn 303: point = 106, n_alt = -2
   Insn 302: point = 108, n_alt = 0
   Insn 301: point = 109, n_alt = 1
   Insn 300: point = 111, n_alt = 0
   Insn 299: point = 113, n_alt = -2
   Insn 298: point = 115, n_alt = 0
   Insn 297: point = 117, n_alt = 0
   Insn 296: point = 118, n_alt = 1
	Hard reg 0 is preferable by r333 with profit 1000
   Insn 295: point = 120, n_alt = 0
   Insn 294: point = 122, n_alt = 0
   Insn 293: point = 123, n_alt = 0
   Insn 376: point = 124, n_alt = 0
	   Creating copy r328<-r335@1000
   Insn 375: point = 126, n_alt = 0
	   Creating copy r327<-r334@1000
   Insn 292: point = 128, n_alt = 0
   Insn 291: point = 130, n_alt = -2
   Insn 290: point = 132, n_alt = 0
   Insn 289: point = 133, n_alt = 3
   Insn 288: point = 135, n_alt = 0
   Insn 287: point = 137, n_alt = 0
   Insn 286: point = 139, n_alt = -2
   Insn 285: point = 141, n_alt = 0
   Insn 284: point = 143, n_alt = 0
   Insn 283: point = 144, n_alt = 3
   Insn 282: point = 146, n_alt = -2
   Insn 281: point = 148, n_alt = 0
   Insn 280: point = 149, n_alt = 3
   Insn 279: point = 151, n_alt = 0
   Insn 278: point = 153, n_alt = 0
   Insn 277: point = 155, n_alt = -2
   Insn 276: point = 157, n_alt = 0
   Insn 275: point = 159, n_alt = 0
   Insn 374: point = 160, n_alt = 1
	   Creating copy r326->r334@1000
   Insn 274: point = 162, n_alt = 3
   Insn 273: point = 164, n_alt = -2
   Insn 272: point = 166, n_alt = 0
   Insn 271: point = 167, n_alt = 3
   Insn 270: point = 169, n_alt = 0
   Insn 269: point = 171, n_alt = 0
   Insn 268: point = 173, n_alt = -2
   Insn 267: point = 175, n_alt = 0
   Insn 266: point = 177, n_alt = 0
   Insn 265: point = 178, n_alt = 3
   Insn 264: point = 180, n_alt = -2
   Insn 263: point = 182, n_alt = 0
   Insn 262: point = 183, n_alt = 3
   Insn 261: point = 185, n_alt = 0
   Insn 260: point = 187, n_alt = 0
   Insn 259: point = 189, n_alt = -2
   Insn 258: point = 191, n_alt = 0
   Insn 257: point = 193, n_alt = 0
   Insn 256: point = 194, n_alt = 3
   Insn 255: point = 196, n_alt = -2
   Insn 254: point = 198, n_alt = 0
   Insn 253: point = 199, n_alt = 3
   Insn 252: point = 201, n_alt = 0
   Insn 251: point = 203, n_alt = 0
   Insn 250: point = 205, n_alt = -2
   Insn 249: point = 207, n_alt = 0
   Insn 248: point = 209, n_alt = 0
   Insn 247: point = 210, n_alt = 3
   Insn 246: point = 212, n_alt = -2
   Insn 245: point = 214, n_alt = 0
   Insn 244: point = 215, n_alt = 1
   Insn 243: point = 217, n_alt = 0
   Insn 242: point = 219, n_alt = -2
   Insn 241: point = 221, n_alt = 0
   Insn 240: point = 223, n_alt = 0
   Insn 239: point = 224, n_alt = 1
	Hard reg 0 is preferable by r335 with profit 1000
   Insn 238: point = 226, n_alt = 0
   Insn 237: point = 228, n_alt = 0
  BB 18
   Insn 234: point = 230, n_alt = 3
   Insn 233: point = 231, n_alt = 0
   Insn 232: point = 233, n_alt = 2
   Insn 231: point = 234, n_alt = 0
   Insn 230: point = 236, n_alt = 0
   Insn 229: point = 238, n_alt = 0
  BB 17
   Insn 227: point = 240, n_alt = -1
   Insn 226: point = 240, n_alt = 0
   Insn 225: point = 241, n_alt = 0
   Insn 224: point = 243, n_alt = 0
   Insn 223: point = 245, n_alt = 0
  BB 16
   Insn 220: point = 247, n_alt = 3
   Insn 219: point = 248, n_alt = 0
   Insn 218: point = 250, n_alt = 2
   Insn 217: point = 251, n_alt = 0
   Insn 216: point = 253, n_alt = 0
   Insn 215: point = 255, n_alt = 0
  BB 15
   Insn 213: point = 257, n_alt = -1
   Insn 212: point = 257, n_alt = 0
   Insn 211: point = 258, n_alt = 0
   Insn 210: point = 260, n_alt = 0
   Insn 209: point = 262, n_alt = 0
  BB 14
   Insn 206: point = 264, n_alt = 3
   Insn 205: point = 265, n_alt = 0
   Insn 204: point = 267, n_alt = 2
   Insn 203: point = 268, n_alt = 0
   Insn 202: point = 270, n_alt = 0
   Insn 201: point = 272, n_alt = 0
  BB 13
   Insn 199: point = 274, n_alt = -1
   Insn 198: point = 274, n_alt = 0
   Insn 197: point = 275, n_alt = 0
   Insn 196: point = 277, n_alt = 0
   Insn 195: point = 279, n_alt = 0
  BB 12
   Insn 193: point = 281, n_alt = -1
   Insn 192: point = 281, n_alt = 0
  BB 8
   Insn 367: point = 282, n_alt = -1
   Insn 167: point = 282, n_alt = 1
  BB 6
   Insn 151: point = 283, n_alt = -1
   Insn 150: point = 283, n_alt = 0
   Insn 149: point = 284, n_alt = -2
   Insn 148: point = 285, n_alt = 0
   Insn 147: point = 285, n_alt = 0
   Insn 146: point = 285, n_alt = 0
   Insn 145: point = 285, n_alt = 0
   Insn 144: point = 285, n_alt = 0
  BB 5
   Insn 141: point = 286, n_alt = 0
   Insn 140: point = 287, n_alt = 0
  BB 4
   Insn 138: point = 289, n_alt = -1
   Insn 137: point = 289, n_alt = 0
   Insn 136: point = 290, n_alt = 0
   Insn 135: point = 292, n_alt = 0
   Insn 134: point = 293, n_alt = 0
   Insn 133: point = 295, n_alt = 0
   Insn 132: point = 296, n_alt = 1
   Insn 131: point = 297, n_alt = 0
   Insn 130: point = 298, n_alt = 1
   Insn 129: point = 299, n_alt = 0
   Insn 128: point = 300, n_alt = -2
   Insn 127: point = 302, n_alt = 0
   Insn 126: point = 304, n_alt = 0
   Insn 125: point = 306, n_alt = 0
   Insn 124: point = 307, n_alt = 1
   Insn 123: point = 308, n_alt = 0
   Insn 122: point = 309, n_alt = 0
   Insn 121: point = 311, n_alt = 0
   Insn 120: point = 312, n_alt = 1
   Insn 119: point = 313, n_alt = 0
   Insn 118: point = 314, n_alt = 0
   Insn 117: point = 316, n_alt = 0
   Insn 116: point = 317, n_alt = 1
   Insn 115: point = 318, n_alt = 0
   Insn 114: point = 319, n_alt = 0
   Insn 113: point = 321, n_alt = 0
   Insn 112: point = 322, n_alt = 1
   Insn 111: point = 323, n_alt = 0
   Insn 110: point = 324, n_alt = 0
   Insn 109: point = 326, n_alt = 0
   Insn 108: point = 327, n_alt = 1
   Insn 107: point = 328, n_alt = 0
   Insn 106: point = 329, n_alt = 0
   Insn 105: point = 331, n_alt = 0
   Insn 104: point = 332, n_alt = 1
   Insn 103: point = 333, n_alt = 0
   Insn 102: point = 334, n_alt = 0
   Insn 101: point = 336, n_alt = 0
   Insn 100: point = 337, n_alt = 1
   Insn 99: point = 338, n_alt = 0
   Insn 98: point = 339, n_alt = 0
   Insn 97: point = 340, n_alt = 1
   Insn 96: point = 341, n_alt = 0
   Insn 95: point = 342, n_alt = 0
   Insn 94: point = 343, n_alt = 1
   Insn 93: point = 344, n_alt = 0
   Insn 92: point = 345, n_alt = 0
   Insn 91: point = 346, n_alt = 1
   Insn 90: point = 347, n_alt = 0
   Insn 89: point = 348, n_alt = 0
   Insn 88: point = 349, n_alt = 1
   Insn 87: point = 350, n_alt = 0
   Insn 86: point = 351, n_alt = 0
   Insn 85: point = 352, n_alt = 1
   Insn 84: point = 353, n_alt = 0
   Insn 83: point = 354, n_alt = 0
   Insn 82: point = 355, n_alt = 1
   Insn 81: point = 356, n_alt = 0
   Insn 80: point = 357, n_alt = 0
   Insn 79: point = 358, n_alt = 1
   Insn 78: point = 359, n_alt = 0
   Insn 77: point = 360, n_alt = 1
   Insn 76: point = 361, n_alt = 0
   Insn 75: point = 362, n_alt = 0
   Insn 74: point = 363, n_alt = 1
   Insn 73: point = 364, n_alt = 0
   Insn 72: point = 365, n_alt = 0
   Insn 71: point = 366, n_alt = 1
   Insn 70: point = 367, n_alt = 0
   Insn 69: point = 368, n_alt = 1
   Insn 68: point = 369, n_alt = 0
   Insn 67: point = 370, n_alt = 3
   Insn 66: point = 372, n_alt = 0
   Insn 65: point = 373, n_alt = 1
   Insn 64: point = 374, n_alt = 0
   Insn 63: point = 375, n_alt = 1
   Insn 62: point = 376, n_alt = 0
   Insn 61: point = 377, n_alt = 0
   Insn 60: point = 379, n_alt = 0
   Insn 59: point = 380, n_alt = 1
   Insn 58: point = 381, n_alt = 0
   Insn 57: point = 382, n_alt = 0
   Insn 56: point = 384, n_alt = 0
   Insn 55: point = 385, n_alt = 1
   Insn 54: point = 386, n_alt = 0
   Insn 53: point = 387, n_alt = 1
   Insn 52: point = 388, n_alt = 0
   Insn 51: point = 389, n_alt = 0
   Insn 50: point = 391, n_alt = 0
   Insn 49: point = 392, n_alt = 1
   Insn 48: point = 393, n_alt = 0
   Insn 47: point = 394, n_alt = 1
   Insn 46: point = 395, n_alt = 0
   Insn 45: point = 396, n_alt = 1
   Insn 44: point = 397, n_alt = 0
   Insn 43: point = 398, n_alt = 1
   Insn 42: point = 399, n_alt = 0
   Insn 41: point = 400, n_alt = 1
   Insn 40: point = 401, n_alt = 0
   Insn 39: point = 402, n_alt = 0
   Insn 38: point = 404, n_alt = 0
   Insn 37: point = 405, n_alt = 1
   Insn 36: point = 406, n_alt = 0
   Insn 35: point = 407, n_alt = 0
   Insn 34: point = 409, n_alt = 0
   Insn 33: point = 411, n_alt = 0
   Insn 32: point = 412, n_alt = 1
   Insn 31: point = 413, n_alt = 0
   Insn 30: point = 414, n_alt = 0
   Insn 29: point = 415, n_alt = 1
   Insn 28: point = 416, n_alt = 0
   Insn 27: point = 417, n_alt = 0
   Insn 373: point = 418, n_alt = -2
	Hard reg 0 is preferable by r325 with profit 1000
   Insn 372: point = 420, n_alt = -2
	Hard reg 3 is preferable by r324 with profit 1000
   Insn 371: point = 422, n_alt = -2
	Hard reg 1 is preferable by r323 with profit 1000
   Insn 26: point = 424, n_alt = 0
   Insn 25: point = 425, n_alt = -2
   Insn 24: point = 427, n_alt = -2
   Insn 23: point = 429, n_alt = 0
   Insn 22: point = 430, n_alt = 0
   Insn 21: point = 432, n_alt = 0
   Insn 20: point = 433, n_alt = 1
   Insn 19: point = 434, n_alt = 0
   Insn 18: point = 435, n_alt = 0
   Insn 17: point = 436, n_alt = 0
  BB 2
   Insn 10: point = 438, n_alt = -1
   Insn 9: point = 438, n_alt = 1
   Insn 8: point = 438, n_alt = 1
   Insn 7: point = 439, n_alt = -2
   Insn 6: point = 440, n_alt = 0
   Insn 5: point = 440, n_alt = -2
   Insn 369: point = 440, n_alt = 0
  BB 11
   Insn 186: point = 441, n_alt = 0
  BB 10
   Insn 183: point = 442, n_alt = 3
   Insn 182: point = 443, n_alt = 0
   Insn 181: point = 444, n_alt = 3
   Insn 180: point = 446, n_alt = 2
   Insn 179: point = 448, n_alt = 0
  BB 9
   Insn 177: point = 450, n_alt = -1
   Insn 176: point = 450, n_alt = 1
   Insn 175: point = 450, n_alt = 1
   Insn 174: point = 451, n_alt = 0
   Insn 173: point = 453, n_alt = 0
   Insn 172: point = 455, n_alt = 0
   Insn 171: point = 456, n_alt = 0
 r82: [14..457] [5..11]
 r83: [438..439]
 r84: [426..430]
 r85: [412..414]
 r86: [408..409]
 r87: [405..407]
 r88: [400..402]
 r89: [387..389]
 r90: [380..382]
 r91: [375..377]
 r92: [371..372]
 r93: [368..370]
 r94: [332..334]
 r95: [327..329]
 r96: [322..324]
 r97: [317..319]
 r98: [312..314]
 r99: [307..309]
 r100: [305..306]
 r101: [303..304]
 r102: [301..302]
 r103: [298..300]
 r104: [289..293]
 r105: [289..290]
 r106: [283..284]
 r107: [6..7]
 r108: [445..446]
 r109: [442..444]
 r110: [276..277]
 r111: [274..275]
 r112: [269..270]
 r113: [264..268]
 r114: [266..267]
 r115: [264..265]
 r116: [259..260]
 r117: [257..258]
 r118: [252..253]
 r119: [247..251]
 r120: [249..250]
 r121: [247..248]
 r122: [242..243]
 r123: [240..241]
 r124: [235..236]
 r125: [230..234]
 r126: [232..233]
 r127: [230..231]
 r128: [225..226]
 r130: [220..221]
 r131: [218..219]
 r132: [216..217]
 r133: [211..215]
 r134: [123..210]
 r135: [206..207]
 r136: [204..205]
 r137: [202..203]
 r138: [200..201]
 r139: [195..199]
 r140: [123..194]
 r141: [190..191]
 r142: [188..189]
 r143: [186..187]
 r144: [184..185]
 r145: [179..183]
 r146: [123..178]
 r147: [174..175]
 r148: [172..173]
 r149: [170..171]
 r150: [168..169]
 r151: [163..167]
 r153: [156..157]
 r154: [154..155]
 r155: [152..153]
 r156: [150..151]
 r157: [145..149]
 r158: [123..144]
 r159: [140..141]
 r160: [138..139]
 r161: [136..137]
 r162: [134..135]
 r163: [129..133]
 r164: [123..128]
 r165: [119..120]
 r167: [114..115]
 r168: [112..113]
 r169: [110..111]
 r170: [105..109]
 r171: [17..104]
 r172: [100..101]
 r173: [98..99]
 r174: [96..97]
 r175: [94..95]
 r176: [89..93]
 r177: [17..88]
 r178: [84..85]
 r179: [82..83]
 r180: [80..81]
 r181: [78..79]
 r182: [73..77]
 r183: [17..72]
 r184: [68..69]
 r185: [66..67]
 r186: [64..65]
 r187: [62..63]
 r188: [57..61]
 r190: [50..51]
 r191: [48..49]
 r192: [46..47]
 r193: [44..45]
 r194: [39..43]
 r195: [17..38]
 r196: [34..35]
 r197: [32..33]
 r198: [30..31]
 r199: [28..29]
 r200: [23..27]
 r201: [17..22]
 r202: [12..13] [2..4]
 r203: [0..1]
 r204: [433..436]
 r205: [433..435]
 r206: [433..434]
 r207: [431..432]
 r208: [428..429]
 r209: [423..427]
 r210: [421..425]
 r211: [419..424]
 r212: [415..416]
 r213: [412..413]
 r214: [410..411]
 r215: [405..406]
 r216: [403..404]
 r217: [400..401]
 r218: [398..399]
 r219: [396..397]
 r220: [394..395]
 r221: [392..393]
 r222: [390..391]
 r223: [387..388]
 r224: [385..386]
 r225: [383..384]
 r226: [380..381]
 r227: [378..379]
 r228: [375..376]
 r229: [373..374]
 r230: [368..369]
 r231: [366..367]
 r232: [363..365]
 r233: [363..364]
 r234: [360..362]
 r235: [360..361]
 r236: [358..359]
 r237: [355..357]
 r238: [355..356]
 r239: [352..354]
 r240: [352..353]
 r241: [349..351]
 r242: [349..350]
 r243: [346..348]
 r244: [346..347]
 r245: [343..345]
 r246: [343..344]
 r247: [340..342]
 r248: [340..341]
 r249: [337..339]
 r250: [337..338]
 r251: [335..336]
 r252: [332..333]
 r253: [330..331]
 r254: [327..328]
 r255: [325..326]
 r256: [322..323]
 r257: [320..321]
 r258: [317..318]
 r259: [315..316]
 r260: [312..313]
 r261: [310..311]
 r262: [307..308]
 r263: [298..299]
 r264: [296..297]
 r265: [294..295]
 r266: [291..292]
 r267: [286..287]
 r268: [8..10]
 r269: [8..9]
 r270: [452..456]
 r271: [452..453]
 r272: [454..455]
 r273: [450..451]
 r274: [447..448]
 r275: [442..443]
 r276: [278..279]
 r277: [271..272]
 r278: [261..262]
 r279: [254..255]
 r280: [244..245]
 r281: [237..238]
 r282: [227..228]
 r283: [222..223]
 r284: [211..212]
 r285: [213..214]
 r286: [208..209]
 r287: [195..196]
 r288: [197..198]
 r289: [192..193]
 r290: [179..180]
 r291: [181..182]
 r292: [176..177]
 r293: [163..164]
 r294: [165..166]
 r295: [158..159]
 r296: [145..146]
 r297: [147..148]
 r298: [142..143]
 r299: [129..130]
 r300: [131..132]
 r301: [121..122]
 r302: [116..117]
 r303: [105..106]
 r304: [107..108]
 r305: [102..103]
 r306: [89..90]
 r307: [91..92]
 r308: [86..87]
 r309: [73..74]
 r310: [75..76]
 r311: [70..71]
 r312: [57..58]
 r313: [59..60]
 r314: [52..53]
 r315: [39..40]
 r316: [41..42]
 r317: [36..37]
 r318: [23..24]
 r319: [25..26]
 r320: [15..16]
 r323: [417..422]
 r324: [417..420]
 r325: [417..418]
 r326: [161..162]
 r327: [123..126]
 r328: [123..124]
 r329: [55..56]
 r330: [17..20]
 r331: [17..18]
 r332: [21..54]
 r333: [19..118]
 r334: [127..160]
 r335: [125..224]
Compressing live ranges: from 458 to 380 - 82%
Ranges after the compression:
 r82: [10..379] [4..7]
 r83: [366..367]
 r84: [358..361]
 r85: [346..347]
 r86: [342..343]
 r87: [340..341]
 r88: [336..337]
 r89: [324..325]
 r90: [318..319]
 r91: [314..315]
 r92: [310..311]
 r93: [308..309]
 r94: [282..283]
 r95: [278..279]
 r96: [274..275]
 r97: [270..271]
 r98: [266..267]
 r99: [262..263]
 r100: [260..261]
 r101: [258..259]
 r102: [256..257]
 r103: [254..255]
 r104: [246..249]
 r105: [246..247]
 r106: [242..243]
 r107: [4..5]
 r108: [370..371]
 r109: [368..369]
 r110: [238..239]
 r111: [236..237]
 r112: [232..233]
 r113: [228..231]
 r114: [230..231]
 r115: [228..229]
 r116: [224..225]
 r117: [222..223]
 r118: [218..219]
 r119: [214..217]
 r120: [216..217]
 r121: [214..215]
 r122: [210..211]
 r123: [208..209]
 r124: [204..205]
 r125: [200..203]
 r126: [202..203]
 r127: [200..201]
 r128: [196..197]
 r130: [192..193]
 r131: [190..191]
 r132: [188..189]
 r133: [184..187]
 r134: [106..183]
 r135: [180..181]
 r136: [178..179]
 r137: [176..177]
 r138: [174..175]
 r139: [170..173]
 r140: [106..169]
 r141: [166..167]
 r142: [164..165]
 r143: [162..163]
 r144: [160..161]
 r145: [156..159]
 r146: [106..155]
 r147: [152..153]
 r148: [150..151]
 r149: [148..149]
 r150: [146..147]
 r151: [142..145]
 r153: [136..137]
 r154: [134..135]
 r155: [132..133]
 r156: [130..131]
 r157: [126..129]
 r158: [106..125]
 r159: [122..123]
 r160: [120..121]
 r161: [118..119]
 r162: [116..117]
 r163: [112..115]
 r164: [106..111]
 r165: [102..103]
 r167: [98..99]
 r168: [96..97]
 r169: [94..95]
 r170: [90..93]
 r171: [12..89]
 r172: [86..87]
 r173: [84..85]
 r174: [82..83]
 r175: [80..81]
 r176: [76..79]
 r177: [12..75]
 r178: [72..73]
 r179: [70..71]
 r180: [68..69]
 r181: [66..67]
 r182: [62..65]
 r183: [12..61]
 r184: [58..59]
 r185: [56..57]
 r186: [54..55]
 r187: [52..53]
 r188: [48..51]
 r190: [42..43]
 r191: [40..41]
 r192: [38..39]
 r193: [36..37]
 r194: [32..35]
 r195: [12..31]
 r196: [28..29]
 r197: [26..27]
 r198: [24..25]
 r199: [22..23]
 r200: [18..21]
 r201: [12..17]
 r202: [8..9] [2..3]
 r203: [0..1]
 r204: [364..365]
 r205: [364..365]
 r206: [364..365]
 r207: [362..363]
 r208: [360..361]
 r209: [356..359]
 r210: [354..357]
 r211: [352..357]
 r212: [348..349]
 r213: [346..347]
 r214: [344..345]
 r215: [340..341]
 r216: [338..339]
 r217: [336..337]
 r218: [334..335]
 r219: [332..333]
 r220: [330..331]
 r221: [328..329]
 r222: [326..327]
 r223: [324..325]
 r224: [322..323]
 r225: [320..321]
 r226: [318..319]
 r227: [316..317]
 r228: [314..315]
 r229: [312..313]
 r230: [308..309]
 r231: [306..307]
 r232: [304..305]
 r233: [304..305]
 r234: [302..303]
 r235: [302..303]
 r236: [300..301]
 r237: [298..299]
 r238: [298..299]
 r239: [296..297]
 r240: [296..297]
 r241: [294..295]
 r242: [294..295]
 r243: [292..293]
 r244: [292..293]
 r245: [290..291]
 r246: [290..291]
 r247: [288..289]
 r248: [288..289]
 r249: [286..287]
 r250: [286..287]
 r251: [284..285]
 r252: [282..283]
 r253: [280..281]
 r254: [278..279]
 r255: [276..277]
 r256: [274..275]
 r257: [272..273]
 r258: [270..271]
 r259: [268..269]
 r260: [266..267]
 r261: [264..265]
 r262: [262..263]
 r263: [254..255]
 r264: [252..253]
 r265: [250..251]
 r266: [248..249]
 r267: [244..245]
 r268: [6..7]
 r269: [6..7]
 r270: [376..379]
 r271: [376..377]
 r272: [378..379]
 r273: [374..375]
 r274: [372..373]
 r275: [368..369]
 r276: [240..241]
 r277: [234..235]
 r278: [226..227]
 r279: [220..221]
 r280: [212..213]
 r281: [206..207]
 r282: [198..199]
 r283: [194..195]
 r284: [184..185]
 r285: [186..187]
 r286: [182..183]
 r287: [170..171]
 r288: [172..173]
 r289: [168..169]
 r290: [156..157]
 r291: [158..159]
 r292: [154..155]
 r293: [142..143]
 r294: [144..145]
 r295: [138..139]
 r296: [126..127]
 r297: [128..129]
 r298: [124..125]
 r299: [112..113]
 r300: [114..115]
 r301: [104..105]
 r302: [100..101]
 r303: [90..91]
 r304: [92..93]
 r305: [88..89]
 r306: [76..77]
 r307: [78..79]
 r308: [74..75]
 r309: [62..63]
 r310: [64..65]
 r311: [60..61]
 r312: [48..49]
 r313: [50..51]
 r314: [44..45]
 r315: [32..33]
 r316: [34..35]
 r317: [30..31]
 r318: [18..19]
 r319: [20..21]
 r320: [10..11]
 r323: [350..355]
 r324: [350..353]
 r325: [350..351]
 r326: [140..141]
 r327: [106..109]
 r328: [106..107]
 r329: [46..47]
 r330: [12..15]
 r331: [12..13]
 r332: [16..45]
 r333: [14..101]
 r334: [110..139]
 r335: [108..195]

********** Assignment #1: **********

	 Assigning to 323 (cl=DIREG, orig=209, freq=2000, tfirst=323, tfreq=2000)...
	   Assign 5 to reload r323 (freq=2000)
	 Assigning to 324 (cl=SIREG, orig=210, freq=2000, tfirst=324, tfreq=2000)...
	   Assign 4 to reload r324 (freq=2000)
	 Assigning to 325 (cl=CREG, orig=211, freq=2000, tfirst=325, tfreq=2000)...
	   Assign 2 to reload r325 (freq=2000)
	 Assigning to 328 (cl=AREG, orig=129, freq=2000, tfirst=328, tfreq=2000)...
	   Assign 0 to reload r328 (freq=2000)
	Hard reg 0 is preferable by r335 with profit 2000
	 Assigning to 331 (cl=AREG, orig=166, freq=2000, tfirst=331, tfreq=2000)...
	   Assign 0 to reload r331 (freq=2000)
	Hard reg 0 is preferable by r333 with profit 2000
	 Assigning to 334 (cl=GENERAL_REGS, orig=152, freq=2000, tfirst=326, tfreq=2000)...
	 Assigning to 327 (cl=INDEX_REGS, orig=152, freq=2000, tfirst=326, tfreq=2000)...
	 Trying 1: spill 164(freq=2000)	 Now best 1(cost=0, bad_spills=0, insn_pseudos=1)

	 Trying 2: spill 158(freq=2000) assign 334(cost=-2000)	 Now best 2(cost=-2000, bad_spills=0, insn_pseudos=1)

	 Trying 3: spill 134(freq=2000) assign 334(cost=-2000)
	 Trying 4: spill 140(freq=2000) assign 334(cost=-2000)
	 Trying 5: spill 146(freq=2000) assign 334(cost=-2000)
      Spill r158(hr=2, freq=2000) for r327
	   Assign 2 to reload r327 (freq=2000)
	Hard reg 2 is preferable by r334 with profit 1000
	Hard reg 2 is preferable by r326 with profit 500
	 Assigning to 326 (cl=GENERAL_REGS, orig=152, freq=2000, tfirst=326, tfreq=2000)...
	   Assign 2 to reload r326 (freq=2000)
	Hard reg 2 is preferable by r334 with profit 2000
	 Assigning to 332 (cl=GENERAL_REGS, orig=189, freq=2000, tfirst=329, tfreq=2000)...
	 Assigning to 330 (cl=INDEX_REGS, orig=189, freq=2000, tfirst=329, tfreq=2000)...
	 Trying 1: spill 201(freq=2000)	 Now best 1(cost=0, bad_spills=0, insn_pseudos=1)

	 Trying 2: spill 195(freq=2000) assign 332(cost=-2000)	 Now best 2(cost=-2000, bad_spills=0, insn_pseudos=1)

	 Trying 3: spill 171(freq=2000) assign 332(cost=-2000)
	 Trying 4: spill 177(freq=2000) assign 332(cost=-2000)
	 Trying 5: spill 183(freq=2000) assign 332(cost=-2000)
      Spill r195(hr=2, freq=2000) for r330
	   Assign 2 to reload r330 (freq=2000)
	Hard reg 2 is preferable by r332 with profit 1000
	Hard reg 2 is preferable by r329 with profit 500
	 Assigning to 329 (cl=GENERAL_REGS, orig=189, freq=2000, tfirst=329, tfreq=2000)...
	   Assign 2 to reload r329 (freq=2000)
	Hard reg 2 is preferable by r332 with profit 2000
	 Assigning to 333 (cl=GENERAL_REGS, orig=166, freq=2000, tfirst=333, tfreq=2000)...
	 Assigning to 335 (cl=GENERAL_REGS, orig=129, freq=2000, tfirst=335, tfreq=2000)...
  Reassigning non-reload pseudos
	   Assign 2 to inheritance r332 (freq=2000)
	   Assign 2 to inheritance r334 (freq=2000)

********** Undoing inheritance #1: **********

Inherit 2 out of 4 (50.00%)
   Insn after restoring regs:
  379: r331:SI=r166:SI
      REG_DEAD r166:SI
   Insn after restoring regs:
  296: r166:SI=r165:SI
      REG_DEAD r165:SI
   Insn after restoring regs:
  376: r328:SI=r129:SI
      REG_DEAD r129:SI
   Insn after restoring regs:
  239: r129:SI=r128:SI
      REG_DEAD r128:SI

********** Pseudo live ranges #2: **********

  BB 20
   Insn 361: point = 0, n_alt = -1
   Insn 360: point = 0, n_alt = -2
   Insn 356: point = 1, n_alt = -2
  BB 7
   Insn 365: point = 4, n_alt = -1
   Insn 162: point = 4, n_alt = 0
   Insn 161: point = 5, n_alt = 0
   Insn 160: point = 5, n_alt = 0
   Insn 159: point = 5, n_alt = -2
   Insn 158: point = 6, n_alt = 0
   Insn 157: point = 7, n_alt = 0
   Insn 156: point = 7, n_alt = 0
   Insn 155: point = 8, n_alt = 1
   Insn 154: point = 9, n_alt = 0
   Insn 153: point = 10, n_alt = 0
  BB 3
   Insn 363: point = 12, n_alt = -1
   Insn 12: point = 12, n_alt = 0
  BB 19
   Insn 353: point = 13, n_alt = 0
   Insn 352: point = 15, n_alt = 1
   Insn 351: point = 16, n_alt = 0
   Insn 350: point = 17, n_alt = -1
   Insn 379: point = 18, n_alt = 0
   Insn 378: point = 20, n_alt = -1
	   Creating copy r330<-r332@1000
   Insn 349: point = 22, n_alt = 0
   Insn 348: point = 24, n_alt = -2
   Insn 347: point = 26, n_alt = 0
   Insn 346: point = 27, n_alt = 3
   Insn 345: point = 29, n_alt = 0
   Insn 344: point = 31, n_alt = 0
   Insn 343: point = 33, n_alt = -2
   Insn 342: point = 35, n_alt = 0
   Insn 341: point = 37, n_alt = 0
   Insn 340: point = 38, n_alt = -1
   Insn 339: point = 40, n_alt = -2
   Insn 338: point = 42, n_alt = 0
   Insn 337: point = 43, n_alt = 3
   Insn 336: point = 45, n_alt = 0
   Insn 335: point = 47, n_alt = 0
   Insn 334: point = 49, n_alt = -2
   Insn 333: point = 51, n_alt = 0
   Insn 332: point = 53, n_alt = 0
   Insn 377: point = 54, n_alt = -1
	   Creating copy r329->r332@1000
   Insn 331: point = 56, n_alt = 3
   Insn 330: point = 58, n_alt = -2
   Insn 329: point = 60, n_alt = 0
   Insn 328: point = 61, n_alt = 3
   Insn 327: point = 63, n_alt = 0
   Insn 326: point = 65, n_alt = 0
   Insn 325: point = 67, n_alt = -2
   Insn 324: point = 69, n_alt = 0
   Insn 323: point = 71, n_alt = 0
   Insn 322: point = 72, n_alt = 3
   Insn 321: point = 74, n_alt = -2
   Insn 320: point = 76, n_alt = 0
   Insn 319: point = 77, n_alt = 3
   Insn 318: point = 79, n_alt = 0
   Insn 317: point = 81, n_alt = 0
   Insn 316: point = 83, n_alt = -2
   Insn 315: point = 85, n_alt = 0
   Insn 314: point = 87, n_alt = 0
   Insn 313: point = 88, n_alt = 3
   Insn 312: point = 90, n_alt = -2
   Insn 311: point = 92, n_alt = 0
   Insn 310: point = 93, n_alt = 3
   Insn 309: point = 95, n_alt = 0
   Insn 308: point = 97, n_alt = 0
   Insn 307: point = 99, n_alt = -2
   Insn 306: point = 101, n_alt = 0
   Insn 305: point = 103, n_alt = 0
   Insn 304: point = 104, n_alt = 3
   Insn 303: point = 106, n_alt = -2
   Insn 302: point = 108, n_alt = 0
   Insn 301: point = 109, n_alt = 1
   Insn 300: point = 111, n_alt = 0
   Insn 299: point = 113, n_alt = -2
   Insn 298: point = 115, n_alt = 0
   Insn 297: point = 117, n_alt = 0
   Insn 296: point = 118, n_alt = 1
   Insn 295: point = 120, n_alt = 0
   Insn 294: point = 122, n_alt = 0
   Insn 293: point = 123, n_alt = -1
   Insn 376: point = 124, n_alt = 0
   Insn 375: point = 126, n_alt = -1
	   Creating copy r327<-r334@1000
   Insn 292: point = 128, n_alt = 0
   Insn 291: point = 130, n_alt = -2
   Insn 290: point = 132, n_alt = 0
   Insn 289: point = 133, n_alt = 3
   Insn 288: point = 135, n_alt = 0
   Insn 287: point = 137, n_alt = 0
   Insn 286: point = 139, n_alt = -2
   Insn 285: point = 141, n_alt = 0
   Insn 284: point = 143, n_alt = 0
   Insn 283: point = 144, n_alt = -1
   Insn 282: point = 146, n_alt = -2
   Insn 281: point = 148, n_alt = 0
   Insn 280: point = 149, n_alt = 3
   Insn 279: point = 151, n_alt = 0
   Insn 278: point = 153, n_alt = 0
   Insn 277: point = 155, n_alt = -2
   Insn 276: point = 157, n_alt = 0
   Insn 275: point = 159, n_alt = 0
   Insn 374: point = 160, n_alt = -1
	   Creating copy r326->r334@1000
   Insn 274: point = 162, n_alt = 3
   Insn 273: point = 164, n_alt = -2
   Insn 272: point = 166, n_alt = 0
   Insn 271: point = 167, n_alt = 3
   Insn 270: point = 169, n_alt = 0
   Insn 269: point = 171, n_alt = 0
   Insn 268: point = 173, n_alt = -2
   Insn 267: point = 175, n_alt = 0
   Insn 266: point = 177, n_alt = 0
   Insn 265: point = 178, n_alt = 3
   Insn 264: point = 180, n_alt = -2
   Insn 263: point = 182, n_alt = 0
   Insn 262: point = 183, n_alt = 3
   Insn 261: point = 185, n_alt = 0
   Insn 260: point = 187, n_alt = 0
   Insn 259: point = 189, n_alt = -2
   Insn 258: point = 191, n_alt = 0
   Insn 257: point = 193, n_alt = 0
   Insn 256: point = 194, n_alt = 3
   Insn 255: point = 196, n_alt = -2
   Insn 254: point = 198, n_alt = 0
   Insn 253: point = 199, n_alt = 3
   Insn 252: point = 201, n_alt = 0
   Insn 251: point = 203, n_alt = 0
   Insn 250: point = 205, n_alt = -2
   Insn 249: point = 207, n_alt = 0
   Insn 248: point = 209, n_alt = 0
   Insn 247: point = 210, n_alt = 3
   Insn 246: point = 212, n_alt = -2
   Insn 245: point = 214, n_alt = 0
   Insn 244: point = 215, n_alt = 1
   Insn 243: point = 217, n_alt = 0
   Insn 242: point = 219, n_alt = -2
   Insn 241: point = 221, n_alt = 0
   Insn 240: point = 223, n_alt = 0
   Insn 239: point = 224, n_alt = 1
   Insn 238: point = 226, n_alt = 0
   Insn 237: point = 228, n_alt = 0
  BB 18
   Insn 234: point = 230, n_alt = 3
   Insn 233: point = 231, n_alt = 0
   Insn 232: point = 233, n_alt = 2
   Insn 231: point = 234, n_alt = 0
   Insn 230: point = 236, n_alt = 0
   Insn 229: point = 238, n_alt = 0
  BB 17
   Insn 227: point = 240, n_alt = -1
   Insn 226: point = 240, n_alt = 0
   Insn 225: point = 241, n_alt = 0
   Insn 224: point = 243, n_alt = 0
   Insn 223: point = 245, n_alt = 0
  BB 16
   Insn 220: point = 247, n_alt = 3
   Insn 219: point = 248, n_alt = 0
   Insn 218: point = 250, n_alt = 2
   Insn 217: point = 251, n_alt = 0
   Insn 216: point = 253, n_alt = 0
   Insn 215: point = 255, n_alt = 0
  BB 15
   Insn 213: point = 257, n_alt = -1
   Insn 212: point = 257, n_alt = 0
   Insn 211: point = 258, n_alt = 0
   Insn 210: point = 260, n_alt = 0
   Insn 209: point = 262, n_alt = 0
  BB 14
   Insn 206: point = 264, n_alt = 3
   Insn 205: point = 265, n_alt = 0
   Insn 204: point = 267, n_alt = 2
   Insn 203: point = 268, n_alt = 0
   Insn 202: point = 270, n_alt = 0
   Insn 201: point = 272, n_alt = 0
  BB 13
   Insn 199: point = 274, n_alt = -1
   Insn 198: point = 274, n_alt = 0
   Insn 197: point = 275, n_alt = 0
   Insn 196: point = 277, n_alt = 0
   Insn 195: point = 279, n_alt = 0
  BB 12
   Insn 193: point = 281, n_alt = -1
   Insn 192: point = 281, n_alt = 0
  BB 8
   Insn 367: point = 282, n_alt = -1
   Insn 167: point = 282, n_alt = 1
  BB 6
   Insn 151: point = 283, n_alt = -1
   Insn 150: point = 283, n_alt = 0
   Insn 149: point = 284, n_alt = -2
   Insn 148: point = 285, n_alt = 0
   Insn 147: point = 285, n_alt = 0
   Insn 146: point = 285, n_alt = 0
   Insn 145: point = 285, n_alt = 0
   Insn 144: point = 285, n_alt = 0
  BB 5
   Insn 141: point = 286, n_alt = 0
   Insn 140: point = 287, n_alt = 0
  BB 4
   Insn 138: point = 289, n_alt = -1
   Insn 137: point = 289, n_alt = 0
   Insn 136: point = 290, n_alt = 0
   Insn 135: point = 292, n_alt = 0
   Insn 134: point = 293, n_alt = 0
   Insn 133: point = 295, n_alt = 0
   Insn 132: point = 296, n_alt = 1
   Insn 131: point = 297, n_alt = 0
   Insn 130: point = 298, n_alt = 1
   Insn 129: point = 299, n_alt = 0
   Insn 128: point = 300, n_alt = -2
   Insn 127: point = 302, n_alt = 0
   Insn 126: point = 304, n_alt = 0
   Insn 125: point = 306, n_alt = 0
   Insn 124: point = 307, n_alt = 1
   Insn 123: point = 308, n_alt = 0
   Insn 122: point = 309, n_alt = 0
   Insn 121: point = 311, n_alt = 0
   Insn 120: point = 312, n_alt = 1
   Insn 119: point = 313, n_alt = 0
   Insn 118: point = 314, n_alt = 0
   Insn 117: point = 316, n_alt = 0
   Insn 116: point = 317, n_alt = 1
   Insn 115: point = 318, n_alt = 0
   Insn 114: point = 319, n_alt = 0
   Insn 113: point = 321, n_alt = 0
   Insn 112: point = 322, n_alt = 1
   Insn 111: point = 323, n_alt = 0
   Insn 110: point = 324, n_alt = 0
   Insn 109: point = 326, n_alt = 0
   Insn 108: point = 327, n_alt = 1
   Insn 107: point = 328, n_alt = 0
   Insn 106: point = 329, n_alt = 0
   Insn 105: point = 331, n_alt = 0
   Insn 104: point = 332, n_alt = 1
   Insn 103: point = 333, n_alt = 0
   Insn 102: point = 334, n_alt = 0
   Insn 101: point = 336, n_alt = 0
   Insn 100: point = 337, n_alt = 1
   Insn 99: point = 338, n_alt = 0
   Insn 98: point = 339, n_alt = 0
   Insn 97: point = 340, n_alt = 1
   Insn 96: point = 341, n_alt = 0
   Insn 95: point = 342, n_alt = 0
   Insn 94: point = 343, n_alt = 1
   Insn 93: point = 344, n_alt = 0
   Insn 92: point = 345, n_alt = 0
   Insn 91: point = 346, n_alt = 1
   Insn 90: point = 347, n_alt = 0
   Insn 89: point = 348, n_alt = 0
   Insn 88: point = 349, n_alt = 1
   Insn 87: point = 350, n_alt = 0
   Insn 86: point = 351, n_alt = 0
   Insn 85: point = 352, n_alt = 1
   Insn 84: point = 353, n_alt = 0
   Insn 83: point = 354, n_alt = 0
   Insn 82: point = 355, n_alt = 1
   Insn 81: point = 356, n_alt = 0
   Insn 80: point = 357, n_alt = 0
   Insn 79: point = 358, n_alt = 1
   Insn 78: point = 359, n_alt = 0
   Insn 77: point = 360, n_alt = 1
   Insn 76: point = 361, n_alt = 0
   Insn 75: point = 362, n_alt = 0
   Insn 74: point = 363, n_alt = 1
   Insn 73: point = 364, n_alt = 0
   Insn 72: point = 365, n_alt = 0
   Insn 71: point = 366, n_alt = 1
   Insn 70: point = 367, n_alt = 0
   Insn 69: point = 368, n_alt = 1
   Insn 68: point = 369, n_alt = 0
   Insn 67: point = 370, n_alt = 3
   Insn 66: point = 372, n_alt = 0
   Insn 65: point = 373, n_alt = 1
   Insn 64: point = 374, n_alt = 0
   Insn 63: point = 375, n_alt = 1
   Insn 62: point = 376, n_alt = 0
   Insn 61: point = 377, n_alt = 0
   Insn 60: point = 379, n_alt = 0
   Insn 59: point = 380, n_alt = 1
   Insn 58: point = 381, n_alt = 0
   Insn 57: point = 382, n_alt = 0
   Insn 56: point = 384, n_alt = 0
   Insn 55: point = 385, n_alt = 1
   Insn 54: point = 386, n_alt = 0
   Insn 53: point = 387, n_alt = 1
   Insn 52: point = 388, n_alt = 0
   Insn 51: point = 389, n_alt = 0
   Insn 50: point = 391, n_alt = 0
   Insn 49: point = 392, n_alt = 1
   Insn 48: point = 393, n_alt = 0
   Insn 47: point = 394, n_alt = 1
   Insn 46: point = 395, n_alt = 0
   Insn 45: point = 396, n_alt = 1
   Insn 44: point = 397, n_alt = 0
   Insn 43: point = 398, n_alt = 1
   Insn 42: point = 399, n_alt = 0
   Insn 41: point = 400, n_alt = 1
   Insn 40: point = 401, n_alt = 0
   Insn 39: point = 402, n_alt = 0
   Insn 38: point = 404, n_alt = 0
   Insn 37: point = 405, n_alt = 1
   Insn 36: point = 406, n_alt = 0
   Insn 35: point = 407, n_alt = 0
   Insn 34: point = 409, n_alt = 0
   Insn 33: point = 411, n_alt = 0
   Insn 32: point = 412, n_alt = 1
   Insn 31: point = 413, n_alt = 0
   Insn 30: point = 414, n_alt = 0
   Insn 29: point = 415, n_alt = 1
   Insn 28: point = 416, n_alt = 0
   Insn 27: point = 417, n_alt = 0
   Insn 373: point = 418, n_alt = -2
	Hard reg 0 is preferable by r325 with profit 1000
   Insn 372: point = 420, n_alt = -2
	Hard reg 3 is preferable by r324 with profit 1000
   Insn 371: point = 422, n_alt = -2
	Hard reg 1 is preferable by r323 with profit 1000
   Insn 26: point = 424, n_alt = 0
   Insn 25: point = 425, n_alt = -2
   Insn 24: point = 427, n_alt = -2
   Insn 23: point = 429, n_alt = 0
   Insn 22: point = 430, n_alt = 0
   Insn 21: point = 432, n_alt = 0
   Insn 20: point = 433, n_alt = 1
   Insn 19: point = 434, n_alt = 0
   Insn 18: point = 435, n_alt = 0
   Insn 17: point = 436, n_alt = 0
  BB 2
   Insn 10: point = 438, n_alt = -1
   Insn 9: point = 438, n_alt = 1
   Insn 8: point = 438, n_alt = 1
   Insn 7: point = 439, n_alt = -2
   Insn 6: point = 440, n_alt = 0
   Insn 5: point = 440, n_alt = -2
   Insn 369: point = 440, n_alt = 0
  BB 11
   Insn 186: point = 441, n_alt = 0
  BB 10
   Insn 183: point = 442, n_alt = 3
   Insn 182: point = 443, n_alt = 0
   Insn 181: point = 444, n_alt = 3
   Insn 180: point = 446, n_alt = 2
   Insn 179: point = 448, n_alt = 0
  BB 9
   Insn 177: point = 450, n_alt = -1
   Insn 176: point = 450, n_alt = 1
   Insn 175: point = 450, n_alt = 1
   Insn 174: point = 451, n_alt = 0
   Insn 173: point = 453, n_alt = 0
   Insn 172: point = 455, n_alt = 0
   Insn 171: point = 456, n_alt = 0
 r82: [14..457] [5..11]
 r83: [438..439]
 r84: [426..430]
 r85: [412..414]
 r86: [408..409]
 r87: [405..407]
 r88: [400..402]
 r89: [387..389]
 r90: [380..382]
 r91: [375..377]
 r92: [371..372]
 r93: [368..370]
 r94: [332..334]
 r95: [327..329]
 r96: [322..324]
 r97: [317..319]
 r98: [312..314]
 r99: [307..309]
 r100: [305..306]
 r101: [303..304]
 r102: [301..302]
 r103: [298..300]
 r104: [289..293]
 r105: [289..290]
 r106: [283..284]
 r107: [6..7]
 r108: [445..446]
 r109: [442..444]
 r110: [276..277]
 r111: [274..275]
 r112: [269..270]
 r113: [264..268]
 r114: [266..267]
 r115: [264..265]
 r116: [259..260]
 r117: [257..258]
 r118: [252..253]
 r119: [247..251]
 r120: [249..250]
 r121: [247..248]
 r122: [242..243]
 r123: [240..241]
 r124: [235..236]
 r125: [230..234]
 r126: [232..233]
 r127: [230..231]
 r128: [225..226]
 r129: [125..224]
 r130: [220..221]
 r131: [218..219]
 r132: [216..217]
 r133: [211..215]
 r134: [123..210]
 r135: [206..207]
 r136: [204..205]
 r137: [202..203]
 r138: [200..201]
 r139: [195..199]
 r140: [123..194]
 r141: [190..191]
 r142: [188..189]
 r143: [186..187]
 r144: [184..185]
 r145: [179..183]
 r146: [123..178]
 r147: [174..175]
 r148: [172..173]
 r149: [170..171]
 r150: [168..169]
 r151: [163..167]
 r153: [156..157]
 r154: [154..155]
 r155: [152..153]
 r156: [150..151]
 r157: [145..149]
 r158: [123..144]
 r159: [140..141]
 r160: [138..139]
 r161: [136..137]
 r162: [134..135]
 r163: [129..133]
 r164: [123..128]
 r165: [119..120]
 r166: [19..118]
 r167: [114..115]
 r168: [112..113]
 r169: [110..111]
 r170: [105..109]
 r171: [17..104]
 r172: [100..101]
 r173: [98..99]
 r174: [96..97]
 r175: [94..95]
 r176: [89..93]
 r177: [17..88]
 r178: [84..85]
 r179: [82..83]
 r180: [80..81]
 r181: [78..79]
 r182: [73..77]
 r183: [17..72]
 r184: [68..69]
 r185: [66..67]
 r186: [64..65]
 r187: [62..63]
 r188: [57..61]
 r190: [50..51]
 r191: [48..49]
 r192: [46..47]
 r193: [44..45]
 r194: [39..43]
 r195: [17..38]
 r196: [34..35]
 r197: [32..33]
 r198: [30..31]
 r199: [28..29]
 r200: [23..27]
 r201: [17..22]
 r202: [12..13] [2..4]
 r203: [0..1]
 r204: [433..436]
 r205: [433..435]
 r206: [433..434]
 r207: [431..432]
 r208: [428..429]
 r209: [423..427]
 r210: [421..425]
 r211: [419..424]
 r212: [415..416]
 r213: [412..413]
 r214: [410..411]
 r215: [405..406]
 r216: [403..404]
 r217: [400..401]
 r218: [398..399]
 r219: [396..397]
 r220: [394..395]
 r221: [392..393]
 r222: [390..391]
 r223: [387..388]
 r224: [385..386]
 r225: [383..384]
 r226: [380..381]
 r227: [378..379]
 r228: [375..376]
 r229: [373..374]
 r230: [368..369]
 r231: [366..367]
 r232: [363..365]
 r233: [363..364]
 r234: [360..362]
 r235: [360..361]
 r236: [358..359]
 r237: [355..357]
 r238: [355..356]
 r239: [352..354]
 r240: [352..353]
 r241: [349..351]
 r242: [349..350]
 r243: [346..348]
 r244: [346..347]
 r245: [343..345]
 r246: [343..344]
 r247: [340..342]
 r248: [340..341]
 r249: [337..339]
 r250: [337..338]
 r251: [335..336]
 r252: [332..333]
 r253: [330..331]
 r254: [327..328]
 r255: [325..326]
 r256: [322..323]
 r257: [320..321]
 r258: [317..318]
 r259: [315..316]
 r260: [312..313]
 r261: [310..311]
 r262: [307..308]
 r263: [298..299]
 r264: [296..297]
 r265: [294..295]
 r266: [291..292]
 r267: [286..287]
 r268: [8..10]
 r269: [8..9]
 r270: [452..456]
 r271: [452..453]
 r272: [454..455]
 r273: [450..451]
 r274: [447..448]
 r275: [442..443]
 r276: [278..279]
 r277: [271..272]
 r278: [261..262]
 r279: [254..255]
 r280: [244..245]
 r281: [237..238]
 r282: [227..228]
 r283: [222..223]
 r284: [211..212]
 r285: [213..214]
 r286: [208..209]
 r287: [195..196]
 r288: [197..198]
 r289: [192..193]
 r290: [179..180]
 r291: [181..182]
 r292: [176..177]
 r293: [163..164]
 r294: [165..166]
 r295: [158..159]
 r296: [145..146]
 r297: [147..148]
 r298: [142..143]
 r299: [129..130]
 r300: [131..132]
 r301: [121..122]
 r302: [116..117]
 r303: [105..106]
 r304: [107..108]
 r305: [102..103]
 r306: [89..90]
 r307: [91..92]
 r308: [86..87]
 r309: [73..74]
 r310: [75..76]
 r311: [70..71]
 r312: [57..58]
 r313: [59..60]
 r314: [52..53]
 r315: [39..40]
 r316: [41..42]
 r317: [36..37]
 r318: [23..24]
 r319: [25..26]
 r320: [15..16]
 r323: [417..422]
 r324: [417..420]
 r325: [417..418]
 r326: [161..162]
 r327: [123..126]
 r328: [123..124]
 r329: [55..56]
 r330: [17..20]
 r331: [17..18]
 r332: [21..54]
 r334: [127..160]
Compressing live ranges: from 458 to 380 - 82%
Ranges after the compression:
 r82: [10..379] [4..7]
 r83: [366..367]
 r84: [358..361]
 r85: [346..347]
 r86: [342..343]
 r87: [340..341]
 r88: [336..337]
 r89: [324..325]
 r90: [318..319]
 r91: [314..315]
 r92: [310..311]
 r93: [308..309]
 r94: [282..283]
 r95: [278..279]
 r96: [274..275]
 r97: [270..271]
 r98: [266..267]
 r99: [262..263]
 r100: [260..261]
 r101: [258..259]
 r102: [256..257]
 r103: [254..255]
 r104: [246..249]
 r105: [246..247]
 r106: [242..243]
 r107: [4..5]
 r108: [370..371]
 r109: [368..369]
 r110: [238..239]
 r111: [236..237]
 r112: [232..233]
 r113: [228..231]
 r114: [230..231]
 r115: [228..229]
 r116: [224..225]
 r117: [222..223]
 r118: [218..219]
 r119: [214..217]
 r120: [216..217]
 r121: [214..215]
 r122: [210..211]
 r123: [208..209]
 r124: [204..205]
 r125: [200..203]
 r126: [202..203]
 r127: [200..201]
 r128: [196..197]
 r129: [108..195]
 r130: [192..193]
 r131: [190..191]
 r132: [188..189]
 r133: [184..187]
 r134: [106..183]
 r135: [180..181]
 r136: [178..179]
 r137: [176..177]
 r138: [174..175]
 r139: [170..173]
 r140: [106..169]
 r141: [166..167]
 r142: [164..165]
 r143: [162..163]
 r144: [160..161]
 r145: [156..159]
 r146: [106..155]
 r147: [152..153]
 r148: [150..151]
 r149: [148..149]
 r150: [146..147]
 r151: [142..145]
 r153: [136..137]
 r154: [134..135]
 r155: [132..133]
 r156: [130..131]
 r157: [126..129]
 r158: [106..125]
 r159: [122..123]
 r160: [120..121]
 r161: [118..119]
 r162: [116..117]
 r163: [112..115]
 r164: [106..111]
 r165: [102..103]
 r166: [14..101]
 r167: [98..99]
 r168: [96..97]
 r169: [94..95]
 r170: [90..93]
 r171: [12..89]
 r172: [86..87]
 r173: [84..85]
 r174: [82..83]
 r175: [80..81]
 r176: [76..79]
 r177: [12..75]
 r178: [72..73]
 r179: [70..71]
 r180: [68..69]
 r181: [66..67]
 r182: [62..65]
 r183: [12..61]
 r184: [58..59]
 r185: [56..57]
 r186: [54..55]
 r187: [52..53]
 r188: [48..51]
 r190: [42..43]
 r191: [40..41]
 r192: [38..39]
 r193: [36..37]
 r194: [32..35]
 r195: [12..31]
 r196: [28..29]
 r197: [26..27]
 r198: [24..25]
 r199: [22..23]
 r200: [18..21]
 r201: [12..17]
 r202: [8..9] [2..3]
 r203: [0..1]
 r204: [364..365]
 r205: [364..365]
 r206: [364..365]
 r207: [362..363]
 r208: [360..361]
 r209: [356..359]
 r210: [354..357]
 r211: [352..357]
 r212: [348..349]
 r213: [346..347]
 r214: [344..345]
 r215: [340..341]
 r216: [338..339]
 r217: [336..337]
 r218: [334..335]
 r219: [332..333]
 r220: [330..331]
 r221: [328..329]
 r222: [326..327]
 r223: [324..325]
 r224: [322..323]
 r225: [320..321]
 r226: [318..319]
 r227: [316..317]
 r228: [314..315]
 r229: [312..313]
 r230: [308..309]
 r231: [306..307]
 r232: [304..305]
 r233: [304..305]
 r234: [302..303]
 r235: [302..303]
 r236: [300..301]
 r237: [298..299]
 r238: [298..299]
 r239: [296..297]
 r240: [296..297]
 r241: [294..295]
 r242: [294..295]
 r243: [292..293]
 r244: [292..293]
 r245: [290..291]
 r246: [290..291]
 r247: [288..289]
 r248: [288..289]
 r249: [286..287]
 r250: [286..287]
 r251: [284..285]
 r252: [282..283]
 r253: [280..281]
 r254: [278..279]
 r255: [276..277]
 r256: [274..275]
 r257: [272..273]
 r258: [270..271]
 r259: [268..269]
 r260: [266..267]
 r261: [264..265]
 r262: [262..263]
 r263: [254..255]
 r264: [252..253]
 r265: [250..251]
 r266: [248..249]
 r267: [244..245]
 r268: [6..7]
 r269: [6..7]
 r270: [376..379]
 r271: [376..377]
 r272: [378..379]
 r273: [374..375]
 r274: [372..373]
 r275: [368..369]
 r276: [240..241]
 r277: [234..235]
 r278: [226..227]
 r279: [220..221]
 r280: [212..213]
 r281: [206..207]
 r282: [198..199]
 r283: [194..195]
 r284: [184..185]
 r285: [186..187]
 r286: [182..183]
 r287: [170..171]
 r288: [172..173]
 r289: [168..169]
 r290: [156..157]
 r291: [158..159]
 r292: [154..155]
 r293: [142..143]
 r294: [144..145]
 r295: [138..139]
 r296: [126..127]
 r297: [128..129]
 r298: [124..125]
 r299: [112..113]
 r300: [114..115]
 r301: [104..105]
 r302: [100..101]
 r303: [90..91]
 r304: [92..93]
 r305: [88..89]
 r306: [76..77]
 r307: [78..79]
 r308: [74..75]
 r309: [62..63]
 r310: [64..65]
 r311: [60..61]
 r312: [48..49]
 r313: [50..51]
 r314: [44..45]
 r315: [32..33]
 r316: [34..35]
 r317: [30..31]
 r318: [18..19]
 r319: [20..21]
 r320: [10..11]
 r323: [350..355]
 r324: [350..353]
 r325: [350..351]
 r326: [140..141]
 r327: [106..109]
 r328: [106..107]
 r329: [46..47]
 r330: [12..15]
 r331: [12..13]
 r332: [16..45]
 r334: [110..139]

********** Pseudos coalescing #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
      Creating newreg=336 from oldreg=195, assigning class GENERAL_REGS to address r336
	   Change to class INDEX_REGS for r336
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 350:  (0) a  (1) m  (2) m  (3) m  (4) m  (5) m  (6) m
  350: {asm_operands;clobber flags:CC;}
      REG_DEAD r330:SI
      REG_DEAD r331:SI
      REG_DEAD r201:SI
      REG_DEAD r195:SI
      REG_DEAD r183:SI
      REG_DEAD r177:SI
      REG_DEAD r171:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  384: r336:SI=r195:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 384:  (0) =r  (1) g {*movsi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=20,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=0,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            alt=1,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 340:  (0) r  (1) r  (2) le {*addsi_1}
      Creating newreg=337 from oldreg=195, assigning class GENERAL_REGS to r337
  340: {r337:SI=r194:SI+r315:SI;clobber flags:CC;}
      REG_DEAD r315:SI
      REG_DEAD r194:SI
      REG_UNUSED flags:CC
    Inserting insn reload after:
  385: r195:SI=r337:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 385:  (0) m  (1) re {*movsi_internal}
      Creating newreg=338 from oldreg=158, assigning class GENERAL_REGS to address r338
	   Change to class INDEX_REGS for r338
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 293:  (0) a  (1) m  (2) m  (3) m  (4) m  (5) m  (6) m
  293: {asm_operands;clobber flags:CC;}
      REG_DEAD r327:SI
      REG_DEAD r328:SI
      REG_DEAD r164:SI
      REG_DEAD r158:SI
      REG_DEAD r146:SI
      REG_DEAD r140:SI
      REG_DEAD r134:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  386: r338:SI=r158:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 386:  (0) =r  (1) g {*movsi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=20,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=0,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            alt=1,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 283:  (0) r  (1) r  (2) le {*addsi_1}
      Creating newreg=339 from oldreg=158, assigning class GENERAL_REGS to r339
  283: {r339:SI=r157:SI+r296:SI;clobber flags:CC;}
      REG_DEAD r296:SI
      REG_DEAD r157:SI
      REG_UNUSED flags:CC
    Inserting insn reload after:
  387: r158:SI=r339:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 387:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #2: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8
EBB 9 10
EBB 11
EBB 12 13 14
EBB 15 16
EBB 17 18
EBB 19
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=340 from oldreg=195, assigning class GENERAL_REGS to inheritance r340
    Original reg change 195->340 (bb19):
  385: r340:SI=r337:SI
    Add original<-inheritance after:
  388: r195:SI=r340:SI

    Inheritance reuse change 195->340 (bb19):
  384: r336:SI=r340:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=341 from oldreg=166, assigning class GENERAL_REGS to inheritance r341
    Original reg change 166->341 (bb19):
  296: r341:SI=r165:SI
      REG_DEAD r165:SI
    Add original<-inheritance after:
  389: r166:SI=r341:SI

    Inheritance reuse change 166->341 (bb19):
  379: r331:SI=r341:SI
      REG_DEAD r341:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=342 from oldreg=158, assigning class GENERAL_REGS to inheritance r342
    Original reg change 158->342 (bb19):
  387: r342:SI=r339:SI
    Add original<-inheritance after:
  390: r158:SI=r342:SI

    Inheritance reuse change 158->342 (bb19):
  386: r338:SI=r342:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=343 from oldreg=129, assigning class GENERAL_REGS to inheritance r343
    Original reg change 129->343 (bb19):
  239: r343:SI=r128:SI
      REG_DEAD r128:SI
    Add original<-inheritance after:
  391: r129:SI=r343:SI

    Inheritance reuse change 129->343 (bb19):
  376: r328:SI=r343:SI
      REG_DEAD r343:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   388: r195:SI=r340:SI
deleting insn with uid = 388.
	    Removing dead insn:
   389: r166:SI=r341:SI
deleting insn with uid = 389.
	    Removing dead insn:
   390: r158:SI=r342:SI
deleting insn with uid = 390.
	    Removing dead insn:
   391: r129:SI=r343:SI
deleting insn with uid = 391.
EBB 20

********** Pseudo live ranges #3: **********

  BB 20
   Insn 361: point = 0, n_alt = -1
   Insn 360: point = 0, n_alt = -2
   Insn 356: point = 1, n_alt = -2
  BB 7
   Insn 365: point = 4, n_alt = -1
   Insn 162: point = 4, n_alt = 0
   Insn 161: point = 5, n_alt = 0
   Insn 160: point = 5, n_alt = 0
   Insn 159: point = 5, n_alt = -2
   Insn 158: point = 6, n_alt = 0
   Insn 157: point = 7, n_alt = 0
   Insn 156: point = 7, n_alt = 0
   Insn 155: point = 8, n_alt = 1
   Insn 154: point = 9, n_alt = 0
   Insn 153: point = 10, n_alt = 0
  BB 3
   Insn 363: point = 12, n_alt = -1
   Insn 12: point = 12, n_alt = 0
  BB 19
   Insn 353: point = 13, n_alt = 0
   Insn 352: point = 15, n_alt = 1
   Insn 351: point = 16, n_alt = 0
   Insn 350: point = 17, n_alt = 0
   Insn 384: point = 18, n_alt = 0
	   Creating copy r336<-r340@1000
   Insn 379: point = 20, n_alt = 0
	   Creating copy r331<-r341@1000
   Insn 378: point = 22, n_alt = -2
	   Creating copy r330<-r332@1000
   Insn 349: point = 24, n_alt = 0
   Insn 348: point = 26, n_alt = -2
   Insn 347: point = 28, n_alt = 0
   Insn 346: point = 29, n_alt = 3
   Insn 345: point = 31, n_alt = 0
   Insn 344: point = 33, n_alt = 0
   Insn 343: point = 35, n_alt = -2
   Insn 342: point = 37, n_alt = 0
   Insn 341: point = 39, n_alt = 0
   Insn 385: point = 40, n_alt = 1
	   Creating copy r337->r340@1000
   Insn 340: point = 42, n_alt = 3
   Insn 339: point = 44, n_alt = -2
   Insn 338: point = 46, n_alt = 0
   Insn 337: point = 47, n_alt = 3
   Insn 336: point = 49, n_alt = 0
   Insn 335: point = 51, n_alt = 0
   Insn 334: point = 53, n_alt = -2
   Insn 333: point = 55, n_alt = 0
   Insn 332: point = 57, n_alt = 0
   Insn 377: point = 58, n_alt = -2
	   Creating copy r329->r332@1000
   Insn 331: point = 60, n_alt = 3
   Insn 330: point = 62, n_alt = -2
   Insn 329: point = 64, n_alt = 0
   Insn 328: point = 65, n_alt = 3
   Insn 327: point = 67, n_alt = 0
   Insn 326: point = 69, n_alt = 0
   Insn 325: point = 71, n_alt = -2
   Insn 324: point = 73, n_alt = 0
   Insn 323: point = 75, n_alt = 0
   Insn 322: point = 76, n_alt = 3
   Insn 321: point = 78, n_alt = -2
   Insn 320: point = 80, n_alt = 0
   Insn 319: point = 81, n_alt = 3
   Insn 318: point = 83, n_alt = 0
   Insn 317: point = 85, n_alt = 0
   Insn 316: point = 87, n_alt = -2
   Insn 315: point = 89, n_alt = 0
   Insn 314: point = 91, n_alt = 0
   Insn 313: point = 92, n_alt = 3
   Insn 312: point = 94, n_alt = -2
   Insn 311: point = 96, n_alt = 0
   Insn 310: point = 97, n_alt = 3
   Insn 309: point = 99, n_alt = 0
   Insn 308: point = 101, n_alt = 0
   Insn 307: point = 103, n_alt = -2
   Insn 306: point = 105, n_alt = 0
   Insn 305: point = 107, n_alt = 0
   Insn 304: point = 108, n_alt = 3
   Insn 303: point = 110, n_alt = -2
   Insn 302: point = 112, n_alt = 0
   Insn 301: point = 113, n_alt = 1
   Insn 300: point = 115, n_alt = 0
   Insn 299: point = 117, n_alt = -2
   Insn 298: point = 119, n_alt = 0
   Insn 297: point = 121, n_alt = 0
   Insn 296: point = 122, n_alt = 1
	Hard reg 0 is preferable by r341 with profit 1000
   Insn 295: point = 124, n_alt = 0
   Insn 294: point = 126, n_alt = 0
   Insn 293: point = 127, n_alt = 0
   Insn 386: point = 128, n_alt = 0
	   Creating copy r338<-r342@1000
   Insn 376: point = 130, n_alt = 0
	   Creating copy r328<-r343@1000
   Insn 375: point = 132, n_alt = -2
	   Creating copy r327<-r334@1000
   Insn 292: point = 134, n_alt = 0
   Insn 291: point = 136, n_alt = -2
   Insn 290: point = 138, n_alt = 0
   Insn 289: point = 139, n_alt = 3
   Insn 288: point = 141, n_alt = 0
   Insn 287: point = 143, n_alt = 0
   Insn 286: point = 145, n_alt = -2
   Insn 285: point = 147, n_alt = 0
   Insn 284: point = 149, n_alt = 0
   Insn 387: point = 150, n_alt = 1
	   Creating copy r339->r342@1000
   Insn 283: point = 152, n_alt = 3
   Insn 282: point = 154, n_alt = -2
   Insn 281: point = 156, n_alt = 0
   Insn 280: point = 157, n_alt = 3
   Insn 279: point = 159, n_alt = 0
   Insn 278: point = 161, n_alt = 0
   Insn 277: point = 163, n_alt = -2
   Insn 276: point = 165, n_alt = 0
   Insn 275: point = 167, n_alt = 0
   Insn 374: point = 168, n_alt = -2
	   Creating copy r326->r334@1000
   Insn 274: point = 170, n_alt = 3
   Insn 273: point = 172, n_alt = -2
   Insn 272: point = 174, n_alt = 0
   Insn 271: point = 175, n_alt = 3
   Insn 270: point = 177, n_alt = 0
   Insn 269: point = 179, n_alt = 0
   Insn 268: point = 181, n_alt = -2
   Insn 267: point = 183, n_alt = 0
   Insn 266: point = 185, n_alt = 0
   Insn 265: point = 186, n_alt = 3
   Insn 264: point = 188, n_alt = -2
   Insn 263: point = 190, n_alt = 0
   Insn 262: point = 191, n_alt = 3
   Insn 261: point = 193, n_alt = 0
   Insn 260: point = 195, n_alt = 0
   Insn 259: point = 197, n_alt = -2
   Insn 258: point = 199, n_alt = 0
   Insn 257: point = 201, n_alt = 0
   Insn 256: point = 202, n_alt = 3
   Insn 255: point = 204, n_alt = -2
   Insn 254: point = 206, n_alt = 0
   Insn 253: point = 207, n_alt = 3
   Insn 252: point = 209, n_alt = 0
   Insn 251: point = 211, n_alt = 0
   Insn 250: point = 213, n_alt = -2
   Insn 249: point = 215, n_alt = 0
   Insn 248: point = 217, n_alt = 0
   Insn 247: point = 218, n_alt = 3
   Insn 246: point = 220, n_alt = -2
   Insn 245: point = 222, n_alt = 0
   Insn 244: point = 223, n_alt = 1
   Insn 243: point = 225, n_alt = 0
   Insn 242: point = 227, n_alt = -2
   Insn 241: point = 229, n_alt = 0
   Insn 240: point = 231, n_alt = 0
   Insn 239: point = 232, n_alt = 1
	Hard reg 0 is preferable by r343 with profit 1000
   Insn 238: point = 234, n_alt = 0
   Insn 237: point = 236, n_alt = 0
  BB 18
   Insn 234: point = 238, n_alt = 3
   Insn 233: point = 239, n_alt = 0
   Insn 232: point = 241, n_alt = 2
   Insn 231: point = 242, n_alt = 0
   Insn 230: point = 244, n_alt = 0
   Insn 229: point = 246, n_alt = 0
  BB 17
   Insn 227: point = 248, n_alt = -1
   Insn 226: point = 248, n_alt = 0
   Insn 225: point = 249, n_alt = 0
   Insn 224: point = 251, n_alt = 0
   Insn 223: point = 253, n_alt = 0
  BB 16
   Insn 220: point = 255, n_alt = 3
   Insn 219: point = 256, n_alt = 0
   Insn 218: point = 258, n_alt = 2
   Insn 217: point = 259, n_alt = 0
   Insn 216: point = 261, n_alt = 0
   Insn 215: point = 263, n_alt = 0
  BB 15
   Insn 213: point = 265, n_alt = -1
   Insn 212: point = 265, n_alt = 0
   Insn 211: point = 266, n_alt = 0
   Insn 210: point = 268, n_alt = 0
   Insn 209: point = 270, n_alt = 0
  BB 14
   Insn 206: point = 272, n_alt = 3
   Insn 205: point = 273, n_alt = 0
   Insn 204: point = 275, n_alt = 2
   Insn 203: point = 276, n_alt = 0
   Insn 202: point = 278, n_alt = 0
   Insn 201: point = 280, n_alt = 0
  BB 13
   Insn 199: point = 282, n_alt = -1
   Insn 198: point = 282, n_alt = 0
   Insn 197: point = 283, n_alt = 0
   Insn 196: point = 285, n_alt = 0
   Insn 195: point = 287, n_alt = 0
  BB 12
   Insn 193: point = 289, n_alt = -1
   Insn 192: point = 289, n_alt = 0
  BB 8
   Insn 367: point = 290, n_alt = -1
   Insn 167: point = 290, n_alt = 1
  BB 6
   Insn 151: point = 291, n_alt = -1
   Insn 150: point = 291, n_alt = 0
   Insn 149: point = 292, n_alt = -2
   Insn 148: point = 293, n_alt = 0
   Insn 147: point = 293, n_alt = 0
   Insn 146: point = 293, n_alt = 0
   Insn 145: point = 293, n_alt = 0
   Insn 144: point = 293, n_alt = 0
  BB 5
   Insn 141: point = 294, n_alt = 0
   Insn 140: point = 295, n_alt = 0
  BB 4
   Insn 138: point = 297, n_alt = -1
   Insn 137: point = 297, n_alt = 0
   Insn 136: point = 298, n_alt = 0
   Insn 135: point = 300, n_alt = 0
   Insn 134: point = 301, n_alt = 0
   Insn 133: point = 303, n_alt = 0
   Insn 132: point = 304, n_alt = 1
   Insn 131: point = 305, n_alt = 0
   Insn 130: point = 306, n_alt = 1
   Insn 129: point = 307, n_alt = 0
   Insn 128: point = 308, n_alt = -2
   Insn 127: point = 310, n_alt = 0
   Insn 126: point = 312, n_alt = 0
   Insn 125: point = 314, n_alt = 0
   Insn 124: point = 315, n_alt = 1
   Insn 123: point = 316, n_alt = 0
   Insn 122: point = 317, n_alt = 0
   Insn 121: point = 319, n_alt = 0
   Insn 120: point = 320, n_alt = 1
   Insn 119: point = 321, n_alt = 0
   Insn 118: point = 322, n_alt = 0
   Insn 117: point = 324, n_alt = 0
   Insn 116: point = 325, n_alt = 1
   Insn 115: point = 326, n_alt = 0
   Insn 114: point = 327, n_alt = 0
   Insn 113: point = 329, n_alt = 0
   Insn 112: point = 330, n_alt = 1
   Insn 111: point = 331, n_alt = 0
   Insn 110: point = 332, n_alt = 0
   Insn 109: point = 334, n_alt = 0
   Insn 108: point = 335, n_alt = 1
   Insn 107: point = 336, n_alt = 0
   Insn 106: point = 337, n_alt = 0
   Insn 105: point = 339, n_alt = 0
   Insn 104: point = 340, n_alt = 1
   Insn 103: point = 341, n_alt = 0
   Insn 102: point = 342, n_alt = 0
   Insn 101: point = 344, n_alt = 0
   Insn 100: point = 345, n_alt = 1
   Insn 99: point = 346, n_alt = 0
   Insn 98: point = 347, n_alt = 0
   Insn 97: point = 348, n_alt = 1
   Insn 96: point = 349, n_alt = 0
   Insn 95: point = 350, n_alt = 0
   Insn 94: point = 351, n_alt = 1
   Insn 93: point = 352, n_alt = 0
   Insn 92: point = 353, n_alt = 0
   Insn 91: point = 354, n_alt = 1
   Insn 90: point = 355, n_alt = 0
   Insn 89: point = 356, n_alt = 0
   Insn 88: point = 357, n_alt = 1
   Insn 87: point = 358, n_alt = 0
   Insn 86: point = 359, n_alt = 0
   Insn 85: point = 360, n_alt = 1
   Insn 84: point = 361, n_alt = 0
   Insn 83: point = 362, n_alt = 0
   Insn 82: point = 363, n_alt = 1
   Insn 81: point = 364, n_alt = 0
   Insn 80: point = 365, n_alt = 0
   Insn 79: point = 366, n_alt = 1
   Insn 78: point = 367, n_alt = 0
   Insn 77: point = 368, n_alt = 1
   Insn 76: point = 369, n_alt = 0
   Insn 75: point = 370, n_alt = 0
   Insn 74: point = 371, n_alt = 1
   Insn 73: point = 372, n_alt = 0
   Insn 72: point = 373, n_alt = 0
   Insn 71: point = 374, n_alt = 1
   Insn 70: point = 375, n_alt = 0
   Insn 69: point = 376, n_alt = 1
   Insn 68: point = 377, n_alt = 0
   Insn 67: point = 378, n_alt = 3
   Insn 66: point = 380, n_alt = 0
   Insn 65: point = 381, n_alt = 1
   Insn 64: point = 382, n_alt = 0
   Insn 63: point = 383, n_alt = 1
   Insn 62: point = 384, n_alt = 0
   Insn 61: point = 385, n_alt = 0
   Insn 60: point = 387, n_alt = 0
   Insn 59: point = 388, n_alt = 1
   Insn 58: point = 389, n_alt = 0
   Insn 57: point = 390, n_alt = 0
   Insn 56: point = 392, n_alt = 0
   Insn 55: point = 393, n_alt = 1
   Insn 54: point = 394, n_alt = 0
   Insn 53: point = 395, n_alt = 1
   Insn 52: point = 396, n_alt = 0
   Insn 51: point = 397, n_alt = 0
   Insn 50: point = 399, n_alt = 0
   Insn 49: point = 400, n_alt = 1
   Insn 48: point = 401, n_alt = 0
   Insn 47: point = 402, n_alt = 1
   Insn 46: point = 403, n_alt = 0
   Insn 45: point = 404, n_alt = 1
   Insn 44: point = 405, n_alt = 0
   Insn 43: point = 406, n_alt = 1
   Insn 42: point = 407, n_alt = 0
   Insn 41: point = 408, n_alt = 1
   Insn 40: point = 409, n_alt = 0
   Insn 39: point = 410, n_alt = 0
   Insn 38: point = 412, n_alt = 0
   Insn 37: point = 413, n_alt = 1
   Insn 36: point = 414, n_alt = 0
   Insn 35: point = 415, n_alt = 0
   Insn 34: point = 417, n_alt = 0
   Insn 33: point = 419, n_alt = 0
   Insn 32: point = 420, n_alt = 1
   Insn 31: point = 421, n_alt = 0
   Insn 30: point = 422, n_alt = 0
   Insn 29: point = 423, n_alt = 1
   Insn 28: point = 424, n_alt = 0
   Insn 27: point = 425, n_alt = 0
   Insn 373: point = 426, n_alt = -2
	Hard reg 0 is preferable by r325 with profit 1000
   Insn 372: point = 428, n_alt = -2
	Hard reg 3 is preferable by r324 with profit 1000
   Insn 371: point = 430, n_alt = -2
	Hard reg 1 is preferable by r323 with profit 1000
   Insn 26: point = 432, n_alt = 0
   Insn 25: point = 433, n_alt = -2
   Insn 24: point = 435, n_alt = -2
   Insn 23: point = 437, n_alt = 0
   Insn 22: point = 438, n_alt = 0
   Insn 21: point = 440, n_alt = 0
   Insn 20: point = 441, n_alt = 1
   Insn 19: point = 442, n_alt = 0
   Insn 18: point = 443, n_alt = 0
   Insn 17: point = 444, n_alt = 0
  BB 2
   Insn 10: point = 446, n_alt = -1
   Insn 9: point = 446, n_alt = 1
   Insn 8: point = 446, n_alt = 1
   Insn 7: point = 447, n_alt = -2
   Insn 6: point = 448, n_alt = 0
   Insn 5: point = 448, n_alt = -2
   Insn 369: point = 448, n_alt = 0
  BB 11
   Insn 186: point = 449, n_alt = 0
  BB 10
   Insn 183: point = 450, n_alt = 3
   Insn 182: point = 451, n_alt = 0
   Insn 181: point = 452, n_alt = 3
   Insn 180: point = 454, n_alt = 2
   Insn 179: point = 456, n_alt = 0
  BB 9
   Insn 177: point = 458, n_alt = -1
   Insn 176: point = 458, n_alt = 1
   Insn 175: point = 458, n_alt = 1
   Insn 174: point = 459, n_alt = 0
   Insn 173: point = 461, n_alt = 0
   Insn 172: point = 463, n_alt = 0
   Insn 171: point = 464, n_alt = 0
 r82: [14..465] [5..11]
 r83: [446..447]
 r84: [434..438]
 r85: [420..422]
 r86: [416..417]
 r87: [413..415]
 r88: [408..410]
 r89: [395..397]
 r90: [388..390]
 r91: [383..385]
 r92: [379..380]
 r93: [376..378]
 r94: [340..342]
 r95: [335..337]
 r96: [330..332]
 r97: [325..327]
 r98: [320..322]
 r99: [315..317]
 r100: [313..314]
 r101: [311..312]
 r102: [309..310]
 r103: [306..308]
 r104: [297..301]
 r105: [297..298]
 r106: [291..292]
 r107: [6..7]
 r108: [453..454]
 r109: [450..452]
 r110: [284..285]
 r111: [282..283]
 r112: [277..278]
 r113: [272..276]
 r114: [274..275]
 r115: [272..273]
 r116: [267..268]
 r117: [265..266]
 r118: [260..261]
 r119: [255..259]
 r120: [257..258]
 r121: [255..256]
 r122: [250..251]
 r123: [248..249]
 r124: [243..244]
 r125: [238..242]
 r126: [240..241]
 r127: [238..239]
 r128: [233..234]
 r130: [228..229]
 r131: [226..227]
 r132: [224..225]
 r133: [219..223]
 r134: [127..218]
 r135: [214..215]
 r136: [212..213]
 r137: [210..211]
 r138: [208..209]
 r139: [203..207]
 r140: [127..202]
 r141: [198..199]
 r142: [196..197]
 r143: [194..195]
 r144: [192..193]
 r145: [187..191]
 r146: [127..186]
 r147: [182..183]
 r148: [180..181]
 r149: [178..179]
 r150: [176..177]
 r151: [171..175]
 r153: [164..165]
 r154: [162..163]
 r155: [160..161]
 r156: [158..159]
 r157: [153..157]
 r159: [146..147]
 r160: [144..145]
 r161: [142..143]
 r162: [140..141]
 r163: [135..139]
 r164: [127..134]
 r165: [123..124]
 r167: [118..119]
 r168: [116..117]
 r169: [114..115]
 r170: [109..113]
 r171: [17..108]
 r172: [104..105]
 r173: [102..103]
 r174: [100..101]
 r175: [98..99]
 r176: [93..97]
 r177: [17..92]
 r178: [88..89]
 r179: [86..87]
 r180: [84..85]
 r181: [82..83]
 r182: [77..81]
 r183: [17..76]
 r184: [72..73]
 r185: [70..71]
 r186: [68..69]
 r187: [66..67]
 r188: [61..65]
 r190: [54..55]
 r191: [52..53]
 r192: [50..51]
 r193: [48..49]
 r194: [43..47]
 r196: [36..37]
 r197: [34..35]
 r198: [32..33]
 r199: [30..31]
 r200: [25..29]
 r201: [17..24]
 r202: [12..13] [2..4]
 r203: [0..1]
 r204: [441..444]
 r205: [441..443]
 r206: [441..442]
 r207: [439..440]
 r208: [436..437]
 r209: [431..435]
 r210: [429..433]
 r211: [427..432]
 r212: [423..424]
 r213: [420..421]
 r214: [418..419]
 r215: [413..414]
 r216: [411..412]
 r217: [408..409]
 r218: [406..407]
 r219: [404..405]
 r220: [402..403]
 r221: [400..401]
 r222: [398..399]
 r223: [395..396]
 r224: [393..394]
 r225: [391..392]
 r226: [388..389]
 r227: [386..387]
 r228: [383..384]
 r229: [381..382]
 r230: [376..377]
 r231: [374..375]
 r232: [371..373]
 r233: [371..372]
 r234: [368..370]
 r235: [368..369]
 r236: [366..367]
 r237: [363..365]
 r238: [363..364]
 r239: [360..362]
 r240: [360..361]
 r241: [357..359]
 r242: [357..358]
 r243: [354..356]
 r244: [354..355]
 r245: [351..353]
 r246: [351..352]
 r247: [348..350]
 r248: [348..349]
 r249: [345..347]
 r250: [345..346]
 r251: [343..344]
 r252: [340..341]
 r253: [338..339]
 r254: [335..336]
 r255: [333..334]
 r256: [330..331]
 r257: [328..329]
 r258: [325..326]
 r259: [323..324]
 r260: [320..321]
 r261: [318..319]
 r262: [315..316]
 r263: [306..307]
 r264: [304..305]
 r265: [302..303]
 r266: [299..300]
 r267: [294..295]
 r268: [8..10]
 r269: [8..9]
 r270: [460..464]
 r271: [460..461]
 r272: [462..463]
 r273: [458..459]
 r274: [455..456]
 r275: [450..451]
 r276: [286..287]
 r277: [279..280]
 r278: [269..270]
 r279: [262..263]
 r280: [252..253]
 r281: [245..246]
 r282: [235..236]
 r283: [230..231]
 r284: [219..220]
 r285: [221..222]
 r286: [216..217]
 r287: [203..204]
 r288: [205..206]
 r289: [200..201]
 r290: [187..188]
 r291: [189..190]
 r292: [184..185]
 r293: [171..172]
 r294: [173..174]
 r295: [166..167]
 r296: [153..154]
 r297: [155..156]
 r298: [148..149]
 r299: [135..136]
 r300: [137..138]
 r301: [125..126]
 r302: [120..121]
 r303: [109..110]
 r304: [111..112]
 r305: [106..107]
 r306: [93..94]
 r307: [95..96]
 r308: [90..91]
 r309: [77..78]
 r310: [79..80]
 r311: [74..75]
 r312: [61..62]
 r313: [63..64]
 r314: [56..57]
 r315: [43..44]
 r316: [45..46]
 r317: [38..39]
 r318: [25..26]
 r319: [27..28]
 r320: [15..16]
 r323: [425..430]
 r324: [425..428]
 r325: [425..426]
 r326: [169..170]
 r327: [127..132]
 r328: [127..130]
 r329: [59..60]
 r330: [17..22]
 r331: [17..20]
 r332: [23..58]
 r334: [133..168]
 r336: [17..18]
 r337: [41..42]
 r338: [127..128]
 r339: [151..152]
 r340: [19..40]
 r341: [21..122]
 r342: [129..150]
 r343: [131..232]
Compressing live ranges: from 466 to 388 - 83%
Ranges after the compression:
 r82: [10..387] [4..7]
 r83: [374..375]
 r84: [366..369]
 r85: [354..355]
 r86: [350..351]
 r87: [348..349]
 r88: [344..345]
 r89: [332..333]
 r90: [326..327]
 r91: [322..323]
 r92: [318..319]
 r93: [316..317]
 r94: [290..291]
 r95: [286..287]
 r96: [282..283]
 r97: [278..279]
 r98: [274..275]
 r99: [270..271]
 r100: [268..269]
 r101: [266..267]
 r102: [264..265]
 r103: [262..263]
 r104: [254..257]
 r105: [254..255]
 r106: [250..251]
 r107: [4..5]
 r108: [378..379]
 r109: [376..377]
 r110: [246..247]
 r111: [244..245]
 r112: [240..241]
 r113: [236..239]
 r114: [238..239]
 r115: [236..237]
 r116: [232..233]
 r117: [230..231]
 r118: [226..227]
 r119: [222..225]
 r120: [224..225]
 r121: [222..223]
 r122: [218..219]
 r123: [216..217]
 r124: [212..213]
 r125: [208..211]
 r126: [210..211]
 r127: [208..209]
 r128: [204..205]
 r130: [200..201]
 r131: [198..199]
 r132: [196..197]
 r133: [192..195]
 r134: [110..191]
 r135: [188..189]
 r136: [186..187]
 r137: [184..185]
 r138: [182..183]
 r139: [178..181]
 r140: [110..177]
 r141: [174..175]
 r142: [172..173]
 r143: [170..171]
 r144: [168..169]
 r145: [164..167]
 r146: [110..163]
 r147: [160..161]
 r148: [158..159]
 r149: [156..157]
 r150: [154..155]
 r151: [150..153]
 r153: [144..145]
 r154: [142..143]
 r155: [140..141]
 r156: [138..139]
 r157: [134..137]
 r159: [128..129]
 r160: [126..127]
 r161: [124..125]
 r162: [122..123]
 r163: [118..121]
 r164: [110..117]
 r165: [106..107]
 r167: [102..103]
 r168: [100..101]
 r169: [98..99]
 r170: [94..97]
 r171: [12..93]
 r172: [90..91]
 r173: [88..89]
 r174: [86..87]
 r175: [84..85]
 r176: [80..83]
 r177: [12..79]
 r178: [76..77]
 r179: [74..75]
 r180: [72..73]
 r181: [70..71]
 r182: [66..69]
 r183: [12..65]
 r184: [62..63]
 r185: [60..61]
 r186: [58..59]
 r187: [56..57]
 r188: [52..55]
 r190: [46..47]
 r191: [44..45]
 r192: [42..43]
 r193: [40..41]
 r194: [36..39]
 r196: [30..31]
 r197: [28..29]
 r198: [26..27]
 r199: [24..25]
 r200: [20..23]
 r201: [12..19]
 r202: [8..9] [2..3]
 r203: [0..1]
 r204: [372..373]
 r205: [372..373]
 r206: [372..373]
 r207: [370..371]
 r208: [368..369]
 r209: [364..367]
 r210: [362..365]
 r211: [360..365]
 r212: [356..357]
 r213: [354..355]
 r214: [352..353]
 r215: [348..349]
 r216: [346..347]
 r217: [344..345]
 r218: [342..343]
 r219: [340..341]
 r220: [338..339]
 r221: [336..337]
 r222: [334..335]
 r223: [332..333]
 r224: [330..331]
 r225: [328..329]
 r226: [326..327]
 r227: [324..325]
 r228: [322..323]
 r229: [320..321]
 r230: [316..317]
 r231: [314..315]
 r232: [312..313]
 r233: [312..313]
 r234: [310..311]
 r235: [310..311]
 r236: [308..309]
 r237: [306..307]
 r238: [306..307]
 r239: [304..305]
 r240: [304..305]
 r241: [302..303]
 r242: [302..303]
 r243: [300..301]
 r244: [300..301]
 r245: [298..299]
 r246: [298..299]
 r247: [296..297]
 r248: [296..297]
 r249: [294..295]
 r250: [294..295]
 r251: [292..293]
 r252: [290..291]
 r253: [288..289]
 r254: [286..287]
 r255: [284..285]
 r256: [282..283]
 r257: [280..281]
 r258: [278..279]
 r259: [276..277]
 r260: [274..275]
 r261: [272..273]
 r262: [270..271]
 r263: [262..263]
 r264: [260..261]
 r265: [258..259]
 r266: [256..257]
 r267: [252..253]
 r268: [6..7]
 r269: [6..7]
 r270: [384..387]
 r271: [384..385]
 r272: [386..387]
 r273: [382..383]
 r274: [380..381]
 r275: [376..377]
 r276: [248..249]
 r277: [242..243]
 r278: [234..235]
 r279: [228..229]
 r280: [220..221]
 r281: [214..215]
 r282: [206..207]
 r283: [202..203]
 r284: [192..193]
 r285: [194..195]
 r286: [190..191]
 r287: [178..179]
 r288: [180..181]
 r289: [176..177]
 r290: [164..165]
 r291: [166..167]
 r292: [162..163]
 r293: [150..151]
 r294: [152..153]
 r295: [146..147]
 r296: [134..135]
 r297: [136..137]
 r298: [130..131]
 r299: [118..119]
 r300: [120..121]
 r301: [108..109]
 r302: [104..105]
 r303: [94..95]
 r304: [96..97]
 r305: [92..93]
 r306: [80..81]
 r307: [82..83]
 r308: [78..79]
 r309: [66..67]
 r310: [68..69]
 r311: [64..65]
 r312: [52..53]
 r313: [54..55]
 r314: [48..49]
 r315: [36..37]
 r316: [38..39]
 r317: [32..33]
 r318: [20..21]
 r319: [22..23]
 r320: [10..11]
 r323: [358..363]
 r324: [358..361]
 r325: [358..359]
 r326: [148..149]
 r327: [110..115]
 r328: [110..113]
 r329: [50..51]
 r330: [12..17]
 r331: [12..15]
 r332: [18..49]
 r334: [116..147]
 r336: [12..13]
 r337: [34..35]
 r338: [110..111]
 r339: [132..133]
 r340: [14..33]
 r341: [16..105]
 r342: [112..131]
 r343: [114..203]

********** Assignment #2: **********

	 Assigning to 340 (cl=GENERAL_REGS, orig=195, freq=2000, tfirst=337, tfreq=2000)...
	 Assigning to 336 (cl=INDEX_REGS, orig=195, freq=2000, tfirst=337, tfreq=2000)...
	 Trying 1: spill 201(freq=2000)	 Now best 1(cost=0, bad_spills=0, insn_pseudos=1)

	 Trying 3: spill 171(freq=2000) assign 340(cost=-2000)	 Now best 3(cost=-2000, bad_spills=0, insn_pseudos=1)

	 Trying 4: spill 177(freq=2000) assign 340(cost=-2000)
	 Trying 5: spill 183(freq=2000) assign 340(cost=-2000)
      Spill r171(hr=3, freq=2000) for r336
	   Assign 3 to reload r336 (freq=2000)
	Hard reg 3 is preferable by r340 with profit 1000
	Hard reg 3 is preferable by r337 with profit 500
	 Assigning to 337 (cl=GENERAL_REGS, orig=195, freq=2000, tfirst=337, tfreq=2000)...
	   Assign 3 to reload r337 (freq=2000)
	Hard reg 3 is preferable by r340 with profit 2000
	 Assigning to 342 (cl=GENERAL_REGS, orig=158, freq=2000, tfirst=339, tfreq=2000)...
	 Assigning to 338 (cl=INDEX_REGS, orig=158, freq=2000, tfirst=339, tfreq=2000)...
	 Trying 1: spill 164(freq=2000)	 Now best 1(cost=0, bad_spills=0, insn_pseudos=1)

	 Trying 3: spill 134(freq=2000) assign 342(cost=-2000)	 Now best 3(cost=-2000, bad_spills=0, insn_pseudos=1)

	 Trying 4: spill 140(freq=2000) assign 342(cost=-2000)
	 Trying 5: spill 146(freq=2000) assign 342(cost=-2000)
      Spill r134(hr=3, freq=2000) for r338
	   Assign 3 to reload r338 (freq=2000)
	Hard reg 3 is preferable by r342 with profit 1000
	Hard reg 3 is preferable by r339 with profit 500
	 Assigning to 339 (cl=GENERAL_REGS, orig=158, freq=2000, tfirst=339, tfreq=2000)...
	   Assign 3 to reload r339 (freq=2000)
	Hard reg 3 is preferable by r342 with profit 2000
	 Assigning to 341 (cl=GENERAL_REGS, orig=166, freq=2000, tfirst=341, tfreq=2000)...
	 Assigning to 343 (cl=GENERAL_REGS, orig=129, freq=2000, tfirst=343, tfreq=2000)...
  Reassigning non-reload pseudos
	   Assign 3 to inheritance r340 (freq=2000)
	   Assign 3 to inheritance r342 (freq=2000)

********** Undoing inheritance #2: **********

Inherit 2 out of 4 (50.00%)
   Insn after restoring regs:
  379: r331:SI=r166:SI
      REG_DEAD r166:SI
   Insn after restoring regs:
  296: r166:SI=r165:SI
      REG_DEAD r165:SI
   Insn after restoring regs:
  376: r328:SI=r129:SI
      REG_DEAD r129:SI
   Insn after restoring regs:
  239: r129:SI=r128:SI
      REG_DEAD r128:SI

********** Pseudo live ranges #4: **********

  BB 20
   Insn 361: point = 0, n_alt = -1
   Insn 360: point = 0, n_alt = -2
   Insn 356: point = 1, n_alt = -2
  BB 7
   Insn 365: point = 4, n_alt = -1
   Insn 162: point = 4, n_alt = 0
   Insn 161: point = 5, n_alt = 0
   Insn 160: point = 5, n_alt = 0
   Insn 159: point = 5, n_alt = -2
   Insn 158: point = 6, n_alt = 0
   Insn 157: point = 7, n_alt = 0
   Insn 156: point = 7, n_alt = 0
   Insn 155: point = 8, n_alt = 1
   Insn 154: point = 9, n_alt = 0
   Insn 153: point = 10, n_alt = 0
  BB 3
   Insn 363: point = 12, n_alt = -1
   Insn 12: point = 12, n_alt = 0
  BB 19
   Insn 353: point = 13, n_alt = 0
   Insn 352: point = 15, n_alt = 1
   Insn 351: point = 16, n_alt = 0
   Insn 350: point = 17, n_alt = -1
   Insn 384: point = 18, n_alt = -1
	   Creating copy r336<-r340@1000
   Insn 379: point = 20, n_alt = 0
   Insn 378: point = 22, n_alt = -2
	   Creating copy r330<-r332@1000
   Insn 349: point = 24, n_alt = 0
   Insn 348: point = 26, n_alt = -2
   Insn 347: point = 28, n_alt = 0
   Insn 346: point = 29, n_alt = 3
   Insn 345: point = 31, n_alt = 0
   Insn 344: point = 33, n_alt = 0
   Insn 343: point = 35, n_alt = -2
   Insn 342: point = 37, n_alt = 0
   Insn 341: point = 39, n_alt = 0
   Insn 385: point = 40, n_alt = -1
	   Creating copy r337->r340@1000
   Insn 340: point = 42, n_alt = 3
   Insn 339: point = 44, n_alt = -2
   Insn 338: point = 46, n_alt = 0
   Insn 337: point = 47, n_alt = 3
   Insn 336: point = 49, n_alt = 0
   Insn 335: point = 51, n_alt = 0
   Insn 334: point = 53, n_alt = -2
   Insn 333: point = 55, n_alt = 0
   Insn 332: point = 57, n_alt = 0
   Insn 377: point = 58, n_alt = -2
	   Creating copy r329->r332@1000
   Insn 331: point = 60, n_alt = 3
   Insn 330: point = 62, n_alt = -2
   Insn 329: point = 64, n_alt = 0
   Insn 328: point = 65, n_alt = 3
   Insn 327: point = 67, n_alt = 0
   Insn 326: point = 69, n_alt = 0
   Insn 325: point = 71, n_alt = -2
   Insn 324: point = 73, n_alt = 0
   Insn 323: point = 75, n_alt = 0
   Insn 322: point = 76, n_alt = 3
   Insn 321: point = 78, n_alt = -2
   Insn 320: point = 80, n_alt = 0
   Insn 319: point = 81, n_alt = 3
   Insn 318: point = 83, n_alt = 0
   Insn 317: point = 85, n_alt = 0
   Insn 316: point = 87, n_alt = -2
   Insn 315: point = 89, n_alt = 0
   Insn 314: point = 91, n_alt = 0
   Insn 313: point = 92, n_alt = 3
   Insn 312: point = 94, n_alt = -2
   Insn 311: point = 96, n_alt = 0
   Insn 310: point = 97, n_alt = 3
   Insn 309: point = 99, n_alt = 0
   Insn 308: point = 101, n_alt = 0
   Insn 307: point = 103, n_alt = -2
   Insn 306: point = 105, n_alt = 0
   Insn 305: point = 107, n_alt = 0
   Insn 304: point = 108, n_alt = -1
   Insn 303: point = 110, n_alt = -2
   Insn 302: point = 112, n_alt = 0
   Insn 301: point = 113, n_alt = 1
   Insn 300: point = 115, n_alt = 0
   Insn 299: point = 117, n_alt = -2
   Insn 298: point = 119, n_alt = 0
   Insn 297: point = 121, n_alt = 0
   Insn 296: point = 122, n_alt = 1
   Insn 295: point = 124, n_alt = 0
   Insn 294: point = 126, n_alt = 0
   Insn 293: point = 127, n_alt = -1
   Insn 386: point = 128, n_alt = -1
	   Creating copy r338<-r342@1000
   Insn 376: point = 130, n_alt = 0
   Insn 375: point = 132, n_alt = -2
	   Creating copy r327<-r334@1000
   Insn 292: point = 134, n_alt = 0
   Insn 291: point = 136, n_alt = -2
   Insn 290: point = 138, n_alt = 0
   Insn 289: point = 139, n_alt = 3
   Insn 288: point = 141, n_alt = 0
   Insn 287: point = 143, n_alt = 0
   Insn 286: point = 145, n_alt = -2
   Insn 285: point = 147, n_alt = 0
   Insn 284: point = 149, n_alt = 0
   Insn 387: point = 150, n_alt = -1
	   Creating copy r339->r342@1000
   Insn 283: point = 152, n_alt = 3
   Insn 282: point = 154, n_alt = -2
   Insn 281: point = 156, n_alt = 0
   Insn 280: point = 157, n_alt = 3
   Insn 279: point = 159, n_alt = 0
   Insn 278: point = 161, n_alt = 0
   Insn 277: point = 163, n_alt = -2
   Insn 276: point = 165, n_alt = 0
   Insn 275: point = 167, n_alt = 0
   Insn 374: point = 168, n_alt = -2
	   Creating copy r326->r334@1000
   Insn 274: point = 170, n_alt = 3
   Insn 273: point = 172, n_alt = -2
   Insn 272: point = 174, n_alt = 0
   Insn 271: point = 175, n_alt = 3
   Insn 270: point = 177, n_alt = 0
   Insn 269: point = 179, n_alt = 0
   Insn 268: point = 181, n_alt = -2
   Insn 267: point = 183, n_alt = 0
   Insn 266: point = 185, n_alt = 0
   Insn 265: point = 186, n_alt = 3
   Insn 264: point = 188, n_alt = -2
   Insn 263: point = 190, n_alt = 0
   Insn 262: point = 191, n_alt = 3
   Insn 261: point = 193, n_alt = 0
   Insn 260: point = 195, n_alt = 0
   Insn 259: point = 197, n_alt = -2
   Insn 258: point = 199, n_alt = 0
   Insn 257: point = 201, n_alt = 0
   Insn 256: point = 202, n_alt = 3
   Insn 255: point = 204, n_alt = -2
   Insn 254: point = 206, n_alt = 0
   Insn 253: point = 207, n_alt = 3
   Insn 252: point = 209, n_alt = 0
   Insn 251: point = 211, n_alt = 0
   Insn 250: point = 213, n_alt = -2
   Insn 249: point = 215, n_alt = 0
   Insn 248: point = 217, n_alt = 0
   Insn 247: point = 218, n_alt = -1
   Insn 246: point = 220, n_alt = -2
   Insn 245: point = 222, n_alt = 0
   Insn 244: point = 223, n_alt = 1
   Insn 243: point = 225, n_alt = 0
   Insn 242: point = 227, n_alt = -2
   Insn 241: point = 229, n_alt = 0
   Insn 240: point = 231, n_alt = 0
   Insn 239: point = 232, n_alt = 1
   Insn 238: point = 234, n_alt = 0
   Insn 237: point = 236, n_alt = 0
  BB 18
   Insn 234: point = 238, n_alt = 3
   Insn 233: point = 239, n_alt = 0
   Insn 232: point = 241, n_alt = 2
   Insn 231: point = 242, n_alt = 0
   Insn 230: point = 244, n_alt = 0
   Insn 229: point = 246, n_alt = 0
  BB 17
   Insn 227: point = 248, n_alt = -1
   Insn 226: point = 248, n_alt = 0
   Insn 225: point = 249, n_alt = 0
   Insn 224: point = 251, n_alt = 0
   Insn 223: point = 253, n_alt = 0
  BB 16
   Insn 220: point = 255, n_alt = 3
   Insn 219: point = 256, n_alt = 0
   Insn 218: point = 258, n_alt = 2
   Insn 217: point = 259, n_alt = 0
   Insn 216: point = 261, n_alt = 0
   Insn 215: point = 263, n_alt = 0
  BB 15
   Insn 213: point = 265, n_alt = -1
   Insn 212: point = 265, n_alt = 0
   Insn 211: point = 266, n_alt = 0
   Insn 210: point = 268, n_alt = 0
   Insn 209: point = 270, n_alt = 0
  BB 14
   Insn 206: point = 272, n_alt = 3
   Insn 205: point = 273, n_alt = 0
   Insn 204: point = 275, n_alt = 2
   Insn 203: point = 276, n_alt = 0
   Insn 202: point = 278, n_alt = 0
   Insn 201: point = 280, n_alt = 0
  BB 13
   Insn 199: point = 282, n_alt = -1
   Insn 198: point = 282, n_alt = 0
   Insn 197: point = 283, n_alt = 0
   Insn 196: point = 285, n_alt = 0
   Insn 195: point = 287, n_alt = 0
  BB 12
   Insn 193: point = 289, n_alt = -1
   Insn 192: point = 289, n_alt = 0
  BB 8
   Insn 367: point = 290, n_alt = -1
   Insn 167: point = 290, n_alt = 1
  BB 6
   Insn 151: point = 291, n_alt = -1
   Insn 150: point = 291, n_alt = 0
   Insn 149: point = 292, n_alt = -2
   Insn 148: point = 293, n_alt = 0
   Insn 147: point = 293, n_alt = 0
   Insn 146: point = 293, n_alt = 0
   Insn 145: point = 293, n_alt = 0
   Insn 144: point = 293, n_alt = 0
  BB 5
   Insn 141: point = 294, n_alt = 0
   Insn 140: point = 295, n_alt = 0
  BB 4
   Insn 138: point = 297, n_alt = -1
   Insn 137: point = 297, n_alt = 0
   Insn 136: point = 298, n_alt = 0
   Insn 135: point = 300, n_alt = 0
   Insn 134: point = 301, n_alt = 0
   Insn 133: point = 303, n_alt = 0
   Insn 132: point = 304, n_alt = 1
   Insn 131: point = 305, n_alt = 0
   Insn 130: point = 306, n_alt = 1
   Insn 129: point = 307, n_alt = 0
   Insn 128: point = 308, n_alt = -2
   Insn 127: point = 310, n_alt = 0
   Insn 126: point = 312, n_alt = 0
   Insn 125: point = 314, n_alt = 0
   Insn 124: point = 315, n_alt = 1
   Insn 123: point = 316, n_alt = 0
   Insn 122: point = 317, n_alt = 0
   Insn 121: point = 319, n_alt = 0
   Insn 120: point = 320, n_alt = 1
   Insn 119: point = 321, n_alt = 0
   Insn 118: point = 322, n_alt = 0
   Insn 117: point = 324, n_alt = 0
   Insn 116: point = 325, n_alt = 1
   Insn 115: point = 326, n_alt = 0
   Insn 114: point = 327, n_alt = 0
   Insn 113: point = 329, n_alt = 0
   Insn 112: point = 330, n_alt = 1
   Insn 111: point = 331, n_alt = 0
   Insn 110: point = 332, n_alt = 0
   Insn 109: point = 334, n_alt = 0
   Insn 108: point = 335, n_alt = 1
   Insn 107: point = 336, n_alt = 0
   Insn 106: point = 337, n_alt = 0
   Insn 105: point = 339, n_alt = 0
   Insn 104: point = 340, n_alt = 1
   Insn 103: point = 341, n_alt = 0
   Insn 102: point = 342, n_alt = 0
   Insn 101: point = 344, n_alt = 0
   Insn 100: point = 345, n_alt = 1
   Insn 99: point = 346, n_alt = 0
   Insn 98: point = 347, n_alt = 0
   Insn 97: point = 348, n_alt = 1
   Insn 96: point = 349, n_alt = 0
   Insn 95: point = 350, n_alt = 0
   Insn 94: point = 351, n_alt = 1
   Insn 93: point = 352, n_alt = 0
   Insn 92: point = 353, n_alt = 0
   Insn 91: point = 354, n_alt = 1
   Insn 90: point = 355, n_alt = 0
   Insn 89: point = 356, n_alt = 0
   Insn 88: point = 357, n_alt = 1
   Insn 87: point = 358, n_alt = 0
   Insn 86: point = 359, n_alt = 0
   Insn 85: point = 360, n_alt = 1
   Insn 84: point = 361, n_alt = 0
   Insn 83: point = 362, n_alt = 0
   Insn 82: point = 363, n_alt = 1
   Insn 81: point = 364, n_alt = 0
   Insn 80: point = 365, n_alt = 0
   Insn 79: point = 366, n_alt = 1
   Insn 78: point = 367, n_alt = 0
   Insn 77: point = 368, n_alt = 1
   Insn 76: point = 369, n_alt = 0
   Insn 75: point = 370, n_alt = 0
   Insn 74: point = 371, n_alt = 1
   Insn 73: point = 372, n_alt = 0
   Insn 72: point = 373, n_alt = 0
   Insn 71: point = 374, n_alt = 1
   Insn 70: point = 375, n_alt = 0
   Insn 69: point = 376, n_alt = 1
   Insn 68: point = 377, n_alt = 0
   Insn 67: point = 378, n_alt = 3
   Insn 66: point = 380, n_alt = 0
   Insn 65: point = 381, n_alt = 1
   Insn 64: point = 382, n_alt = 0
   Insn 63: point = 383, n_alt = 1
   Insn 62: point = 384, n_alt = 0
   Insn 61: point = 385, n_alt = 0
   Insn 60: point = 387, n_alt = 0
   Insn 59: point = 388, n_alt = 1
   Insn 58: point = 389, n_alt = 0
   Insn 57: point = 390, n_alt = 0
   Insn 56: point = 392, n_alt = 0
   Insn 55: point = 393, n_alt = 1
   Insn 54: point = 394, n_alt = 0
   Insn 53: point = 395, n_alt = 1
   Insn 52: point = 396, n_alt = 0
   Insn 51: point = 397, n_alt = 0
   Insn 50: point = 399, n_alt = 0
   Insn 49: point = 400, n_alt = 1
   Insn 48: point = 401, n_alt = 0
   Insn 47: point = 402, n_alt = 1
   Insn 46: point = 403, n_alt = 0
   Insn 45: point = 404, n_alt = 1
   Insn 44: point = 405, n_alt = 0
   Insn 43: point = 406, n_alt = 1
   Insn 42: point = 407, n_alt = 0
   Insn 41: point = 408, n_alt = 1
   Insn 40: point = 409, n_alt = 0
   Insn 39: point = 410, n_alt = 0
   Insn 38: point = 412, n_alt = 0
   Insn 37: point = 413, n_alt = 1
   Insn 36: point = 414, n_alt = 0
   Insn 35: point = 415, n_alt = 0
   Insn 34: point = 417, n_alt = 0
   Insn 33: point = 419, n_alt = 0
   Insn 32: point = 420, n_alt = 1
   Insn 31: point = 421, n_alt = 0
   Insn 30: point = 422, n_alt = 0
   Insn 29: point = 423, n_alt = 1
   Insn 28: point = 424, n_alt = 0
   Insn 27: point = 425, n_alt = 0
   Insn 373: point = 426, n_alt = -2
	Hard reg 0 is preferable by r325 with profit 1000
   Insn 372: point = 428, n_alt = -2
	Hard reg 3 is preferable by r324 with profit 1000
   Insn 371: point = 430, n_alt = -2
	Hard reg 1 is preferable by r323 with profit 1000
   Insn 26: point = 432, n_alt = 0
   Insn 25: point = 433, n_alt = -2
   Insn 24: point = 435, n_alt = -2
   Insn 23: point = 437, n_alt = 0
   Insn 22: point = 438, n_alt = 0
   Insn 21: point = 440, n_alt = 0
   Insn 20: point = 441, n_alt = 1
   Insn 19: point = 442, n_alt = 0
   Insn 18: point = 443, n_alt = 0
   Insn 17: point = 444, n_alt = 0
  BB 2
   Insn 10: point = 446, n_alt = -1
   Insn 9: point = 446, n_alt = 1
   Insn 8: point = 446, n_alt = 1
   Insn 7: point = 447, n_alt = -2
   Insn 6: point = 448, n_alt = 0
   Insn 5: point = 448, n_alt = -2
   Insn 369: point = 448, n_alt = 0
  BB 11
   Insn 186: point = 449, n_alt = 0
  BB 10
   Insn 183: point = 450, n_alt = 3
   Insn 182: point = 451, n_alt = 0
   Insn 181: point = 452, n_alt = 3
   Insn 180: point = 454, n_alt = 2
   Insn 179: point = 456, n_alt = 0
  BB 9
   Insn 177: point = 458, n_alt = -1
   Insn 176: point = 458, n_alt = 1
   Insn 175: point = 458, n_alt = 1
   Insn 174: point = 459, n_alt = 0
   Insn 173: point = 461, n_alt = 0
   Insn 172: point = 463, n_alt = 0
   Insn 171: point = 464, n_alt = 0
 r82: [14..465] [5..11]
 r83: [446..447]
 r84: [434..438]
 r85: [420..422]
 r86: [416..417]
 r87: [413..415]
 r88: [408..410]
 r89: [395..397]
 r90: [388..390]
 r91: [383..385]
 r92: [379..380]
 r93: [376..378]
 r94: [340..342]
 r95: [335..337]
 r96: [330..332]
 r97: [325..327]
 r98: [320..322]
 r99: [315..317]
 r100: [313..314]
 r101: [311..312]
 r102: [309..310]
 r103: [306..308]
 r104: [297..301]
 r105: [297..298]
 r106: [291..292]
 r107: [6..7]
 r108: [453..454]
 r109: [450..452]
 r110: [284..285]
 r111: [282..283]
 r112: [277..278]
 r113: [272..276]
 r114: [274..275]
 r115: [272..273]
 r116: [267..268]
 r117: [265..266]
 r118: [260..261]
 r119: [255..259]
 r120: [257..258]
 r121: [255..256]
 r122: [250..251]
 r123: [248..249]
 r124: [243..244]
 r125: [238..242]
 r126: [240..241]
 r127: [238..239]
 r128: [233..234]
 r129: [131..232]
 r130: [228..229]
 r131: [226..227]
 r132: [224..225]
 r133: [219..223]
 r134: [127..218]
 r135: [214..215]
 r136: [212..213]
 r137: [210..211]
 r138: [208..209]
 r139: [203..207]
 r140: [127..202]
 r141: [198..199]
 r142: [196..197]
 r143: [194..195]
 r144: [192..193]
 r145: [187..191]
 r146: [127..186]
 r147: [182..183]
 r148: [180..181]
 r149: [178..179]
 r150: [176..177]
 r151: [171..175]
 r153: [164..165]
 r154: [162..163]
 r155: [160..161]
 r156: [158..159]
 r157: [153..157]
 r159: [146..147]
 r160: [144..145]
 r161: [142..143]
 r162: [140..141]
 r163: [135..139]
 r164: [127..134]
 r165: [123..124]
 r166: [21..122]
 r167: [118..119]
 r168: [116..117]
 r169: [114..115]
 r170: [109..113]
 r171: [17..108]
 r172: [104..105]
 r173: [102..103]
 r174: [100..101]
 r175: [98..99]
 r176: [93..97]
 r177: [17..92]
 r178: [88..89]
 r179: [86..87]
 r180: [84..85]
 r181: [82..83]
 r182: [77..81]
 r183: [17..76]
 r184: [72..73]
 r185: [70..71]
 r186: [68..69]
 r187: [66..67]
 r188: [61..65]
 r190: [54..55]
 r191: [52..53]
 r192: [50..51]
 r193: [48..49]
 r194: [43..47]
 r196: [36..37]
 r197: [34..35]
 r198: [32..33]
 r199: [30..31]
 r200: [25..29]
 r201: [17..24]
 r202: [12..13] [2..4]
 r203: [0..1]
 r204: [441..444]
 r205: [441..443]
 r206: [441..442]
 r207: [439..440]
 r208: [436..437]
 r209: [431..435]
 r210: [429..433]
 r211: [427..432]
 r212: [423..424]
 r213: [420..421]
 r214: [418..419]
 r215: [413..414]
 r216: [411..412]
 r217: [408..409]
 r218: [406..407]
 r219: [404..405]
 r220: [402..403]
 r221: [400..401]
 r222: [398..399]
 r223: [395..396]
 r224: [393..394]
 r225: [391..392]
 r226: [388..389]
 r227: [386..387]
 r228: [383..384]
 r229: [381..382]
 r230: [376..377]
 r231: [374..375]
 r232: [371..373]
 r233: [371..372]
 r234: [368..370]
 r235: [368..369]
 r236: [366..367]
 r237: [363..365]
 r238: [363..364]
 r239: [360..362]
 r240: [360..361]
 r241: [357..359]
 r242: [357..358]
 r243: [354..356]
 r244: [354..355]
 r245: [351..353]
 r246: [351..352]
 r247: [348..350]
 r248: [348..349]
 r249: [345..347]
 r250: [345..346]
 r251: [343..344]
 r252: [340..341]
 r253: [338..339]
 r254: [335..336]
 r255: [333..334]
 r256: [330..331]
 r257: [328..329]
 r258: [325..326]
 r259: [323..324]
 r260: [320..321]
 r261: [318..319]
 r262: [315..316]
 r263: [306..307]
 r264: [304..305]
 r265: [302..303]
 r266: [299..300]
 r267: [294..295]
 r268: [8..10]
 r269: [8..9]
 r270: [460..464]
 r271: [460..461]
 r272: [462..463]
 r273: [458..459]
 r274: [455..456]
 r275: [450..451]
 r276: [286..287]
 r277: [279..280]
 r278: [269..270]
 r279: [262..263]
 r280: [252..253]
 r281: [245..246]
 r282: [235..236]
 r283: [230..231]
 r284: [219..220]
 r285: [221..222]
 r286: [216..217]
 r287: [203..204]
 r288: [205..206]
 r289: [200..201]
 r290: [187..188]
 r291: [189..190]
 r292: [184..185]
 r293: [171..172]
 r294: [173..174]
 r295: [166..167]
 r296: [153..154]
 r297: [155..156]
 r298: [148..149]
 r299: [135..136]
 r300: [137..138]
 r301: [125..126]
 r302: [120..121]
 r303: [109..110]
 r304: [111..112]
 r305: [106..107]
 r306: [93..94]
 r307: [95..96]
 r308: [90..91]
 r309: [77..78]
 r310: [79..80]
 r311: [74..75]
 r312: [61..62]
 r313: [63..64]
 r314: [56..57]
 r315: [43..44]
 r316: [45..46]
 r317: [38..39]
 r318: [25..26]
 r319: [27..28]
 r320: [15..16]
 r323: [425..430]
 r324: [425..428]
 r325: [425..426]
 r326: [169..170]
 r327: [127..132]
 r328: [127..130]
 r329: [59..60]
 r330: [17..22]
 r331: [17..20]
 r332: [23..58]
 r334: [133..168]
 r336: [17..18]
 r337: [41..42]
 r338: [127..128]
 r339: [151..152]
 r340: [19..40]
 r342: [129..150]
Compressing live ranges: from 466 to 388 - 83%
Ranges after the compression:
 r82: [10..387] [4..7]
 r83: [374..375]
 r84: [366..369]
 r85: [354..355]
 r86: [350..351]
 r87: [348..349]
 r88: [344..345]
 r89: [332..333]
 r90: [326..327]
 r91: [322..323]
 r92: [318..319]
 r93: [316..317]
 r94: [290..291]
 r95: [286..287]
 r96: [282..283]
 r97: [278..279]
 r98: [274..275]
 r99: [270..271]
 r100: [268..269]
 r101: [266..267]
 r102: [264..265]
 r103: [262..263]
 r104: [254..257]
 r105: [254..255]
 r106: [250..251]
 r107: [4..5]
 r108: [378..379]
 r109: [376..377]
 r110: [246..247]
 r111: [244..245]
 r112: [240..241]
 r113: [236..239]
 r114: [238..239]
 r115: [236..237]
 r116: [232..233]
 r117: [230..231]
 r118: [226..227]
 r119: [222..225]
 r120: [224..225]
 r121: [222..223]
 r122: [218..219]
 r123: [216..217]
 r124: [212..213]
 r125: [208..211]
 r126: [210..211]
 r127: [208..209]
 r128: [204..205]
 r129: [114..203]
 r130: [200..201]
 r131: [198..199]
 r132: [196..197]
 r133: [192..195]
 r134: [110..191]
 r135: [188..189]
 r136: [186..187]
 r137: [184..185]
 r138: [182..183]
 r139: [178..181]
 r140: [110..177]
 r141: [174..175]
 r142: [172..173]
 r143: [170..171]
 r144: [168..169]
 r145: [164..167]
 r146: [110..163]
 r147: [160..161]
 r148: [158..159]
 r149: [156..157]
 r150: [154..155]
 r151: [150..153]
 r153: [144..145]
 r154: [142..143]
 r155: [140..141]
 r156: [138..139]
 r157: [134..137]
 r159: [128..129]
 r160: [126..127]
 r161: [124..125]
 r162: [122..123]
 r163: [118..121]
 r164: [110..117]
 r165: [106..107]
 r166: [16..105]
 r167: [102..103]
 r168: [100..101]
 r169: [98..99]
 r170: [94..97]
 r171: [12..93]
 r172: [90..91]
 r173: [88..89]
 r174: [86..87]
 r175: [84..85]
 r176: [80..83]
 r177: [12..79]
 r178: [76..77]
 r179: [74..75]
 r180: [72..73]
 r181: [70..71]
 r182: [66..69]
 r183: [12..65]
 r184: [62..63]
 r185: [60..61]
 r186: [58..59]
 r187: [56..57]
 r188: [52..55]
 r190: [46..47]
 r191: [44..45]
 r192: [42..43]
 r193: [40..41]
 r194: [36..39]
 r196: [30..31]
 r197: [28..29]
 r198: [26..27]
 r199: [24..25]
 r200: [20..23]
 r201: [12..19]
 r202: [8..9] [2..3]
 r203: [0..1]
 r204: [372..373]
 r205: [372..373]
 r206: [372..373]
 r207: [370..371]
 r208: [368..369]
 r209: [364..367]
 r210: [362..365]
 r211: [360..365]
 r212: [356..357]
 r213: [354..355]
 r214: [352..353]
 r215: [348..349]
 r216: [346..347]
 r217: [344..345]
 r218: [342..343]
 r219: [340..341]
 r220: [338..339]
 r221: [336..337]
 r222: [334..335]
 r223: [332..333]
 r224: [330..331]
 r225: [328..329]
 r226: [326..327]
 r227: [324..325]
 r228: [322..323]
 r229: [320..321]
 r230: [316..317]
 r231: [314..315]
 r232: [312..313]
 r233: [312..313]
 r234: [310..311]
 r235: [310..311]
 r236: [308..309]
 r237: [306..307]
 r238: [306..307]
 r239: [304..305]
 r240: [304..305]
 r241: [302..303]
 r242: [302..303]
 r243: [300..301]
 r244: [300..301]
 r245: [298..299]
 r246: [298..299]
 r247: [296..297]
 r248: [296..297]
 r249: [294..295]
 r250: [294..295]
 r251: [292..293]
 r252: [290..291]
 r253: [288..289]
 r254: [286..287]
 r255: [284..285]
 r256: [282..283]
 r257: [280..281]
 r258: [278..279]
 r259: [276..277]
 r260: [274..275]
 r261: [272..273]
 r262: [270..271]
 r263: [262..263]
 r264: [260..261]
 r265: [258..259]
 r266: [256..257]
 r267: [252..253]
 r268: [6..7]
 r269: [6..7]
 r270: [384..387]
 r271: [384..385]
 r272: [386..387]
 r273: [382..383]
 r274: [380..381]
 r275: [376..377]
 r276: [248..249]
 r277: [242..243]
 r278: [234..235]
 r279: [228..229]
 r280: [220..221]
 r281: [214..215]
 r282: [206..207]
 r283: [202..203]
 r284: [192..193]
 r285: [194..195]
 r286: [190..191]
 r287: [178..179]
 r288: [180..181]
 r289: [176..177]
 r290: [164..165]
 r291: [166..167]
 r292: [162..163]
 r293: [150..151]
 r294: [152..153]
 r295: [146..147]
 r296: [134..135]
 r297: [136..137]
 r298: [130..131]
 r299: [118..119]
 r300: [120..121]
 r301: [108..109]
 r302: [104..105]
 r303: [94..95]
 r304: [96..97]
 r305: [92..93]
 r306: [80..81]
 r307: [82..83]
 r308: [78..79]
 r309: [66..67]
 r310: [68..69]
 r311: [64..65]
 r312: [52..53]
 r313: [54..55]
 r314: [48..49]
 r315: [36..37]
 r316: [38..39]
 r317: [32..33]
 r318: [20..21]
 r319: [22..23]
 r320: [10..11]
 r323: [358..363]
 r324: [358..361]
 r325: [358..359]
 r326: [148..149]
 r327: [110..115]
 r328: [110..113]
 r329: [50..51]
 r330: [12..17]
 r331: [12..15]
 r332: [18..49]
 r334: [116..147]
 r336: [12..13]
 r337: [34..35]
 r338: [110..111]
 r339: [132..133]
 r340: [14..33]
 r342: [112..131]

********** Pseudos coalescing #2: **********


********** Local #3: **********

	   Spilling non-eliminable hard regs: 7
      Creating newreg=344 from oldreg=171, assigning class GENERAL_REGS to address r344
	   Change to class INDEX_REGS for r344
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 350:  (0) a  (1) m  (2) m  (3) m  (4) m  (5) m  (6) m
  350: {asm_operands;clobber flags:CC;}
      REG_DEAD r336:SI
      REG_DEAD r330:SI
      REG_DEAD r331:SI
      REG_DEAD r201:SI
      REG_DEAD r183:SI
      REG_DEAD r177:SI
      REG_DEAD r171:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  392: r344:SI=r171:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 392:  (0) =r  (1) g {*movsi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=20,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=0,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            alt=1,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 304:  (0) r  (1) r  (2) le {*addsi_1}
      Creating newreg=345 from oldreg=171, assigning class GENERAL_REGS to r345
  304: {r345:SI=r170:SI+r303:SI;clobber flags:CC;}
      REG_DEAD r303:SI
      REG_DEAD r170:SI
      REG_UNUSED flags:CC
    Inserting insn reload after:
  393: r171:SI=r345:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 393:  (0) m  (1) re {*movsi_internal}
      Creating newreg=346 from oldreg=134, assigning class GENERAL_REGS to address r346
	   Change to class INDEX_REGS for r346
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 293:  (0) a  (1) m  (2) m  (3) m  (4) m  (5) m  (6) m
  293: {asm_operands;clobber flags:CC;}
      REG_DEAD r338:SI
      REG_DEAD r327:SI
      REG_DEAD r328:SI
      REG_DEAD r164:SI
      REG_DEAD r146:SI
      REG_DEAD r140:SI
      REG_DEAD r134:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  394: r346:SI=r134:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 394:  (0) =r  (1) g {*movsi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=20,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=0,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            alt=1,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 247:  (0) r  (1) r  (2) le {*addsi_1}
      Creating newreg=347 from oldreg=134, assigning class GENERAL_REGS to r347
  247: {r347:SI=r133:SI+r284:SI;clobber flags:CC;}
      REG_DEAD r284:SI
      REG_DEAD r133:SI
      REG_UNUSED flags:CC
    Inserting insn reload after:
  395: r134:SI=r347:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 395:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #5: **********

  BB 20
   Insn 361: point = 0, n_alt = -1
   Insn 360: point = 0, n_alt = -2
   Insn 356: point = 1, n_alt = -2
  BB 7
   Insn 365: point = 4, n_alt = -1
   Insn 162: point = 4, n_alt = 0
   Insn 161: point = 5, n_alt = 0
   Insn 160: point = 5, n_alt = 0
   Insn 159: point = 5, n_alt = -2
   Insn 158: point = 6, n_alt = 0
   Insn 157: point = 7, n_alt = 0
   Insn 156: point = 7, n_alt = 0
   Insn 155: point = 8, n_alt = 1
   Insn 154: point = 9, n_alt = 0
   Insn 153: point = 10, n_alt = 0
  BB 3
   Insn 363: point = 12, n_alt = -1
   Insn 12: point = 12, n_alt = 0
  BB 19
   Insn 353: point = 13, n_alt = 0
   Insn 352: point = 15, n_alt = 1
   Insn 351: point = 16, n_alt = 0
   Insn 350: point = 17, n_alt = 0
   Insn 392: point = 18, n_alt = 0
   Insn 384: point = 20, n_alt = -2
	   Creating copy r336<-r340@1000
   Insn 379: point = 22, n_alt = 0
   Insn 378: point = 24, n_alt = -2
	   Creating copy r330<-r332@1000
   Insn 349: point = 26, n_alt = 0
   Insn 348: point = 28, n_alt = -2
   Insn 347: point = 30, n_alt = 0
   Insn 346: point = 31, n_alt = 3
   Insn 345: point = 33, n_alt = 0
   Insn 344: point = 35, n_alt = 0
   Insn 343: point = 37, n_alt = -2
   Insn 342: point = 39, n_alt = 0
   Insn 341: point = 41, n_alt = 0
   Insn 385: point = 42, n_alt = -2
	   Creating copy r337->r340@1000
   Insn 340: point = 44, n_alt = 3
   Insn 339: point = 46, n_alt = -2
   Insn 338: point = 48, n_alt = 0
   Insn 337: point = 49, n_alt = 3
   Insn 336: point = 51, n_alt = 0
   Insn 335: point = 53, n_alt = 0
   Insn 334: point = 55, n_alt = -2
   Insn 333: point = 57, n_alt = 0
   Insn 332: point = 59, n_alt = 0
   Insn 377: point = 60, n_alt = -2
	   Creating copy r329->r332@1000
   Insn 331: point = 62, n_alt = 3
   Insn 330: point = 64, n_alt = -2
   Insn 329: point = 66, n_alt = 0
   Insn 328: point = 67, n_alt = 3
   Insn 327: point = 69, n_alt = 0
   Insn 326: point = 71, n_alt = 0
   Insn 325: point = 73, n_alt = -2
   Insn 324: point = 75, n_alt = 0
   Insn 323: point = 77, n_alt = 0
   Insn 322: point = 78, n_alt = 3
   Insn 321: point = 80, n_alt = -2
   Insn 320: point = 82, n_alt = 0
   Insn 319: point = 83, n_alt = 3
   Insn 318: point = 85, n_alt = 0
   Insn 317: point = 87, n_alt = 0
   Insn 316: point = 89, n_alt = -2
   Insn 315: point = 91, n_alt = 0
   Insn 314: point = 93, n_alt = 0
   Insn 313: point = 94, n_alt = 3
   Insn 312: point = 96, n_alt = -2
   Insn 311: point = 98, n_alt = 0
   Insn 310: point = 99, n_alt = 3
   Insn 309: point = 101, n_alt = 0
   Insn 308: point = 103, n_alt = 0
   Insn 307: point = 105, n_alt = -2
   Insn 306: point = 107, n_alt = 0
   Insn 305: point = 109, n_alt = 0
   Insn 393: point = 110, n_alt = 1
   Insn 304: point = 112, n_alt = 3
   Insn 303: point = 114, n_alt = -2
   Insn 302: point = 116, n_alt = 0
   Insn 301: point = 117, n_alt = 1
   Insn 300: point = 119, n_alt = 0
   Insn 299: point = 121, n_alt = -2
   Insn 298: point = 123, n_alt = 0
   Insn 297: point = 125, n_alt = 0
   Insn 296: point = 126, n_alt = 1
   Insn 295: point = 128, n_alt = 0
   Insn 294: point = 130, n_alt = 0
   Insn 293: point = 131, n_alt = 0
   Insn 394: point = 132, n_alt = 0
   Insn 386: point = 134, n_alt = -2
	   Creating copy r338<-r342@1000
   Insn 376: point = 136, n_alt = 0
   Insn 375: point = 138, n_alt = -2
	   Creating copy r327<-r334@1000
   Insn 292: point = 140, n_alt = 0
   Insn 291: point = 142, n_alt = -2
   Insn 290: point = 144, n_alt = 0
   Insn 289: point = 145, n_alt = 3
   Insn 288: point = 147, n_alt = 0
   Insn 287: point = 149, n_alt = 0
   Insn 286: point = 151, n_alt = -2
   Insn 285: point = 153, n_alt = 0
   Insn 284: point = 155, n_alt = 0
   Insn 387: point = 156, n_alt = -2
	   Creating copy r339->r342@1000
   Insn 283: point = 158, n_alt = 3
   Insn 282: point = 160, n_alt = -2
   Insn 281: point = 162, n_alt = 0
   Insn 280: point = 163, n_alt = 3
   Insn 279: point = 165, n_alt = 0
   Insn 278: point = 167, n_alt = 0
   Insn 277: point = 169, n_alt = -2
   Insn 276: point = 171, n_alt = 0
   Insn 275: point = 173, n_alt = 0
   Insn 374: point = 174, n_alt = -2
	   Creating copy r326->r334@1000
   Insn 274: point = 176, n_alt = 3
   Insn 273: point = 178, n_alt = -2
   Insn 272: point = 180, n_alt = 0
   Insn 271: point = 181, n_alt = 3
   Insn 270: point = 183, n_alt = 0
   Insn 269: point = 185, n_alt = 0
   Insn 268: point = 187, n_alt = -2
   Insn 267: point = 189, n_alt = 0
   Insn 266: point = 191, n_alt = 0
   Insn 265: point = 192, n_alt = 3
   Insn 264: point = 194, n_alt = -2
   Insn 263: point = 196, n_alt = 0
   Insn 262: point = 197, n_alt = 3
   Insn 261: point = 199, n_alt = 0
   Insn 260: point = 201, n_alt = 0
   Insn 259: point = 203, n_alt = -2
   Insn 258: point = 205, n_alt = 0
   Insn 257: point = 207, n_alt = 0
   Insn 256: point = 208, n_alt = 3
   Insn 255: point = 210, n_alt = -2
   Insn 254: point = 212, n_alt = 0
   Insn 253: point = 213, n_alt = 3
   Insn 252: point = 215, n_alt = 0
   Insn 251: point = 217, n_alt = 0
   Insn 250: point = 219, n_alt = -2
   Insn 249: point = 221, n_alt = 0
   Insn 248: point = 223, n_alt = 0
   Insn 395: point = 224, n_alt = 1
   Insn 247: point = 226, n_alt = 3
   Insn 246: point = 228, n_alt = -2
   Insn 245: point = 230, n_alt = 0
   Insn 244: point = 231, n_alt = 1
   Insn 243: point = 233, n_alt = 0
   Insn 242: point = 235, n_alt = -2
   Insn 241: point = 237, n_alt = 0
   Insn 240: point = 239, n_alt = 0
   Insn 239: point = 240, n_alt = 1
   Insn 238: point = 242, n_alt = 0
   Insn 237: point = 244, n_alt = 0
  BB 18
   Insn 234: point = 246, n_alt = 3
   Insn 233: point = 247, n_alt = 0
   Insn 232: point = 249, n_alt = 2
   Insn 231: point = 250, n_alt = 0
   Insn 230: point = 252, n_alt = 0
   Insn 229: point = 254, n_alt = 0
  BB 17
   Insn 227: point = 256, n_alt = -1
   Insn 226: point = 256, n_alt = 0
   Insn 225: point = 257, n_alt = 0
   Insn 224: point = 259, n_alt = 0
   Insn 223: point = 261, n_alt = 0
  BB 16
   Insn 220: point = 263, n_alt = 3
   Insn 219: point = 264, n_alt = 0
   Insn 218: point = 266, n_alt = 2
   Insn 217: point = 267, n_alt = 0
   Insn 216: point = 269, n_alt = 0
   Insn 215: point = 271, n_alt = 0
  BB 15
   Insn 213: point = 273, n_alt = -1
   Insn 212: point = 273, n_alt = 0
   Insn 211: point = 274, n_alt = 0
   Insn 210: point = 276, n_alt = 0
   Insn 209: point = 278, n_alt = 0
  BB 14
   Insn 206: point = 280, n_alt = 3
   Insn 205: point = 281, n_alt = 0
   Insn 204: point = 283, n_alt = 2
   Insn 203: point = 284, n_alt = 0
   Insn 202: point = 286, n_alt = 0
   Insn 201: point = 288, n_alt = 0
  BB 13
   Insn 199: point = 290, n_alt = -1
   Insn 198: point = 290, n_alt = 0
   Insn 197: point = 291, n_alt = 0
   Insn 196: point = 293, n_alt = 0
   Insn 195: point = 295, n_alt = 0
  BB 12
   Insn 193: point = 297, n_alt = -1
   Insn 192: point = 297, n_alt = 0
  BB 8
   Insn 367: point = 298, n_alt = -1
   Insn 167: point = 298, n_alt = 1
  BB 6
   Insn 151: point = 299, n_alt = -1
   Insn 150: point = 299, n_alt = 0
   Insn 149: point = 300, n_alt = -2
   Insn 148: point = 301, n_alt = 0
   Insn 147: point = 301, n_alt = 0
   Insn 146: point = 301, n_alt = 0
   Insn 145: point = 301, n_alt = 0
   Insn 144: point = 301, n_alt = 0
  BB 5
   Insn 141: point = 302, n_alt = 0
   Insn 140: point = 303, n_alt = 0
  BB 4
   Insn 138: point = 305, n_alt = -1
   Insn 137: point = 305, n_alt = 0
   Insn 136: point = 306, n_alt = 0
   Insn 135: point = 308, n_alt = 0
   Insn 134: point = 309, n_alt = 0
   Insn 133: point = 311, n_alt = 0
   Insn 132: point = 312, n_alt = 1
   Insn 131: point = 313, n_alt = 0
   Insn 130: point = 314, n_alt = 1
   Insn 129: point = 315, n_alt = 0
   Insn 128: point = 316, n_alt = -2
   Insn 127: point = 318, n_alt = 0
   Insn 126: point = 320, n_alt = 0
   Insn 125: point = 322, n_alt = 0
   Insn 124: point = 323, n_alt = 1
   Insn 123: point = 324, n_alt = 0
   Insn 122: point = 325, n_alt = 0
   Insn 121: point = 327, n_alt = 0
   Insn 120: point = 328, n_alt = 1
   Insn 119: point = 329, n_alt = 0
   Insn 118: point = 330, n_alt = 0
   Insn 117: point = 332, n_alt = 0
   Insn 116: point = 333, n_alt = 1
   Insn 115: point = 334, n_alt = 0
   Insn 114: point = 335, n_alt = 0
   Insn 113: point = 337, n_alt = 0
   Insn 112: point = 338, n_alt = 1
   Insn 111: point = 339, n_alt = 0
   Insn 110: point = 340, n_alt = 0
   Insn 109: point = 342, n_alt = 0
   Insn 108: point = 343, n_alt = 1
   Insn 107: point = 344, n_alt = 0
   Insn 106: point = 345, n_alt = 0
   Insn 105: point = 347, n_alt = 0
   Insn 104: point = 348, n_alt = 1
   Insn 103: point = 349, n_alt = 0
   Insn 102: point = 350, n_alt = 0
   Insn 101: point = 352, n_alt = 0
   Insn 100: point = 353, n_alt = 1
   Insn 99: point = 354, n_alt = 0
   Insn 98: point = 355, n_alt = 0
   Insn 97: point = 356, n_alt = 1
   Insn 96: point = 357, n_alt = 0
   Insn 95: point = 358, n_alt = 0
   Insn 94: point = 359, n_alt = 1
   Insn 93: point = 360, n_alt = 0
   Insn 92: point = 361, n_alt = 0
   Insn 91: point = 362, n_alt = 1
   Insn 90: point = 363, n_alt = 0
   Insn 89: point = 364, n_alt = 0
   Insn 88: point = 365, n_alt = 1
   Insn 87: point = 366, n_alt = 0
   Insn 86: point = 367, n_alt = 0
   Insn 85: point = 368, n_alt = 1
   Insn 84: point = 369, n_alt = 0
   Insn 83: point = 370, n_alt = 0
   Insn 82: point = 371, n_alt = 1
   Insn 81: point = 372, n_alt = 0
   Insn 80: point = 373, n_alt = 0
   Insn 79: point = 374, n_alt = 1
   Insn 78: point = 375, n_alt = 0
   Insn 77: point = 376, n_alt = 1
   Insn 76: point = 377, n_alt = 0
   Insn 75: point = 378, n_alt = 0
   Insn 74: point = 379, n_alt = 1
   Insn 73: point = 380, n_alt = 0
   Insn 72: point = 381, n_alt = 0
   Insn 71: point = 382, n_alt = 1
   Insn 70: point = 383, n_alt = 0
   Insn 69: point = 384, n_alt = 1
   Insn 68: point = 385, n_alt = 0
   Insn 67: point = 386, n_alt = 3
   Insn 66: point = 388, n_alt = 0
   Insn 65: point = 389, n_alt = 1
   Insn 64: point = 390, n_alt = 0
   Insn 63: point = 391, n_alt = 1
   Insn 62: point = 392, n_alt = 0
   Insn 61: point = 393, n_alt = 0
   Insn 60: point = 395, n_alt = 0
   Insn 59: point = 396, n_alt = 1
   Insn 58: point = 397, n_alt = 0
   Insn 57: point = 398, n_alt = 0
   Insn 56: point = 400, n_alt = 0
   Insn 55: point = 401, n_alt = 1
   Insn 54: point = 402, n_alt = 0
   Insn 53: point = 403, n_alt = 1
   Insn 52: point = 404, n_alt = 0
   Insn 51: point = 405, n_alt = 0
   Insn 50: point = 407, n_alt = 0
   Insn 49: point = 408, n_alt = 1
   Insn 48: point = 409, n_alt = 0
   Insn 47: point = 410, n_alt = 1
   Insn 46: point = 411, n_alt = 0
   Insn 45: point = 412, n_alt = 1
   Insn 44: point = 413, n_alt = 0
   Insn 43: point = 414, n_alt = 1
   Insn 42: point = 415, n_alt = 0
   Insn 41: point = 416, n_alt = 1
   Insn 40: point = 417, n_alt = 0
   Insn 39: point = 418, n_alt = 0
   Insn 38: point = 420, n_alt = 0
   Insn 37: point = 421, n_alt = 1
   Insn 36: point = 422, n_alt = 0
   Insn 35: point = 423, n_alt = 0
   Insn 34: point = 425, n_alt = 0
   Insn 33: point = 427, n_alt = 0
   Insn 32: point = 428, n_alt = 1
   Insn 31: point = 429, n_alt = 0
   Insn 30: point = 430, n_alt = 0
   Insn 29: point = 431, n_alt = 1
   Insn 28: point = 432, n_alt = 0
   Insn 27: point = 433, n_alt = 0
   Insn 373: point = 434, n_alt = -2
	Hard reg 0 is preferable by r325 with profit 1000
   Insn 372: point = 436, n_alt = -2
	Hard reg 3 is preferable by r324 with profit 1000
   Insn 371: point = 438, n_alt = -2
	Hard reg 1 is preferable by r323 with profit 1000
   Insn 26: point = 440, n_alt = 0
   Insn 25: point = 441, n_alt = -2
   Insn 24: point = 443, n_alt = -2
   Insn 23: point = 445, n_alt = 0
   Insn 22: point = 446, n_alt = 0
   Insn 21: point = 448, n_alt = 0
   Insn 20: point = 449, n_alt = 1
   Insn 19: point = 450, n_alt = 0
   Insn 18: point = 451, n_alt = 0
   Insn 17: point = 452, n_alt = 0
  BB 2
   Insn 10: point = 454, n_alt = -1
   Insn 9: point = 454, n_alt = 1
   Insn 8: point = 454, n_alt = 1
   Insn 7: point = 455, n_alt = -2
   Insn 6: point = 456, n_alt = 0
   Insn 5: point = 456, n_alt = -2
   Insn 369: point = 456, n_alt = 0
  BB 11
   Insn 186: point = 457, n_alt = 0
  BB 10
   Insn 183: point = 458, n_alt = 3
   Insn 182: point = 459, n_alt = 0
   Insn 181: point = 460, n_alt = 3
   Insn 180: point = 462, n_alt = 2
   Insn 179: point = 464, n_alt = 0
  BB 9
   Insn 177: point = 466, n_alt = -1
   Insn 176: point = 466, n_alt = 1
   Insn 175: point = 466, n_alt = 1
   Insn 174: point = 467, n_alt = 0
   Insn 173: point = 469, n_alt = 0
   Insn 172: point = 471, n_alt = 0
   Insn 171: point = 472, n_alt = 0
 r82: [14..473] [5..11]
 r83: [454..455]
 r84: [442..446]
 r85: [428..430]
 r86: [424..425]
 r87: [421..423]
 r88: [416..418]
 r89: [403..405]
 r90: [396..398]
 r91: [391..393]
 r92: [387..388]
 r93: [384..386]
 r94: [348..350]
 r95: [343..345]
 r96: [338..340]
 r97: [333..335]
 r98: [328..330]
 r99: [323..325]
 r100: [321..322]
 r101: [319..320]
 r102: [317..318]
 r103: [314..316]
 r104: [305..309]
 r105: [305..306]
 r106: [299..300]
 r107: [6..7]
 r108: [461..462]
 r109: [458..460]
 r110: [292..293]
 r111: [290..291]
 r112: [285..286]
 r113: [280..284]
 r114: [282..283]
 r115: [280..281]
 r116: [275..276]
 r117: [273..274]
 r118: [268..269]
 r119: [263..267]
 r120: [265..266]
 r121: [263..264]
 r122: [258..259]
 r123: [256..257]
 r124: [251..252]
 r125: [246..250]
 r126: [248..249]
 r127: [246..247]
 r128: [241..242]
 r129: [137..240]
 r130: [236..237]
 r131: [234..235]
 r132: [232..233]
 r133: [227..231]
 r134: [133..224]
 r135: [220..221]
 r136: [218..219]
 r137: [216..217]
 r138: [214..215]
 r139: [209..213]
 r140: [131..208]
 r141: [204..205]
 r142: [202..203]
 r143: [200..201]
 r144: [198..199]
 r145: [193..197]
 r146: [131..192]
 r147: [188..189]
 r148: [186..187]
 r149: [184..185]
 r150: [182..183]
 r151: [177..181]
 r153: [170..171]
 r154: [168..169]
 r155: [166..167]
 r156: [164..165]
 r157: [159..163]
 r159: [152..153]
 r160: [150..151]
 r161: [148..149]
 r162: [146..147]
 r163: [141..145]
 r164: [131..140]
 r165: [127..128]
 r166: [23..126]
 r167: [122..123]
 r168: [120..121]
 r169: [118..119]
 r170: [113..117]
 r171: [19..110]
 r172: [106..107]
 r173: [104..105]
 r174: [102..103]
 r175: [100..101]
 r176: [95..99]
 r177: [17..94]
 r178: [90..91]
 r179: [88..89]
 r180: [86..87]
 r181: [84..85]
 r182: [79..83]
 r183: [17..78]
 r184: [74..75]
 r185: [72..73]
 r186: [70..71]
 r187: [68..69]
 r188: [63..67]
 r190: [56..57]
 r191: [54..55]
 r192: [52..53]
 r193: [50..51]
 r194: [45..49]
 r196: [38..39]
 r197: [36..37]
 r198: [34..35]
 r199: [32..33]
 r200: [27..31]
 r201: [17..26]
 r202: [12..13] [2..4]
 r203: [0..1]
 r204: [449..452]
 r205: [449..451]
 r206: [449..450]
 r207: [447..448]
 r208: [444..445]
 r209: [439..443]
 r210: [437..441]
 r211: [435..440]
 r212: [431..432]
 r213: [428..429]
 r214: [426..427]
 r215: [421..422]
 r216: [419..420]
 r217: [416..417]
 r218: [414..415]
 r219: [412..413]
 r220: [410..411]
 r221: [408..409]
 r222: [406..407]
 r223: [403..404]
 r224: [401..402]
 r225: [399..400]
 r226: [396..397]
 r227: [394..395]
 r228: [391..392]
 r229: [389..390]
 r230: [384..385]
 r231: [382..383]
 r232: [379..381]
 r233: [379..380]
 r234: [376..378]
 r235: [376..377]
 r236: [374..375]
 r237: [371..373]
 r238: [371..372]
 r239: [368..370]
 r240: [368..369]
 r241: [365..367]
 r242: [365..366]
 r243: [362..364]
 r244: [362..363]
 r245: [359..361]
 r246: [359..360]
 r247: [356..358]
 r248: [356..357]
 r249: [353..355]
 r250: [353..354]
 r251: [351..352]
 r252: [348..349]
 r253: [346..347]
 r254: [343..344]
 r255: [341..342]
 r256: [338..339]
 r257: [336..337]
 r258: [333..334]
 r259: [331..332]
 r260: [328..329]
 r261: [326..327]
 r262: [323..324]
 r263: [314..315]
 r264: [312..313]
 r265: [310..311]
 r266: [307..308]
 r267: [302..303]
 r268: [8..10]
 r269: [8..9]
 r270: [468..472]
 r271: [468..469]
 r272: [470..471]
 r273: [466..467]
 r274: [463..464]
 r275: [458..459]
 r276: [294..295]
 r277: [287..288]
 r278: [277..278]
 r279: [270..271]
 r280: [260..261]
 r281: [253..254]
 r282: [243..244]
 r283: [238..239]
 r284: [227..228]
 r285: [229..230]
 r286: [222..223]
 r287: [209..210]
 r288: [211..212]
 r289: [206..207]
 r290: [193..194]
 r291: [195..196]
 r292: [190..191]
 r293: [177..178]
 r294: [179..180]
 r295: [172..173]
 r296: [159..160]
 r297: [161..162]
 r298: [154..155]
 r299: [141..142]
 r300: [143..144]
 r301: [129..130]
 r302: [124..125]
 r303: [113..114]
 r304: [115..116]
 r305: [108..109]
 r306: [95..96]
 r307: [97..98]
 r308: [92..93]
 r309: [79..80]
 r310: [81..82]
 r311: [76..77]
 r312: [63..64]
 r313: [65..66]
 r314: [58..59]
 r315: [45..46]
 r316: [47..48]
 r317: [40..41]
 r318: [27..28]
 r319: [29..30]
 r320: [15..16]
 r323: [433..438]
 r324: [433..436]
 r325: [433..434]
 r326: [175..176]
 r327: [131..138]
 r328: [131..136]
 r329: [61..62]
 r330: [17..24]
 r331: [17..22]
 r332: [25..60]
 r334: [139..174]
 r336: [17..20]
 r337: [43..44]
 r338: [131..134]
 r339: [157..158]
 r340: [21..42]
 r342: [135..156]
 r344: [17..18]
 r345: [111..112]
 r346: [131..132]
 r347: [225..226]
Compressing live ranges: from 474 to 396 - 83%
Ranges after the compression:
 r82: [10..395] [4..7]
 r83: [382..383]
 r84: [374..377]
 r85: [362..363]
 r86: [358..359]
 r87: [356..357]
 r88: [352..353]
 r89: [340..341]
 r90: [334..335]
 r91: [330..331]
 r92: [326..327]
 r93: [324..325]
 r94: [298..299]
 r95: [294..295]
 r96: [290..291]
 r97: [286..287]
 r98: [282..283]
 r99: [278..279]
 r100: [276..277]
 r101: [274..275]
 r102: [272..273]
 r103: [270..271]
 r104: [262..265]
 r105: [262..263]
 r106: [258..259]
 r107: [4..5]
 r108: [386..387]
 r109: [384..385]
 r110: [254..255]
 r111: [252..253]
 r112: [248..249]
 r113: [244..247]
 r114: [246..247]
 r115: [244..245]
 r116: [240..241]
 r117: [238..239]
 r118: [234..235]
 r119: [230..233]
 r120: [232..233]
 r121: [230..231]
 r122: [226..227]
 r123: [224..225]
 r124: [220..221]
 r125: [216..219]
 r126: [218..219]
 r127: [216..217]
 r128: [212..213]
 r129: [120..211]
 r130: [208..209]
 r131: [206..207]
 r132: [204..205]
 r133: [200..203]
 r134: [116..197]
 r135: [194..195]
 r136: [192..193]
 r137: [190..191]
 r138: [188..189]
 r139: [184..187]
 r140: [114..183]
 r141: [180..181]
 r142: [178..179]
 r143: [176..177]
 r144: [174..175]
 r145: [170..173]
 r146: [114..169]
 r147: [166..167]
 r148: [164..165]
 r149: [162..163]
 r150: [160..161]
 r151: [156..159]
 r153: [150..151]
 r154: [148..149]
 r155: [146..147]
 r156: [144..145]
 r157: [140..143]
 r159: [134..135]
 r160: [132..133]
 r161: [130..131]
 r162: [128..129]
 r163: [124..127]
 r164: [114..123]
 r165: [110..111]
 r166: [18..109]
 r167: [106..107]
 r168: [104..105]
 r169: [102..103]
 r170: [98..101]
 r171: [14..95]
 r172: [92..93]
 r173: [90..91]
 r174: [88..89]
 r175: [86..87]
 r176: [82..85]
 r177: [12..81]
 r178: [78..79]
 r179: [76..77]
 r180: [74..75]
 r181: [72..73]
 r182: [68..71]
 r183: [12..67]
 r184: [64..65]
 r185: [62..63]
 r186: [60..61]
 r187: [58..59]
 r188: [54..57]
 r190: [48..49]
 r191: [46..47]
 r192: [44..45]
 r193: [42..43]
 r194: [38..41]
 r196: [32..33]
 r197: [30..31]
 r198: [28..29]
 r199: [26..27]
 r200: [22..25]
 r201: [12..21]
 r202: [8..9] [2..3]
 r203: [0..1]
 r204: [380..381]
 r205: [380..381]
 r206: [380..381]
 r207: [378..379]
 r208: [376..377]
 r209: [372..375]
 r210: [370..373]
 r211: [368..373]
 r212: [364..365]
 r213: [362..363]
 r214: [360..361]
 r215: [356..357]
 r216: [354..355]
 r217: [352..353]
 r218: [350..351]
 r219: [348..349]
 r220: [346..347]
 r221: [344..345]
 r222: [342..343]
 r223: [340..341]
 r224: [338..339]
 r225: [336..337]
 r226: [334..335]
 r227: [332..333]
 r228: [330..331]
 r229: [328..329]
 r230: [324..325]
 r231: [322..323]
 r232: [320..321]
 r233: [320..321]
 r234: [318..319]
 r235: [318..319]
 r236: [316..317]
 r237: [314..315]
 r238: [314..315]
 r239: [312..313]
 r240: [312..313]
 r241: [310..311]
 r242: [310..311]
 r243: [308..309]
 r244: [308..309]
 r245: [306..307]
 r246: [306..307]
 r247: [304..305]
 r248: [304..305]
 r249: [302..303]
 r250: [302..303]
 r251: [300..301]
 r252: [298..299]
 r253: [296..297]
 r254: [294..295]
 r255: [292..293]
 r256: [290..291]
 r257: [288..289]
 r258: [286..287]
 r259: [284..285]
 r260: [282..283]
 r261: [280..281]
 r262: [278..279]
 r263: [270..271]
 r264: [268..269]
 r265: [266..267]
 r266: [264..265]
 r267: [260..261]
 r268: [6..7]
 r269: [6..7]
 r270: [392..395]
 r271: [392..393]
 r272: [394..395]
 r273: [390..391]
 r274: [388..389]
 r275: [384..385]
 r276: [256..257]
 r277: [250..251]
 r278: [242..243]
 r279: [236..237]
 r280: [228..229]
 r281: [222..223]
 r282: [214..215]
 r283: [210..211]
 r284: [200..201]
 r285: [202..203]
 r286: [196..197]
 r287: [184..185]
 r288: [186..187]
 r289: [182..183]
 r290: [170..171]
 r291: [172..173]
 r292: [168..169]
 r293: [156..157]
 r294: [158..159]
 r295: [152..153]
 r296: [140..141]
 r297: [142..143]
 r298: [136..137]
 r299: [124..125]
 r300: [126..127]
 r301: [112..113]
 r302: [108..109]
 r303: [98..99]
 r304: [100..101]
 r305: [94..95]
 r306: [82..83]
 r307: [84..85]
 r308: [80..81]
 r309: [68..69]
 r310: [70..71]
 r311: [66..67]
 r312: [54..55]
 r313: [56..57]
 r314: [50..51]
 r315: [38..39]
 r316: [40..41]
 r317: [34..35]
 r318: [22..23]
 r319: [24..25]
 r320: [10..11]
 r323: [366..371]
 r324: [366..369]
 r325: [366..367]
 r326: [154..155]
 r327: [114..121]
 r328: [114..119]
 r329: [52..53]
 r330: [12..19]
 r331: [12..17]
 r332: [20..51]
 r334: [122..153]
 r336: [12..15]
 r337: [36..37]
 r338: [114..117]
 r339: [138..139]
 r340: [16..35]
 r342: [118..137]
 r344: [12..13]
 r345: [96..97]
 r346: [114..115]
 r347: [198..199]

********** Assignment #3: **********

	 Assigning to 344 (cl=INDEX_REGS, orig=171, freq=2000, tfirst=344, tfreq=2000)...
	 Trying 1: spill 201(freq=2000)	 Now best 1(cost=0, bad_spills=0, insn_pseudos=1)

	 Trying 4: spill 177(freq=2000)
	 Trying 5: spill 183(freq=2000)
      Spill r201(hr=1, freq=2000) for r344
	   Assign 1 to reload r344 (freq=2000)
	 Assigning to 345 (cl=GENERAL_REGS, orig=171, freq=2000, tfirst=345, tfreq=2000)...
	   Assign 0 to reload r345 (freq=2000)
	 Assigning to 346 (cl=INDEX_REGS, orig=134, freq=2000, tfirst=346, tfreq=2000)...
	 Trying 1: spill 164(freq=2000)	 Now best 1(cost=0, bad_spills=0, insn_pseudos=1)

	 Trying 4: spill 140(freq=2000)
	 Trying 5: spill 146(freq=2000)
      Spill r164(hr=1, freq=2000) for r346
	   Assign 1 to reload r346 (freq=2000)
	 Assigning to 347 (cl=GENERAL_REGS, orig=134, freq=2000, tfirst=347, tfreq=2000)...
	   Assign 0 to reload r347 (freq=2000)
  Reassigning non-reload pseudos

********** Pseudos coalescing #3: **********


********** Local #4: **********

	   Spilling non-eliminable hard regs: 7
      Creating newreg=348 from oldreg=201, assigning class GENERAL_REGS to address r348
	   Change to class INDEX_REGS for r348
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 350:  (0) a  (1) m  (2) m  (3) m  (4) m  (5) m  (6) m
  350: {asm_operands;clobber flags:CC;}
      REG_DEAD r344:SI
      REG_DEAD r336:SI
      REG_DEAD r330:SI
      REG_DEAD r331:SI
      REG_DEAD r201:SI
      REG_DEAD r183:SI
      REG_DEAD r177:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  396: r348:SI=r201:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 396:  (0) =r  (1) g {*movsi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=20,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=0,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            alt=1,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 349:  (0) r  (1) r  (2) le {*addsi_1}
      Creating newreg=349 from oldreg=201, assigning class GENERAL_REGS to r349
  349: {r349:SI=r200:SI+r318:SI;clobber flags:CC;}
      REG_DEAD r318:SI
      REG_DEAD r200:SI
      REG_UNUSED flags:CC
    Inserting insn reload after:
  397: r201:SI=r349:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 397:  (0) m  (1) re {*movsi_internal}
      Creating newreg=350 from oldreg=164, assigning class GENERAL_REGS to address r350
	   Change to class INDEX_REGS for r350
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 293:  (0) a  (1) m  (2) m  (3) m  (4) m  (5) m  (6) m
  293: {asm_operands;clobber flags:CC;}
      REG_DEAD r346:SI
      REG_DEAD r338:SI
      REG_DEAD r327:SI
      REG_DEAD r328:SI
      REG_DEAD r164:SI
      REG_DEAD r146:SI
      REG_DEAD r140:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  398: r350:SI=r164:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 398:  (0) =r  (1) g {*movsi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=20,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=0,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            alt=1,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 292:  (0) r  (1) r  (2) le {*addsi_1}
      Creating newreg=351 from oldreg=164, assigning class GENERAL_REGS to r351
  292: {r351:SI=r163:SI+r299:SI;clobber flags:CC;}
      REG_DEAD r299:SI
      REG_DEAD r163:SI
      REG_UNUSED flags:CC
    Inserting insn reload after:
  399: r164:SI=r351:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 399:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #6: **********

  BB 20
   Insn 361: point = 0, n_alt = -1
   Insn 360: point = 0, n_alt = -2
   Insn 356: point = 1, n_alt = -2
  BB 7
   Insn 365: point = 4, n_alt = -1
   Insn 162: point = 4, n_alt = 0
   Insn 161: point = 5, n_alt = 0
   Insn 160: point = 5, n_alt = 0
   Insn 159: point = 5, n_alt = -2
   Insn 158: point = 6, n_alt = 0
   Insn 157: point = 7, n_alt = 0
   Insn 156: point = 7, n_alt = 0
   Insn 155: point = 8, n_alt = 1
   Insn 154: point = 9, n_alt = 0
   Insn 153: point = 10, n_alt = 0
  BB 3
   Insn 363: point = 12, n_alt = -1
   Insn 12: point = 12, n_alt = 0
  BB 19
   Insn 353: point = 13, n_alt = 0
   Insn 352: point = 15, n_alt = 1
   Insn 351: point = 16, n_alt = 0
   Insn 350: point = 17, n_alt = 0
   Insn 396: point = 18, n_alt = 0
   Insn 392: point = 20, n_alt = 0
   Insn 384: point = 22, n_alt = -2
	   Creating copy r336<-r340@1000
   Insn 379: point = 24, n_alt = 0
   Insn 378: point = 26, n_alt = -2
	   Creating copy r330<-r332@1000
   Insn 397: point = 28, n_alt = 1
   Insn 349: point = 30, n_alt = 3
   Insn 348: point = 32, n_alt = -2
   Insn 347: point = 34, n_alt = 0
   Insn 346: point = 35, n_alt = 3
   Insn 345: point = 37, n_alt = 0
   Insn 344: point = 39, n_alt = 0
   Insn 343: point = 41, n_alt = -2
   Insn 342: point = 43, n_alt = 0
   Insn 341: point = 45, n_alt = 0
   Insn 385: point = 46, n_alt = -2
	   Creating copy r337->r340@1000
   Insn 340: point = 48, n_alt = 3
   Insn 339: point = 50, n_alt = -2
   Insn 338: point = 52, n_alt = 0
   Insn 337: point = 53, n_alt = 3
   Insn 336: point = 55, n_alt = 0
   Insn 335: point = 57, n_alt = 0
   Insn 334: point = 59, n_alt = -2
   Insn 333: point = 61, n_alt = 0
   Insn 332: point = 63, n_alt = 0
   Insn 377: point = 64, n_alt = -2
	   Creating copy r329->r332@1000
   Insn 331: point = 66, n_alt = 3
   Insn 330: point = 68, n_alt = -2
   Insn 329: point = 70, n_alt = 0
   Insn 328: point = 71, n_alt = 3
   Insn 327: point = 73, n_alt = 0
   Insn 326: point = 75, n_alt = 0
   Insn 325: point = 77, n_alt = -2
   Insn 324: point = 79, n_alt = 0
   Insn 323: point = 81, n_alt = 0
   Insn 322: point = 82, n_alt = 3
   Insn 321: point = 84, n_alt = -2
   Insn 320: point = 86, n_alt = 0
   Insn 319: point = 87, n_alt = 3
   Insn 318: point = 89, n_alt = 0
   Insn 317: point = 91, n_alt = 0
   Insn 316: point = 93, n_alt = -2
   Insn 315: point = 95, n_alt = 0
   Insn 314: point = 97, n_alt = 0
   Insn 313: point = 98, n_alt = 3
   Insn 312: point = 100, n_alt = -2
   Insn 311: point = 102, n_alt = 0
   Insn 310: point = 103, n_alt = 3
   Insn 309: point = 105, n_alt = 0
   Insn 308: point = 107, n_alt = 0
   Insn 307: point = 109, n_alt = -2
   Insn 306: point = 111, n_alt = 0
   Insn 305: point = 113, n_alt = 0
   Insn 393: point = 114, n_alt = 1
   Insn 304: point = 116, n_alt = 3
   Insn 303: point = 118, n_alt = -2
   Insn 302: point = 120, n_alt = 0
   Insn 301: point = 121, n_alt = 1
   Insn 300: point = 123, n_alt = 0
   Insn 299: point = 125, n_alt = -2
   Insn 298: point = 127, n_alt = 0
   Insn 297: point = 129, n_alt = 0
   Insn 296: point = 130, n_alt = 1
   Insn 295: point = 132, n_alt = 0
   Insn 294: point = 134, n_alt = 0
   Insn 293: point = 135, n_alt = 0
   Insn 398: point = 136, n_alt = 0
   Insn 394: point = 138, n_alt = 0
   Insn 386: point = 140, n_alt = -2
	   Creating copy r338<-r342@1000
   Insn 376: point = 142, n_alt = 0
   Insn 375: point = 144, n_alt = -2
	   Creating copy r327<-r334@1000
   Insn 399: point = 146, n_alt = 1
   Insn 292: point = 148, n_alt = 3
   Insn 291: point = 150, n_alt = -2
   Insn 290: point = 152, n_alt = 0
   Insn 289: point = 153, n_alt = 3
   Insn 288: point = 155, n_alt = 0
   Insn 287: point = 157, n_alt = 0
   Insn 286: point = 159, n_alt = -2
   Insn 285: point = 161, n_alt = 0
   Insn 284: point = 163, n_alt = 0
   Insn 387: point = 164, n_alt = -2
	   Creating copy r339->r342@1000
   Insn 283: point = 166, n_alt = 3
   Insn 282: point = 168, n_alt = -2
   Insn 281: point = 170, n_alt = 0
   Insn 280: point = 171, n_alt = 3
   Insn 279: point = 173, n_alt = 0
   Insn 278: point = 175, n_alt = 0
   Insn 277: point = 177, n_alt = -2
   Insn 276: point = 179, n_alt = 0
   Insn 275: point = 181, n_alt = 0
   Insn 374: point = 182, n_alt = -2
	   Creating copy r326->r334@1000
   Insn 274: point = 184, n_alt = 3
   Insn 273: point = 186, n_alt = -2
   Insn 272: point = 188, n_alt = 0
   Insn 271: point = 189, n_alt = 3
   Insn 270: point = 191, n_alt = 0
   Insn 269: point = 193, n_alt = 0
   Insn 268: point = 195, n_alt = -2
   Insn 267: point = 197, n_alt = 0
   Insn 266: point = 199, n_alt = 0
   Insn 265: point = 200, n_alt = 3
   Insn 264: point = 202, n_alt = -2
   Insn 263: point = 204, n_alt = 0
   Insn 262: point = 205, n_alt = 3
   Insn 261: point = 207, n_alt = 0
   Insn 260: point = 209, n_alt = 0
   Insn 259: point = 211, n_alt = -2
   Insn 258: point = 213, n_alt = 0
   Insn 257: point = 215, n_alt = 0
   Insn 256: point = 216, n_alt = 3
   Insn 255: point = 218, n_alt = -2
   Insn 254: point = 220, n_alt = 0
   Insn 253: point = 221, n_alt = 3
   Insn 252: point = 223, n_alt = 0
   Insn 251: point = 225, n_alt = 0
   Insn 250: point = 227, n_alt = -2
   Insn 249: point = 229, n_alt = 0
   Insn 248: point = 231, n_alt = 0
   Insn 395: point = 232, n_alt = 1
   Insn 247: point = 234, n_alt = 3
   Insn 246: point = 236, n_alt = -2
   Insn 245: point = 238, n_alt = 0
   Insn 244: point = 239, n_alt = 1
   Insn 243: point = 241, n_alt = 0
   Insn 242: point = 243, n_alt = -2
   Insn 241: point = 245, n_alt = 0
   Insn 240: point = 247, n_alt = 0
   Insn 239: point = 248, n_alt = 1
   Insn 238: point = 250, n_alt = 0
   Insn 237: point = 252, n_alt = 0
  BB 18
   Insn 234: point = 254, n_alt = 3
   Insn 233: point = 255, n_alt = 0
   Insn 232: point = 257, n_alt = 2
   Insn 231: point = 258, n_alt = 0
   Insn 230: point = 260, n_alt = 0
   Insn 229: point = 262, n_alt = 0
  BB 17
   Insn 227: point = 264, n_alt = -1
   Insn 226: point = 264, n_alt = 0
   Insn 225: point = 265, n_alt = 0
   Insn 224: point = 267, n_alt = 0
   Insn 223: point = 269, n_alt = 0
  BB 16
   Insn 220: point = 271, n_alt = 3
   Insn 219: point = 272, n_alt = 0
   Insn 218: point = 274, n_alt = 2
   Insn 217: point = 275, n_alt = 0
   Insn 216: point = 277, n_alt = 0
   Insn 215: point = 279, n_alt = 0
  BB 15
   Insn 213: point = 281, n_alt = -1
   Insn 212: point = 281, n_alt = 0
   Insn 211: point = 282, n_alt = 0
   Insn 210: point = 284, n_alt = 0
   Insn 209: point = 286, n_alt = 0
  BB 14
   Insn 206: point = 288, n_alt = 3
   Insn 205: point = 289, n_alt = 0
   Insn 204: point = 291, n_alt = 2
   Insn 203: point = 292, n_alt = 0
   Insn 202: point = 294, n_alt = 0
   Insn 201: point = 296, n_alt = 0
  BB 13
   Insn 199: point = 298, n_alt = -1
   Insn 198: point = 298, n_alt = 0
   Insn 197: point = 299, n_alt = 0
   Insn 196: point = 301, n_alt = 0
   Insn 195: point = 303, n_alt = 0
  BB 12
   Insn 193: point = 305, n_alt = -1
   Insn 192: point = 305, n_alt = 0
  BB 8
   Insn 367: point = 306, n_alt = -1
   Insn 167: point = 306, n_alt = 1
  BB 6
   Insn 151: point = 307, n_alt = -1
   Insn 150: point = 307, n_alt = 0
   Insn 149: point = 308, n_alt = -2
   Insn 148: point = 309, n_alt = 0
   Insn 147: point = 309, n_alt = 0
   Insn 146: point = 309, n_alt = 0
   Insn 145: point = 309, n_alt = 0
   Insn 144: point = 309, n_alt = 0
  BB 5
   Insn 141: point = 310, n_alt = 0
   Insn 140: point = 311, n_alt = 0
  BB 4
   Insn 138: point = 313, n_alt = -1
   Insn 137: point = 313, n_alt = 0
   Insn 136: point = 314, n_alt = 0
   Insn 135: point = 316, n_alt = 0
   Insn 134: point = 317, n_alt = 0
   Insn 133: point = 319, n_alt = 0
   Insn 132: point = 320, n_alt = 1
   Insn 131: point = 321, n_alt = 0
   Insn 130: point = 322, n_alt = 1
   Insn 129: point = 323, n_alt = 0
   Insn 128: point = 324, n_alt = -2
   Insn 127: point = 326, n_alt = 0
   Insn 126: point = 328, n_alt = 0
   Insn 125: point = 330, n_alt = 0
   Insn 124: point = 331, n_alt = 1
   Insn 123: point = 332, n_alt = 0
   Insn 122: point = 333, n_alt = 0
   Insn 121: point = 335, n_alt = 0
   Insn 120: point = 336, n_alt = 1
   Insn 119: point = 337, n_alt = 0
   Insn 118: point = 338, n_alt = 0
   Insn 117: point = 340, n_alt = 0
   Insn 116: point = 341, n_alt = 1
   Insn 115: point = 342, n_alt = 0
   Insn 114: point = 343, n_alt = 0
   Insn 113: point = 345, n_alt = 0
   Insn 112: point = 346, n_alt = 1
   Insn 111: point = 347, n_alt = 0
   Insn 110: point = 348, n_alt = 0
   Insn 109: point = 350, n_alt = 0
   Insn 108: point = 351, n_alt = 1
   Insn 107: point = 352, n_alt = 0
   Insn 106: point = 353, n_alt = 0
   Insn 105: point = 355, n_alt = 0
   Insn 104: point = 356, n_alt = 1
   Insn 103: point = 357, n_alt = 0
   Insn 102: point = 358, n_alt = 0
   Insn 101: point = 360, n_alt = 0
   Insn 100: point = 361, n_alt = 1
   Insn 99: point = 362, n_alt = 0
   Insn 98: point = 363, n_alt = 0
   Insn 97: point = 364, n_alt = 1
   Insn 96: point = 365, n_alt = 0
   Insn 95: point = 366, n_alt = 0
   Insn 94: point = 367, n_alt = 1
   Insn 93: point = 368, n_alt = 0
   Insn 92: point = 369, n_alt = 0
   Insn 91: point = 370, n_alt = 1
   Insn 90: point = 371, n_alt = 0
   Insn 89: point = 372, n_alt = 0
   Insn 88: point = 373, n_alt = 1
   Insn 87: point = 374, n_alt = 0
   Insn 86: point = 375, n_alt = 0
   Insn 85: point = 376, n_alt = 1
   Insn 84: point = 377, n_alt = 0
   Insn 83: point = 378, n_alt = 0
   Insn 82: point = 379, n_alt = 1
   Insn 81: point = 380, n_alt = 0
   Insn 80: point = 381, n_alt = 0
   Insn 79: point = 382, n_alt = 1
   Insn 78: point = 383, n_alt = 0
   Insn 77: point = 384, n_alt = 1
   Insn 76: point = 385, n_alt = 0
   Insn 75: point = 386, n_alt = 0
   Insn 74: point = 387, n_alt = 1
   Insn 73: point = 388, n_alt = 0
   Insn 72: point = 389, n_alt = 0
   Insn 71: point = 390, n_alt = 1
   Insn 70: point = 391, n_alt = 0
   Insn 69: point = 392, n_alt = 1
   Insn 68: point = 393, n_alt = 0
   Insn 67: point = 394, n_alt = 3
   Insn 66: point = 396, n_alt = 0
   Insn 65: point = 397, n_alt = 1
   Insn 64: point = 398, n_alt = 0
   Insn 63: point = 399, n_alt = 1
   Insn 62: point = 400, n_alt = 0
   Insn 61: point = 401, n_alt = 0
   Insn 60: point = 403, n_alt = 0
   Insn 59: point = 404, n_alt = 1
   Insn 58: point = 405, n_alt = 0
   Insn 57: point = 406, n_alt = 0
   Insn 56: point = 408, n_alt = 0
   Insn 55: point = 409, n_alt = 1
   Insn 54: point = 410, n_alt = 0
   Insn 53: point = 411, n_alt = 1
   Insn 52: point = 412, n_alt = 0
   Insn 51: point = 413, n_alt = 0
   Insn 50: point = 415, n_alt = 0
   Insn 49: point = 416, n_alt = 1
   Insn 48: point = 417, n_alt = 0
   Insn 47: point = 418, n_alt = 1
   Insn 46: point = 419, n_alt = 0
   Insn 45: point = 420, n_alt = 1
   Insn 44: point = 421, n_alt = 0
   Insn 43: point = 422, n_alt = 1
   Insn 42: point = 423, n_alt = 0
   Insn 41: point = 424, n_alt = 1
   Insn 40: point = 425, n_alt = 0
   Insn 39: point = 426, n_alt = 0
   Insn 38: point = 428, n_alt = 0
   Insn 37: point = 429, n_alt = 1
   Insn 36: point = 430, n_alt = 0
   Insn 35: point = 431, n_alt = 0
   Insn 34: point = 433, n_alt = 0
   Insn 33: point = 435, n_alt = 0
   Insn 32: point = 436, n_alt = 1
   Insn 31: point = 437, n_alt = 0
   Insn 30: point = 438, n_alt = 0
   Insn 29: point = 439, n_alt = 1
   Insn 28: point = 440, n_alt = 0
   Insn 27: point = 441, n_alt = 0
   Insn 373: point = 442, n_alt = -2
	Hard reg 0 is preferable by r325 with profit 1000
   Insn 372: point = 444, n_alt = -2
	Hard reg 3 is preferable by r324 with profit 1000
   Insn 371: point = 446, n_alt = -2
	Hard reg 1 is preferable by r323 with profit 1000
   Insn 26: point = 448, n_alt = 0
   Insn 25: point = 449, n_alt = -2
   Insn 24: point = 451, n_alt = -2
   Insn 23: point = 453, n_alt = 0
   Insn 22: point = 454, n_alt = 0
   Insn 21: point = 456, n_alt = 0
   Insn 20: point = 457, n_alt = 1
   Insn 19: point = 458, n_alt = 0
   Insn 18: point = 459, n_alt = 0
   Insn 17: point = 460, n_alt = 0
  BB 2
   Insn 10: point = 462, n_alt = -1
   Insn 9: point = 462, n_alt = 1
   Insn 8: point = 462, n_alt = 1
   Insn 7: point = 463, n_alt = -2
   Insn 6: point = 464, n_alt = 0
   Insn 5: point = 464, n_alt = -2
   Insn 369: point = 464, n_alt = 0
  BB 11
   Insn 186: point = 465, n_alt = 0
  BB 10
   Insn 183: point = 466, n_alt = 3
   Insn 182: point = 467, n_alt = 0
   Insn 181: point = 468, n_alt = 3
   Insn 180: point = 470, n_alt = 2
   Insn 179: point = 472, n_alt = 0
  BB 9
   Insn 177: point = 474, n_alt = -1
   Insn 176: point = 474, n_alt = 1
   Insn 175: point = 474, n_alt = 1
   Insn 174: point = 475, n_alt = 0
   Insn 173: point = 477, n_alt = 0
   Insn 172: point = 479, n_alt = 0
   Insn 171: point = 480, n_alt = 0
 r82: [14..481] [5..11]
 r83: [462..463]
 r84: [450..454]
 r85: [436..438]
 r86: [432..433]
 r87: [429..431]
 r88: [424..426]
 r89: [411..413]
 r90: [404..406]
 r91: [399..401]
 r92: [395..396]
 r93: [392..394]
 r94: [356..358]
 r95: [351..353]
 r96: [346..348]
 r97: [341..343]
 r98: [336..338]
 r99: [331..333]
 r100: [329..330]
 r101: [327..328]
 r102: [325..326]
 r103: [322..324]
 r104: [313..317]
 r105: [313..314]
 r106: [307..308]
 r107: [6..7]
 r108: [469..470]
 r109: [466..468]
 r110: [300..301]
 r111: [298..299]
 r112: [293..294]
 r113: [288..292]
 r114: [290..291]
 r115: [288..289]
 r116: [283..284]
 r117: [281..282]
 r118: [276..277]
 r119: [271..275]
 r120: [273..274]
 r121: [271..272]
 r122: [266..267]
 r123: [264..265]
 r124: [259..260]
 r125: [254..258]
 r126: [256..257]
 r127: [254..255]
 r128: [249..250]
 r129: [143..248]
 r130: [244..245]
 r131: [242..243]
 r132: [240..241]
 r133: [235..239]
 r134: [139..232]
 r135: [228..229]
 r136: [226..227]
 r137: [224..225]
 r138: [222..223]
 r139: [217..221]
 r140: [135..216]
 r141: [212..213]
 r142: [210..211]
 r143: [208..209]
 r144: [206..207]
 r145: [201..205]
 r146: [135..200]
 r147: [196..197]
 r148: [194..195]
 r149: [192..193]
 r150: [190..191]
 r151: [185..189]
 r153: [178..179]
 r154: [176..177]
 r155: [174..175]
 r156: [172..173]
 r157: [167..171]
 r159: [160..161]
 r160: [158..159]
 r161: [156..157]
 r162: [154..155]
 r163: [149..153]
 r164: [137..146]
 r165: [131..132]
 r166: [25..130]
 r167: [126..127]
 r168: [124..125]
 r169: [122..123]
 r170: [117..121]
 r171: [21..114]
 r172: [110..111]
 r173: [108..109]
 r174: [106..107]
 r175: [104..105]
 r176: [99..103]
 r177: [17..98]
 r178: [94..95]
 r179: [92..93]
 r180: [90..91]
 r181: [88..89]
 r182: [83..87]
 r183: [17..82]
 r184: [78..79]
 r185: [76..77]
 r186: [74..75]
 r187: [72..73]
 r188: [67..71]
 r190: [60..61]
 r191: [58..59]
 r192: [56..57]
 r193: [54..55]
 r194: [49..53]
 r196: [42..43]
 r197: [40..41]
 r198: [38..39]
 r199: [36..37]
 r200: [31..35]
 r201: [19..28]
 r202: [12..13] [2..4]
 r203: [0..1]
 r204: [457..460]
 r205: [457..459]
 r206: [457..458]
 r207: [455..456]
 r208: [452..453]
 r209: [447..451]
 r210: [445..449]
 r211: [443..448]
 r212: [439..440]
 r213: [436..437]
 r214: [434..435]
 r215: [429..430]
 r216: [427..428]
 r217: [424..425]
 r218: [422..423]
 r219: [420..421]
 r220: [418..419]
 r221: [416..417]
 r222: [414..415]
 r223: [411..412]
 r224: [409..410]
 r225: [407..408]
 r226: [404..405]
 r227: [402..403]
 r228: [399..400]
 r229: [397..398]
 r230: [392..393]
 r231: [390..391]
 r232: [387..389]
 r233: [387..388]
 r234: [384..386]
 r235: [384..385]
 r236: [382..383]
 r237: [379..381]
 r238: [379..380]
 r239: [376..378]
 r240: [376..377]
 r241: [373..375]
 r242: [373..374]
 r243: [370..372]
 r244: [370..371]
 r245: [367..369]
 r246: [367..368]
 r247: [364..366]
 r248: [364..365]
 r249: [361..363]
 r250: [361..362]
 r251: [359..360]
 r252: [356..357]
 r253: [354..355]
 r254: [351..352]
 r255: [349..350]
 r256: [346..347]
 r257: [344..345]
 r258: [341..342]
 r259: [339..340]
 r260: [336..337]
 r261: [334..335]
 r262: [331..332]
 r263: [322..323]
 r264: [320..321]
 r265: [318..319]
 r266: [315..316]
 r267: [310..311]
 r268: [8..10]
 r269: [8..9]
 r270: [476..480]
 r271: [476..477]
 r272: [478..479]
 r273: [474..475]
 r274: [471..472]
 r275: [466..467]
 r276: [302..303]
 r277: [295..296]
 r278: [285..286]
 r279: [278..279]
 r280: [268..269]
 r281: [261..262]
 r282: [251..252]
 r283: [246..247]
 r284: [235..236]
 r285: [237..238]
 r286: [230..231]
 r287: [217..218]
 r288: [219..220]
 r289: [214..215]
 r290: [201..202]
 r291: [203..204]
 r292: [198..199]
 r293: [185..186]
 r294: [187..188]
 r295: [180..181]
 r296: [167..168]
 r297: [169..170]
 r298: [162..163]
 r299: [149..150]
 r300: [151..152]
 r301: [133..134]
 r302: [128..129]
 r303: [117..118]
 r304: [119..120]
 r305: [112..113]
 r306: [99..100]
 r307: [101..102]
 r308: [96..97]
 r309: [83..84]
 r310: [85..86]
 r311: [80..81]
 r312: [67..68]
 r313: [69..70]
 r314: [62..63]
 r315: [49..50]
 r316: [51..52]
 r317: [44..45]
 r318: [31..32]
 r319: [33..34]
 r320: [15..16]
 r323: [441..446]
 r324: [441..444]
 r325: [441..442]
 r326: [183..184]
 r327: [135..144]
 r328: [135..142]
 r329: [65..66]
 r330: [17..26]
 r331: [17..24]
 r332: [27..64]
 r334: [145..182]
 r336: [17..22]
 r337: [47..48]
 r338: [135..140]
 r339: [165..166]
 r340: [23..46]
 r342: [141..164]
 r344: [17..20]
 r345: [115..116]
 r346: [135..138]
 r347: [233..234]
 r348: [17..18]
 r349: [29..30]
 r350: [135..136]
 r351: [147..148]
Compressing live ranges: from 482 to 404 - 83%
Ranges after the compression:
 r82: [10..403] [4..7]
 r83: [390..391]
 r84: [382..385]
 r85: [370..371]
 r86: [366..367]
 r87: [364..365]
 r88: [360..361]
 r89: [348..349]
 r90: [342..343]
 r91: [338..339]
 r92: [334..335]
 r93: [332..333]
 r94: [306..307]
 r95: [302..303]
 r96: [298..299]
 r97: [294..295]
 r98: [290..291]
 r99: [286..287]
 r100: [284..285]
 r101: [282..283]
 r102: [280..281]
 r103: [278..279]
 r104: [270..273]
 r105: [270..271]
 r106: [266..267]
 r107: [4..5]
 r108: [394..395]
 r109: [392..393]
 r110: [262..263]
 r111: [260..261]
 r112: [256..257]
 r113: [252..255]
 r114: [254..255]
 r115: [252..253]
 r116: [248..249]
 r117: [246..247]
 r118: [242..243]
 r119: [238..241]
 r120: [240..241]
 r121: [238..239]
 r122: [234..235]
 r123: [232..233]
 r124: [228..229]
 r125: [224..227]
 r126: [226..227]
 r127: [224..225]
 r128: [220..221]
 r129: [126..219]
 r130: [216..217]
 r131: [214..215]
 r132: [212..213]
 r133: [208..211]
 r134: [122..205]
 r135: [202..203]
 r136: [200..201]
 r137: [198..199]
 r138: [196..197]
 r139: [192..195]
 r140: [118..191]
 r141: [188..189]
 r142: [186..187]
 r143: [184..185]
 r144: [182..183]
 r145: [178..181]
 r146: [118..177]
 r147: [174..175]
 r148: [172..173]
 r149: [170..171]
 r150: [168..169]
 r151: [164..167]
 r153: [158..159]
 r154: [156..157]
 r155: [154..155]
 r156: [152..153]
 r157: [148..151]
 r159: [142..143]
 r160: [140..141]
 r161: [138..139]
 r162: [136..137]
 r163: [132..135]
 r164: [120..129]
 r165: [114..115]
 r166: [20..113]
 r167: [110..111]
 r168: [108..109]
 r169: [106..107]
 r170: [102..105]
 r171: [16..99]
 r172: [96..97]
 r173: [94..95]
 r174: [92..93]
 r175: [90..91]
 r176: [86..89]
 r177: [12..85]
 r178: [82..83]
 r179: [80..81]
 r180: [78..79]
 r181: [76..77]
 r182: [72..75]
 r183: [12..71]
 r184: [68..69]
 r185: [66..67]
 r186: [64..65]
 r187: [62..63]
 r188: [58..61]
 r190: [52..53]
 r191: [50..51]
 r192: [48..49]
 r193: [46..47]
 r194: [42..45]
 r196: [36..37]
 r197: [34..35]
 r198: [32..33]
 r199: [30..31]
 r200: [26..29]
 r201: [14..23]
 r202: [8..9] [2..3]
 r203: [0..1]
 r204: [388..389]
 r205: [388..389]
 r206: [388..389]
 r207: [386..387]
 r208: [384..385]
 r209: [380..383]
 r210: [378..381]
 r211: [376..381]
 r212: [372..373]
 r213: [370..371]
 r214: [368..369]
 r215: [364..365]
 r216: [362..363]
 r217: [360..361]
 r218: [358..359]
 r219: [356..357]
 r220: [354..355]
 r221: [352..353]
 r222: [350..351]
 r223: [348..349]
 r224: [346..347]
 r225: [344..345]
 r226: [342..343]
 r227: [340..341]
 r228: [338..339]
 r229: [336..337]
 r230: [332..333]
 r231: [330..331]
 r232: [328..329]
 r233: [328..329]
 r234: [326..327]
 r235: [326..327]
 r236: [324..325]
 r237: [322..323]
 r238: [322..323]
 r239: [320..321]
 r240: [320..321]
 r241: [318..319]
 r242: [318..319]
 r243: [316..317]
 r244: [316..317]
 r245: [314..315]
 r246: [314..315]
 r247: [312..313]
 r248: [312..313]
 r249: [310..311]
 r250: [310..311]
 r251: [308..309]
 r252: [306..307]
 r253: [304..305]
 r254: [302..303]
 r255: [300..301]
 r256: [298..299]
 r257: [296..297]
 r258: [294..295]
 r259: [292..293]
 r260: [290..291]
 r261: [288..289]
 r262: [286..287]
 r263: [278..279]
 r264: [276..277]
 r265: [274..275]
 r266: [272..273]
 r267: [268..269]
 r268: [6..7]
 r269: [6..7]
 r270: [400..403]
 r271: [400..401]
 r272: [402..403]
 r273: [398..399]
 r274: [396..397]
 r275: [392..393]
 r276: [264..265]
 r277: [258..259]
 r278: [250..251]
 r279: [244..245]
 r280: [236..237]
 r281: [230..231]
 r282: [222..223]
 r283: [218..219]
 r284: [208..209]
 r285: [210..211]
 r286: [204..205]
 r287: [192..193]
 r288: [194..195]
 r289: [190..191]
 r290: [178..179]
 r291: [180..181]
 r292: [176..177]
 r293: [164..165]
 r294: [166..167]
 r295: [160..161]
 r296: [148..149]
 r297: [150..151]
 r298: [144..145]
 r299: [132..133]
 r300: [134..135]
 r301: [116..117]
 r302: [112..113]
 r303: [102..103]
 r304: [104..105]
 r305: [98..99]
 r306: [86..87]
 r307: [88..89]
 r308: [84..85]
 r309: [72..73]
 r310: [74..75]
 r311: [70..71]
 r312: [58..59]
 r313: [60..61]
 r314: [54..55]
 r315: [42..43]
 r316: [44..45]
 r317: [38..39]
 r318: [26..27]
 r319: [28..29]
 r320: [10..11]
 r323: [374..379]
 r324: [374..377]
 r325: [374..375]
 r326: [162..163]
 r327: [118..127]
 r328: [118..125]
 r329: [56..57]
 r330: [12..21]
 r331: [12..19]
 r332: [22..55]
 r334: [128..161]
 r336: [12..17]
 r337: [40..41]
 r338: [118..123]
 r339: [146..147]
 r340: [18..39]
 r342: [124..145]
 r344: [12..15]
 r345: [100..101]
 r346: [118..121]
 r347: [206..207]
 r348: [12..13]
 r349: [24..25]
 r350: [118..119]
 r351: [130..131]

********** Assignment #4: **********

	 Assigning to 348 (cl=INDEX_REGS, orig=201, freq=2000, tfirst=348, tfreq=2000)...
	 Trying 4: spill 177(freq=2000)	 Now best 4(cost=0, bad_spills=0, insn_pseudos=1)

	 Trying 5: spill 183(freq=2000)
      Spill r177(hr=4, freq=2000) for r348
	   Assign 4 to reload r348 (freq=2000)
	 Assigning to 349 (cl=GENERAL_REGS, orig=201, freq=2000, tfirst=349, tfreq=2000)...
	   Assign 0 to reload r349 (freq=2000)
	 Assigning to 350 (cl=INDEX_REGS, orig=164, freq=2000, tfirst=350, tfreq=2000)...
	 Trying 4: spill 140(freq=2000)	 Now best 4(cost=0, bad_spills=0, insn_pseudos=1)

	 Trying 5: spill 146(freq=2000)
      Spill r140(hr=4, freq=2000) for r350
	   Assign 4 to reload r350 (freq=2000)
	 Assigning to 351 (cl=GENERAL_REGS, orig=164, freq=2000, tfirst=351, tfreq=2000)...
	   Assign 0 to reload r351 (freq=2000)
  Reassigning non-reload pseudos
	   Assign 4 to r129 (freq=2000)
	   Assign 4 to r166 (freq=2000)

********** Pseudos coalescing #4: **********


********** Local #5: **********

	   Spilling non-eliminable hard regs: 7
      Creating newreg=352 from oldreg=177, assigning class GENERAL_REGS to address r352
	   Change to class INDEX_REGS for r352
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 350:  (0) a  (1) m  (2) m  (3) m  (4) m  (5) m  (6) m
  350: {asm_operands;clobber flags:CC;}
      REG_DEAD r348:SI
      REG_DEAD r344:SI
      REG_DEAD r336:SI
      REG_DEAD r330:SI
      REG_DEAD r331:SI
      REG_DEAD r183:SI
      REG_DEAD r177:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  400: r352:SI=r177:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 400:  (0) =r  (1) g {*movsi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=20,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=0,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            alt=1,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 313:  (0) r  (1) r  (2) le {*addsi_1}
      Creating newreg=353 from oldreg=177, assigning class GENERAL_REGS to r353
  313: {r353:SI=r176:SI+r306:SI;clobber flags:CC;}
      REG_DEAD r306:SI
      REG_DEAD r176:SI
      REG_UNUSED flags:CC
    Inserting insn reload after:
  401: r177:SI=r353:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 401:  (0) m  (1) re {*movsi_internal}
      Creating newreg=354 from oldreg=140, assigning class GENERAL_REGS to address r354
	   Change to class INDEX_REGS for r354
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 293:  (0) a  (1) m  (2) m  (3) m  (4) m  (5) m  (6) m
  293: {asm_operands;clobber flags:CC;}
      REG_DEAD r350:SI
      REG_DEAD r346:SI
      REG_DEAD r338:SI
      REG_DEAD r327:SI
      REG_DEAD r328:SI
      REG_DEAD r146:SI
      REG_DEAD r140:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  402: r354:SI=r140:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 402:  (0) =r  (1) g {*movsi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=20,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=0,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            alt=1,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 256:  (0) r  (1) r  (2) le {*addsi_1}
      Creating newreg=355 from oldreg=140, assigning class GENERAL_REGS to r355
  256: {r355:SI=r139:SI+r287:SI;clobber flags:CC;}
      REG_DEAD r287:SI
      REG_DEAD r139:SI
      REG_UNUSED flags:CC
    Inserting insn reload after:
  403: r140:SI=r355:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 403:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #7: **********

  BB 20
   Insn 361: point = 0, n_alt = -1
   Insn 360: point = 0, n_alt = -2
   Insn 356: point = 1, n_alt = -2
  BB 7
   Insn 365: point = 4, n_alt = -1
   Insn 162: point = 4, n_alt = 0
   Insn 161: point = 5, n_alt = 0
   Insn 160: point = 5, n_alt = 0
   Insn 159: point = 5, n_alt = -2
   Insn 158: point = 6, n_alt = 0
   Insn 157: point = 7, n_alt = 0
   Insn 156: point = 7, n_alt = 0
   Insn 155: point = 8, n_alt = 1
   Insn 154: point = 9, n_alt = 0
   Insn 153: point = 10, n_alt = 0
  BB 3
   Insn 363: point = 12, n_alt = -1
   Insn 12: point = 12, n_alt = 0
  BB 19
   Insn 353: point = 13, n_alt = 0
   Insn 352: point = 15, n_alt = 1
   Insn 351: point = 16, n_alt = 0
   Insn 350: point = 17, n_alt = 0
   Insn 400: point = 18, n_alt = 0
   Insn 396: point = 20, n_alt = 0
   Insn 392: point = 22, n_alt = 0
   Insn 384: point = 24, n_alt = -2
	   Creating copy r336<-r340@1000
   Insn 379: point = 26, n_alt = -2
	Hard reg 4 is preferable by r331 with profit 1000
   Insn 378: point = 28, n_alt = -2
	   Creating copy r330<-r332@1000
   Insn 397: point = 30, n_alt = 1
   Insn 349: point = 32, n_alt = 3
   Insn 348: point = 34, n_alt = -2
   Insn 347: point = 36, n_alt = 0
   Insn 346: point = 37, n_alt = 3
   Insn 345: point = 39, n_alt = 0
   Insn 344: point = 41, n_alt = 0
   Insn 343: point = 43, n_alt = -2
   Insn 342: point = 45, n_alt = 0
   Insn 341: point = 47, n_alt = 0
   Insn 385: point = 48, n_alt = -2
	   Creating copy r337->r340@1000
   Insn 340: point = 50, n_alt = 3
   Insn 339: point = 52, n_alt = -2
   Insn 338: point = 54, n_alt = 0
   Insn 337: point = 55, n_alt = 3
   Insn 336: point = 57, n_alt = 0
   Insn 335: point = 59, n_alt = 0
   Insn 334: point = 61, n_alt = -2
   Insn 333: point = 63, n_alt = 0
   Insn 332: point = 65, n_alt = 0
   Insn 377: point = 66, n_alt = -2
	   Creating copy r329->r332@1000
   Insn 331: point = 68, n_alt = 3
   Insn 330: point = 70, n_alt = -2
   Insn 329: point = 72, n_alt = 0
   Insn 328: point = 73, n_alt = 3
   Insn 327: point = 75, n_alt = 0
   Insn 326: point = 77, n_alt = 0
   Insn 325: point = 79, n_alt = -2
   Insn 324: point = 81, n_alt = 0
   Insn 323: point = 83, n_alt = 0
   Insn 322: point = 84, n_alt = 3
   Insn 321: point = 86, n_alt = -2
   Insn 320: point = 88, n_alt = 0
   Insn 319: point = 89, n_alt = 3
   Insn 318: point = 91, n_alt = 0
   Insn 317: point = 93, n_alt = 0
   Insn 316: point = 95, n_alt = -2
   Insn 315: point = 97, n_alt = 0
   Insn 314: point = 99, n_alt = 0
   Insn 401: point = 100, n_alt = 1
   Insn 313: point = 102, n_alt = 3
   Insn 312: point = 104, n_alt = -2
   Insn 311: point = 106, n_alt = 0
   Insn 310: point = 107, n_alt = 3
   Insn 309: point = 109, n_alt = 0
   Insn 308: point = 111, n_alt = 0
   Insn 307: point = 113, n_alt = -2
   Insn 306: point = 115, n_alt = 0
   Insn 305: point = 117, n_alt = 0
   Insn 393: point = 118, n_alt = 1
   Insn 304: point = 120, n_alt = 3
   Insn 303: point = 122, n_alt = -2
   Insn 302: point = 124, n_alt = 0
   Insn 301: point = 125, n_alt = 1
   Insn 300: point = 127, n_alt = 0
   Insn 299: point = 129, n_alt = -2
   Insn 298: point = 131, n_alt = 0
   Insn 297: point = 133, n_alt = 0
   Insn 296: point = 134, n_alt = -2
   Insn 295: point = 136, n_alt = 0
   Insn 294: point = 138, n_alt = 0
   Insn 293: point = 139, n_alt = 0
   Insn 402: point = 140, n_alt = 0
   Insn 398: point = 142, n_alt = 0
   Insn 394: point = 144, n_alt = 0
   Insn 386: point = 146, n_alt = -2
	   Creating copy r338<-r342@1000
   Insn 376: point = 148, n_alt = -2
	Hard reg 4 is preferable by r328 with profit 1000
   Insn 375: point = 150, n_alt = -2
	   Creating copy r327<-r334@1000
   Insn 399: point = 152, n_alt = 1
   Insn 292: point = 154, n_alt = 3
   Insn 291: point = 156, n_alt = -2
   Insn 290: point = 158, n_alt = 0
   Insn 289: point = 159, n_alt = 3
   Insn 288: point = 161, n_alt = 0
   Insn 287: point = 163, n_alt = 0
   Insn 286: point = 165, n_alt = -2
   Insn 285: point = 167, n_alt = 0
   Insn 284: point = 169, n_alt = 0
   Insn 387: point = 170, n_alt = -2
	   Creating copy r339->r342@1000
   Insn 283: point = 172, n_alt = 3
   Insn 282: point = 174, n_alt = -2
   Insn 281: point = 176, n_alt = 0
   Insn 280: point = 177, n_alt = 3
   Insn 279: point = 179, n_alt = 0
   Insn 278: point = 181, n_alt = 0
   Insn 277: point = 183, n_alt = -2
   Insn 276: point = 185, n_alt = 0
   Insn 275: point = 187, n_alt = 0
   Insn 374: point = 188, n_alt = -2
	   Creating copy r326->r334@1000
   Insn 274: point = 190, n_alt = 3
   Insn 273: point = 192, n_alt = -2
   Insn 272: point = 194, n_alt = 0
   Insn 271: point = 195, n_alt = 3
   Insn 270: point = 197, n_alt = 0
   Insn 269: point = 199, n_alt = 0
   Insn 268: point = 201, n_alt = -2
   Insn 267: point = 203, n_alt = 0
   Insn 266: point = 205, n_alt = 0
   Insn 265: point = 206, n_alt = 3
   Insn 264: point = 208, n_alt = -2
   Insn 263: point = 210, n_alt = 0
   Insn 262: point = 211, n_alt = 3
   Insn 261: point = 213, n_alt = 0
   Insn 260: point = 215, n_alt = 0
   Insn 259: point = 217, n_alt = -2
   Insn 258: point = 219, n_alt = 0
   Insn 257: point = 221, n_alt = 0
   Insn 403: point = 222, n_alt = 1
   Insn 256: point = 224, n_alt = 3
   Insn 255: point = 226, n_alt = -2
   Insn 254: point = 228, n_alt = 0
   Insn 253: point = 229, n_alt = 3
   Insn 252: point = 231, n_alt = 0
   Insn 251: point = 233, n_alt = 0
   Insn 250: point = 235, n_alt = -2
   Insn 249: point = 237, n_alt = 0
   Insn 248: point = 239, n_alt = 0
   Insn 395: point = 240, n_alt = 1
   Insn 247: point = 242, n_alt = 3
   Insn 246: point = 244, n_alt = -2
   Insn 245: point = 246, n_alt = 0
   Insn 244: point = 247, n_alt = 1
   Insn 243: point = 249, n_alt = 0
   Insn 242: point = 251, n_alt = -2
   Insn 241: point = 253, n_alt = 0
   Insn 240: point = 255, n_alt = 0
   Insn 239: point = 256, n_alt = -2
   Insn 238: point = 258, n_alt = 0
   Insn 237: point = 260, n_alt = 0
  BB 18
   Insn 234: point = 262, n_alt = 3
   Insn 233: point = 263, n_alt = 0
   Insn 232: point = 265, n_alt = 2
   Insn 231: point = 266, n_alt = 0
   Insn 230: point = 268, n_alt = 0
   Insn 229: point = 270, n_alt = 0
  BB 17
   Insn 227: point = 272, n_alt = -1
   Insn 226: point = 272, n_alt = 0
   Insn 225: point = 273, n_alt = 0
   Insn 224: point = 275, n_alt = 0
   Insn 223: point = 277, n_alt = 0
  BB 16
   Insn 220: point = 279, n_alt = 3
   Insn 219: point = 280, n_alt = 0
   Insn 218: point = 282, n_alt = 2
   Insn 217: point = 283, n_alt = 0
   Insn 216: point = 285, n_alt = 0
   Insn 215: point = 287, n_alt = 0
  BB 15
   Insn 213: point = 289, n_alt = -1
   Insn 212: point = 289, n_alt = 0
   Insn 211: point = 290, n_alt = 0
   Insn 210: point = 292, n_alt = 0
   Insn 209: point = 294, n_alt = 0
  BB 14
   Insn 206: point = 296, n_alt = 3
   Insn 205: point = 297, n_alt = 0
   Insn 204: point = 299, n_alt = 2
   Insn 203: point = 300, n_alt = 0
   Insn 202: point = 302, n_alt = 0
   Insn 201: point = 304, n_alt = 0
  BB 13
   Insn 199: point = 306, n_alt = -1
   Insn 198: point = 306, n_alt = 0
   Insn 197: point = 307, n_alt = 0
   Insn 196: point = 309, n_alt = 0
   Insn 195: point = 311, n_alt = 0
  BB 12
   Insn 193: point = 313, n_alt = -1
   Insn 192: point = 313, n_alt = 0
  BB 8
   Insn 367: point = 314, n_alt = -1
   Insn 167: point = 314, n_alt = 1
  BB 6
   Insn 151: point = 315, n_alt = -1
   Insn 150: point = 315, n_alt = 0
   Insn 149: point = 316, n_alt = -2
   Insn 148: point = 317, n_alt = 0
   Insn 147: point = 317, n_alt = 0
   Insn 146: point = 317, n_alt = 0
   Insn 145: point = 317, n_alt = 0
   Insn 144: point = 317, n_alt = 0
  BB 5
   Insn 141: point = 318, n_alt = 0
   Insn 140: point = 319, n_alt = 0
  BB 4
   Insn 138: point = 321, n_alt = -1
   Insn 137: point = 321, n_alt = 0
   Insn 136: point = 322, n_alt = 0
   Insn 135: point = 324, n_alt = 0
   Insn 134: point = 325, n_alt = 0
   Insn 133: point = 327, n_alt = 0
   Insn 132: point = 328, n_alt = 1
   Insn 131: point = 329, n_alt = 0
   Insn 130: point = 330, n_alt = 1
   Insn 129: point = 331, n_alt = 0
   Insn 128: point = 332, n_alt = -2
   Insn 127: point = 334, n_alt = 0
   Insn 126: point = 336, n_alt = 0
   Insn 125: point = 338, n_alt = 0
   Insn 124: point = 339, n_alt = 1
   Insn 123: point = 340, n_alt = 0
   Insn 122: point = 341, n_alt = 0
   Insn 121: point = 343, n_alt = 0
   Insn 120: point = 344, n_alt = 1
   Insn 119: point = 345, n_alt = 0
   Insn 118: point = 346, n_alt = 0
   Insn 117: point = 348, n_alt = 0
   Insn 116: point = 349, n_alt = 1
   Insn 115: point = 350, n_alt = 0
   Insn 114: point = 351, n_alt = 0
   Insn 113: point = 353, n_alt = 0
   Insn 112: point = 354, n_alt = 1
   Insn 111: point = 355, n_alt = 0
   Insn 110: point = 356, n_alt = 0
   Insn 109: point = 358, n_alt = 0
   Insn 108: point = 359, n_alt = 1
   Insn 107: point = 360, n_alt = 0
   Insn 106: point = 361, n_alt = 0
   Insn 105: point = 363, n_alt = 0
   Insn 104: point = 364, n_alt = 1
   Insn 103: point = 365, n_alt = 0
   Insn 102: point = 366, n_alt = 0
   Insn 101: point = 368, n_alt = 0
   Insn 100: point = 369, n_alt = 1
   Insn 99: point = 370, n_alt = 0
   Insn 98: point = 371, n_alt = 0
   Insn 97: point = 372, n_alt = 1
   Insn 96: point = 373, n_alt = 0
   Insn 95: point = 374, n_alt = 0
   Insn 94: point = 375, n_alt = 1
   Insn 93: point = 376, n_alt = 0
   Insn 92: point = 377, n_alt = 0
   Insn 91: point = 378, n_alt = 1
   Insn 90: point = 379, n_alt = 0
   Insn 89: point = 380, n_alt = 0
   Insn 88: point = 381, n_alt = 1
   Insn 87: point = 382, n_alt = 0
   Insn 86: point = 383, n_alt = 0
   Insn 85: point = 384, n_alt = 1
   Insn 84: point = 385, n_alt = 0
   Insn 83: point = 386, n_alt = 0
   Insn 82: point = 387, n_alt = 1
   Insn 81: point = 388, n_alt = 0
   Insn 80: point = 389, n_alt = 0
   Insn 79: point = 390, n_alt = 1
   Insn 78: point = 391, n_alt = 0
   Insn 77: point = 392, n_alt = 1
   Insn 76: point = 393, n_alt = 0
   Insn 75: point = 394, n_alt = 0
   Insn 74: point = 395, n_alt = 1
   Insn 73: point = 396, n_alt = 0
   Insn 72: point = 397, n_alt = 0
   Insn 71: point = 398, n_alt = 1
   Insn 70: point = 399, n_alt = 0
   Insn 69: point = 400, n_alt = 1
   Insn 68: point = 401, n_alt = 0
   Insn 67: point = 402, n_alt = 3
   Insn 66: point = 404, n_alt = 0
   Insn 65: point = 405, n_alt = 1
   Insn 64: point = 406, n_alt = 0
   Insn 63: point = 407, n_alt = 1
   Insn 62: point = 408, n_alt = 0
   Insn 61: point = 409, n_alt = 0
   Insn 60: point = 411, n_alt = 0
   Insn 59: point = 412, n_alt = 1
   Insn 58: point = 413, n_alt = 0
   Insn 57: point = 414, n_alt = 0
   Insn 56: point = 416, n_alt = 0
   Insn 55: point = 417, n_alt = 1
   Insn 54: point = 418, n_alt = 0
   Insn 53: point = 419, n_alt = 1
   Insn 52: point = 420, n_alt = 0
   Insn 51: point = 421, n_alt = 0
   Insn 50: point = 423, n_alt = 0
   Insn 49: point = 424, n_alt = 1
   Insn 48: point = 425, n_alt = 0
   Insn 47: point = 426, n_alt = 1
   Insn 46: point = 427, n_alt = 0
   Insn 45: point = 428, n_alt = 1
   Insn 44: point = 429, n_alt = 0
   Insn 43: point = 430, n_alt = 1
   Insn 42: point = 431, n_alt = 0
   Insn 41: point = 432, n_alt = 1
   Insn 40: point = 433, n_alt = 0
   Insn 39: point = 434, n_alt = 0
   Insn 38: point = 436, n_alt = 0
   Insn 37: point = 437, n_alt = 1
   Insn 36: point = 438, n_alt = 0
   Insn 35: point = 439, n_alt = 0
   Insn 34: point = 441, n_alt = 0
   Insn 33: point = 443, n_alt = 0
   Insn 32: point = 444, n_alt = 1
   Insn 31: point = 445, n_alt = 0
   Insn 30: point = 446, n_alt = 0
   Insn 29: point = 447, n_alt = 1
   Insn 28: point = 448, n_alt = 0
   Insn 27: point = 449, n_alt = 0
   Insn 373: point = 450, n_alt = -2
	Hard reg 0 is preferable by r325 with profit 1000
   Insn 372: point = 452, n_alt = -2
	Hard reg 3 is preferable by r324 with profit 1000
   Insn 371: point = 454, n_alt = -2
	Hard reg 1 is preferable by r323 with profit 1000
   Insn 26: point = 456, n_alt = 0
   Insn 25: point = 457, n_alt = -2
   Insn 24: point = 459, n_alt = -2
   Insn 23: point = 461, n_alt = 0
   Insn 22: point = 462, n_alt = 0
   Insn 21: point = 464, n_alt = 0
   Insn 20: point = 465, n_alt = 1
   Insn 19: point = 466, n_alt = 0
   Insn 18: point = 467, n_alt = 0
   Insn 17: point = 468, n_alt = 0
  BB 2
   Insn 10: point = 470, n_alt = -1
   Insn 9: point = 470, n_alt = 1
   Insn 8: point = 470, n_alt = 1
   Insn 7: point = 471, n_alt = -2
   Insn 6: point = 472, n_alt = 0
   Insn 5: point = 472, n_alt = -2
   Insn 369: point = 472, n_alt = 0
  BB 11
   Insn 186: point = 473, n_alt = 0
  BB 10
   Insn 183: point = 474, n_alt = 3
   Insn 182: point = 475, n_alt = 0
   Insn 181: point = 476, n_alt = 3
   Insn 180: point = 478, n_alt = 2
   Insn 179: point = 480, n_alt = 0
  BB 9
   Insn 177: point = 482, n_alt = -1
   Insn 176: point = 482, n_alt = 1
   Insn 175: point = 482, n_alt = 1
   Insn 174: point = 483, n_alt = 0
   Insn 173: point = 485, n_alt = 0
   Insn 172: point = 487, n_alt = 0
   Insn 171: point = 488, n_alt = 0
 r82: [14..489] [5..11]
 r83: [470..471]
 r84: [458..462]
 r85: [444..446]
 r86: [440..441]
 r87: [437..439]
 r88: [432..434]
 r89: [419..421]
 r90: [412..414]
 r91: [407..409]
 r92: [403..404]
 r93: [400..402]
 r94: [364..366]
 r95: [359..361]
 r96: [354..356]
 r97: [349..351]
 r98: [344..346]
 r99: [339..341]
 r100: [337..338]
 r101: [335..336]
 r102: [333..334]
 r103: [330..332]
 r104: [321..325]
 r105: [321..322]
 r106: [315..316]
 r107: [6..7]
 r108: [477..478]
 r109: [474..476]
 r110: [308..309]
 r111: [306..307]
 r112: [301..302]
 r113: [296..300]
 r114: [298..299]
 r115: [296..297]
 r116: [291..292]
 r117: [289..290]
 r118: [284..285]
 r119: [279..283]
 r120: [281..282]
 r121: [279..280]
 r122: [274..275]
 r123: [272..273]
 r124: [267..268]
 r125: [262..266]
 r126: [264..265]
 r127: [262..263]
 r128: [257..258]
 r129: [149..256]
 r130: [252..253]
 r131: [250..251]
 r132: [248..249]
 r133: [243..247]
 r134: [145..240]
 r135: [236..237]
 r136: [234..235]
 r137: [232..233]
 r138: [230..231]
 r139: [225..229]
 r140: [141..222]
 r141: [218..219]
 r142: [216..217]
 r143: [214..215]
 r144: [212..213]
 r145: [207..211]
 r146: [139..206]
 r147: [202..203]
 r148: [200..201]
 r149: [198..199]
 r150: [196..197]
 r151: [191..195]
 r153: [184..185]
 r154: [182..183]
 r155: [180..181]
 r156: [178..179]
 r157: [173..177]
 r159: [166..167]
 r160: [164..165]
 r161: [162..163]
 r162: [160..161]
 r163: [155..159]
 r164: [143..152]
 r165: [135..136]
 r166: [27..134]
 r167: [130..131]
 r168: [128..129]
 r169: [126..127]
 r170: [121..125]
 r171: [23..118]
 r172: [114..115]
 r173: [112..113]
 r174: [110..111]
 r175: [108..109]
 r176: [103..107]
 r177: [19..100]
 r178: [96..97]
 r179: [94..95]
 r180: [92..93]
 r181: [90..91]
 r182: [85..89]
 r183: [17..84]
 r184: [80..81]
 r185: [78..79]
 r186: [76..77]
 r187: [74..75]
 r188: [69..73]
 r190: [62..63]
 r191: [60..61]
 r192: [58..59]
 r193: [56..57]
 r194: [51..55]
 r196: [44..45]
 r197: [42..43]
 r198: [40..41]
 r199: [38..39]
 r200: [33..37]
 r201: [21..30]
 r202: [12..13] [2..4]
 r203: [0..1]
 r204: [465..468]
 r205: [465..467]
 r206: [465..466]
 r207: [463..464]
 r208: [460..461]
 r209: [455..459]
 r210: [453..457]
 r211: [451..456]
 r212: [447..448]
 r213: [444..445]
 r214: [442..443]
 r215: [437..438]
 r216: [435..436]
 r217: [432..433]
 r218: [430..431]
 r219: [428..429]
 r220: [426..427]
 r221: [424..425]
 r222: [422..423]
 r223: [419..420]
 r224: [417..418]
 r225: [415..416]
 r226: [412..413]
 r227: [410..411]
 r228: [407..408]
 r229: [405..406]
 r230: [400..401]
 r231: [398..399]
 r232: [395..397]
 r233: [395..396]
 r234: [392..394]
 r235: [392..393]
 r236: [390..391]
 r237: [387..389]
 r238: [387..388]
 r239: [384..386]
 r240: [384..385]
 r241: [381..383]
 r242: [381..382]
 r243: [378..380]
 r244: [378..379]
 r245: [375..377]
 r246: [375..376]
 r247: [372..374]
 r248: [372..373]
 r249: [369..371]
 r250: [369..370]
 r251: [367..368]
 r252: [364..365]
 r253: [362..363]
 r254: [359..360]
 r255: [357..358]
 r256: [354..355]
 r257: [352..353]
 r258: [349..350]
 r259: [347..348]
 r260: [344..345]
 r261: [342..343]
 r262: [339..340]
 r263: [330..331]
 r264: [328..329]
 r265: [326..327]
 r266: [323..324]
 r267: [318..319]
 r268: [8..10]
 r269: [8..9]
 r270: [484..488]
 r271: [484..485]
 r272: [486..487]
 r273: [482..483]
 r274: [479..480]
 r275: [474..475]
 r276: [310..311]
 r277: [303..304]
 r278: [293..294]
 r279: [286..287]
 r280: [276..277]
 r281: [269..270]
 r282: [259..260]
 r283: [254..255]
 r284: [243..244]
 r285: [245..246]
 r286: [238..239]
 r287: [225..226]
 r288: [227..228]
 r289: [220..221]
 r290: [207..208]
 r291: [209..210]
 r292: [204..205]
 r293: [191..192]
 r294: [193..194]
 r295: [186..187]
 r296: [173..174]
 r297: [175..176]
 r298: [168..169]
 r299: [155..156]
 r300: [157..158]
 r301: [137..138]
 r302: [132..133]
 r303: [121..122]
 r304: [123..124]
 r305: [116..117]
 r306: [103..104]
 r307: [105..106]
 r308: [98..99]
 r309: [85..86]
 r310: [87..88]
 r311: [82..83]
 r312: [69..70]
 r313: [71..72]
 r314: [64..65]
 r315: [51..52]
 r316: [53..54]
 r317: [46..47]
 r318: [33..34]
 r319: [35..36]
 r320: [15..16]
 r323: [449..454]
 r324: [449..452]
 r325: [449..450]
 r326: [189..190]
 r327: [139..150]
 r328: [139..148]
 r329: [67..68]
 r330: [17..28]
 r331: [17..26]
 r332: [29..66]
 r334: [151..188]
 r336: [17..24]
 r337: [49..50]
 r338: [139..146]
 r339: [171..172]
 r340: [25..48]
 r342: [147..170]
 r344: [17..22]
 r345: [119..120]
 r346: [139..144]
 r347: [241..242]
 r348: [17..20]
 r349: [31..32]
 r350: [139..142]
 r351: [153..154]
 r352: [17..18]
 r353: [101..102]
 r354: [139..140]
 r355: [223..224]
Compressing live ranges: from 490 to 412 - 84%
Ranges after the compression:
 r82: [10..411] [4..7]
 r83: [398..399]
 r84: [390..393]
 r85: [378..379]
 r86: [374..375]
 r87: [372..373]
 r88: [368..369]
 r89: [356..357]
 r90: [350..351]
 r91: [346..347]
 r92: [342..343]
 r93: [340..341]
 r94: [314..315]
 r95: [310..311]
 r96: [306..307]
 r97: [302..303]
 r98: [298..299]
 r99: [294..295]
 r100: [292..293]
 r101: [290..291]
 r102: [288..289]
 r103: [286..287]
 r104: [278..281]
 r105: [278..279]
 r106: [274..275]
 r107: [4..5]
 r108: [402..403]
 r109: [400..401]
 r110: [270..271]
 r111: [268..269]
 r112: [264..265]
 r113: [260..263]
 r114: [262..263]
 r115: [260..261]
 r116: [256..257]
 r117: [254..255]
 r118: [250..251]
 r119: [246..249]
 r120: [248..249]
 r121: [246..247]
 r122: [242..243]
 r123: [240..241]
 r124: [236..237]
 r125: [232..235]
 r126: [234..235]
 r127: [232..233]
 r128: [228..229]
 r129: [132..227]
 r130: [224..225]
 r131: [222..223]
 r132: [220..221]
 r133: [216..219]
 r134: [128..213]
 r135: [210..211]
 r136: [208..209]
 r137: [206..207]
 r138: [204..205]
 r139: [200..203]
 r140: [124..197]
 r141: [194..195]
 r142: [192..193]
 r143: [190..191]
 r144: [188..189]
 r145: [184..187]
 r146: [122..183]
 r147: [180..181]
 r148: [178..179]
 r149: [176..177]
 r150: [174..175]
 r151: [170..173]
 r153: [164..165]
 r154: [162..163]
 r155: [160..161]
 r156: [158..159]
 r157: [154..157]
 r159: [148..149]
 r160: [146..147]
 r161: [144..145]
 r162: [142..143]
 r163: [138..141]
 r164: [126..135]
 r165: [118..119]
 r166: [22..117]
 r167: [114..115]
 r168: [112..113]
 r169: [110..111]
 r170: [106..109]
 r171: [18..103]
 r172: [100..101]
 r173: [98..99]
 r174: [96..97]
 r175: [94..95]
 r176: [90..93]
 r177: [14..87]
 r178: [84..85]
 r179: [82..83]
 r180: [80..81]
 r181: [78..79]
 r182: [74..77]
 r183: [12..73]
 r184: [70..71]
 r185: [68..69]
 r186: [66..67]
 r187: [64..65]
 r188: [60..63]
 r190: [54..55]
 r191: [52..53]
 r192: [50..51]
 r193: [48..49]
 r194: [44..47]
 r196: [38..39]
 r197: [36..37]
 r198: [34..35]
 r199: [32..33]
 r200: [28..31]
 r201: [16..25]
 r202: [8..9] [2..3]
 r203: [0..1]
 r204: [396..397]
 r205: [396..397]
 r206: [396..397]
 r207: [394..395]
 r208: [392..393]
 r209: [388..391]
 r210: [386..389]
 r211: [384..389]
 r212: [380..381]
 r213: [378..379]
 r214: [376..377]
 r215: [372..373]
 r216: [370..371]
 r217: [368..369]
 r218: [366..367]
 r219: [364..365]
 r220: [362..363]
 r221: [360..361]
 r222: [358..359]
 r223: [356..357]
 r224: [354..355]
 r225: [352..353]
 r226: [350..351]
 r227: [348..349]
 r228: [346..347]
 r229: [344..345]
 r230: [340..341]
 r231: [338..339]
 r232: [336..337]
 r233: [336..337]
 r234: [334..335]
 r235: [334..335]
 r236: [332..333]
 r237: [330..331]
 r238: [330..331]
 r239: [328..329]
 r240: [328..329]
 r241: [326..327]
 r242: [326..327]
 r243: [324..325]
 r244: [324..325]
 r245: [322..323]
 r246: [322..323]
 r247: [320..321]
 r248: [320..321]
 r249: [318..319]
 r250: [318..319]
 r251: [316..317]
 r252: [314..315]
 r253: [312..313]
 r254: [310..311]
 r255: [308..309]
 r256: [306..307]
 r257: [304..305]
 r258: [302..303]
 r259: [300..301]
 r260: [298..299]
 r261: [296..297]
 r262: [294..295]
 r263: [286..287]
 r264: [284..285]
 r265: [282..283]
 r266: [280..281]
 r267: [276..277]
 r268: [6..7]
 r269: [6..7]
 r270: [408..411]
 r271: [408..409]
 r272: [410..411]
 r273: [406..407]
 r274: [404..405]
 r275: [400..401]
 r276: [272..273]
 r277: [266..267]
 r278: [258..259]
 r279: [252..253]
 r280: [244..245]
 r281: [238..239]
 r282: [230..231]
 r283: [226..227]
 r284: [216..217]
 r285: [218..219]
 r286: [212..213]
 r287: [200..201]
 r288: [202..203]
 r289: [196..197]
 r290: [184..185]
 r291: [186..187]
 r292: [182..183]
 r293: [170..171]
 r294: [172..173]
 r295: [166..167]
 r296: [154..155]
 r297: [156..157]
 r298: [150..151]
 r299: [138..139]
 r300: [140..141]
 r301: [120..121]
 r302: [116..117]
 r303: [106..107]
 r304: [108..109]
 r305: [102..103]
 r306: [90..91]
 r307: [92..93]
 r308: [86..87]
 r309: [74..75]
 r310: [76..77]
 r311: [72..73]
 r312: [60..61]
 r313: [62..63]
 r314: [56..57]
 r315: [44..45]
 r316: [46..47]
 r317: [40..41]
 r318: [28..29]
 r319: [30..31]
 r320: [10..11]
 r323: [382..387]
 r324: [382..385]
 r325: [382..383]
 r326: [168..169]
 r327: [122..133]
 r328: [122..131]
 r329: [58..59]
 r330: [12..23]
 r331: [12..21]
 r332: [24..57]
 r334: [134..167]
 r336: [12..19]
 r337: [42..43]
 r338: [122..129]
 r339: [152..153]
 r340: [20..41]
 r342: [130..151]
 r344: [12..17]
 r345: [104..105]
 r346: [122..127]
 r347: [214..215]
 r348: [12..15]
 r349: [26..27]
 r350: [122..125]
 r351: [136..137]
 r352: [12..13]
 r353: [88..89]
 r354: [122..123]
 r355: [198..199]

********** Assignment #5: **********

	 Assigning to 352 (cl=INDEX_REGS, orig=177, freq=2000, tfirst=352, tfreq=2000)...
	 Trying 5: spill 183(freq=2000)	 Now best 5(cost=0, bad_spills=0, insn_pseudos=1)

      Spill r183(hr=5, freq=2000) for r352
	   Assign 5 to reload r352 (freq=2000)
	 Assigning to 353 (cl=GENERAL_REGS, orig=177, freq=2000, tfirst=353, tfreq=2000)...
	   Assign 0 to reload r353 (freq=2000)
	 Assigning to 354 (cl=INDEX_REGS, orig=140, freq=2000, tfirst=354, tfreq=2000)...
	 Trying 5: spill 146(freq=2000)	 Now best 5(cost=0, bad_spills=0, insn_pseudos=1)

      Spill r146(hr=5, freq=2000) for r354
	   Assign 5 to reload r354 (freq=2000)
	 Assigning to 355 (cl=GENERAL_REGS, orig=140, freq=2000, tfirst=355, tfreq=2000)...
	   Assign 0 to reload r355 (freq=2000)
  Reassigning non-reload pseudos
	   Assign 5 to r134 (freq=2000)
	   Assign 5 to r171 (freq=2000)

********** Pseudos coalescing #5: **********


********** Local #6: **********

	   Spilling non-eliminable hard regs: 7
      Creating newreg=356 from oldreg=183, assigning class GENERAL_REGS to address r356
	   Change to class INDEX_REGS for r356
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 350:  (0) a  (1) m  (2) m  (3) m  (4) m  (5) m  (6) m
  350: {asm_operands;clobber flags:CC;}
      REG_DEAD r352:SI
      REG_DEAD r348:SI
      REG_DEAD r344:SI
      REG_DEAD r336:SI
      REG_DEAD r330:SI
      REG_DEAD r331:SI
      REG_DEAD r183:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  404: r356:SI=r183:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 404:  (0) =r  (1) g {*movsi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=20,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=0,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            alt=1,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 322:  (0) r  (1) r  (2) le {*addsi_1}
      Creating newreg=357 from oldreg=183, assigning class GENERAL_REGS to r357
  322: {r357:SI=r182:SI+r309:SI;clobber flags:CC;}
      REG_DEAD r309:SI
      REG_DEAD r182:SI
      REG_UNUSED flags:CC
    Inserting insn reload after:
  405: r183:SI=r357:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 405:  (0) m  (1) re {*movsi_internal}
      Creating newreg=358 from oldreg=146, assigning class GENERAL_REGS to address r358
	   Change to class INDEX_REGS for r358
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 293:  (0) a  (1) m  (2) m  (3) m  (4) m  (5) m  (6) m
  293: {asm_operands;clobber flags:CC;}
      REG_DEAD r354:SI
      REG_DEAD r350:SI
      REG_DEAD r346:SI
      REG_DEAD r338:SI
      REG_DEAD r327:SI
      REG_DEAD r328:SI
      REG_DEAD r146:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  406: r358:SI=r146:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 406:  (0) =r  (1) g {*movsi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=20,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=0,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            alt=1,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 265:  (0) r  (1) r  (2) le {*addsi_1}
      Creating newreg=359 from oldreg=146, assigning class GENERAL_REGS to r359
  265: {r359:SI=r145:SI+r290:SI;clobber flags:CC;}
      REG_DEAD r290:SI
      REG_DEAD r145:SI
      REG_UNUSED flags:CC
    Inserting insn reload after:
  407: r146:SI=r359:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 407:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #8: **********

  BB 20
   Insn 361: point = 0, n_alt = -1
   Insn 360: point = 0, n_alt = -2
   Insn 356: point = 1, n_alt = -2
  BB 7
   Insn 365: point = 4, n_alt = -1
   Insn 162: point = 4, n_alt = 0
   Insn 161: point = 5, n_alt = 0
   Insn 160: point = 5, n_alt = 0
   Insn 159: point = 5, n_alt = -2
   Insn 158: point = 6, n_alt = 0
   Insn 157: point = 7, n_alt = 0
   Insn 156: point = 7, n_alt = 0
   Insn 155: point = 8, n_alt = 1
   Insn 154: point = 9, n_alt = 0
   Insn 153: point = 10, n_alt = 0
  BB 3
   Insn 363: point = 12, n_alt = -1
   Insn 12: point = 12, n_alt = 0
  BB 19
   Insn 353: point = 13, n_alt = 0
   Insn 352: point = 15, n_alt = 1
   Insn 351: point = 16, n_alt = 0
   Insn 350: point = 17, n_alt = 0
   Insn 404: point = 18, n_alt = 0
   Insn 400: point = 20, n_alt = 0
   Insn 396: point = 22, n_alt = 0
   Insn 392: point = 24, n_alt = -2
	Hard reg 5 is preferable by r344 with profit 1000
   Insn 384: point = 26, n_alt = -2
	   Creating copy r336<-r340@1000
   Insn 379: point = 28, n_alt = -2
	Hard reg 4 is preferable by r331 with profit 1000
   Insn 378: point = 30, n_alt = -2
	   Creating copy r330<-r332@1000
   Insn 397: point = 32, n_alt = 1
   Insn 349: point = 34, n_alt = 3
   Insn 348: point = 36, n_alt = -2
   Insn 347: point = 38, n_alt = 0
   Insn 346: point = 39, n_alt = 3
   Insn 345: point = 41, n_alt = 0
   Insn 344: point = 43, n_alt = 0
   Insn 343: point = 45, n_alt = -2
   Insn 342: point = 47, n_alt = 0
   Insn 341: point = 49, n_alt = 0
   Insn 385: point = 50, n_alt = -2
	   Creating copy r337->r340@1000
   Insn 340: point = 52, n_alt = 3
   Insn 339: point = 54, n_alt = -2
   Insn 338: point = 56, n_alt = 0
   Insn 337: point = 57, n_alt = 3
   Insn 336: point = 59, n_alt = 0
   Insn 335: point = 61, n_alt = 0
   Insn 334: point = 63, n_alt = -2
   Insn 333: point = 65, n_alt = 0
   Insn 332: point = 67, n_alt = 0
   Insn 377: point = 68, n_alt = -2
	   Creating copy r329->r332@1000
   Insn 331: point = 70, n_alt = 3
   Insn 330: point = 72, n_alt = -2
   Insn 329: point = 74, n_alt = 0
   Insn 328: point = 75, n_alt = 3
   Insn 327: point = 77, n_alt = 0
   Insn 326: point = 79, n_alt = 0
   Insn 325: point = 81, n_alt = -2
   Insn 324: point = 83, n_alt = 0
   Insn 323: point = 85, n_alt = 0
   Insn 405: point = 86, n_alt = 1
   Insn 322: point = 88, n_alt = 3
   Insn 321: point = 90, n_alt = -2
   Insn 320: point = 92, n_alt = 0
   Insn 319: point = 93, n_alt = 3
   Insn 318: point = 95, n_alt = 0
   Insn 317: point = 97, n_alt = 0
   Insn 316: point = 99, n_alt = -2
   Insn 315: point = 101, n_alt = 0
   Insn 314: point = 103, n_alt = 0
   Insn 401: point = 104, n_alt = 1
   Insn 313: point = 106, n_alt = 3
   Insn 312: point = 108, n_alt = -2
   Insn 311: point = 110, n_alt = 0
   Insn 310: point = 111, n_alt = 3
   Insn 309: point = 113, n_alt = 0
   Insn 308: point = 115, n_alt = 0
   Insn 307: point = 117, n_alt = -2
   Insn 306: point = 119, n_alt = 0
   Insn 305: point = 121, n_alt = 0
   Insn 393: point = 122, n_alt = -2
	Hard reg 5 is preferable by r345 with profit 1000
   Insn 304: point = 124, n_alt = 3
   Insn 303: point = 126, n_alt = -2
   Insn 302: point = 128, n_alt = 0
   Insn 301: point = 129, n_alt = 1
   Insn 300: point = 131, n_alt = 0
   Insn 299: point = 133, n_alt = -2
   Insn 298: point = 135, n_alt = 0
   Insn 297: point = 137, n_alt = 0
   Insn 296: point = 138, n_alt = -2
   Insn 295: point = 140, n_alt = 0
   Insn 294: point = 142, n_alt = 0
   Insn 293: point = 143, n_alt = 0
   Insn 406: point = 144, n_alt = 0
   Insn 402: point = 146, n_alt = 0
   Insn 398: point = 148, n_alt = 0
   Insn 394: point = 150, n_alt = -2
	Hard reg 5 is preferable by r346 with profit 1000
   Insn 386: point = 152, n_alt = -2
	   Creating copy r338<-r342@1000
   Insn 376: point = 154, n_alt = -2
	Hard reg 4 is preferable by r328 with profit 1000
   Insn 375: point = 156, n_alt = -2
	   Creating copy r327<-r334@1000
   Insn 399: point = 158, n_alt = 1
   Insn 292: point = 160, n_alt = 3
   Insn 291: point = 162, n_alt = -2
   Insn 290: point = 164, n_alt = 0
   Insn 289: point = 165, n_alt = 3
   Insn 288: point = 167, n_alt = 0
   Insn 287: point = 169, n_alt = 0
   Insn 286: point = 171, n_alt = -2
   Insn 285: point = 173, n_alt = 0
   Insn 284: point = 175, n_alt = 0
   Insn 387: point = 176, n_alt = -2
	   Creating copy r339->r342@1000
   Insn 283: point = 178, n_alt = 3
   Insn 282: point = 180, n_alt = -2
   Insn 281: point = 182, n_alt = 0
   Insn 280: point = 183, n_alt = 3
   Insn 279: point = 185, n_alt = 0
   Insn 278: point = 187, n_alt = 0
   Insn 277: point = 189, n_alt = -2
   Insn 276: point = 191, n_alt = 0
   Insn 275: point = 193, n_alt = 0
   Insn 374: point = 194, n_alt = -2
	   Creating copy r326->r334@1000
   Insn 274: point = 196, n_alt = 3
   Insn 273: point = 198, n_alt = -2
   Insn 272: point = 200, n_alt = 0
   Insn 271: point = 201, n_alt = 3
   Insn 270: point = 203, n_alt = 0
   Insn 269: point = 205, n_alt = 0
   Insn 268: point = 207, n_alt = -2
   Insn 267: point = 209, n_alt = 0
   Insn 266: point = 211, n_alt = 0
   Insn 407: point = 212, n_alt = 1
   Insn 265: point = 214, n_alt = 3
   Insn 264: point = 216, n_alt = -2
   Insn 263: point = 218, n_alt = 0
   Insn 262: point = 219, n_alt = 3
   Insn 261: point = 221, n_alt = 0
   Insn 260: point = 223, n_alt = 0
   Insn 259: point = 225, n_alt = -2
   Insn 258: point = 227, n_alt = 0
   Insn 257: point = 229, n_alt = 0
   Insn 403: point = 230, n_alt = 1
   Insn 256: point = 232, n_alt = 3
   Insn 255: point = 234, n_alt = -2
   Insn 254: point = 236, n_alt = 0
   Insn 253: point = 237, n_alt = 3
   Insn 252: point = 239, n_alt = 0
   Insn 251: point = 241, n_alt = 0
   Insn 250: point = 243, n_alt = -2
   Insn 249: point = 245, n_alt = 0
   Insn 248: point = 247, n_alt = 0
   Insn 395: point = 248, n_alt = -2
	Hard reg 5 is preferable by r347 with profit 1000
   Insn 247: point = 250, n_alt = 3
   Insn 246: point = 252, n_alt = -2
   Insn 245: point = 254, n_alt = 0
   Insn 244: point = 255, n_alt = 1
   Insn 243: point = 257, n_alt = 0
   Insn 242: point = 259, n_alt = -2
   Insn 241: point = 261, n_alt = 0
   Insn 240: point = 263, n_alt = 0
   Insn 239: point = 264, n_alt = -2
   Insn 238: point = 266, n_alt = 0
   Insn 237: point = 268, n_alt = 0
  BB 18
   Insn 234: point = 270, n_alt = 3
   Insn 233: point = 271, n_alt = 0
   Insn 232: point = 273, n_alt = 2
   Insn 231: point = 274, n_alt = 0
   Insn 230: point = 276, n_alt = 0
   Insn 229: point = 278, n_alt = 0
  BB 17
   Insn 227: point = 280, n_alt = -1
   Insn 226: point = 280, n_alt = 0
   Insn 225: point = 281, n_alt = 0
   Insn 224: point = 283, n_alt = 0
   Insn 223: point = 285, n_alt = 0
  BB 16
   Insn 220: point = 287, n_alt = 3
   Insn 219: point = 288, n_alt = 0
   Insn 218: point = 290, n_alt = 2
   Insn 217: point = 291, n_alt = 0
   Insn 216: point = 293, n_alt = 0
   Insn 215: point = 295, n_alt = 0
  BB 15
   Insn 213: point = 297, n_alt = -1
   Insn 212: point = 297, n_alt = 0
   Insn 211: point = 298, n_alt = 0
   Insn 210: point = 300, n_alt = 0
   Insn 209: point = 302, n_alt = 0
  BB 14
   Insn 206: point = 304, n_alt = 3
   Insn 205: point = 305, n_alt = 0
   Insn 204: point = 307, n_alt = 2
   Insn 203: point = 308, n_alt = 0
   Insn 202: point = 310, n_alt = 0
   Insn 201: point = 312, n_alt = 0
  BB 13
   Insn 199: point = 314, n_alt = -1
   Insn 198: point = 314, n_alt = 0
   Insn 197: point = 315, n_alt = 0
   Insn 196: point = 317, n_alt = 0
   Insn 195: point = 319, n_alt = 0
  BB 12
   Insn 193: point = 321, n_alt = -1
   Insn 192: point = 321, n_alt = 0
  BB 8
   Insn 367: point = 322, n_alt = -1
   Insn 167: point = 322, n_alt = 1
  BB 6
   Insn 151: point = 323, n_alt = -1
   Insn 150: point = 323, n_alt = 0
   Insn 149: point = 324, n_alt = -2
   Insn 148: point = 325, n_alt = 0
   Insn 147: point = 325, n_alt = 0
   Insn 146: point = 325, n_alt = 0
   Insn 145: point = 325, n_alt = 0
   Insn 144: point = 325, n_alt = 0
  BB 5
   Insn 141: point = 326, n_alt = 0
   Insn 140: point = 327, n_alt = 0
  BB 4
   Insn 138: point = 329, n_alt = -1
   Insn 137: point = 329, n_alt = 0
   Insn 136: point = 330, n_alt = 0
   Insn 135: point = 332, n_alt = 0
   Insn 134: point = 333, n_alt = 0
   Insn 133: point = 335, n_alt = 0
   Insn 132: point = 336, n_alt = 1
   Insn 131: point = 337, n_alt = 0
   Insn 130: point = 338, n_alt = 1
   Insn 129: point = 339, n_alt = 0
   Insn 128: point = 340, n_alt = -2
   Insn 127: point = 342, n_alt = 0
   Insn 126: point = 344, n_alt = 0
   Insn 125: point = 346, n_alt = 0
   Insn 124: point = 347, n_alt = 1
   Insn 123: point = 348, n_alt = 0
   Insn 122: point = 349, n_alt = 0
   Insn 121: point = 351, n_alt = 0
   Insn 120: point = 352, n_alt = 1
   Insn 119: point = 353, n_alt = 0
   Insn 118: point = 354, n_alt = 0
   Insn 117: point = 356, n_alt = 0
   Insn 116: point = 357, n_alt = 1
   Insn 115: point = 358, n_alt = 0
   Insn 114: point = 359, n_alt = 0
   Insn 113: point = 361, n_alt = 0
   Insn 112: point = 362, n_alt = 1
   Insn 111: point = 363, n_alt = 0
   Insn 110: point = 364, n_alt = 0
   Insn 109: point = 366, n_alt = 0
   Insn 108: point = 367, n_alt = 1
   Insn 107: point = 368, n_alt = 0
   Insn 106: point = 369, n_alt = 0
   Insn 105: point = 371, n_alt = 0
   Insn 104: point = 372, n_alt = 1
   Insn 103: point = 373, n_alt = 0
   Insn 102: point = 374, n_alt = 0
   Insn 101: point = 376, n_alt = 0
   Insn 100: point = 377, n_alt = 1
   Insn 99: point = 378, n_alt = 0
   Insn 98: point = 379, n_alt = 0
   Insn 97: point = 380, n_alt = 1
   Insn 96: point = 381, n_alt = 0
   Insn 95: point = 382, n_alt = 0
   Insn 94: point = 383, n_alt = 1
   Insn 93: point = 384, n_alt = 0
   Insn 92: point = 385, n_alt = 0
   Insn 91: point = 386, n_alt = 1
   Insn 90: point = 387, n_alt = 0
   Insn 89: point = 388, n_alt = 0
   Insn 88: point = 389, n_alt = 1
   Insn 87: point = 390, n_alt = 0
   Insn 86: point = 391, n_alt = 0
   Insn 85: point = 392, n_alt = 1
   Insn 84: point = 393, n_alt = 0
   Insn 83: point = 394, n_alt = 0
   Insn 82: point = 395, n_alt = 1
   Insn 81: point = 396, n_alt = 0
   Insn 80: point = 397, n_alt = 0
   Insn 79: point = 398, n_alt = 1
   Insn 78: point = 399, n_alt = 0
   Insn 77: point = 400, n_alt = 1
   Insn 76: point = 401, n_alt = 0
   Insn 75: point = 402, n_alt = 0
   Insn 74: point = 403, n_alt = 1
   Insn 73: point = 404, n_alt = 0
   Insn 72: point = 405, n_alt = 0
   Insn 71: point = 406, n_alt = 1
   Insn 70: point = 407, n_alt = 0
   Insn 69: point = 408, n_alt = 1
   Insn 68: point = 409, n_alt = 0
   Insn 67: point = 410, n_alt = 3
   Insn 66: point = 412, n_alt = 0
   Insn 65: point = 413, n_alt = 1
   Insn 64: point = 414, n_alt = 0
   Insn 63: point = 415, n_alt = 1
   Insn 62: point = 416, n_alt = 0
   Insn 61: point = 417, n_alt = 0
   Insn 60: point = 419, n_alt = 0
   Insn 59: point = 420, n_alt = 1
   Insn 58: point = 421, n_alt = 0
   Insn 57: point = 422, n_alt = 0
   Insn 56: point = 424, n_alt = 0
   Insn 55: point = 425, n_alt = 1
   Insn 54: point = 426, n_alt = 0
   Insn 53: point = 427, n_alt = 1
   Insn 52: point = 428, n_alt = 0
   Insn 51: point = 429, n_alt = 0
   Insn 50: point = 431, n_alt = 0
   Insn 49: point = 432, n_alt = 1
   Insn 48: point = 433, n_alt = 0
   Insn 47: point = 434, n_alt = 1
   Insn 46: point = 435, n_alt = 0
   Insn 45: point = 436, n_alt = 1
   Insn 44: point = 437, n_alt = 0
   Insn 43: point = 438, n_alt = 1
   Insn 42: point = 439, n_alt = 0
   Insn 41: point = 440, n_alt = 1
   Insn 40: point = 441, n_alt = 0
   Insn 39: point = 442, n_alt = 0
   Insn 38: point = 444, n_alt = 0
   Insn 37: point = 445, n_alt = 1
   Insn 36: point = 446, n_alt = 0
   Insn 35: point = 447, n_alt = 0
   Insn 34: point = 449, n_alt = 0
   Insn 33: point = 451, n_alt = 0
   Insn 32: point = 452, n_alt = 1
   Insn 31: point = 453, n_alt = 0
   Insn 30: point = 454, n_alt = 0
   Insn 29: point = 455, n_alt = 1
   Insn 28: point = 456, n_alt = 0
   Insn 27: point = 457, n_alt = 0
   Insn 373: point = 458, n_alt = -2
	Hard reg 0 is preferable by r325 with profit 1000
   Insn 372: point = 460, n_alt = -2
	Hard reg 3 is preferable by r324 with profit 1000
   Insn 371: point = 462, n_alt = -2
	Hard reg 1 is preferable by r323 with profit 1000
   Insn 26: point = 464, n_alt = 0
   Insn 25: point = 465, n_alt = -2
   Insn 24: point = 467, n_alt = -2
   Insn 23: point = 469, n_alt = 0
   Insn 22: point = 470, n_alt = 0
   Insn 21: point = 472, n_alt = 0
   Insn 20: point = 473, n_alt = 1
   Insn 19: point = 474, n_alt = 0
   Insn 18: point = 475, n_alt = 0
   Insn 17: point = 476, n_alt = 0
  BB 2
   Insn 10: point = 478, n_alt = -1
   Insn 9: point = 478, n_alt = 1
   Insn 8: point = 478, n_alt = 1
   Insn 7: point = 479, n_alt = -2
   Insn 6: point = 480, n_alt = 0
   Insn 5: point = 480, n_alt = -2
   Insn 369: point = 480, n_alt = 0
  BB 11
   Insn 186: point = 481, n_alt = 0
  BB 10
   Insn 183: point = 482, n_alt = 3
   Insn 182: point = 483, n_alt = 0
   Insn 181: point = 484, n_alt = 3
   Insn 180: point = 486, n_alt = 2
   Insn 179: point = 488, n_alt = 0
  BB 9
   Insn 177: point = 490, n_alt = -1
   Insn 176: point = 490, n_alt = 1
   Insn 175: point = 490, n_alt = 1
   Insn 174: point = 491, n_alt = 0
   Insn 173: point = 493, n_alt = 0
   Insn 172: point = 495, n_alt = 0
   Insn 171: point = 496, n_alt = 0
 r82: [14..497] [5..11]
 r83: [478..479]
 r84: [466..470]
 r85: [452..454]
 r86: [448..449]
 r87: [445..447]
 r88: [440..442]
 r89: [427..429]
 r90: [420..422]
 r91: [415..417]
 r92: [411..412]
 r93: [408..410]
 r94: [372..374]
 r95: [367..369]
 r96: [362..364]
 r97: [357..359]
 r98: [352..354]
 r99: [347..349]
 r100: [345..346]
 r101: [343..344]
 r102: [341..342]
 r103: [338..340]
 r104: [329..333]
 r105: [329..330]
 r106: [323..324]
 r107: [6..7]
 r108: [485..486]
 r109: [482..484]
 r110: [316..317]
 r111: [314..315]
 r112: [309..310]
 r113: [304..308]
 r114: [306..307]
 r115: [304..305]
 r116: [299..300]
 r117: [297..298]
 r118: [292..293]
 r119: [287..291]
 r120: [289..290]
 r121: [287..288]
 r122: [282..283]
 r123: [280..281]
 r124: [275..276]
 r125: [270..274]
 r126: [272..273]
 r127: [270..271]
 r128: [265..266]
 r129: [155..264]
 r130: [260..261]
 r131: [258..259]
 r132: [256..257]
 r133: [251..255]
 r134: [151..248]
 r135: [244..245]
 r136: [242..243]
 r137: [240..241]
 r138: [238..239]
 r139: [233..237]
 r140: [147..230]
 r141: [226..227]
 r142: [224..225]
 r143: [222..223]
 r144: [220..221]
 r145: [215..219]
 r146: [145..212]
 r147: [208..209]
 r148: [206..207]
 r149: [204..205]
 r150: [202..203]
 r151: [197..201]
 r153: [190..191]
 r154: [188..189]
 r155: [186..187]
 r156: [184..185]
 r157: [179..183]
 r159: [172..173]
 r160: [170..171]
 r161: [168..169]
 r162: [166..167]
 r163: [161..165]
 r164: [149..158]
 r165: [139..140]
 r166: [29..138]
 r167: [134..135]
 r168: [132..133]
 r169: [130..131]
 r170: [125..129]
 r171: [25..122]
 r172: [118..119]
 r173: [116..117]
 r174: [114..115]
 r175: [112..113]
 r176: [107..111]
 r177: [21..104]
 r178: [100..101]
 r179: [98..99]
 r180: [96..97]
 r181: [94..95]
 r182: [89..93]
 r183: [19..86]
 r184: [82..83]
 r185: [80..81]
 r186: [78..79]
 r187: [76..77]
 r188: [71..75]
 r190: [64..65]
 r191: [62..63]
 r192: [60..61]
 r193: [58..59]
 r194: [53..57]
 r196: [46..47]
 r197: [44..45]
 r198: [42..43]
 r199: [40..41]
 r200: [35..39]
 r201: [23..32]
 r202: [12..13] [2..4]
 r203: [0..1]
 r204: [473..476]
 r205: [473..475]
 r206: [473..474]
 r207: [471..472]
 r208: [468..469]
 r209: [463..467]
 r210: [461..465]
 r211: [459..464]
 r212: [455..456]
 r213: [452..453]
 r214: [450..451]
 r215: [445..446]
 r216: [443..444]
 r217: [440..441]
 r218: [438..439]
 r219: [436..437]
 r220: [434..435]
 r221: [432..433]
 r222: [430..431]
 r223: [427..428]
 r224: [425..426]
 r225: [423..424]
 r226: [420..421]
 r227: [418..419]
 r228: [415..416]
 r229: [413..414]
 r230: [408..409]
 r231: [406..407]
 r232: [403..405]
 r233: [403..404]
 r234: [400..402]
 r235: [400..401]
 r236: [398..399]
 r237: [395..397]
 r238: [395..396]
 r239: [392..394]
 r240: [392..393]
 r241: [389..391]
 r242: [389..390]
 r243: [386..388]
 r244: [386..387]
 r245: [383..385]
 r246: [383..384]
 r247: [380..382]
 r248: [380..381]
 r249: [377..379]
 r250: [377..378]
 r251: [375..376]
 r252: [372..373]
 r253: [370..371]
 r254: [367..368]
 r255: [365..366]
 r256: [362..363]
 r257: [360..361]
 r258: [357..358]
 r259: [355..356]
 r260: [352..353]
 r261: [350..351]
 r262: [347..348]
 r263: [338..339]
 r264: [336..337]
 r265: [334..335]
 r266: [331..332]
 r267: [326..327]
 r268: [8..10]
 r269: [8..9]
 r270: [492..496]
 r271: [492..493]
 r272: [494..495]
 r273: [490..491]
 r274: [487..488]
 r275: [482..483]
 r276: [318..319]
 r277: [311..312]
 r278: [301..302]
 r279: [294..295]
 r280: [284..285]
 r281: [277..278]
 r282: [267..268]
 r283: [262..263]
 r284: [251..252]
 r285: [253..254]
 r286: [246..247]
 r287: [233..234]
 r288: [235..236]
 r289: [228..229]
 r290: [215..216]
 r291: [217..218]
 r292: [210..211]
 r293: [197..198]
 r294: [199..200]
 r295: [192..193]
 r296: [179..180]
 r297: [181..182]
 r298: [174..175]
 r299: [161..162]
 r300: [163..164]
 r301: [141..142]
 r302: [136..137]
 r303: [125..126]
 r304: [127..128]
 r305: [120..121]
 r306: [107..108]
 r307: [109..110]
 r308: [102..103]
 r309: [89..90]
 r310: [91..92]
 r311: [84..85]
 r312: [71..72]
 r313: [73..74]
 r314: [66..67]
 r315: [53..54]
 r316: [55..56]
 r317: [48..49]
 r318: [35..36]
 r319: [37..38]
 r320: [15..16]
 r323: [457..462]
 r324: [457..460]
 r325: [457..458]
 r326: [195..196]
 r327: [143..156]
 r328: [143..154]
 r329: [69..70]
 r330: [17..30]
 r331: [17..28]
 r332: [31..68]
 r334: [157..194]
 r336: [17..26]
 r337: [51..52]
 r338: [143..152]
 r339: [177..178]
 r340: [27..50]
 r342: [153..176]
 r344: [17..24]
 r345: [123..124]
 r346: [143..150]
 r347: [249..250]
 r348: [17..22]
 r349: [33..34]
 r350: [143..148]
 r351: [159..160]
 r352: [17..20]
 r353: [105..106]
 r354: [143..146]
 r355: [231..232]
 r356: [17..18]
 r357: [87..88]
 r358: [143..144]
 r359: [213..214]
Compressing live ranges: from 498 to 420 - 84%
Ranges after the compression:
 r82: [10..419] [4..7]
 r83: [406..407]
 r84: [398..401]
 r85: [386..387]
 r86: [382..383]
 r87: [380..381]
 r88: [376..377]
 r89: [364..365]
 r90: [358..359]
 r91: [354..355]
 r92: [350..351]
 r93: [348..349]
 r94: [322..323]
 r95: [318..319]
 r96: [314..315]
 r97: [310..311]
 r98: [306..307]
 r99: [302..303]
 r100: [300..301]
 r101: [298..299]
 r102: [296..297]
 r103: [294..295]
 r104: [286..289]
 r105: [286..287]
 r106: [282..283]
 r107: [4..5]
 r108: [410..411]
 r109: [408..409]
 r110: [278..279]
 r111: [276..277]
 r112: [272..273]
 r113: [268..271]
 r114: [270..271]
 r115: [268..269]
 r116: [264..265]
 r117: [262..263]
 r118: [258..259]
 r119: [254..257]
 r120: [256..257]
 r121: [254..255]
 r122: [250..251]
 r123: [248..249]
 r124: [244..245]
 r125: [240..243]
 r126: [242..243]
 r127: [240..241]
 r128: [236..237]
 r129: [138..235]
 r130: [232..233]
 r131: [230..231]
 r132: [228..229]
 r133: [224..227]
 r134: [134..221]
 r135: [218..219]
 r136: [216..217]
 r137: [214..215]
 r138: [212..213]
 r139: [208..211]
 r140: [130..205]
 r141: [202..203]
 r142: [200..201]
 r143: [198..199]
 r144: [196..197]
 r145: [192..195]
 r146: [128..189]
 r147: [186..187]
 r148: [184..185]
 r149: [182..183]
 r150: [180..181]
 r151: [176..179]
 r153: [170..171]
 r154: [168..169]
 r155: [166..167]
 r156: [164..165]
 r157: [160..163]
 r159: [154..155]
 r160: [152..153]
 r161: [150..151]
 r162: [148..149]
 r163: [144..147]
 r164: [132..141]
 r165: [122..123]
 r166: [24..121]
 r167: [118..119]
 r168: [116..117]
 r169: [114..115]
 r170: [110..113]
 r171: [20..107]
 r172: [104..105]
 r173: [102..103]
 r174: [100..101]
 r175: [98..99]
 r176: [94..97]
 r177: [16..91]
 r178: [88..89]
 r179: [86..87]
 r180: [84..85]
 r181: [82..83]
 r182: [78..81]
 r183: [14..75]
 r184: [72..73]
 r185: [70..71]
 r186: [68..69]
 r187: [66..67]
 r188: [62..65]
 r190: [56..57]
 r191: [54..55]
 r192: [52..53]
 r193: [50..51]
 r194: [46..49]
 r196: [40..41]
 r197: [38..39]
 r198: [36..37]
 r199: [34..35]
 r200: [30..33]
 r201: [18..27]
 r202: [8..9] [2..3]
 r203: [0..1]
 r204: [404..405]
 r205: [404..405]
 r206: [404..405]
 r207: [402..403]
 r208: [400..401]
 r209: [396..399]
 r210: [394..397]
 r211: [392..397]
 r212: [388..389]
 r213: [386..387]
 r214: [384..385]
 r215: [380..381]
 r216: [378..379]
 r217: [376..377]
 r218: [374..375]
 r219: [372..373]
 r220: [370..371]
 r221: [368..369]
 r222: [366..367]
 r223: [364..365]
 r224: [362..363]
 r225: [360..361]
 r226: [358..359]
 r227: [356..357]
 r228: [354..355]
 r229: [352..353]
 r230: [348..349]
 r231: [346..347]
 r232: [344..345]
 r233: [344..345]
 r234: [342..343]
 r235: [342..343]
 r236: [340..341]
 r237: [338..339]
 r238: [338..339]
 r239: [336..337]
 r240: [336..337]
 r241: [334..335]
 r242: [334..335]
 r243: [332..333]
 r244: [332..333]
 r245: [330..331]
 r246: [330..331]
 r247: [328..329]
 r248: [328..329]
 r249: [326..327]
 r250: [326..327]
 r251: [324..325]
 r252: [322..323]
 r253: [320..321]
 r254: [318..319]
 r255: [316..317]
 r256: [314..315]
 r257: [312..313]
 r258: [310..311]
 r259: [308..309]
 r260: [306..307]
 r261: [304..305]
 r262: [302..303]
 r263: [294..295]
 r264: [292..293]
 r265: [290..291]
 r266: [288..289]
 r267: [284..285]
 r268: [6..7]
 r269: [6..7]
 r270: [416..419]
 r271: [416..417]
 r272: [418..419]
 r273: [414..415]
 r274: [412..413]
 r275: [408..409]
 r276: [280..281]
 r277: [274..275]
 r278: [266..267]
 r279: [260..261]
 r280: [252..253]
 r281: [246..247]
 r282: [238..239]
 r283: [234..235]
 r284: [224..225]
 r285: [226..227]
 r286: [220..221]
 r287: [208..209]
 r288: [210..211]
 r289: [204..205]
 r290: [192..193]
 r291: [194..195]
 r292: [188..189]
 r293: [176..177]
 r294: [178..179]
 r295: [172..173]
 r296: [160..161]
 r297: [162..163]
 r298: [156..157]
 r299: [144..145]
 r300: [146..147]
 r301: [124..125]
 r302: [120..121]
 r303: [110..111]
 r304: [112..113]
 r305: [106..107]
 r306: [94..95]
 r307: [96..97]
 r308: [90..91]
 r309: [78..79]
 r310: [80..81]
 r311: [74..75]
 r312: [62..63]
 r313: [64..65]
 r314: [58..59]
 r315: [46..47]
 r316: [48..49]
 r317: [42..43]
 r318: [30..31]
 r319: [32..33]
 r320: [10..11]
 r323: [390..395]
 r324: [390..393]
 r325: [390..391]
 r326: [174..175]
 r327: [126..139]
 r328: [126..137]
 r329: [60..61]
 r330: [12..25]
 r331: [12..23]
 r332: [26..59]
 r334: [140..173]
 r336: [12..21]
 r337: [44..45]
 r338: [126..135]
 r339: [158..159]
 r340: [22..43]
 r342: [136..157]
 r344: [12..19]
 r345: [108..109]
 r346: [126..133]
 r347: [222..223]
 r348: [12..17]
 r349: [28..29]
 r350: [126..131]
 r351: [142..143]
 r352: [12..15]
 r353: [92..93]
 r354: [126..129]
 r355: [206..207]
 r356: [12..13]
 r357: [76..77]
 r358: [126..127]
 r359: [190..191]

********** Assignment #6: **********

	 Assigning to 356 (cl=INDEX_REGS, orig=183, freq=2000, tfirst=356, tfreq=2000)...
	 Assigning to 357 (cl=GENERAL_REGS, orig=183, freq=2000, tfirst=357, tfreq=2000)...
	   Assign 0 to reload r357 (freq=2000)
	 Assigning to 358 (cl=INDEX_REGS, orig=146, freq=2000, tfirst=358, tfreq=2000)...
	 Assigning to 359 (cl=GENERAL_REGS, orig=146, freq=2000, tfirst=359, tfreq=2000)...
	   Assign 0 to reload r359 (freq=2000)
  2nd iter for reload pseudo assignments:
	 Reload r356 assignment failure
	 Reload r358 assignment failure
	  Spill  r82(hr=6, freq=30000)
	  Spill reload  r330(hr=2, freq=2000)
	  Spill reload  r331(hr=0, freq=2000)
	  Spill reload  r336(hr=3, freq=2000)
	  Spill reload  r344(hr=1, freq=2000)
	  Spill reload  r348(hr=4, freq=2000)
	  Spill reload  r352(hr=5, freq=2000)
	  Spill reload  r327(hr=2, freq=2000)
	  Spill reload  r328(hr=0, freq=2000)
	  Spill reload  r338(hr=3, freq=2000)
	  Spill reload  r346(hr=1, freq=2000)
	  Spill reload  r350(hr=4, freq=2000)
	  Spill reload  r354(hr=5, freq=2000)
	 Assigning to 328 (cl=AREG, orig=129, freq=2000, tfirst=328, tfreq=2000)...
	   Assign 0 to reload r328 (freq=2000)
	 Assigning to 331 (cl=AREG, orig=166, freq=2000, tfirst=331, tfreq=2000)...
	   Assign 0 to reload r331 (freq=2000)
	 Assigning to 327 (cl=INDEX_REGS, orig=152, freq=2000, tfirst=327, tfreq=2000)...
	   Assign 1 to reload r327 (freq=2000)
	 Assigning to 330 (cl=INDEX_REGS, orig=189, freq=2000, tfirst=330, tfreq=2000)...
	   Assign 1 to reload r330 (freq=2000)
	 Assigning to 336 (cl=INDEX_REGS, orig=195, freq=2000, tfirst=336, tfreq=2000)...
	   Assign 2 to reload r336 (freq=2000)
	 Assigning to 338 (cl=INDEX_REGS, orig=158, freq=2000, tfirst=338, tfreq=2000)...
	   Assign 2 to reload r338 (freq=2000)
	 Assigning to 344 (cl=INDEX_REGS, orig=171, freq=2000, tfirst=344, tfreq=2000)...
	   Assign 3 to reload r344 (freq=2000)
	 Assigning to 346 (cl=INDEX_REGS, orig=134, freq=2000, tfirst=346, tfreq=2000)...
	   Assign 3 to reload r346 (freq=2000)
	 Assigning to 348 (cl=INDEX_REGS, orig=201, freq=2000, tfirst=348, tfreq=2000)...
	   Assign 4 to reload r348 (freq=2000)
	 Assigning to 350 (cl=INDEX_REGS, orig=164, freq=2000, tfirst=350, tfreq=2000)...
	   Assign 4 to reload r350 (freq=2000)
	 Assigning to 352 (cl=INDEX_REGS, orig=177, freq=2000, tfirst=352, tfreq=2000)...
	   Assign 5 to reload r352 (freq=2000)
	 Assigning to 354 (cl=INDEX_REGS, orig=140, freq=2000, tfirst=354, tfreq=2000)...
	   Assign 5 to reload r354 (freq=2000)
	 Assigning to 356 (cl=INDEX_REGS, orig=183, freq=2000, tfirst=356, tfreq=2000)...
	   Assign 6 to reload r356 (freq=2000)
	 Assigning to 358 (cl=INDEX_REGS, orig=146, freq=2000, tfirst=358, tfreq=2000)...
	   Assign 6 to reload r358 (freq=2000)
  Reassigning non-reload pseudos
	   Assign 6 to r140 (freq=2000)
	   Assign 6 to r177 (freq=2000)

********** Pseudos coalescing #6: **********


********** Local #7: **********

	   Spilling non-eliminable hard regs: 7
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 369:  (0) =r {*set_got}
      Creating newreg=360 from oldreg=82, assigning class GENERAL_REGS to r360
  369: {r360:SI=unspec[0] 14;clobber flags:CC;}
      REG_UNUSED flags:CC
      REG_CFA_FLUSH_QUEUE (nil)
    Inserting insn reload after:
  408: r82:SI=r360:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 408:  (0) m  (1) re {*movsi_internal}
      Creating newreg=361 from oldreg=82, assigning class GENERAL_REGS to address r361
	   Change to class INDEX_REGS for r361
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 353:  (0) =r  (1) g {*movsi_internal}
  353: r202:SI=[r361:SI+const(unspec[`last_pid'] 1)]
      REG_DEAD r82:SI
    Inserting insn reload before:
  409: r361:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 409:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=362 from oldreg=82, assigning class GENERAL_REGS to address r362
	   Change to class INDEX_REGS for r362
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 347:  (0) =r  (1) g {*movsi_internal}
  347: r319:SI=[r362:SI+const(unspec[`gdt'] 0)]
    Inserting insn reload before:
  410: r362:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 410:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=363 from oldreg=82, assigning class GENERAL_REGS to address r363
	   Change to class INDEX_REGS for r363
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 338:  (0) =r  (1) g {*movsi_internal}
  338: r316:SI=[r363:SI+const(unspec[`gdt'] 0)]
    Inserting insn reload before:
  411: r363:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 411:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=364 from oldreg=82, assigning class GENERAL_REGS to address r364
	   Change to class INDEX_REGS for r364
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 329:  (0) =r  (1) g {*movsi_internal}
  329: r313:SI=[r364:SI+const(unspec[`gdt'] 0)]
    Inserting insn reload before:
  412: r364:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 412:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=365 from oldreg=82, assigning class GENERAL_REGS to address r365
	   Change to class INDEX_REGS for r365
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 320:  (0) =r  (1) g {*movsi_internal}
  320: r310:SI=[r365:SI+const(unspec[`gdt'] 0)]
    Inserting insn reload before:
  413: r365:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 413:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=366 from oldreg=82, assigning class GENERAL_REGS to address r366
	   Change to class INDEX_REGS for r366
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 311:  (0) =r  (1) g {*movsi_internal}
  311: r307:SI=[r366:SI+const(unspec[`gdt'] 0)]
    Inserting insn reload before:
  414: r366:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 414:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=367 from oldreg=82, assigning class GENERAL_REGS to address r367
	   Change to class INDEX_REGS for r367
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 302:  (0) =r  (1) g {*movsi_internal}
  302: r304:SI=[r367:SI+const(unspec[`gdt'] 0)]
    Inserting insn reload before:
  415: r367:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 415:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=368 from oldreg=82, assigning class GENERAL_REGS to address r368
	   Change to class INDEX_REGS for r368
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 290:  (0) =r  (1) g {*movsi_internal}
  290: r300:SI=[r368:SI+const(unspec[`gdt'] 0)]
    Inserting insn reload before:
  416: r368:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 416:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=369 from oldreg=82, assigning class GENERAL_REGS to address r369
	   Change to class INDEX_REGS for r369
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 281:  (0) =r  (1) g {*movsi_internal}
  281: r297:SI=[r369:SI+const(unspec[`gdt'] 0)]
    Inserting insn reload before:
  417: r369:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 417:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=370 from oldreg=82, assigning class GENERAL_REGS to address r370
	   Change to class INDEX_REGS for r370
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 272:  (0) =r  (1) g {*movsi_internal}
  272: r294:SI=[r370:SI+const(unspec[`gdt'] 0)]
    Inserting insn reload before:
  418: r370:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 418:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=371 from oldreg=82, assigning class GENERAL_REGS to address r371
	   Change to class INDEX_REGS for r371
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 263:  (0) =r  (1) g {*movsi_internal}
  263: r291:SI=[r371:SI+const(unspec[`gdt'] 0)]
    Inserting insn reload before:
  419: r371:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 419:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=372 from oldreg=82, assigning class GENERAL_REGS to address r372
	   Change to class INDEX_REGS for r372
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 254:  (0) =r  (1) g {*movsi_internal}
  254: r288:SI=[r372:SI+const(unspec[`gdt'] 0)]
    Inserting insn reload before:
  420: r372:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 420:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=373 from oldreg=82, assigning class GENERAL_REGS to address r373
	   Change to class INDEX_REGS for r373
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 245:  (0) =r  (1) g {*movsi_internal}
  245: r285:SI=[r373:SI+const(unspec[`gdt'] 0)]
    Inserting insn reload before:
  421: r373:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 421:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=374 from oldreg=82, assigning class GENERAL_REGS to address r374
	   Change to class INDEX_REGS for r374
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) =r  (1) g {*movsi_internal}
  229: r281:SI=[r374:SI+const(unspec[`current'] 0)]
    Inserting insn reload before:
  422: r374:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 422:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=375 from oldreg=82, assigning class GENERAL_REGS to address r375
	   Change to class INDEX_REGS for r375
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 223:  (0) =r  (1) g {*movsi_internal}
  223: r280:SI=[r375:SI+const(unspec[`current'] 0)]
    Inserting insn reload before:
  423: r375:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 423:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=376 from oldreg=82, assigning class GENERAL_REGS to address r376
	   Change to class INDEX_REGS for r376
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) =r  (1) g {*movsi_internal}
  215: r279:SI=[r376:SI+const(unspec[`current'] 0)]
    Inserting insn reload before:
  424: r376:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 424:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=377 from oldreg=82, assigning class GENERAL_REGS to address r377
	   Change to class INDEX_REGS for r377
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) =r  (1) g {*movsi_internal}
  209: r278:SI=[r377:SI+const(unspec[`current'] 0)]
    Inserting insn reload before:
  425: r377:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 425:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=378 from oldreg=82, assigning class GENERAL_REGS to address r378
	   Change to class INDEX_REGS for r378
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) =r  (1) g {*movsi_internal}
  201: r277:SI=[r378:SI+const(unspec[`current'] 0)]
    Inserting insn reload before:
  426: r378:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 426:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=379 from oldreg=82, assigning class GENERAL_REGS to address r379
	   Change to class INDEX_REGS for r379
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) =r  (1) g {*movsi_internal}
  195: r276:SI=[r379:SI+const(unspec[`current'] 0)]
    Inserting insn reload before:
  427: r379:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 427:  (0) =r  (1) g {*movsi_internal}
            1 Non pseudo reload: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) g {*movsi_internal} (sp_off=-16)
      Creating newreg=380 from oldreg=82, assigning class GENERAL_REGS to address r380
	   Change to class INDEX_REGS for r380
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =r  (1) g {*movsi_internal}
  153: r268:SI=[r380:SI+const(unspec[`task'] 0)]
    Inserting insn reload before:
  428: r380:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 428:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=381 from oldreg=82, assigning class GENERAL_REGS to address r381
	   Change to class INDEX_REGS for r381
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
  135: r266:SI=[r381:SI+const(unspec[`current'] 0)]
    Inserting insn reload before:
  429: r381:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 429:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=382 from oldreg=82, assigning class GENERAL_REGS to address r382
	   Change to class INDEX_REGS for r382
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
  133: r265:SI=[r382:SI+const(unspec[`last_task_used_math'] 0)]
    Inserting insn reload before:
  430: r382:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 430:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=383 from oldreg=82, assigning class GENERAL_REGS to address r383
	   Change to class INDEX_REGS for r383
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
   60: r227:SI=[r383:SI+const(unspec[`jiffies'] 0)]
    Inserting insn reload before:
  431: r383:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 431:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=384 from oldreg=82, assigning class GENERAL_REGS to address r384
	   Change to class INDEX_REGS for r384
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
   33: r214:SI=[r384:SI+const(unspec[`current'] 0)]
    Inserting insn reload before:
  432: r384:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 432:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=385 from oldreg=82, assigning class GENERAL_REGS to address r385
	   Change to class INDEX_REGS for r385
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
   30: r85:SI=[r385:SI+const(unspec[`last_pid'] 1)]
    Inserting insn reload before:
  433: r385:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 433:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=386 from oldreg=82, assigning class GENERAL_REGS to address r386
	   Change to class INDEX_REGS for r386
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
   21: r207:SI=[r386:SI+const(unspec[`current'] 0)]
    Inserting insn reload before:
  434: r386:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 434:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=387 from oldreg=82, assigning class GENERAL_REGS to address r387
	   Change to class INDEX_REGS for r387
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
   17: r204:SI=[r387:SI+const(unspec[`task'] 0)]
    Inserting insn reload before:
  435: r387:SI=r82:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 435:  (0) =r  (1) g {*movsi_internal}
            1 Non pseudo reload: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #9: **********

  BB 20
   Insn 361: point = 0, n_alt = -1
   Insn 360: point = 0, n_alt = -2
   Insn 356: point = 1, n_alt = -2
  BB 7
   Insn 365: point = 4, n_alt = -1
   Insn 162: point = 4, n_alt = 0
   Insn 161: point = 5, n_alt = 0
   Insn 160: point = 5, n_alt = 0
   Insn 159: point = 5, n_alt = 0
   Insn 158: point = 6, n_alt = 0
   Insn 157: point = 7, n_alt = 0
   Insn 156: point = 7, n_alt = 0
   Insn 155: point = 8, n_alt = 1
   Insn 154: point = 9, n_alt = 0
   Insn 153: point = 10, n_alt = 0
   Insn 428: point = 12, n_alt = 0
  BB 3
   Insn 363: point = 14, n_alt = -1
   Insn 12: point = 14, n_alt = 0
  BB 19
   Insn 353: point = 15, n_alt = 0
   Insn 409: point = 17, n_alt = 0
   Insn 352: point = 19, n_alt = 1
   Insn 351: point = 20, n_alt = 0
   Insn 350: point = 21, n_alt = 0
   Insn 404: point = 22, n_alt = 0
   Insn 400: point = 24, n_alt = -2
	Hard reg 6 is preferable by r352 with profit 1000
   Insn 396: point = 26, n_alt = 0
   Insn 392: point = 28, n_alt = -2
	Hard reg 5 is preferable by r344 with profit 1000
   Insn 384: point = 30, n_alt = -2
	   Creating copy r336<-r340@1000
   Insn 379: point = 32, n_alt = -2
	Hard reg 4 is preferable by r331 with profit 1000
   Insn 378: point = 34, n_alt = -2
	   Creating copy r330<-r332@1000
   Insn 397: point = 36, n_alt = 1
   Insn 349: point = 38, n_alt = 3
   Insn 348: point = 40, n_alt = -2
   Insn 347: point = 42, n_alt = 0
   Insn 410: point = 44, n_alt = 0
   Insn 346: point = 45, n_alt = 3
   Insn 345: point = 47, n_alt = 0
   Insn 344: point = 49, n_alt = 0
   Insn 343: point = 51, n_alt = -2
   Insn 342: point = 53, n_alt = 0
   Insn 341: point = 55, n_alt = 0
   Insn 385: point = 56, n_alt = -2
	   Creating copy r337->r340@1000
   Insn 340: point = 58, n_alt = 3
   Insn 339: point = 60, n_alt = -2
   Insn 338: point = 62, n_alt = 0
   Insn 411: point = 64, n_alt = 0
   Insn 337: point = 65, n_alt = 3
   Insn 336: point = 67, n_alt = 0
   Insn 335: point = 69, n_alt = 0
   Insn 334: point = 71, n_alt = -2
   Insn 333: point = 73, n_alt = 0
   Insn 332: point = 75, n_alt = 0
   Insn 377: point = 76, n_alt = -2
	   Creating copy r329->r332@1000
   Insn 331: point = 78, n_alt = 3
   Insn 330: point = 80, n_alt = -2
   Insn 329: point = 82, n_alt = 0
   Insn 412: point = 84, n_alt = 0
   Insn 328: point = 85, n_alt = 3
   Insn 327: point = 87, n_alt = 0
   Insn 326: point = 89, n_alt = 0
   Insn 325: point = 91, n_alt = -2
   Insn 324: point = 93, n_alt = 0
   Insn 323: point = 95, n_alt = 0
   Insn 405: point = 96, n_alt = 1
   Insn 322: point = 98, n_alt = 3
   Insn 321: point = 100, n_alt = -2
   Insn 320: point = 102, n_alt = 0
   Insn 413: point = 104, n_alt = 0
   Insn 319: point = 105, n_alt = 3
   Insn 318: point = 107, n_alt = 0
   Insn 317: point = 109, n_alt = 0
   Insn 316: point = 111, n_alt = -2
   Insn 315: point = 113, n_alt = 0
   Insn 314: point = 115, n_alt = 0
   Insn 401: point = 116, n_alt = -2
	Hard reg 6 is preferable by r353 with profit 1000
   Insn 313: point = 118, n_alt = 3
   Insn 312: point = 120, n_alt = -2
   Insn 311: point = 122, n_alt = 0
   Insn 414: point = 124, n_alt = 0
   Insn 310: point = 125, n_alt = 3
   Insn 309: point = 127, n_alt = 0
   Insn 308: point = 129, n_alt = 0
   Insn 307: point = 131, n_alt = -2
   Insn 306: point = 133, n_alt = 0
   Insn 305: point = 135, n_alt = 0
   Insn 393: point = 136, n_alt = -2
	Hard reg 5 is preferable by r345 with profit 1000
   Insn 304: point = 138, n_alt = 3
   Insn 303: point = 140, n_alt = -2
   Insn 302: point = 142, n_alt = 0
   Insn 415: point = 144, n_alt = 0
   Insn 301: point = 145, n_alt = 1
   Insn 300: point = 147, n_alt = 0
   Insn 299: point = 149, n_alt = -2
   Insn 298: point = 151, n_alt = 0
   Insn 297: point = 153, n_alt = 0
   Insn 296: point = 154, n_alt = -2
   Insn 295: point = 156, n_alt = 0
   Insn 294: point = 158, n_alt = 0
   Insn 293: point = 159, n_alt = 0
   Insn 406: point = 160, n_alt = 0
   Insn 402: point = 162, n_alt = -2
	Hard reg 6 is preferable by r354 with profit 1000
   Insn 398: point = 164, n_alt = 0
   Insn 394: point = 166, n_alt = -2
	Hard reg 5 is preferable by r346 with profit 1000
   Insn 386: point = 168, n_alt = -2
	   Creating copy r338<-r342@1000
   Insn 376: point = 170, n_alt = -2
	Hard reg 4 is preferable by r328 with profit 1000
   Insn 375: point = 172, n_alt = -2
	   Creating copy r327<-r334@1000
   Insn 399: point = 174, n_alt = 1
   Insn 292: point = 176, n_alt = 3
   Insn 291: point = 178, n_alt = -2
   Insn 290: point = 180, n_alt = 0
   Insn 416: point = 182, n_alt = 0
   Insn 289: point = 183, n_alt = 3
   Insn 288: point = 185, n_alt = 0
   Insn 287: point = 187, n_alt = 0
   Insn 286: point = 189, n_alt = -2
   Insn 285: point = 191, n_alt = 0
   Insn 284: point = 193, n_alt = 0
   Insn 387: point = 194, n_alt = -2
	   Creating copy r339->r342@1000
   Insn 283: point = 196, n_alt = 3
   Insn 282: point = 198, n_alt = -2
   Insn 281: point = 200, n_alt = 0
   Insn 417: point = 202, n_alt = 0
   Insn 280: point = 203, n_alt = 3
   Insn 279: point = 205, n_alt = 0
   Insn 278: point = 207, n_alt = 0
   Insn 277: point = 209, n_alt = -2
   Insn 276: point = 211, n_alt = 0
   Insn 275: point = 213, n_alt = 0
   Insn 374: point = 214, n_alt = -2
	   Creating copy r326->r334@1000
   Insn 274: point = 216, n_alt = 3
   Insn 273: point = 218, n_alt = -2
   Insn 272: point = 220, n_alt = 0
   Insn 418: point = 222, n_alt = 0
   Insn 271: point = 223, n_alt = 3
   Insn 270: point = 225, n_alt = 0
   Insn 269: point = 227, n_alt = 0
   Insn 268: point = 229, n_alt = -2
   Insn 267: point = 231, n_alt = 0
   Insn 266: point = 233, n_alt = 0
   Insn 407: point = 234, n_alt = 1
   Insn 265: point = 236, n_alt = 3
   Insn 264: point = 238, n_alt = -2
   Insn 263: point = 240, n_alt = 0
   Insn 419: point = 242, n_alt = 0
   Insn 262: point = 243, n_alt = 3
   Insn 261: point = 245, n_alt = 0
   Insn 260: point = 247, n_alt = 0
   Insn 259: point = 249, n_alt = -2
   Insn 258: point = 251, n_alt = 0
   Insn 257: point = 253, n_alt = 0
   Insn 403: point = 254, n_alt = -2
	Hard reg 6 is preferable by r355 with profit 1000
   Insn 256: point = 256, n_alt = 3
   Insn 255: point = 258, n_alt = -2
   Insn 254: point = 260, n_alt = 0
   Insn 420: point = 262, n_alt = 0
   Insn 253: point = 263, n_alt = 3
   Insn 252: point = 265, n_alt = 0
   Insn 251: point = 267, n_alt = 0
   Insn 250: point = 269, n_alt = -2
   Insn 249: point = 271, n_alt = 0
   Insn 248: point = 273, n_alt = 0
   Insn 395: point = 274, n_alt = -2
	Hard reg 5 is preferable by r347 with profit 1000
   Insn 247: point = 276, n_alt = 3
   Insn 246: point = 278, n_alt = -2
   Insn 245: point = 280, n_alt = 0
   Insn 421: point = 282, n_alt = 0
   Insn 244: point = 283, n_alt = 1
   Insn 243: point = 285, n_alt = 0
   Insn 242: point = 287, n_alt = -2
   Insn 241: point = 289, n_alt = 0
   Insn 240: point = 291, n_alt = 0
   Insn 239: point = 292, n_alt = -2
   Insn 238: point = 294, n_alt = 0
   Insn 237: point = 296, n_alt = 0
  BB 18
   Insn 234: point = 298, n_alt = 3
   Insn 233: point = 299, n_alt = 0
   Insn 232: point = 301, n_alt = 2
   Insn 231: point = 302, n_alt = 0
   Insn 230: point = 304, n_alt = 0
   Insn 229: point = 306, n_alt = 0
   Insn 422: point = 308, n_alt = 0
  BB 17
   Insn 227: point = 310, n_alt = -1
   Insn 226: point = 310, n_alt = 0
   Insn 225: point = 311, n_alt = 0
   Insn 224: point = 313, n_alt = 0
   Insn 223: point = 315, n_alt = 0
   Insn 423: point = 317, n_alt = 0
  BB 16
   Insn 220: point = 319, n_alt = 3
   Insn 219: point = 320, n_alt = 0
   Insn 218: point = 322, n_alt = 2
   Insn 217: point = 323, n_alt = 0
   Insn 216: point = 325, n_alt = 0
   Insn 215: point = 327, n_alt = 0
   Insn 424: point = 329, n_alt = 0
  BB 15
   Insn 213: point = 331, n_alt = -1
   Insn 212: point = 331, n_alt = 0
   Insn 211: point = 332, n_alt = 0
   Insn 210: point = 334, n_alt = 0
   Insn 209: point = 336, n_alt = 0
   Insn 425: point = 338, n_alt = 0
  BB 14
   Insn 206: point = 340, n_alt = 3
   Insn 205: point = 341, n_alt = 0
   Insn 204: point = 343, n_alt = 2
   Insn 203: point = 344, n_alt = 0
   Insn 202: point = 346, n_alt = 0
   Insn 201: point = 348, n_alt = 0
   Insn 426: point = 350, n_alt = 0
  BB 13
   Insn 199: point = 352, n_alt = -1
   Insn 198: point = 352, n_alt = 0
   Insn 197: point = 353, n_alt = 0
   Insn 196: point = 355, n_alt = 0
   Insn 195: point = 357, n_alt = 0
   Insn 427: point = 359, n_alt = 0
  BB 12
   Insn 193: point = 361, n_alt = -1
   Insn 192: point = 361, n_alt = 0
  BB 8
   Insn 367: point = 362, n_alt = -1
   Insn 167: point = 362, n_alt = 1
  BB 6
   Insn 151: point = 363, n_alt = -1
   Insn 150: point = 363, n_alt = 0
   Insn 149: point = 364, n_alt = -2
   Insn 148: point = 365, n_alt = 0
   Insn 147: point = 365, n_alt = 0
   Insn 146: point = 365, n_alt = 0
   Insn 145: point = 365, n_alt = 0
   Insn 144: point = 365, n_alt = 0
  BB 5
   Insn 141: point = 366, n_alt = 0
   Insn 140: point = 367, n_alt = 0
  BB 4
   Insn 138: point = 369, n_alt = -1
   Insn 137: point = 369, n_alt = 0
   Insn 136: point = 370, n_alt = 0
   Insn 135: point = 372, n_alt = 0
   Insn 429: point = 374, n_alt = 0
   Insn 134: point = 375, n_alt = 0
   Insn 133: point = 377, n_alt = 0
   Insn 430: point = 379, n_alt = 0
   Insn 132: point = 380, n_alt = 1
   Insn 131: point = 381, n_alt = 0
   Insn 130: point = 382, n_alt = 1
   Insn 129: point = 383, n_alt = 0
   Insn 128: point = 384, n_alt = -2
   Insn 127: point = 386, n_alt = 0
   Insn 126: point = 388, n_alt = 0
   Insn 125: point = 390, n_alt = 0
   Insn 124: point = 391, n_alt = 1
   Insn 123: point = 392, n_alt = 0
   Insn 122: point = 393, n_alt = 0
   Insn 121: point = 395, n_alt = 0
   Insn 120: point = 396, n_alt = 1
   Insn 119: point = 397, n_alt = 0
   Insn 118: point = 398, n_alt = 0
   Insn 117: point = 400, n_alt = 0
   Insn 116: point = 401, n_alt = 1
   Insn 115: point = 402, n_alt = 0
   Insn 114: point = 403, n_alt = 0
   Insn 113: point = 405, n_alt = 0
   Insn 112: point = 406, n_alt = 1
   Insn 111: point = 407, n_alt = 0
   Insn 110: point = 408, n_alt = 0
   Insn 109: point = 410, n_alt = 0
   Insn 108: point = 411, n_alt = 1
   Insn 107: point = 412, n_alt = 0
   Insn 106: point = 413, n_alt = 0
   Insn 105: point = 415, n_alt = 0
   Insn 104: point = 416, n_alt = 1
   Insn 103: point = 417, n_alt = 0
   Insn 102: point = 418, n_alt = 0
   Insn 101: point = 420, n_alt = 0
   Insn 100: point = 421, n_alt = 1
   Insn 99: point = 422, n_alt = 0
   Insn 98: point = 423, n_alt = 0
   Insn 97: point = 424, n_alt = 1
   Insn 96: point = 425, n_alt = 0
   Insn 95: point = 426, n_alt = 0
   Insn 94: point = 427, n_alt = 1
   Insn 93: point = 428, n_alt = 0
   Insn 92: point = 429, n_alt = 0
   Insn 91: point = 430, n_alt = 1
   Insn 90: point = 431, n_alt = 0
   Insn 89: point = 432, n_alt = 0
   Insn 88: point = 433, n_alt = 1
   Insn 87: point = 434, n_alt = 0
   Insn 86: point = 435, n_alt = 0
   Insn 85: point = 436, n_alt = 1
   Insn 84: point = 437, n_alt = 0
   Insn 83: point = 438, n_alt = 0
   Insn 82: point = 439, n_alt = 1
   Insn 81: point = 440, n_alt = 0
   Insn 80: point = 441, n_alt = 0
   Insn 79: point = 442, n_alt = 1
   Insn 78: point = 443, n_alt = 0
   Insn 77: point = 444, n_alt = 1
   Insn 76: point = 445, n_alt = 0
   Insn 75: point = 446, n_alt = 0
   Insn 74: point = 447, n_alt = 1
   Insn 73: point = 448, n_alt = 0
   Insn 72: point = 449, n_alt = 0
   Insn 71: point = 450, n_alt = 1
   Insn 70: point = 451, n_alt = 0
   Insn 69: point = 452, n_alt = 1
   Insn 68: point = 453, n_alt = 0
   Insn 67: point = 454, n_alt = 3
   Insn 66: point = 456, n_alt = 0
   Insn 65: point = 457, n_alt = 1
   Insn 64: point = 458, n_alt = 0
   Insn 63: point = 459, n_alt = 1
   Insn 62: point = 460, n_alt = 0
   Insn 61: point = 461, n_alt = 0
   Insn 60: point = 463, n_alt = 0
   Insn 431: point = 465, n_alt = 0
   Insn 59: point = 466, n_alt = 1
   Insn 58: point = 467, n_alt = 0
   Insn 57: point = 468, n_alt = 0
   Insn 56: point = 470, n_alt = 0
   Insn 55: point = 471, n_alt = 1
   Insn 54: point = 472, n_alt = 0
   Insn 53: point = 473, n_alt = 1
   Insn 52: point = 474, n_alt = 0
   Insn 51: point = 475, n_alt = 0
   Insn 50: point = 477, n_alt = 0
   Insn 49: point = 478, n_alt = 1
   Insn 48: point = 479, n_alt = 0
   Insn 47: point = 480, n_alt = 1
   Insn 46: point = 481, n_alt = 0
   Insn 45: point = 482, n_alt = 1
   Insn 44: point = 483, n_alt = 0
   Insn 43: point = 484, n_alt = 1
   Insn 42: point = 485, n_alt = 0
   Insn 41: point = 486, n_alt = 1
   Insn 40: point = 487, n_alt = 0
   Insn 39: point = 488, n_alt = 0
   Insn 38: point = 490, n_alt = 0
   Insn 37: point = 491, n_alt = 1
   Insn 36: point = 492, n_alt = 0
   Insn 35: point = 493, n_alt = 0
   Insn 34: point = 495, n_alt = 0
   Insn 33: point = 497, n_alt = 0
   Insn 432: point = 499, n_alt = 0
   Insn 32: point = 500, n_alt = 1
   Insn 31: point = 501, n_alt = 0
   Insn 30: point = 502, n_alt = 0
   Insn 433: point = 504, n_alt = 0
   Insn 29: point = 505, n_alt = 1
   Insn 28: point = 506, n_alt = 0
   Insn 27: point = 507, n_alt = 0
   Insn 373: point = 508, n_alt = -2
	Hard reg 0 is preferable by r325 with profit 1000
   Insn 372: point = 510, n_alt = -2
	Hard reg 3 is preferable by r324 with profit 1000
   Insn 371: point = 512, n_alt = -2
	Hard reg 1 is preferable by r323 with profit 1000
   Insn 26: point = 514, n_alt = 0
   Insn 25: point = 515, n_alt = -2
   Insn 24: point = 517, n_alt = -2
   Insn 23: point = 519, n_alt = 0
   Insn 22: point = 520, n_alt = 0
   Insn 21: point = 522, n_alt = 0
   Insn 434: point = 524, n_alt = 0
   Insn 20: point = 525, n_alt = 1
   Insn 19: point = 526, n_alt = 0
   Insn 18: point = 527, n_alt = 0
   Insn 17: point = 528, n_alt = 0
   Insn 435: point = 530, n_alt = 0
  BB 2
   Insn 10: point = 532, n_alt = -1
   Insn 9: point = 532, n_alt = 1
   Insn 8: point = 532, n_alt = 1
   Insn 7: point = 533, n_alt = -2
   Insn 6: point = 534, n_alt = 0
   Insn 5: point = 534, n_alt = 0
   Insn 408: point = 534, n_alt = 1
   Insn 369: point = 536, n_alt = 0
  BB 11
   Insn 186: point = 537, n_alt = 0
  BB 10
   Insn 183: point = 538, n_alt = 3
   Insn 182: point = 539, n_alt = 0
   Insn 181: point = 540, n_alt = 3
   Insn 180: point = 542, n_alt = 2
   Insn 179: point = 544, n_alt = 0
  BB 9
   Insn 177: point = 546, n_alt = -1
   Insn 176: point = 546, n_alt = 1
   Insn 175: point = 546, n_alt = 1
   Insn 174: point = 547, n_alt = 0
   Insn 173: point = 549, n_alt = 0
   Insn 172: point = 551, n_alt = 0
   Insn 171: point = 552, n_alt = 0
 r82: [537..553] [18..534] [5..13]
 r83: [532..533]
 r84: [516..520]
 r85: [500..502]
 r86: [494..495]
 r87: [491..493]
 r88: [486..488]
 r89: [473..475]
 r90: [466..468]
 r91: [459..461]
 r92: [455..456]
 r93: [452..454]
 r94: [416..418]
 r95: [411..413]
 r96: [406..408]
 r97: [401..403]
 r98: [396..398]
 r99: [391..393]
 r100: [389..390]
 r101: [387..388]
 r102: [385..386]
 r103: [382..384]
 r104: [369..375]
 r105: [369..370]
 r106: [363..364]
 r107: [6..7]
 r108: [541..542]
 r109: [538..540]
 r110: [354..355]
 r111: [352..353]
 r112: [345..346]
 r113: [340..344]
 r114: [342..343]
 r115: [340..341]
 r116: [333..334]
 r117: [331..332]
 r118: [324..325]
 r119: [319..323]
 r120: [321..322]
 r121: [319..320]
 r122: [312..313]
 r123: [310..311]
 r124: [303..304]
 r125: [298..302]
 r126: [300..301]
 r127: [298..299]
 r128: [293..294]
 r129: [171..292]
 r130: [288..289]
 r131: [286..287]
 r132: [284..285]
 r133: [277..283]
 r134: [167..274]
 r135: [270..271]
 r136: [268..269]
 r137: [266..267]
 r138: [264..265]
 r139: [257..263]
 r140: [163..254]
 r141: [250..251]
 r142: [248..249]
 r143: [246..247]
 r144: [244..245]
 r145: [237..243]
 r146: [161..234]
 r147: [230..231]
 r148: [228..229]
 r149: [226..227]
 r150: [224..225]
 r151: [217..223]
 r153: [210..211]
 r154: [208..209]
 r155: [206..207]
 r156: [204..205]
 r157: [197..203]
 r159: [190..191]
 r160: [188..189]
 r161: [186..187]
 r162: [184..185]
 r163: [177..183]
 r164: [165..174]
 r165: [155..156]
 r166: [33..154]
 r167: [150..151]
 r168: [148..149]
 r169: [146..147]
 r170: [139..145]
 r171: [29..136]
 r172: [132..133]
 r173: [130..131]
 r174: [128..129]
 r175: [126..127]
 r176: [119..125]
 r177: [25..116]
 r178: [112..113]
 r179: [110..111]
 r180: [108..109]
 r181: [106..107]
 r182: [99..105]
 r183: [23..96]
 r184: [92..93]
 r185: [90..91]
 r186: [88..89]
 r187: [86..87]
 r188: [79..85]
 r190: [72..73]
 r191: [70..71]
 r192: [68..69]
 r193: [66..67]
 r194: [59..65]
 r196: [52..53]
 r197: [50..51]
 r198: [48..49]
 r199: [46..47]
 r200: [39..45]
 r201: [27..36]
 r202: [14..15] [2..4]
 r203: [0..1]
 r204: [525..528]
 r205: [525..527]
 r206: [525..526]
 r207: [521..522]
 r208: [518..519]
 r209: [513..517]
 r210: [511..515]
 r211: [509..514]
 r212: [505..506]
 r213: [500..501]
 r214: [496..497]
 r215: [491..492]
 r216: [489..490]
 r217: [486..487]
 r218: [484..485]
 r219: [482..483]
 r220: [480..481]
 r221: [478..479]
 r222: [476..477]
 r223: [473..474]
 r224: [471..472]
 r225: [469..470]
 r226: [466..467]
 r227: [462..463]
 r228: [459..460]
 r229: [457..458]
 r230: [452..453]
 r231: [450..451]
 r232: [447..449]
 r233: [447..448]
 r234: [444..446]
 r235: [444..445]
 r236: [442..443]
 r237: [439..441]
 r238: [439..440]
 r239: [436..438]
 r240: [436..437]
 r241: [433..435]
 r242: [433..434]
 r243: [430..432]
 r244: [430..431]
 r245: [427..429]
 r246: [427..428]
 r247: [424..426]
 r248: [424..425]
 r249: [421..423]
 r250: [421..422]
 r251: [419..420]
 r252: [416..417]
 r253: [414..415]
 r254: [411..412]
 r255: [409..410]
 r256: [406..407]
 r257: [404..405]
 r258: [401..402]
 r259: [399..400]
 r260: [396..397]
 r261: [394..395]
 r262: [391..392]
 r263: [382..383]
 r264: [380..381]
 r265: [376..377]
 r266: [371..372]
 r267: [366..367]
 r268: [8..10]
 r269: [8..9]
 r270: [548..552]
 r271: [548..549]
 r272: [550..551]
 r273: [546..547]
 r274: [543..544]
 r275: [538..539]
 r276: [356..357]
 r277: [347..348]
 r278: [335..336]
 r279: [326..327]
 r280: [314..315]
 r281: [305..306]
 r282: [295..296]
 r283: [290..291]
 r284: [277..278]
 r285: [279..280]
 r286: [272..273]
 r287: [257..258]
 r288: [259..260]
 r289: [252..253]
 r290: [237..238]
 r291: [239..240]
 r292: [232..233]
 r293: [217..218]
 r294: [219..220]
 r295: [212..213]
 r296: [197..198]
 r297: [199..200]
 r298: [192..193]
 r299: [177..178]
 r300: [179..180]
 r301: [157..158]
 r302: [152..153]
 r303: [139..140]
 r304: [141..142]
 r305: [134..135]
 r306: [119..120]
 r307: [121..122]
 r308: [114..115]
 r309: [99..100]
 r310: [101..102]
 r311: [94..95]
 r312: [79..80]
 r313: [81..82]
 r314: [74..75]
 r315: [59..60]
 r316: [61..62]
 r317: [54..55]
 r318: [39..40]
 r319: [41..42]
 r320: [19..20]
 r323: [507..512]
 r324: [507..510]
 r325: [507..508]
 r326: [215..216]
 r327: [159..172]
 r328: [159..170]
 r329: [77..78]
 r330: [21..34]
 r331: [21..32]
 r332: [35..76]
 r334: [173..214]
 r336: [21..30]
 r337: [57..58]
 r338: [159..168]
 r339: [195..196]
 r340: [31..56]
 r342: [169..194]
 r344: [21..28]
 r345: [137..138]
 r346: [159..166]
 r347: [275..276]
 r348: [21..26]
 r349: [37..38]
 r350: [159..164]
 r351: [175..176]
 r352: [21..24]
 r353: [117..118]
 r354: [159..162]
 r355: [255..256]
 r356: [21..22]
 r357: [97..98]
 r358: [159..160]
 r359: [235..236]
 r360: [535..536]
 r361: [16..17]
 r362: [43..44]
 r363: [63..64]
 r364: [83..84]
 r365: [103..104]
 r366: [123..124]
 r367: [143..144]
 r368: [181..182]
 r369: [201..202]
 r370: [221..222]
 r371: [241..242]
 r372: [261..262]
 r373: [281..282]
 r374: [307..308]
 r375: [316..317]
 r376: [328..329]
 r377: [337..338]
 r378: [349..350]
 r379: [358..359]
 r380: [11..12]
 r381: [373..374]
 r382: [378..379]
 r383: [464..465]
 r384: [498..499]
 r385: [503..504]
 r386: [523..524]
 r387: [529..530]
Compressing live ranges: from 554 to 476 - 85%
Ranges after the compression:
 r82: [464..475] [14..461] [4..9]
 r83: [460..461]
 r84: [448..451]
 r85: [434..435]
 r86: [428..429]
 r87: [426..427]
 r88: [422..423]
 r89: [410..411]
 r90: [404..405]
 r91: [398..399]
 r92: [394..395]
 r93: [392..393]
 r94: [366..367]
 r95: [362..363]
 r96: [358..359]
 r97: [354..355]
 r98: [350..351]
 r99: [346..347]
 r100: [344..345]
 r101: [342..343]
 r102: [340..341]
 r103: [338..339]
 r104: [326..331]
 r105: [326..327]
 r106: [322..323]
 r107: [4..5]
 r108: [466..467]
 r109: [464..465]
 r110: [316..317]
 r111: [314..315]
 r112: [308..309]
 r113: [304..307]
 r114: [306..307]
 r115: [304..305]
 r116: [298..299]
 r117: [296..297]
 r118: [290..291]
 r119: [286..289]
 r120: [288..289]
 r121: [286..287]
 r122: [280..281]
 r123: [278..279]
 r124: [272..273]
 r125: [268..271]
 r126: [270..271]
 r127: [268..269]
 r128: [264..265]
 r129: [154..263]
 r130: [260..261]
 r131: [258..259]
 r132: [256..257]
 r133: [250..255]
 r134: [150..247]
 r135: [244..245]
 r136: [242..243]
 r137: [240..241]
 r138: [238..239]
 r139: [232..237]
 r140: [146..229]
 r141: [226..227]
 r142: [224..225]
 r143: [222..223]
 r144: [220..221]
 r145: [214..219]
 r146: [144..211]
 r147: [208..209]
 r148: [206..207]
 r149: [204..205]
 r150: [202..203]
 r151: [196..201]
 r153: [190..191]
 r154: [188..189]
 r155: [186..187]
 r156: [184..185]
 r157: [178..183]
 r159: [172..173]
 r160: [170..171]
 r161: [168..169]
 r162: [166..167]
 r163: [160..165]
 r164: [148..157]
 r165: [138..139]
 r166: [28..137]
 r167: [134..135]
 r168: [132..133]
 r169: [130..131]
 r170: [124..129]
 r171: [24..121]
 r172: [118..119]
 r173: [116..117]
 r174: [114..115]
 r175: [112..113]
 r176: [106..111]
 r177: [20..103]
 r178: [100..101]
 r179: [98..99]
 r180: [96..97]
 r181: [94..95]
 r182: [88..93]
 r183: [18..85]
 r184: [82..83]
 r185: [80..81]
 r186: [78..79]
 r187: [76..77]
 r188: [70..75]
 r190: [64..65]
 r191: [62..63]
 r192: [60..61]
 r193: [58..59]
 r194: [52..57]
 r196: [46..47]
 r197: [44..45]
 r198: [42..43]
 r199: [40..41]
 r200: [34..39]
 r201: [22..31]
 r202: [10..11] [2..3]
 r203: [0..1]
 r204: [456..457]
 r205: [456..457]
 r206: [456..457]
 r207: [452..453]
 r208: [450..451]
 r209: [446..449]
 r210: [444..447]
 r211: [442..447]
 r212: [438..439]
 r213: [434..435]
 r214: [430..431]
 r215: [426..427]
 r216: [424..425]
 r217: [422..423]
 r218: [420..421]
 r219: [418..419]
 r220: [416..417]
 r221: [414..415]
 r222: [412..413]
 r223: [410..411]
 r224: [408..409]
 r225: [406..407]
 r226: [404..405]
 r227: [400..401]
 r228: [398..399]
 r229: [396..397]
 r230: [392..393]
 r231: [390..391]
 r232: [388..389]
 r233: [388..389]
 r234: [386..387]
 r235: [386..387]
 r236: [384..385]
 r237: [382..383]
 r238: [382..383]
 r239: [380..381]
 r240: [380..381]
 r241: [378..379]
 r242: [378..379]
 r243: [376..377]
 r244: [376..377]
 r245: [374..375]
 r246: [374..375]
 r247: [372..373]
 r248: [372..373]
 r249: [370..371]
 r250: [370..371]
 r251: [368..369]
 r252: [366..367]
 r253: [364..365]
 r254: [362..363]
 r255: [360..361]
 r256: [358..359]
 r257: [356..357]
 r258: [354..355]
 r259: [352..353]
 r260: [350..351]
 r261: [348..349]
 r262: [346..347]
 r263: [338..339]
 r264: [336..337]
 r265: [332..333]
 r266: [328..329]
 r267: [324..325]
 r268: [6..7]
 r269: [6..7]
 r270: [472..475]
 r271: [472..473]
 r272: [474..475]
 r273: [470..471]
 r274: [468..469]
 r275: [464..465]
 r276: [318..319]
 r277: [310..311]
 r278: [300..301]
 r279: [292..293]
 r280: [282..283]
 r281: [274..275]
 r282: [266..267]
 r283: [262..263]
 r284: [250..251]
 r285: [252..253]
 r286: [246..247]
 r287: [232..233]
 r288: [234..235]
 r289: [228..229]
 r290: [214..215]
 r291: [216..217]
 r292: [210..211]
 r293: [196..197]
 r294: [198..199]
 r295: [192..193]
 r296: [178..179]
 r297: [180..181]
 r298: [174..175]
 r299: [160..161]
 r300: [162..163]
 r301: [140..141]
 r302: [136..137]
 r303: [124..125]
 r304: [126..127]
 r305: [120..121]
 r306: [106..107]
 r307: [108..109]
 r308: [102..103]
 r309: [88..89]
 r310: [90..91]
 r311: [84..85]
 r312: [70..71]
 r313: [72..73]
 r314: [66..67]
 r315: [52..53]
 r316: [54..55]
 r317: [48..49]
 r318: [34..35]
 r319: [36..37]
 r320: [14..15]
 r323: [440..445]
 r324: [440..443]
 r325: [440..441]
 r326: [194..195]
 r327: [142..155]
 r328: [142..153]
 r329: [68..69]
 r330: [16..29]
 r331: [16..27]
 r332: [30..67]
 r334: [156..193]
 r336: [16..25]
 r337: [50..51]
 r338: [142..151]
 r339: [176..177]
 r340: [26..49]
 r342: [152..175]
 r344: [16..23]
 r345: [122..123]
 r346: [142..149]
 r347: [248..249]
 r348: [16..21]
 r349: [32..33]
 r350: [142..147]
 r351: [158..159]
 r352: [16..19]
 r353: [104..105]
 r354: [142..145]
 r355: [230..231]
 r356: [16..17]
 r357: [86..87]
 r358: [142..143]
 r359: [212..213]
 r360: [462..463]
 r361: [12..13]
 r362: [38..39]
 r363: [56..57]
 r364: [74..75]
 r365: [92..93]
 r366: [110..111]
 r367: [128..129]
 r368: [164..165]
 r369: [182..183]
 r370: [200..201]
 r371: [218..219]
 r372: [236..237]
 r373: [254..255]
 r374: [276..277]
 r375: [284..285]
 r376: [294..295]
 r377: [302..303]
 r378: [312..313]
 r379: [320..321]
 r380: [8..9]
 r381: [330..331]
 r382: [334..335]
 r383: [402..403]
 r384: [432..433]
 r385: [436..437]
 r386: [454..455]
 r387: [458..459]

********** Assignment #7: **********

	 Assigning to 360 (cl=GENERAL_REGS, orig=82, freq=2000, tfirst=360, tfreq=2000)...
	   Assign 0 to reload r360 (freq=2000)
	 Assigning to 361 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=361, tfreq=2000)...
	   Assign 0 to reload r361 (freq=2000)
	 Assigning to 362 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=362, tfreq=2000)...
	   Assign 0 to reload r362 (freq=2000)
	 Assigning to 363 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=363, tfreq=2000)...
	   Assign 0 to reload r363 (freq=2000)
	 Assigning to 364 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=364, tfreq=2000)...
	   Assign 0 to reload r364 (freq=2000)
	 Assigning to 365 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=365, tfreq=2000)...
	   Assign 0 to reload r365 (freq=2000)
	 Assigning to 366 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=366, tfreq=2000)...
	   Assign 0 to reload r366 (freq=2000)
	 Assigning to 367 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=367, tfreq=2000)...
	   Assign 0 to reload r367 (freq=2000)
	 Assigning to 368 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=368, tfreq=2000)...
	   Assign 0 to reload r368 (freq=2000)
	 Assigning to 369 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=369, tfreq=2000)...
	   Assign 0 to reload r369 (freq=2000)
	 Assigning to 370 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=370, tfreq=2000)...
	   Assign 0 to reload r370 (freq=2000)
	 Assigning to 371 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=371, tfreq=2000)...
	   Assign 0 to reload r371 (freq=2000)
	 Assigning to 372 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=372, tfreq=2000)...
	   Assign 0 to reload r372 (freq=2000)
	 Assigning to 373 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=373, tfreq=2000)...
	   Assign 0 to reload r373 (freq=2000)
	 Assigning to 374 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=374, tfreq=2000)...
	   Assign 0 to reload r374 (freq=2000)
	 Assigning to 375 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=375, tfreq=2000)...
	   Assign 0 to reload r375 (freq=2000)
	 Assigning to 376 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=376, tfreq=2000)...
	   Assign 0 to reload r376 (freq=2000)
	 Assigning to 377 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=377, tfreq=2000)...
	   Assign 0 to reload r377 (freq=2000)
	 Assigning to 378 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=378, tfreq=2000)...
	   Assign 0 to reload r378 (freq=2000)
	 Assigning to 379 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=379, tfreq=2000)...
	   Assign 0 to reload r379 (freq=2000)
	 Assigning to 380 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=380, tfreq=2000)...
	   Assign 0 to reload r380 (freq=2000)
	 Assigning to 381 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=381, tfreq=2000)...
	   Assign 0 to reload r381 (freq=2000)
	 Assigning to 382 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=382, tfreq=2000)...
	   Assign 0 to reload r382 (freq=2000)
	 Assigning to 383 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=383, tfreq=2000)...
	   Assign 0 to reload r383 (freq=2000)
	 Assigning to 384 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=384, tfreq=2000)...
	   Assign 0 to reload r384 (freq=2000)
	 Assigning to 385 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=385, tfreq=2000)...
	   Assign 0 to reload r385 (freq=2000)
	 Assigning to 386 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=386, tfreq=2000)...
	   Assign 0 to reload r386 (freq=2000)
	 Assigning to 387 (cl=INDEX_REGS, orig=82, freq=2000, tfirst=387, tfreq=2000)...
	   Assign 0 to reload r387 (freq=2000)
  Reassigning non-reload pseudos

********** Local #8: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
  Slot 0 regnos (width = 0):	 82
  Slot 1 regnos (width = 0):	 146	 183
  Slot 2 regnos (width = 0):	 164	 201
Changing spilled pseudos to memory in insn #408
Changing spilled pseudos to memory in insn #5
Changing spilled pseudos to memory in insn #435
Changing spilled pseudos to memory in insn #434
Changing spilled pseudos to memory in insn #433
Changing spilled pseudos to memory in insn #432
Changing spilled pseudos to memory in insn #431
Changing spilled pseudos to memory in insn #430
Changing spilled pseudos to memory in insn #429
Changing spilled pseudos to memory in insn #428
Changing spilled pseudos to memory in insn #159
Changing spilled pseudos to memory in insn #427
Changing spilled pseudos to memory in insn #426
Changing spilled pseudos to memory in insn #425
Changing spilled pseudos to memory in insn #424
Changing spilled pseudos to memory in insn #423
Changing spilled pseudos to memory in insn #422
Changing spilled pseudos to memory in insn #421
Changing spilled pseudos to memory in insn #420
Changing spilled pseudos to memory in insn #419
Changing spilled pseudos to memory in insn #407
Changing spilled pseudos to memory in insn #418
Changing spilled pseudos to memory in insn #417
Changing spilled pseudos to memory in insn #416
Changing spilled pseudos to memory in insn #399
Changing spilled pseudos to memory in insn #398
Changing spilled pseudos to memory in insn #406
Changing spilled pseudos to memory in insn #415
Changing spilled pseudos to memory in insn #414
Changing spilled pseudos to memory in insn #413
Changing spilled pseudos to memory in insn #405
Changing spilled pseudos to memory in insn #412
Changing spilled pseudos to memory in insn #411
Changing spilled pseudos to memory in insn #410
Changing spilled pseudos to memory in insn #397
Changing spilled pseudos to memory in insn #396
Changing spilled pseudos to memory in insn #404
Changing spilled pseudos to memory in insn #409
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=64, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=16)
Can eliminate 19 to 6 (offset=-28, prev_offset=0)

********** Local #9: **********

	   Spilling non-eliminable hard regs: 7
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 351:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 341:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 332:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 314:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 305:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 297:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 294:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 284:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 275:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 266:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 248:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 240:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 237:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 186:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 176:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 175:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 167:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 409:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 404:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 396:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 397:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 410:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 411:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 412:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 405:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 413:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 414:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 415:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 406:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 398:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 399:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 416:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 417:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 418:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 407:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 419:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 420:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 421:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 422:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 423:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 424:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 425:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 426:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 427:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) g {*movsi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 428:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 429:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 430:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 431:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 432:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 433:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 434:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 435:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 408:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=64, prev_offset=64)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-28, prev_offset=0)
changing reg in insn 7
changing reg in insn 8
changing reg in insn 22
changing reg in insn 25
changing reg in insn 30
changing reg in insn 32
changing reg in insn 34
changing reg in insn 35
changing reg in insn 35
changing reg in insn 37
changing reg in insn 39
changing reg in insn 41
changing reg in insn 51
changing reg in insn 53
changing reg in insn 57
changing reg in insn 59
changing reg in insn 61
changing reg in insn 63
changing reg in insn 66
changing reg in insn 67
changing reg in insn 67
changing reg in insn 69
changing reg in insn 102
changing reg in insn 104
changing reg in insn 106
changing reg in insn 108
changing reg in insn 110
changing reg in insn 112
changing reg in insn 114
changing reg in insn 116
changing reg in insn 118
changing reg in insn 120
changing reg in insn 122
changing reg in insn 124
changing reg in insn 125
changing reg in insn 126
changing reg in insn 126
changing reg in insn 127
changing reg in insn 127
changing reg in insn 128
changing reg in insn 128
changing reg in insn 130
changing reg in insn 134
changing reg in insn 137
changing reg in insn 136
changing reg in insn 137
changing reg in insn 149
changing reg in insn 150
changing reg in insn 156
changing reg in insn 158
changing reg in insn 180
changing reg in insn 181
changing reg in insn 181
changing reg in insn 183
changing reg in insn 196
changing reg in insn 197
changing reg in insn 197
changing reg in insn 198
changing reg in insn 202
changing reg in insn 203
changing reg in insn 203
changing reg in insn 206
changing reg in insn 204
changing reg in insn 204
changing reg in insn 205
changing reg in insn 205
changing reg in insn 206
changing reg in insn 210
changing reg in insn 211
changing reg in insn 211
changing reg in insn 212
changing reg in insn 216
changing reg in insn 217
changing reg in insn 217
changing reg in insn 220
changing reg in insn 218
changing reg in insn 218
changing reg in insn 219
changing reg in insn 219
changing reg in insn 220
changing reg in insn 224
changing reg in insn 225
changing reg in insn 225
changing reg in insn 226
changing reg in insn 230
changing reg in insn 231
changing reg in insn 231
changing reg in insn 234
changing reg in insn 232
changing reg in insn 232
changing reg in insn 233
changing reg in insn 233
changing reg in insn 234
changing reg in insn 238
changing reg in insn 239
changing reg in insn 239
changing reg in insn 241
changing reg in insn 242
changing reg in insn 242
changing reg in insn 243
changing reg in insn 243
changing reg in insn 244
changing reg in insn 244
changing reg in insn 247
changing reg in insn 249
changing reg in insn 250
changing reg in insn 250
changing reg in insn 251
changing reg in insn 251
changing reg in insn 252
changing reg in insn 252
changing reg in insn 253
changing reg in insn 253
changing reg in insn 256
changing reg in insn 258
changing reg in insn 259
changing reg in insn 259
changing reg in insn 260
changing reg in insn 260
changing reg in insn 261
changing reg in insn 261
changing reg in insn 262
changing reg in insn 262
changing reg in insn 265
changing reg in insn 267
changing reg in insn 268
changing reg in insn 268
changing reg in insn 269
changing reg in insn 269
changing reg in insn 270
changing reg in insn 270
changing reg in insn 271
changing reg in insn 271
changing reg in insn 274
changing reg in insn 276
changing reg in insn 277
changing reg in insn 277
changing reg in insn 278
changing reg in insn 278
changing reg in insn 279
changing reg in insn 279
changing reg in insn 280
changing reg in insn 280
changing reg in insn 283
changing reg in insn 285
changing reg in insn 286
changing reg in insn 286
changing reg in insn 287
changing reg in insn 287
changing reg in insn 288
changing reg in insn 288
changing reg in insn 289
changing reg in insn 289
changing reg in insn 292
changing reg in insn 295
changing reg in insn 296
changing reg in insn 296
changing reg in insn 298
changing reg in insn 299
changing reg in insn 299
changing reg in insn 300
changing reg in insn 300
changing reg in insn 301
changing reg in insn 301
changing reg in insn 304
changing reg in insn 306
changing reg in insn 307
changing reg in insn 307
changing reg in insn 308
changing reg in insn 308
changing reg in insn 309
changing reg in insn 309
changing reg in insn 310
changing reg in insn 310
changing reg in insn 313
changing reg in insn 315
changing reg in insn 316
changing reg in insn 316
changing reg in insn 317
changing reg in insn 317
changing reg in insn 318
changing reg in insn 318
changing reg in insn 319
changing reg in insn 319
changing reg in insn 322
changing reg in insn 324
changing reg in insn 325
changing reg in insn 325
changing reg in insn 326
changing reg in insn 326
changing reg in insn 327
changing reg in insn 327
changing reg in insn 328
changing reg in insn 328
changing reg in insn 331
changing reg in insn 333
changing reg in insn 334
changing reg in insn 334
changing reg in insn 335
changing reg in insn 335
changing reg in insn 336
changing reg in insn 336
changing reg in insn 337
changing reg in insn 337
changing reg in insn 340
changing reg in insn 342
changing reg in insn 343
changing reg in insn 343
changing reg in insn 344
changing reg in insn 344
changing reg in insn 345
changing reg in insn 345
changing reg in insn 346
changing reg in insn 346
changing reg in insn 349
changing reg in insn 353
changing reg in insn 162
changing reg in insn 12
changing reg in insn 356
changing reg in insn 356
changing reg in insn 360
changing reg in insn 17
changing reg in insn 20
changing reg in insn 18
changing reg in insn 20
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 28
changing reg in insn 29
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 64
changing reg in insn 65
changing reg in insn 68
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 74
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 77
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 79
changing reg in insn 80
changing reg in insn 82
changing reg in insn 81
changing reg in insn 82
changing reg in insn 83
changing reg in insn 85
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 88
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 91
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 94
changing reg in insn 93
changing reg in insn 94
changing reg in insn 95
changing reg in insn 97
changing reg in insn 96
changing reg in insn 97
changing reg in insn 98
changing reg in insn 100
changing reg in insn 99
changing reg in insn 100
changing reg in insn 101
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 107
changing reg in insn 108
changing reg in insn 109
changing reg in insn 111
changing reg in insn 112
changing reg in insn 113
changing reg in insn 115
changing reg in insn 116
changing reg in insn 117
changing reg in insn 119
changing reg in insn 120
changing reg in insn 121
changing reg in insn 123
changing reg in insn 124
changing reg in insn 129
changing reg in insn 130
changing reg in insn 131
changing reg in insn 132
changing reg in insn 133
changing reg in insn 134
changing reg in insn 135
changing reg in insn 136
changing reg in insn 140
changing reg in insn 141
changing reg in insn 153
changing reg in insn 155
changing reg in insn 154
changing reg in insn 155
changing reg in insn 171
changing reg in insn 174
changing reg in insn 173
changing reg in insn 174
changing reg in insn 172
changing reg in insn 173
changing reg in insn 174
changing reg in insn 175
changing reg in insn 179
changing reg in insn 180
changing reg in insn 182
changing reg in insn 183
changing reg in insn 195
changing reg in insn 196
changing reg in insn 201
changing reg in insn 202
changing reg in insn 209
changing reg in insn 210
changing reg in insn 215
changing reg in insn 216
changing reg in insn 223
changing reg in insn 224
changing reg in insn 229
changing reg in insn 230
changing reg in insn 237
changing reg in insn 238
changing reg in insn 240
changing reg in insn 241
changing reg in insn 246
changing reg in insn 247
changing reg in insn 245
changing reg in insn 246
changing reg in insn 248
changing reg in insn 249
changing reg in insn 255
changing reg in insn 256
changing reg in insn 254
changing reg in insn 255
changing reg in insn 257
changing reg in insn 258
changing reg in insn 264
changing reg in insn 265
changing reg in insn 263
changing reg in insn 264
changing reg in insn 266
changing reg in insn 267
changing reg in insn 273
changing reg in insn 274
changing reg in insn 272
changing reg in insn 273
changing reg in insn 275
changing reg in insn 276
changing reg in insn 282
changing reg in insn 283
changing reg in insn 281
changing reg in insn 282
changing reg in insn 284
changing reg in insn 285
changing reg in insn 291
changing reg in insn 292
changing reg in insn 290
changing reg in insn 291
changing reg in insn 294
changing reg in insn 295
changing reg in insn 297
changing reg in insn 298
changing reg in insn 303
changing reg in insn 304
changing reg in insn 302
changing reg in insn 303
changing reg in insn 305
changing reg in insn 306
changing reg in insn 312
changing reg in insn 313
changing reg in insn 311
changing reg in insn 312
changing reg in insn 314
changing reg in insn 315
changing reg in insn 321
changing reg in insn 322
changing reg in insn 320
changing reg in insn 321
changing reg in insn 323
changing reg in insn 324
changing reg in insn 330
changing reg in insn 331
changing reg in insn 329
changing reg in insn 330
changing reg in insn 332
changing reg in insn 333
changing reg in insn 339
changing reg in insn 340
changing reg in insn 338
changing reg in insn 339
changing reg in insn 341
changing reg in insn 342
changing reg in insn 348
changing reg in insn 349
changing reg in insn 347
changing reg in insn 348
changing reg in insn 351
changing reg in insn 352
deleting insn with uid = 7.
deleting insn with uid = 24.
deleting insn with uid = 149.
deleting insn with uid = 242.
deleting insn with uid = 246.
deleting insn with uid = 250.
deleting insn with uid = 255.
deleting insn with uid = 259.
deleting insn with uid = 264.
deleting insn with uid = 268.
deleting insn with uid = 273.
deleting insn with uid = 374.
deleting insn with uid = 277.
deleting insn with uid = 282.
deleting insn with uid = 387.
deleting insn with uid = 286.
deleting insn with uid = 291.
deleting insn with uid = 299.
deleting insn with uid = 303.
deleting insn with uid = 307.
deleting insn with uid = 312.
deleting insn with uid = 316.
deleting insn with uid = 321.
deleting insn with uid = 325.
deleting insn with uid = 330.
deleting insn with uid = 377.
deleting insn with uid = 334.
deleting insn with uid = 339.
deleting insn with uid = 385.
deleting insn with uid = 343.
deleting insn with uid = 348.
deleting insn with uid = 356.
deleting insn with uid = 360.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 147.
verify found no changes in insn with uid = 160.


copy_process

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={190d,190u} r1={54d,50u} r2={11d,8u} r3={7d,7u} r4={6d,6u} r5={6d,6u} r6={4d,4u} r7={8d,160u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={18e} r17={88d,8u} r18={3d} r19={3e} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 1029{569d,439u,21e} in 346{343 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 369 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 369 3 408 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(insn 408 369 2 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])
        (reg:SI 0 ax [82])) 75 {*movsi_internal}
     (nil))
(note 2 408 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 3 bx)
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":99:32 75 {*movsi_internal}
     (nil))
(call_insn 6 5 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_free_page") [flags 0x41]  <function_decl 0x7c5bf2538900 get_free_page>) [0 get_free_page S1 A8])
            (const_int 0 [0]))) "kernel/fork.c":99:32 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 8 6 9 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])
        (reg:SI 0 ax [orig:83 _1 ] [83])) "kernel/fork.c":99:7 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [13 p+0 S4 A32])
            (const_int 0 [0]))) "kernel/fork.c":100:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "kernel/fork.c":100:8 806 {*jcc}
     (nil)
 -> 15)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 363 3 (set (reg:SI 0 ax [orig:202 _125 ] [202])
        (const_int -11 [0xfffffffffffffff5])) "kernel/fork.c":101:16 75 {*movsi_internal}
     (nil))
(jump_insn 363 12 364 3 (set (pc)
        (label_ref 354)) "kernel/fork.c":101:16 807 {jump}
     (nil)
 -> 354)
(barrier 364 363 15)
(code_label 15 364 16 4 22 (nil) [1 uses])
(note 16 15 435 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 435 16 17 4 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":104:14 75 {*movsi_internal}
     (nil))
(insn 17 435 18 4 (set (reg/f:SI 0 ax [204])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7c5bf252e1b0 task>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":104:14 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (set (reg:SI 1 dx [205])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [5 nr+0 S4 A32])) "kernel/fork.c":104:14 75 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg/f:SI 2 cx [206])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":104:14 75 {*movsi_internal}
     (nil))
(insn 20 19 434 4 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [205])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [204])) [13 task[nr_135(D)]+0 S4 A32])
        (reg/f:SI 2 cx [206])) "kernel/fork.c":104:14 75 {*movsi_internal}
     (nil))
(insn 434 20 21 4 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":110:10 75 {*movsi_internal}
     (nil))
(insn 21 434 22 4 (set (reg/f:SI 0 ax [207])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7c5bf252e120 current>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":110:10 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg/f:SI 0 ax [orig:84 current.8_2 ] [84])
        (mem/f/c:SI (reg/f:SI 0 ax [207]) [13 current+0 S4 A32])) "kernel/fork.c":110:10 75 {*movsi_internal}
     (nil))
(insn 23 22 25 4 (set (reg/f:SI 1 dx [208])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":110:8 75 {*movsi_internal}
     (nil))
(insn 25 23 26 4 (set (reg/f:SI 3 bx [210])
        (reg/f:SI 0 ax [orig:84 current.8_2 ] [84])) "kernel/fork.c":110:8 75 {*movsi_internal}
     (nil))
(insn 26 25 371 4 (set (reg:SI 0 ax [211])
        (const_int 239 [0xef])) "kernel/fork.c":110:8 75 {*movsi_internal}
     (nil))
(insn 371 26 372 4 (set (reg/f:SI 5 di [209])
        (reg/f:SI 1 dx [209])) "kernel/fork.c":110:8 75 {*movsi_internal}
     (nil))
(insn 372 371 373 4 (set (reg/f:SI 4 si [210])
        (reg/f:SI 3 bx [210])) "kernel/fork.c":110:8 75 {*movsi_internal}
     (nil))
(insn 373 372 27 4 (set (reg:SI 2 cx [211])
        (reg:SI 0 ax [211])) "kernel/fork.c":110:8 75 {*movsi_internal}
     (nil))
(insn 27 373 28 4 (parallel [
            (set (reg:SI 2 cx [211])
                (const_int 0 [0]))
            (set (reg/f:SI 5 di [209])
                (plus:SI (ashift:SI (reg:SI 2 cx [211])
                        (const_int 2 [0x2]))
                    (reg/f:SI 5 di [209])))
            (set (reg/f:SI 4 si [210])
                (plus:SI (ashift:SI (reg:SI 2 cx [211])
                        (const_int 2 [0x2]))
                    (reg/f:SI 4 si [210])))
            (set (mem:BLK (reg/f:SI 5 di [209]) [2 *p_134+0 S956 A32])
                (mem:BLK (reg/f:SI 4 si [210]) [2 *current.8_2+0 S956 A32]))
            (use (reg:SI 2 cx [211]))
        ]) "kernel/fork.c":110:8 1067 {*rep_movsi}
     (nil))
(insn 28 27 29 4 (set (reg/f:SI 0 ax [212])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":111:14 75 {*movsi_internal}
     (nil))
(insn 29 28 433 4 (set (mem:SI (reg/f:SI 0 ax [212]) [1 p_134->state+0 S4 A32])
        (const_int 2 [0x2])) "kernel/fork.c":111:14 75 {*movsi_internal}
     (nil))
(insn 433 29 30 4 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":112:12 75 {*movsi_internal}
     (nil))
(insn 30 433 31 4 (set (reg:SI 1 dx [orig:85 last_pid.9_3 ] [85])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_pid") [flags 0x2]  <var_decl 0x7c5bf252e750 last_pid>)
                        ] UNSPEC_GOTOFF))) [1 last_pid+0 S4 A32])) "kernel/fork.c":112:12 75 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (set (reg/f:SI 0 ax [213])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":112:12 75 {*movsi_internal}
     (nil))
(insn 32 31 432 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [213])
                (const_int 556 [0x22c])) [1 p_134->pid+0 S4 A32])
        (reg:SI 1 dx [orig:85 last_pid.9_3 ] [85])) "kernel/fork.c":112:12 75 {*movsi_internal}
     (nil))
(insn 432 32 33 4 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":113:24 75 {*movsi_internal}
     (nil))
(insn 33 432 34 4 (set (reg/f:SI 0 ax [214])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7c5bf252e120 current>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":113:24 75 {*movsi_internal}
     (nil))
(insn 34 33 35 4 (set (reg/f:SI 0 ax [orig:86 current.10_4 ] [86])
        (mem/f/c:SI (reg/f:SI 0 ax [214]) [13 current+0 S4 A32])) "kernel/fork.c":113:24 75 {*movsi_internal}
     (nil))
(insn 35 34 36 4 (set (reg:SI 1 dx [orig:87 _5 ] [87])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:86 current.10_4 ] [86])
                (const_int 556 [0x22c])) [1 current.10_4->pid+0 S4 A32])) "kernel/fork.c":113:24 75 {*movsi_internal}
     (nil))
(insn 36 35 37 4 (set (reg/f:SI 0 ax [215])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":113:15 75 {*movsi_internal}
     (nil))
(insn 37 36 38 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [215])
                (const_int 560 [0x230])) [1 p_134->father+0 S4 A32])
        (reg:SI 1 dx [orig:87 _5 ] [87])) "kernel/fork.c":113:15 75 {*movsi_internal}
     (nil))
(insn 38 37 39 4 (set (reg/f:SI 0 ax [216])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":114:19 75 {*movsi_internal}
     (nil))
(insn 39 38 40 4 (set (reg:SI 1 dx [orig:88 _6 ] [88])
        (mem:SI (plus:SI (reg/f:SI 0 ax [216])
                (const_int 8 [0x8])) [1 p_134->priority+0 S4 A32])) "kernel/fork.c":114:19 75 {*movsi_internal}
     (nil))
(insn 40 39 41 4 (set (reg/f:SI 0 ax [217])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":114:16 75 {*movsi_internal}
     (nil))
(insn 41 40 42 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [217])
                (const_int 4 [0x4])) [1 p_134->counter+0 S4 A32])
        (reg:SI 1 dx [orig:88 _6 ] [88])) "kernel/fork.c":114:16 75 {*movsi_internal}
     (nil))
(insn 42 41 43 4 (set (reg/f:SI 0 ax [218])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":115:15 75 {*movsi_internal}
     (nil))
(insn 43 42 44 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [218])
                (const_int 12 [0xc])) [1 p_134->signal+0 S4 A32])
        (const_int 0 [0])) "kernel/fork.c":115:15 75 {*movsi_internal}
     (nil))
(insn 44 43 45 4 (set (reg/f:SI 0 ax [219])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":116:14 75 {*movsi_internal}
     (nil))
(insn 45 44 46 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [219])
                (const_int 588 [0x24c])) [1 p_134->alarm+0 S4 A32])
        (const_int 0 [0])) "kernel/fork.c":116:14 75 {*movsi_internal}
     (nil))
(insn 46 45 47 4 (set (reg/f:SI 0 ax [220])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":117:15 75 {*movsi_internal}
     (nil))
(insn 47 46 48 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [220])
                (const_int 572 [0x23c])) [1 p_134->leader+0 S4 A32])
        (const_int 0 [0])) "kernel/fork.c":117:15 75 {*movsi_internal}
     (nil))
(insn 48 47 49 4 (set (reg/f:SI 0 ax [221])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":118:25 75 {*movsi_internal}
     (nil))
(insn 49 48 50 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [221])
                (const_int 596 [0x254])) [1 p_134->stime+0 S4 A32])
        (const_int 0 [0])) "kernel/fork.c":118:25 75 {*movsi_internal}
     (nil))
(insn 50 49 51 4 (set (reg/f:SI 0 ax [222])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":118:17 75 {*movsi_internal}
     (nil))
(insn 51 50 52 4 (set (reg:SI 1 dx [orig:89 _7 ] [89])
        (mem:SI (plus:SI (reg/f:SI 0 ax [222])
                (const_int 596 [0x254])) [1 p_134->stime+0 S4 A32])) "kernel/fork.c":118:17 75 {*movsi_internal}
     (nil))
(insn 52 51 53 4 (set (reg/f:SI 0 ax [223])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":118:14 75 {*movsi_internal}
     (nil))
(insn 53 52 54 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [223])
                (const_int 592 [0x250])) [1 p_134->utime+0 S4 A32])
        (reg:SI 1 dx [orig:89 _7 ] [89])) "kernel/fork.c":118:14 75 {*movsi_internal}
     (nil))
(insn 54 53 55 4 (set (reg/f:SI 0 ax [224])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":119:27 75 {*movsi_internal}
     (nil))
(insn 55 54 56 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [224])
                (const_int 604 [0x25c])) [1 p_134->cstime+0 S4 A32])
        (const_int 0 [0])) "kernel/fork.c":119:27 75 {*movsi_internal}
     (nil))
(insn 56 55 57 4 (set (reg/f:SI 0 ax [225])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":119:18 75 {*movsi_internal}
     (nil))
(insn 57 56 58 4 (set (reg:SI 1 dx [orig:90 _8 ] [90])
        (mem:SI (plus:SI (reg/f:SI 0 ax [225])
                (const_int 604 [0x25c])) [1 p_134->cstime+0 S4 A32])) "kernel/fork.c":119:18 75 {*movsi_internal}
     (nil))
(insn 58 57 59 4 (set (reg/f:SI 0 ax [226])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":119:15 75 {*movsi_internal}
     (nil))
(insn 59 58 431 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [226])
                (const_int 600 [0x258])) [1 p_134->cutime+0 S4 A32])
        (reg:SI 1 dx [orig:90 _8 ] [90])) "kernel/fork.c":119:15 75 {*movsi_internal}
     (nil))
(insn 431 59 60 4 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":120:19 75 {*movsi_internal}
     (nil))
(insn 60 431 61 4 (set (reg/f:SI 0 ax [227])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7c5bf252e360 jiffies>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":120:19 75 {*movsi_internal}
     (nil))
(insn 61 60 62 4 (set (reg:SI 1 dx [orig:91 jiffies.11_9 ] [91])
        (mem/v/c:SI (reg/f:SI 0 ax [227]) [1 jiffies+0 S4 A32])) "kernel/fork.c":120:19 75 {*movsi_internal}
     (nil))
(insn 62 61 63 4 (set (reg/f:SI 0 ax [228])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":120:19 75 {*movsi_internal}
     (nil))
(insn 63 62 64 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [228])
                (const_int 608 [0x260])) [1 p_134->start_time+0 S4 A32])
        (reg:SI 1 dx [orig:91 jiffies.11_9 ] [91])) "kernel/fork.c":120:19 75 {*movsi_internal}
     (nil))
(insn 64 63 65 4 (set (reg/f:SI 0 ax [229])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":121:22 75 {*movsi_internal}
     (nil))
(insn 65 64 66 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [229])
                (const_int 744 [0x2e8])) [1 p_134->tss.back_link+0 S4 A32])
        (const_int 0 [0])) "kernel/fork.c":121:22 75 {*movsi_internal}
     (nil))
(insn 66 65 67 4 (set (reg:SI 0 ax [orig:92 p.12_10 ] [92])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":122:31 75 {*movsi_internal}
     (nil))
(insn 67 66 68 4 (parallel [
            (set (reg:SI 1 dx [orig:93 _11 ] [93])
                (plus:SI (reg:SI 0 ax [orig:92 p.12_10 ] [92])
                    (const_int 4096 [0x1000])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":122:29 209 {*addsi_1}
     (nil))
(insn 68 67 69 4 (set (reg/f:SI 0 ax [230])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":122:17 75 {*movsi_internal}
     (nil))
(insn 69 68 70 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [230])
                (const_int 748 [0x2ec])) [1 p_134->tss.esp0+0 S4 A32])
        (reg:SI 1 dx [orig:93 _11 ] [93])) "kernel/fork.c":122:17 75 {*movsi_internal}
     (nil))
(insn 70 69 71 4 (set (reg/f:SI 0 ax [231])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":123:16 75 {*movsi_internal}
     (nil))
(insn 71 70 72 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [231])
                (const_int 752 [0x2f0])) [1 p_134->tss.ss0+0 S4 A32])
        (const_int 16 [0x10])) "kernel/fork.c":123:16 75 {*movsi_internal}
     (nil))
(insn 72 71 73 4 (set (reg/f:SI 0 ax [232])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":124:16 75 {*movsi_internal}
     (nil))
(insn 73 72 74 4 (set (reg:SI 1 dx [233])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 112 [0x70])) [1 eip+0 S4 A32])) "kernel/fork.c":124:16 75 {*movsi_internal}
     (nil))
(insn 74 73 75 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [232])
                (const_int 776 [0x308])) [1 p_134->tss.eip+0 S4 A32])
        (reg:SI 1 dx [233])) "kernel/fork.c":124:16 75 {*movsi_internal}
     (nil))
(insn 75 74 76 4 (set (reg/f:SI 0 ax [234])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":125:19 75 {*movsi_internal}
     (nil))
(insn 76 75 77 4 (set (reg:SI 1 dx [235])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 120 [0x78])) [1 eflags+0 S4 A32])) "kernel/fork.c":125:19 75 {*movsi_internal}
     (nil))
(insn 77 76 78 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [234])
                (const_int 780 [0x30c])) [1 p_134->tss.eflags+0 S4 A32])
        (reg:SI 1 dx [235])) "kernel/fork.c":125:19 75 {*movsi_internal}
     (nil))
(insn 78 77 79 4 (set (reg/f:SI 0 ax [236])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":126:16 75 {*movsi_internal}
     (nil))
(insn 79 78 80 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [236])
                (const_int 784 [0x310])) [1 p_134->tss.eax+0 S4 A32])
        (const_int 0 [0])) "kernel/fork.c":126:16 75 {*movsi_internal}
     (nil))
(insn 80 79 81 4 (set (reg/f:SI 0 ax [237])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":127:16 75 {*movsi_internal}
     (nil))
(insn 81 80 82 4 (set (reg:SI 1 dx [238])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 92 [0x5c])) [1 ecx+0 S4 A32])) "kernel/fork.c":127:16 75 {*movsi_internal}
     (nil))
(insn 82 81 83 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [237])
                (const_int 788 [0x314])) [1 p_134->tss.ecx+0 S4 A32])
        (reg:SI 1 dx [238])) "kernel/fork.c":127:16 75 {*movsi_internal}
     (nil))
(insn 83 82 84 4 (set (reg/f:SI 0 ax [239])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":128:16 75 {*movsi_internal}
     (nil))
(insn 84 83 85 4 (set (reg:SI 1 dx [240])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 96 [0x60])) [1 edx+0 S4 A32])) "kernel/fork.c":128:16 75 {*movsi_internal}
     (nil))
(insn 85 84 86 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [239])
                (const_int 792 [0x318])) [1 p_134->tss.edx+0 S4 A32])
        (reg:SI 1 dx [240])) "kernel/fork.c":128:16 75 {*movsi_internal}
     (nil))
(insn 86 85 87 4 (set (reg/f:SI 0 ax [241])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":129:16 75 {*movsi_internal}
     (nil))
(insn 87 86 88 4 (set (reg:SI 1 dx [242])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 88 [0x58])) [1 ebx+0 S4 A32])) "kernel/fork.c":129:16 75 {*movsi_internal}
     (nil))
(insn 88 87 89 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [241])
                (const_int 796 [0x31c])) [1 p_134->tss.ebx+0 S4 A32])
        (reg:SI 1 dx [242])) "kernel/fork.c":129:16 75 {*movsi_internal}
     (nil))
(insn 89 88 90 4 (set (reg/f:SI 0 ax [243])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":130:16 75 {*movsi_internal}
     (nil))
(insn 90 89 91 4 (set (reg:SI 1 dx [244])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 124 [0x7c])) [1 esp+0 S4 A32])) "kernel/fork.c":130:16 75 {*movsi_internal}
     (nil))
(insn 91 90 92 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [243])
                (const_int 800 [0x320])) [1 p_134->tss.esp+0 S4 A32])
        (reg:SI 1 dx [244])) "kernel/fork.c":130:16 75 {*movsi_internal}
     (nil))
(insn 92 91 93 4 (set (reg/f:SI 0 ax [245])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":131:16 75 {*movsi_internal}
     (nil))
(insn 93 92 94 4 (set (reg:SI 1 dx [246])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 ebp+0 S4 A32])) "kernel/fork.c":131:16 75 {*movsi_internal}
     (nil))
(insn 94 93 95 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [245])
                (const_int 804 [0x324])) [1 p_134->tss.ebp+0 S4 A32])
        (reg:SI 1 dx [246])) "kernel/fork.c":131:16 75 {*movsi_internal}
     (nil))
(insn 95 94 96 4 (set (reg/f:SI 0 ax [247])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":132:16 75 {*movsi_internal}
     (nil))
(insn 96 95 97 4 (set (reg:SI 1 dx [248])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [1 esi+0 S4 A32])) "kernel/fork.c":132:16 75 {*movsi_internal}
     (nil))
(insn 97 96 98 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [247])
                (const_int 808 [0x328])) [1 p_134->tss.esi+0 S4 A32])
        (reg:SI 1 dx [248])) "kernel/fork.c":132:16 75 {*movsi_internal}
     (nil))
(insn 98 97 99 4 (set (reg/f:SI 0 ax [249])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":133:16 75 {*movsi_internal}
     (nil))
(insn 99 98 100 4 (set (reg:SI 1 dx [250])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [1 edi+0 S4 A32])) "kernel/fork.c":133:16 75 {*movsi_internal}
     (nil))
(insn 100 99 101 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [249])
                (const_int 812 [0x32c])) [1 p_134->tss.edi+0 S4 A32])
        (reg:SI 1 dx [250])) "kernel/fork.c":133:16 75 {*movsi_internal}
     (nil))
(insn 101 100 102 4 (set (reg:SI 0 ax [251])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 104 [0x68])) [1 es+0 S4 A32])) "kernel/fork.c":134:20 75 {*movsi_internal}
     (nil))
(insn 102 101 103 4 (set (reg:SI 1 dx [orig:94 _12 ] [94])
        (zero_extend:SI (reg:HI 0 ax [251]))) "kernel/fork.c":134:20 144 {*zero_extendhisi2}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 40 [0x28])) [1 es+0 S4 A32])
            (const_int 65535 [0xffff]))
        (nil)))
(insn 103 102 104 4 (set (reg/f:SI 0 ax [252])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":134:15 75 {*movsi_internal}
     (nil))
(insn 104 103 105 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [252])
                (const_int 816 [0x330])) [1 p_134->tss.es+0 S4 A32])
        (reg:SI 1 dx [orig:94 _12 ] [94])) "kernel/fork.c":134:15 75 {*movsi_internal}
     (nil))
(insn 105 104 106 4 (set (reg:SI 0 ax [253])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 116 [0x74])) [1 cs+0 S4 A32])) "kernel/fork.c":135:20 75 {*movsi_internal}
     (nil))
(insn 106 105 107 4 (set (reg:SI 1 dx [orig:95 _13 ] [95])
        (zero_extend:SI (reg:HI 0 ax [253]))) "kernel/fork.c":135:20 144 {*zero_extendhisi2}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 52 [0x34])) [1 cs+0 S4 A32])
            (const_int 65535 [0xffff]))
        (nil)))
(insn 107 106 108 4 (set (reg/f:SI 0 ax [254])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":135:15 75 {*movsi_internal}
     (nil))
(insn 108 107 109 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [254])
                (const_int 820 [0x334])) [1 p_134->tss.cs+0 S4 A32])
        (reg:SI 1 dx [orig:95 _13 ] [95])) "kernel/fork.c":135:15 75 {*movsi_internal}
     (nil))
(insn 109 108 110 4 (set (reg:SI 0 ax [255])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 128 [0x80])) [1 ss+0 S4 A32])) "kernel/fork.c":136:20 75 {*movsi_internal}
     (nil))
(insn 110 109 111 4 (set (reg:SI 1 dx [orig:96 _14 ] [96])
        (zero_extend:SI (reg:HI 0 ax [255]))) "kernel/fork.c":136:20 144 {*zero_extendhisi2}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 64 [0x40])) [1 ss+0 S4 A32])
            (const_int 65535 [0xffff]))
        (nil)))
(insn 111 110 112 4 (set (reg/f:SI 0 ax [256])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":136:15 75 {*movsi_internal}
     (nil))
(insn 112 111 113 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [256])
                (const_int 824 [0x338])) [1 p_134->tss.ss+0 S4 A32])
        (reg:SI 1 dx [orig:96 _14 ] [96])) "kernel/fork.c":136:15 75 {*movsi_internal}
     (nil))
(insn 113 112 114 4 (set (reg:SI 0 ax [257])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 108 [0x6c])) [1 ds+0 S4 A32])) "kernel/fork.c":137:20 75 {*movsi_internal}
     (nil))
(insn 114 113 115 4 (set (reg:SI 1 dx [orig:97 _15 ] [97])
        (zero_extend:SI (reg:HI 0 ax [257]))) "kernel/fork.c":137:20 144 {*zero_extendhisi2}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 44 [0x2c])) [1 ds+0 S4 A32])
            (const_int 65535 [0xffff]))
        (nil)))
(insn 115 114 116 4 (set (reg/f:SI 0 ax [258])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":137:15 75 {*movsi_internal}
     (nil))
(insn 116 115 117 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [258])
                (const_int 828 [0x33c])) [1 p_134->tss.ds+0 S4 A32])
        (reg:SI 1 dx [orig:97 _15 ] [97])) "kernel/fork.c":137:15 75 {*movsi_internal}
     (nil))
(insn 117 116 118 4 (set (reg:SI 0 ax [259])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 100 [0x64])) [1 fs+0 S4 A32])) "kernel/fork.c":138:20 75 {*movsi_internal}
     (nil))
(insn 118 117 119 4 (set (reg:SI 1 dx [orig:98 _16 ] [98])
        (zero_extend:SI (reg:HI 0 ax [259]))) "kernel/fork.c":138:20 144 {*zero_extendhisi2}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 36 [0x24])) [1 fs+0 S4 A32])
            (const_int 65535 [0xffff]))
        (nil)))
(insn 119 118 120 4 (set (reg/f:SI 0 ax [260])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":138:15 75 {*movsi_internal}
     (nil))
(insn 120 119 121 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [260])
                (const_int 832 [0x340])) [1 p_134->tss.fs+0 S4 A32])
        (reg:SI 1 dx [orig:98 _16 ] [98])) "kernel/fork.c":138:15 75 {*movsi_internal}
     (nil))
(insn 121 120 122 4 (set (reg:SI 0 ax [261])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [1 gs+0 S4 A32])) "kernel/fork.c":139:20 75 {*movsi_internal}
     (nil))
(insn 122 121 123 4 (set (reg:SI 1 dx [orig:99 _17 ] [99])
        (zero_extend:SI (reg:HI 0 ax [261]))) "kernel/fork.c":139:20 144 {*zero_extendhisi2}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 16 [0x10])) [1 gs+0 S4 A32])
            (const_int 65535 [0xffff]))
        (nil)))
(insn 123 122 124 4 (set (reg/f:SI 0 ax [262])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":139:15 75 {*movsi_internal}
     (nil))
(insn 124 123 125 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [262])
                (const_int 836 [0x344])) [1 p_134->tss.gs+0 S4 A32])
        (reg:SI 1 dx [orig:99 _17 ] [99])) "kernel/fork.c":139:15 75 {*movsi_internal}
     (nil))
(insn 125 124 126 4 (set (reg:SI 0 ax [orig:100 nr.13_18 ] [100])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [5 nr+0 S4 A32])) "kernel/fork.c":140:18 75 {*movsi_internal}
     (nil))
(insn 126 125 127 4 (parallel [
            (set (reg:SI 0 ax [orig:101 _19 ] [101])
                (ashift:SI (reg:SI 0 ax [orig:100 nr.13_18 ] [100])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":140:18 655 {*ashlsi3_1}
     (nil))
(insn 127 126 128 4 (parallel [
            (set (reg:SI 0 ax [orig:102 _20 ] [102])
                (plus:SI (reg:SI 0 ax [orig:101 _19 ] [101])
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":140:18 209 {*addsi_1}
     (nil))
(insn 128 127 129 4 (set (reg:SI 1 dx [orig:103 _21 ] [103])
        (reg:SI 0 ax [orig:102 _20 ] [102])) "kernel/fork.c":140:18 75 {*movsi_internal}
     (nil))
(insn 129 128 130 4 (set (reg/f:SI 0 ax [263])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":140:16 75 {*movsi_internal}
     (nil))
(insn 130 129 131 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [263])
                (const_int 840 [0x348])) [1 p_134->tss.ldt+0 S4 A32])
        (reg:SI 1 dx [orig:103 _21 ] [103])) "kernel/fork.c":140:16 75 {*movsi_internal}
     (nil))
(insn 131 130 132 4 (set (reg/f:SI 0 ax [264])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":141:25 75 {*movsi_internal}
     (nil))
(insn 132 131 430 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [264])
                (const_int 844 [0x34c])) [1 p_134->tss.trace_bitmap+0 S4 A32])
        (const_int -2147483648 [0xffffffff80000000])) "kernel/fork.c":141:25 75 {*movsi_internal}
     (nil))
(insn 430 132 133 4 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":142:29 75 {*movsi_internal}
     (nil))
(insn 133 430 134 4 (set (reg/f:SI 0 ax [265])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_task_used_math") [flags 0x40]  <var_decl 0x7c5bf252e240 last_task_used_math>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":142:29 75 {*movsi_internal}
     (nil))
(insn 134 133 429 4 (set (reg/f:SI 1 dx [orig:104 last_task_used_math.14_22 ] [104])
        (mem/f/c:SI (reg/f:SI 0 ax [265]) [13 last_task_used_math+0 S4 A32])) "kernel/fork.c":142:29 75 {*movsi_internal}
     (nil))
(insn 429 134 135 4 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":142:29 75 {*movsi_internal}
     (nil))
(insn 135 429 136 4 (set (reg/f:SI 0 ax [266])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7c5bf252e120 current>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":142:29 75 {*movsi_internal}
     (nil))
(insn 136 135 137 4 (set (reg/f:SI 0 ax [orig:105 current.15_23 ] [105])
        (mem/f/c:SI (reg/f:SI 0 ax [266]) [13 current+0 S4 A32])) "kernel/fork.c":142:29 75 {*movsi_internal}
     (nil))
(insn 137 136 138 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 1 dx [orig:104 last_task_used_math.14_22 ] [104])
            (reg/f:SI 0 ax [orig:105 current.15_23 ] [105]))) "kernel/fork.c":142:8 11 {*cmpsi_1}
     (nil))
(jump_insn 138 137 139 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) "kernel/fork.c":142:8 806 {*jcc}
     (nil)
 -> 142)
(note 139 138 140 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 5 (set (reg/f:SI 0 ax [267])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":143:9 75 {*movsi_internal}
     (nil))
(insn 141 140 142 5 (parallel [
            (asm_operands/v ("clts ; fnsave %0") ("") 0 [
                    (mem:BLK (plus:SI (reg/f:SI 0 ax [267])
                            (const_int 848 [0x350])) [12 p_134->tss.i387+0 S108 A32])
                ]
                 [
                    (asm_input:BLK ("m") kernel/fork.c:143)
                ]
                 [] kernel/fork.c:143)
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":143:9 -1
     (nil))
(code_label 142 141 143 6 24 (nil) [1 uses])
(note 143 142 144 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":144:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 145 144 146 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [13 p+0 S4 A32])) "kernel/fork.c":144:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 146 145 147 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [5 nr+0 S4 A32])) "kernel/fork.c":144:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 147 146 148 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("copy_mem") [flags 0x3]  <function_decl 0x7c5bf2540400 copy_mem>) [0 copy_mem S1 A8])
            (const_int 16 [0x10]))) "kernel/fork.c":144:9 823 {*call_value}
     (nil)
    (nil))
(insn 148 147 150 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":144:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 150 148 151 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:106 _24 ] [106])
            (const_int 0 [0]))) "kernel/fork.c":144:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 151 150 152 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) "kernel/fork.c":144:8 806 {*jcc}
     (nil)
 -> 165)
(note 152 151 428 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 428 152 153 7 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":145:18 75 {*movsi_internal}
     (nil))
(insn 153 428 154 7 (set (reg/f:SI 0 ax [268])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7c5bf252e1b0 task>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":145:18 75 {*movsi_internal}
     (nil))
(insn 154 153 155 7 (set (reg:SI 1 dx [269])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [5 nr+0 S4 A32])) "kernel/fork.c":145:18 75 {*movsi_internal}
     (nil))
(insn 155 154 156 7 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [269])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [268])) [13 task[nr_135(D)]+0 S4 A32])
        (const_int 0 [0])) "kernel/fork.c":145:18 75 {*movsi_internal}
     (nil))
(insn 156 155 157 7 (set (reg:SI 0 ax [orig:107 p.16_25 ] [107])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":146:9 75 {*movsi_internal}
     (nil))
(insn 157 156 158 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":146:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 158 157 159 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 0 ax [orig:107 p.16_25 ] [107])) "kernel/fork.c":146:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 159 158 160 7 (set (reg:SI 3 bx)
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":146:9 75 {*movsi_internal}
     (nil))
(call_insn 160 159 161 7 (call (mem:QI (symbol_ref:SI ("free_page") [flags 0x41]  <function_decl 0x7c5bf2538800 free_page>) [0 free_page S1 A8])
        (const_int 16 [0x10])) "kernel/fork.c":146:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 161 160 162 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":146:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 162 161 365 7 (set (reg:SI 0 ax [orig:202 _125 ] [202])
        (const_int -11 [0xfffffffffffffff5])) "kernel/fork.c":147:16 75 {*movsi_internal}
     (nil))
(jump_insn 365 162 366 7 (set (pc)
        (label_ref 354)) "kernel/fork.c":147:16 807 {jump}
     (nil)
 -> 354)
(barrier 366 365 165)
(code_label 165 366 166 8 25 (nil) [1 uses])
(note 166 165 167 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 367 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [5 i+0 S4 A32])
        (const_int 0 [0])) "kernel/fork.c":149:12 75 {*movsi_internal}
     (nil))
(jump_insn 367 167 368 8 (set (pc)
        (label_ref 187)) "kernel/fork.c":149:5 807 {jump}
     (nil)
 -> 187)
(barrier 368 367 189)
(code_label 189 368 170 9 28 (nil) [1 uses])
(note 170 189 171 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 9 (set (reg/f:SI 0 ax [270])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":150:16 75 {*movsi_internal}
     (nil))
(insn 172 171 173 9 (set (reg:SI 1 dx [272])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [5 i+0 S4 A32])) "kernel/fork.c":150:16 75 {*movsi_internal}
     (nil))
(insn 173 172 174 9 (parallel [
            (set (reg:SI 1 dx [271])
                (plus:SI (reg:SI 1 dx [272])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":150:16 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
            (const_int 160 [0xa0]))
        (nil)))
(insn 174 173 175 9 (set (reg/f:SI 0 ax [273])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [271])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [270])) [9 p_134->filp[i_124]+0 S4 A32])) "kernel/fork.c":150:16 75 {*movsi_internal}
     (nil))
(insn 175 174 176 9 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [9 f+0 S4 A32])
        (reg/f:SI 0 ax [273])) "kernel/fork.c":150:16 75 {*movsi_internal}
     (nil))
(insn 176 175 177 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])) [9 f+0 S4 A32])
            (const_int 0 [0]))) "kernel/fork.c":150:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 177 176 178 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) "kernel/fork.c":150:12 806 {*jcc}
     (nil)
 -> 184)
(note 178 177 179 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 10 (set (reg/f:SI 0 ax [274])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [9 f+0 S4 A32])) "kernel/fork.c":151:14 75 {*movsi_internal}
     (nil))
(insn 180 179 181 10 (set (reg:HI 0 ax [orig:108 _26 ] [108])
        (mem:HI (plus:SI (reg/f:SI 0 ax [274])
                (const_int 4 [0x4])) [7 f_193->f_count+0 S2 A32])) "kernel/fork.c":151:14 76 {*movhi_internal}
     (nil))
(insn 181 180 182 10 (parallel [
            (set (reg:HI 1 dx [orig:109 _28 ] [109])
                (plus:HI (reg:HI 0 ax [orig:108 _26 ] [108])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":151:23 212 {*addhi_1}
     (nil))
(insn 182 181 183 10 (set (reg/f:SI 0 ax [275])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [9 f+0 S4 A32])) "kernel/fork.c":151:23 75 {*movsi_internal}
     (nil))
(insn 183 182 184 10 (set (mem:HI (plus:SI (reg/f:SI 0 ax [275])
                (const_int 4 [0x4])) [7 f_193->f_count+0 S2 A32])
        (reg:HI 1 dx [orig:109 _28 ] [109])) "kernel/fork.c":151:23 76 {*movhi_internal}
     (nil))
(code_label 184 183 185 11 27 (nil) [1 uses])
(note 185 184 186 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 11 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 28 [0x1c])) [5 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 28 [0x1c])) [5 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":149:31 209 {*addsi_1}
     (nil))
(code_label 187 186 188 12 26 (nil) [1 uses])
(note 188 187 192 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 192 188 193 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [5 i+0 S4 A32])
            (const_int 19 [0x13]))) "kernel/fork.c":149:19 11 {*cmpsi_1}
     (nil))
(jump_insn 193 192 194 12 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 189)
            (pc))) "kernel/fork.c":149:19 806 {*jcc}
     (nil)
 -> 189)
(note 194 193 427 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 427 194 195 13 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":152:16 75 {*movsi_internal}
     (nil))
(insn 195 427 196 13 (set (reg/f:SI 0 ax [276])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7c5bf252e120 current>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":152:16 75 {*movsi_internal}
     (nil))
(insn 196 195 197 13 (set (reg/f:SI 0 ax [orig:110 current.17_29 ] [110])
        (mem/f/c:SI (reg/f:SI 0 ax [276]) [13 current+0 S4 A32])) "kernel/fork.c":152:16 75 {*movsi_internal}
     (nil))
(insn 197 196 198 13 (set (reg/f:SI 0 ax [orig:111 _30 ] [111])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:110 current.17_29 ] [110])
                (const_int 624 [0x270])) [8 current.17_29->pwd+0 S4 A32])) "kernel/fork.c":152:16 75 {*movsi_internal}
     (nil))
(insn 198 197 199 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:111 _30 ] [111])
            (const_int 0 [0]))) "kernel/fork.c":152:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 199 198 200 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 207)
            (pc))) "kernel/fork.c":152:8 806 {*jcc}
     (nil)
 -> 207)
(note 200 199 426 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 426 200 201 14 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":153:16 75 {*movsi_internal}
     (nil))
(insn 201 426 202 14 (set (reg/f:SI 0 ax [277])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7c5bf252e120 current>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":153:16 75 {*movsi_internal}
     (nil))
(insn 202 201 203 14 (set (reg/f:SI 0 ax [orig:112 current.18_31 ] [112])
        (mem/f/c:SI (reg/f:SI 0 ax [277]) [13 current+0 S4 A32])) "kernel/fork.c":153:16 75 {*movsi_internal}
     (nil))
(insn 203 202 204 14 (set (reg/f:SI 0 ax [orig:113 _32 ] [113])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:112 current.18_31 ] [112])
                (const_int 624 [0x270])) [8 current.18_31->pwd+0 S4 A32])) "kernel/fork.c":153:16 75 {*movsi_internal}
     (nil))
(insn 204 203 205 14 (set (reg:HI 1 dx [orig:114 _33 ] [114])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:113 _32 ] [113])
                (const_int 48 [0x30])) [7 _32->i_count+0 S2 A32])) "kernel/fork.c":153:21 76 {*movhi_internal}
     (nil))
(insn 205 204 206 14 (parallel [
            (set (reg:HI 1 dx [orig:115 _35 ] [115])
                (plus:HI (reg:HI 1 dx [orig:114 _33 ] [114])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":153:30 212 {*addhi_1}
     (nil))
(insn 206 205 207 14 (set (mem:HI (plus:SI (reg/f:SI 0 ax [orig:113 _32 ] [113])
                (const_int 48 [0x30])) [7 _32->i_count+0 S2 A32])
        (reg:HI 1 dx [orig:115 _35 ] [115])) "kernel/fork.c":153:30 76 {*movhi_internal}
     (nil))
(code_label 207 206 208 15 29 (nil) [1 uses])
(note 208 207 425 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 425 208 209 15 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":154:16 75 {*movsi_internal}
     (nil))
(insn 209 425 210 15 (set (reg/f:SI 0 ax [278])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7c5bf252e120 current>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":154:16 75 {*movsi_internal}
     (nil))
(insn 210 209 211 15 (set (reg/f:SI 0 ax [orig:116 current.19_36 ] [116])
        (mem/f/c:SI (reg/f:SI 0 ax [278]) [13 current+0 S4 A32])) "kernel/fork.c":154:16 75 {*movsi_internal}
     (nil))
(insn 211 210 212 15 (set (reg/f:SI 0 ax [orig:117 _37 ] [117])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:116 current.19_36 ] [116])
                (const_int 628 [0x274])) [8 current.19_36->root+0 S4 A32])) "kernel/fork.c":154:16 75 {*movsi_internal}
     (nil))
(insn 212 211 213 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:117 _37 ] [117])
            (const_int 0 [0]))) "kernel/fork.c":154:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 213 212 214 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 221)
            (pc))) "kernel/fork.c":154:8 806 {*jcc}
     (nil)
 -> 221)
(note 214 213 424 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 424 214 215 16 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":155:16 75 {*movsi_internal}
     (nil))
(insn 215 424 216 16 (set (reg/f:SI 0 ax [279])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7c5bf252e120 current>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":155:16 75 {*movsi_internal}
     (nil))
(insn 216 215 217 16 (set (reg/f:SI 0 ax [orig:118 current.20_38 ] [118])
        (mem/f/c:SI (reg/f:SI 0 ax [279]) [13 current+0 S4 A32])) "kernel/fork.c":155:16 75 {*movsi_internal}
     (nil))
(insn 217 216 218 16 (set (reg/f:SI 0 ax [orig:119 _39 ] [119])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:118 current.20_38 ] [118])
                (const_int 628 [0x274])) [8 current.20_38->root+0 S4 A32])) "kernel/fork.c":155:16 75 {*movsi_internal}
     (nil))
(insn 218 217 219 16 (set (reg:HI 1 dx [orig:120 _40 ] [120])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:119 _39 ] [119])
                (const_int 48 [0x30])) [7 _39->i_count+0 S2 A32])) "kernel/fork.c":155:22 76 {*movhi_internal}
     (nil))
(insn 219 218 220 16 (parallel [
            (set (reg:HI 1 dx [orig:121 _42 ] [121])
                (plus:HI (reg:HI 1 dx [orig:120 _40 ] [120])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":155:31 212 {*addhi_1}
     (nil))
(insn 220 219 221 16 (set (mem:HI (plus:SI (reg/f:SI 0 ax [orig:119 _39 ] [119])
                (const_int 48 [0x30])) [7 _39->i_count+0 S2 A32])
        (reg:HI 1 dx [orig:121 _42 ] [121])) "kernel/fork.c":155:31 76 {*movhi_internal}
     (nil))
(code_label 221 220 222 17 30 (nil) [1 uses])
(note 222 221 423 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 423 222 223 17 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":156:16 75 {*movsi_internal}
     (nil))
(insn 223 423 224 17 (set (reg/f:SI 0 ax [280])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7c5bf252e120 current>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":156:16 75 {*movsi_internal}
     (nil))
(insn 224 223 225 17 (set (reg/f:SI 0 ax [orig:122 current.21_43 ] [122])
        (mem/f/c:SI (reg/f:SI 0 ax [280]) [13 current+0 S4 A32])) "kernel/fork.c":156:16 75 {*movsi_internal}
     (nil))
(insn 225 224 226 17 (set (reg/f:SI 0 ax [orig:123 _44 ] [123])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:122 current.21_43 ] [122])
                (const_int 632 [0x278])) [8 current.21_43->executable+0 S4 A32])) "kernel/fork.c":156:16 75 {*movsi_internal}
     (nil))
(insn 226 225 227 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:123 _44 ] [123])
            (const_int 0 [0]))) "kernel/fork.c":156:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 227 226 228 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 235)
            (pc))) "kernel/fork.c":156:8 806 {*jcc}
     (nil)
 -> 235)
(note 228 227 422 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 422 228 229 18 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":157:16 75 {*movsi_internal}
     (nil))
(insn 229 422 230 18 (set (reg/f:SI 0 ax [281])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7c5bf252e120 current>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":157:16 75 {*movsi_internal}
     (nil))
(insn 230 229 231 18 (set (reg/f:SI 0 ax [orig:124 current.22_45 ] [124])
        (mem/f/c:SI (reg/f:SI 0 ax [281]) [13 current+0 S4 A32])) "kernel/fork.c":157:16 75 {*movsi_internal}
     (nil))
(insn 231 230 232 18 (set (reg/f:SI 0 ax [orig:125 _46 ] [125])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:124 current.22_45 ] [124])
                (const_int 632 [0x278])) [8 current.22_45->executable+0 S4 A32])) "kernel/fork.c":157:16 75 {*movsi_internal}
     (nil))
(insn 232 231 233 18 (set (reg:HI 1 dx [orig:126 _47 ] [126])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:125 _46 ] [125])
                (const_int 48 [0x30])) [7 _46->i_count+0 S2 A32])) "kernel/fork.c":157:28 76 {*movhi_internal}
     (nil))
(insn 233 232 234 18 (parallel [
            (set (reg:HI 1 dx [orig:127 _49 ] [127])
                (plus:HI (reg:HI 1 dx [orig:126 _47 ] [126])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":157:37 212 {*addhi_1}
     (nil))
(insn 234 233 235 18 (set (mem:HI (plus:SI (reg/f:SI 0 ax [orig:125 _46 ] [125])
                (const_int 48 [0x30])) [7 _46->i_count+0 S2 A32])
        (reg:HI 1 dx [orig:127 _49 ] [127])) "kernel/fork.c":157:37 76 {*movhi_internal}
     (nil))
(code_label 235 234 236 19 31 (nil) [1 uses])
(note 236 235 237 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 238 19 (set (reg/f:SI 0 ax [282])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 238 237 239 19 (parallel [
            (set (reg/f:SI 0 ax [orig:128 _50 ] [128])
                (plus:SI (reg/f:SI 0 ax [282])
                    (const_int 744 [0x2e8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [13 p+0 S4 A32])
            (const_int 744 [0x2e8]))
        (nil)))
(insn 239 238 391 19 (set (reg:SI 4 si [orig:129 _51 ] [129])
        (reg/f:SI 0 ax [orig:128 _50 ] [128])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(note 391 239 383 19 NOTE_INSN_DELETED)
(note 383 391 240 19 NOTE_INSN_DELETED)
(insn 240 383 241 19 (set (reg:SI 0 ax [283])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [5 nr+0 S4 A32])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 241 240 243 19 (parallel [
            (set (reg:SI 0 ax [orig:130 _52 ] [130])
                (ashift:SI (reg:SI 0 ax [283])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (reg/f:SI 16 argp) [5 nr+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 243 241 244 19 (parallel [
            (set (reg:SI 0 ax [orig:132 _54 ] [132])
                (plus:SI (reg:SI 0 ax [orig:131 _53 ] [131])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 209 {*addsi_1}
     (nil))
(insn 244 243 421 19 (parallel [
            (set (reg:SI 1 dx [orig:133 _55 ] [133])
                (ashift:SI (reg:SI 0 ax [orig:132 _54 ] [132])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 655 {*ashlsi3_1}
     (nil))
(insn 421 244 245 19 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 245 421 247 19 (set (reg:SI 0 ax [285])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("gdt") [flags 0x40]  <var_decl 0x7c5bf3961c60 gdt>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 247 245 395 19 (parallel [
            (set (reg/f:SI 0 ax [orig:134 _56 ] [134])
                (plus:SI (reg:SI 1 dx [orig:133 _55 ] [133])
                    (reg:SI 0 ax [284])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 209 {*addsi_1}
     (nil))
(insn 395 247 248 19 (set (reg/f:SI 5 di [orig:134 _56 ] [134])
        (reg/f:SI 0 ax [orig:134 _56 ] [134])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 248 395 249 19 (set (reg:SI 0 ax [286])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [5 nr+0 S4 A32])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 249 248 251 19 (parallel [
            (set (reg:SI 0 ax [orig:135 _57 ] [135])
                (ashift:SI (reg:SI 0 ax [286])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (reg/f:SI 16 argp) [5 nr+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 251 249 252 19 (parallel [
            (set (reg:SI 0 ax [orig:137 _59 ] [137])
                (plus:SI (reg:SI 0 ax [orig:136 _58 ] [136])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 209 {*addsi_1}
     (nil))
(insn 252 251 253 19 (parallel [
            (set (reg:SI 0 ax [orig:138 _60 ] [138])
                (ashift:SI (reg:SI 0 ax [orig:137 _59 ] [137])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 655 {*ashlsi3_1}
     (nil))
(insn 253 252 420 19 (parallel [
            (set (reg:SI 1 dx [orig:139 _61 ] [139])
                (plus:SI (reg:SI 0 ax [orig:138 _60 ] [138])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 209 {*addsi_1}
     (nil))
(insn 420 253 254 19 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 254 420 256 19 (set (reg:SI 0 ax [288])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("gdt") [flags 0x40]  <var_decl 0x7c5bf3961c60 gdt>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 256 254 403 19 (parallel [
            (set (reg/f:SI 0 ax [orig:140 _62 ] [140])
                (plus:SI (reg:SI 1 dx [orig:139 _61 ] [139])
                    (reg:SI 0 ax [287])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 209 {*addsi_1}
     (nil))
(insn 403 256 257 19 (set (reg/f:SI 6 bp [orig:140 _62 ] [140])
        (reg/f:SI 0 ax [orig:140 _62 ] [140])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 257 403 258 19 (set (reg:SI 0 ax [289])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [5 nr+0 S4 A32])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 258 257 260 19 (parallel [
            (set (reg:SI 0 ax [orig:141 _63 ] [141])
                (ashift:SI (reg:SI 0 ax [289])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (reg/f:SI 16 argp) [5 nr+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 260 258 261 19 (parallel [
            (set (reg:SI 0 ax [orig:143 _65 ] [143])
                (plus:SI (reg:SI 0 ax [orig:142 _64 ] [142])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 209 {*addsi_1}
     (nil))
(insn 261 260 262 19 (parallel [
            (set (reg:SI 0 ax [orig:144 _66 ] [144])
                (ashift:SI (reg:SI 0 ax [orig:143 _65 ] [143])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 655 {*ashlsi3_1}
     (nil))
(insn 262 261 419 19 (parallel [
            (set (reg:SI 1 dx [orig:145 _67 ] [145])
                (plus:SI (reg:SI 0 ax [orig:144 _66 ] [144])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 209 {*addsi_1}
     (nil))
(insn 419 262 263 19 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 263 419 265 19 (set (reg:SI 0 ax [291])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("gdt") [flags 0x40]  <var_decl 0x7c5bf3961c60 gdt>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 265 263 407 19 (parallel [
            (set (reg/f:SI 0 ax [orig:146 _68 ] [146])
                (plus:SI (reg:SI 1 dx [orig:145 _67 ] [145])
                    (reg:SI 0 ax [290])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 209 {*addsi_1}
     (nil))
(insn 407 265 266 19 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [20 %sfp+-24 S4 A32])
        (reg/f:SI 0 ax [orig:146 _68 ] [146])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 266 407 267 19 (set (reg:SI 0 ax [292])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [5 nr+0 S4 A32])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 267 266 269 19 (parallel [
            (set (reg:SI 0 ax [orig:147 _69 ] [147])
                (ashift:SI (reg:SI 0 ax [292])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (reg/f:SI 16 argp) [5 nr+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 269 267 270 19 (parallel [
            (set (reg:SI 0 ax [orig:149 _71 ] [149])
                (plus:SI (reg:SI 0 ax [orig:148 _70 ] [148])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 209 {*addsi_1}
     (nil))
(insn 270 269 271 19 (parallel [
            (set (reg:SI 0 ax [orig:150 _72 ] [150])
                (ashift:SI (reg:SI 0 ax [orig:149 _71 ] [149])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 655 {*ashlsi3_1}
     (nil))
(insn 271 270 418 19 (parallel [
            (set (reg:SI 1 dx [orig:151 _73 ] [151])
                (plus:SI (reg:SI 0 ax [orig:150 _72 ] [150])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 209 {*addsi_1}
     (nil))
(insn 418 271 272 19 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 272 418 274 19 (set (reg:SI 0 ax [294])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("gdt") [flags 0x40]  <var_decl 0x7c5bf3961c60 gdt>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 274 272 382 19 (parallel [
            (set (reg/f:SI 2 cx [orig:152 _74 ] [152])
                (plus:SI (reg:SI 1 dx [orig:151 _73 ] [151])
                    (reg:SI 0 ax [293])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 209 {*addsi_1}
     (nil))
(note 382 274 275 19 NOTE_INSN_DELETED)
(insn 275 382 276 19 (set (reg:SI 0 ax [295])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [5 nr+0 S4 A32])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 276 275 278 19 (parallel [
            (set (reg:SI 0 ax [orig:153 _75 ] [153])
                (ashift:SI (reg:SI 0 ax [295])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (reg/f:SI 16 argp) [5 nr+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 278 276 279 19 (parallel [
            (set (reg:SI 0 ax [orig:155 _77 ] [155])
                (plus:SI (reg:SI 0 ax [orig:154 _76 ] [154])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 209 {*addsi_1}
     (nil))
(insn 279 278 280 19 (parallel [
            (set (reg:SI 0 ax [orig:156 _78 ] [156])
                (ashift:SI (reg:SI 0 ax [orig:155 _77 ] [155])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 655 {*ashlsi3_1}
     (nil))
(insn 280 279 417 19 (parallel [
            (set (reg:SI 1 dx [orig:157 _79 ] [157])
                (plus:SI (reg:SI 0 ax [orig:156 _78 ] [156])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 209 {*addsi_1}
     (nil))
(insn 417 280 281 19 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 281 417 283 19 (set (reg:SI 0 ax [297])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("gdt") [flags 0x40]  <var_decl 0x7c5bf3961c60 gdt>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 283 281 390 19 (parallel [
            (set (reg/f:SI 3 bx [orig:158 _80 ] [158])
                (plus:SI (reg:SI 1 dx [orig:157 _79 ] [157])
                    (reg:SI 0 ax [296])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 209 {*addsi_1}
     (nil))
(note 390 283 284 19 NOTE_INSN_DELETED)
(insn 284 390 285 19 (set (reg:SI 0 ax [298])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [5 nr+0 S4 A32])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 285 284 287 19 (parallel [
            (set (reg:SI 0 ax [orig:159 _81 ] [159])
                (ashift:SI (reg:SI 0 ax [298])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (reg/f:SI 16 argp) [5 nr+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 287 285 288 19 (parallel [
            (set (reg:SI 0 ax [orig:161 _83 ] [161])
                (plus:SI (reg:SI 0 ax [orig:160 _82 ] [160])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 209 {*addsi_1}
     (nil))
(insn 288 287 289 19 (parallel [
            (set (reg:SI 0 ax [orig:162 _84 ] [162])
                (ashift:SI (reg:SI 0 ax [orig:161 _83 ] [161])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 655 {*ashlsi3_1}
     (nil))
(insn 289 288 416 19 (parallel [
            (set (reg:SI 1 dx [orig:163 _85 ] [163])
                (plus:SI (reg:SI 0 ax [orig:162 _84 ] [162])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 209 {*addsi_1}
     (nil))
(insn 416 289 290 19 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 290 416 292 19 (set (reg:SI 0 ax [300])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("gdt") [flags 0x40]  <var_decl 0x7c5bf3961c60 gdt>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 292 290 399 19 (parallel [
            (set (reg/f:SI 0 ax [orig:164 _86 ] [164])
                (plus:SI (reg:SI 1 dx [orig:163 _85 ] [163])
                    (reg:SI 0 ax [299])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 209 {*addsi_1}
     (nil))
(insn 399 292 375 19 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [20 %sfp+-20 S4 A32])
        (reg/f:SI 0 ax [orig:164 _86 ] [164])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 375 399 376 19 (set (reg/f:SI 1 dx [orig:152 _74 ] [152])
        (reg/f:SI 2 cx [orig:152 _74 ] [152])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 376 375 386 19 (set (reg:SI 0 ax [orig:129 _51 ] [129])
        (reg:SI 4 si [orig:129 _51 ] [129])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 386 376 394 19 (set (reg/f:SI 2 cx [orig:158 _80 ] [158])
        (reg/f:SI 3 bx [orig:158 _80 ] [158])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 394 386 398 19 (set (reg/f:SI 3 bx [orig:134 _56 ] [134])
        (reg/f:SI 5 di [orig:134 _56 ] [134])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 398 394 402 19 (set (reg/f:SI 4 si [orig:164 _86 ] [164])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [20 %sfp+-20 S4 A32])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 402 398 406 19 (set (reg/f:SI 5 di [orig:140 _62 ] [140])
        (reg/f:SI 6 bp [orig:140 _62 ] [140])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 406 402 293 19 (set (reg/f:SI 6 bp [orig:146 _68 ] [146])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [20 %sfp+-24 S4 A32])) "kernel/fork.c":159:5 75 {*movsi_internal}
     (nil))
(insn 293 406 294 19 (parallel [
            (asm_operands/v ("movw $104, %1
	movw %%ax, %2
	rorl $16, %%eax
	movb %%al, %3
	movb $0x89, %4
	movb $0x00, %5
	movb %%ah, %6
	rorl $16, %%eax") ("") 0 [
                    (reg:SI 0 ax [orig:129 _51 ] [129])
                    (mem:QI (reg/f:SI 3 bx [orig:134 _56 ] [134]) [0 *_56+0 S1 A8])
                    (mem:QI (reg/f:SI 5 di [orig:140 _62 ] [140]) [0 *_62+0 S1 A8])
                    (mem:QI (reg/f:SI 6 bp [orig:146 _68 ] [146]) [0 *_68+0 S1 A8])
                    (mem:QI (reg/f:SI 1 dx [orig:152 _74 ] [152]) [0 *_74+0 S1 A8])
                    (mem:QI (reg/f:SI 2 cx [orig:158 _80 ] [158]) [0 *_80+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:164 _86 ] [164]) [0 *_86+0 S1 A8])
                ]
                 [
                    (asm_input:SI ("a") kernel/fork.c:159)
                    (asm_input:QI ("m") kernel/fork.c:159)
                    (asm_input:QI ("m") kernel/fork.c:159)
                    (asm_input:QI ("m") kernel/fork.c:159)
                    (asm_input:QI ("m") kernel/fork.c:159)
                    (asm_input:QI ("m") kernel/fork.c:159)
                    (asm_input:QI ("m") kernel/fork.c:159)
                ]
                 [] kernel/fork.c:159)
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":159:5 -1
     (nil))
(insn 294 293 295 19 (set (reg/f:SI 0 ax [301])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 295 294 296 19 (parallel [
            (set (reg/f:SI 0 ax [orig:165 _87 ] [165])
                (plus:SI (reg/f:SI 0 ax [301])
                    (const_int 720 [0x2d0])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [13 p+0 S4 A32])
            (const_int 720 [0x2d0]))
        (nil)))
(insn 296 295 389 19 (set (reg:SI 4 si [orig:166 _88 ] [166])
        (reg/f:SI 0 ax [orig:165 _87 ] [165])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(note 389 296 381 19 NOTE_INSN_DELETED)
(note 381 389 297 19 NOTE_INSN_DELETED)
(insn 297 381 298 19 (set (reg:SI 0 ax [302])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [5 nr+0 S4 A32])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 298 297 300 19 (parallel [
            (set (reg:SI 0 ax [orig:167 _89 ] [167])
                (ashift:SI (reg:SI 0 ax [302])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (reg/f:SI 16 argp) [5 nr+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 300 298 301 19 (parallel [
            (set (reg:SI 0 ax [orig:169 _91 ] [169])
                (plus:SI (reg:SI 0 ax [orig:168 _90 ] [168])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 209 {*addsi_1}
     (nil))
(insn 301 300 415 19 (parallel [
            (set (reg:SI 1 dx [orig:170 _92 ] [170])
                (ashift:SI (reg:SI 0 ax [orig:169 _91 ] [169])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 655 {*ashlsi3_1}
     (nil))
(insn 415 301 302 19 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 302 415 304 19 (set (reg:SI 0 ax [304])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("gdt") [flags 0x40]  <var_decl 0x7c5bf3961c60 gdt>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 304 302 393 19 (parallel [
            (set (reg/f:SI 0 ax [orig:171 _93 ] [171])
                (plus:SI (reg:SI 1 dx [orig:170 _92 ] [170])
                    (reg:SI 0 ax [303])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 209 {*addsi_1}
     (nil))
(insn 393 304 305 19 (set (reg/f:SI 5 di [orig:171 _93 ] [171])
        (reg/f:SI 0 ax [orig:171 _93 ] [171])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 305 393 306 19 (set (reg:SI 0 ax [305])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [5 nr+0 S4 A32])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 306 305 308 19 (parallel [
            (set (reg:SI 0 ax [orig:172 _94 ] [172])
                (ashift:SI (reg:SI 0 ax [305])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (reg/f:SI 16 argp) [5 nr+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 308 306 309 19 (parallel [
            (set (reg:SI 0 ax [orig:174 _96 ] [174])
                (plus:SI (reg:SI 0 ax [orig:173 _95 ] [173])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 209 {*addsi_1}
     (nil))
(insn 309 308 310 19 (parallel [
            (set (reg:SI 0 ax [orig:175 _97 ] [175])
                (ashift:SI (reg:SI 0 ax [orig:174 _96 ] [174])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 655 {*ashlsi3_1}
     (nil))
(insn 310 309 414 19 (parallel [
            (set (reg:SI 1 dx [orig:176 _98 ] [176])
                (plus:SI (reg:SI 0 ax [orig:175 _97 ] [175])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 209 {*addsi_1}
     (nil))
(insn 414 310 311 19 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 311 414 313 19 (set (reg:SI 0 ax [307])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("gdt") [flags 0x40]  <var_decl 0x7c5bf3961c60 gdt>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 313 311 401 19 (parallel [
            (set (reg/f:SI 0 ax [orig:177 _99 ] [177])
                (plus:SI (reg:SI 1 dx [orig:176 _98 ] [176])
                    (reg:SI 0 ax [306])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 209 {*addsi_1}
     (nil))
(insn 401 313 314 19 (set (reg/f:SI 6 bp [orig:177 _99 ] [177])
        (reg/f:SI 0 ax [orig:177 _99 ] [177])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 314 401 315 19 (set (reg:SI 0 ax [308])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [5 nr+0 S4 A32])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 315 314 317 19 (parallel [
            (set (reg:SI 0 ax [orig:178 _100 ] [178])
                (ashift:SI (reg:SI 0 ax [308])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (reg/f:SI 16 argp) [5 nr+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 317 315 318 19 (parallel [
            (set (reg:SI 0 ax [orig:180 _102 ] [180])
                (plus:SI (reg:SI 0 ax [orig:179 _101 ] [179])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 209 {*addsi_1}
     (nil))
(insn 318 317 319 19 (parallel [
            (set (reg:SI 0 ax [orig:181 _103 ] [181])
                (ashift:SI (reg:SI 0 ax [orig:180 _102 ] [180])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 655 {*ashlsi3_1}
     (nil))
(insn 319 318 413 19 (parallel [
            (set (reg:SI 1 dx [orig:182 _104 ] [182])
                (plus:SI (reg:SI 0 ax [orig:181 _103 ] [181])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 209 {*addsi_1}
     (nil))
(insn 413 319 320 19 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 320 413 322 19 (set (reg:SI 0 ax [310])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("gdt") [flags 0x40]  <var_decl 0x7c5bf3961c60 gdt>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 322 320 405 19 (parallel [
            (set (reg/f:SI 0 ax [orig:183 _105 ] [183])
                (plus:SI (reg:SI 1 dx [orig:182 _104 ] [182])
                    (reg:SI 0 ax [309])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 209 {*addsi_1}
     (nil))
(insn 405 322 323 19 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [20 %sfp+-24 S4 A32])
        (reg/f:SI 0 ax [orig:183 _105 ] [183])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 323 405 324 19 (set (reg:SI 0 ax [311])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [5 nr+0 S4 A32])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 324 323 326 19 (parallel [
            (set (reg:SI 0 ax [orig:184 _106 ] [184])
                (ashift:SI (reg:SI 0 ax [311])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (reg/f:SI 16 argp) [5 nr+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 326 324 327 19 (parallel [
            (set (reg:SI 0 ax [orig:186 _108 ] [186])
                (plus:SI (reg:SI 0 ax [orig:185 _107 ] [185])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 209 {*addsi_1}
     (nil))
(insn 327 326 328 19 (parallel [
            (set (reg:SI 0 ax [orig:187 _109 ] [187])
                (ashift:SI (reg:SI 0 ax [orig:186 _108 ] [186])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 655 {*ashlsi3_1}
     (nil))
(insn 328 327 412 19 (parallel [
            (set (reg:SI 1 dx [orig:188 _110 ] [188])
                (plus:SI (reg:SI 0 ax [orig:187 _109 ] [187])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 209 {*addsi_1}
     (nil))
(insn 412 328 329 19 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 329 412 331 19 (set (reg:SI 0 ax [313])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("gdt") [flags 0x40]  <var_decl 0x7c5bf3961c60 gdt>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 331 329 380 19 (parallel [
            (set (reg/f:SI 2 cx [orig:189 _111 ] [189])
                (plus:SI (reg:SI 1 dx [orig:188 _110 ] [188])
                    (reg:SI 0 ax [312])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 209 {*addsi_1}
     (nil))
(note 380 331 332 19 NOTE_INSN_DELETED)
(insn 332 380 333 19 (set (reg:SI 0 ax [314])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [5 nr+0 S4 A32])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 333 332 335 19 (parallel [
            (set (reg:SI 0 ax [orig:190 _112 ] [190])
                (ashift:SI (reg:SI 0 ax [314])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (reg/f:SI 16 argp) [5 nr+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 335 333 336 19 (parallel [
            (set (reg:SI 0 ax [orig:192 _114 ] [192])
                (plus:SI (reg:SI 0 ax [orig:191 _113 ] [191])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 209 {*addsi_1}
     (nil))
(insn 336 335 337 19 (parallel [
            (set (reg:SI 0 ax [orig:193 _115 ] [193])
                (ashift:SI (reg:SI 0 ax [orig:192 _114 ] [192])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 655 {*ashlsi3_1}
     (nil))
(insn 337 336 411 19 (parallel [
            (set (reg:SI 1 dx [orig:194 _116 ] [194])
                (plus:SI (reg:SI 0 ax [orig:193 _115 ] [193])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 209 {*addsi_1}
     (nil))
(insn 411 337 338 19 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 338 411 340 19 (set (reg:SI 0 ax [316])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("gdt") [flags 0x40]  <var_decl 0x7c5bf3961c60 gdt>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 340 338 388 19 (parallel [
            (set (reg/f:SI 3 bx [orig:195 _117 ] [195])
                (plus:SI (reg:SI 1 dx [orig:194 _116 ] [194])
                    (reg:SI 0 ax [315])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 209 {*addsi_1}
     (nil))
(note 388 340 341 19 NOTE_INSN_DELETED)
(insn 341 388 342 19 (set (reg:SI 0 ax [317])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [5 nr+0 S4 A32])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 342 341 344 19 (parallel [
            (set (reg:SI 0 ax [orig:196 _118 ] [196])
                (ashift:SI (reg:SI 0 ax [317])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (reg/f:SI 16 argp) [5 nr+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 344 342 345 19 (parallel [
            (set (reg:SI 0 ax [orig:198 _120 ] [198])
                (plus:SI (reg:SI 0 ax [orig:197 _119 ] [197])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 209 {*addsi_1}
     (nil))
(insn 345 344 346 19 (parallel [
            (set (reg:SI 0 ax [orig:199 _121 ] [199])
                (ashift:SI (reg:SI 0 ax [orig:198 _120 ] [198])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 655 {*ashlsi3_1}
     (nil))
(insn 346 345 410 19 (parallel [
            (set (reg:SI 1 dx [orig:200 _122 ] [200])
                (plus:SI (reg:SI 0 ax [orig:199 _121 ] [199])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 209 {*addsi_1}
     (nil))
(insn 410 346 347 19 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 347 410 349 19 (set (reg:SI 0 ax [319])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("gdt") [flags 0x40]  <var_decl 0x7c5bf3961c60 gdt>)
                        ] UNSPEC_GOT))) [18  S4 A8])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 349 347 397 19 (parallel [
            (set (reg/f:SI 0 ax [orig:201 _123 ] [201])
                (plus:SI (reg:SI 1 dx [orig:200 _122 ] [200])
                    (reg:SI 0 ax [318])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 209 {*addsi_1}
     (nil))
(insn 397 349 378 19 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [20 %sfp+-20 S4 A32])
        (reg/f:SI 0 ax [orig:201 _123 ] [201])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 378 397 379 19 (set (reg/f:SI 1 dx [orig:189 _111 ] [189])
        (reg/f:SI 2 cx [orig:189 _111 ] [189])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 379 378 384 19 (set (reg:SI 0 ax [orig:166 _88 ] [166])
        (reg:SI 4 si [orig:166 _88 ] [166])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 384 379 392 19 (set (reg/f:SI 2 cx [orig:195 _117 ] [195])
        (reg/f:SI 3 bx [orig:195 _117 ] [195])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 392 384 396 19 (set (reg/f:SI 3 bx [orig:171 _93 ] [171])
        (reg/f:SI 5 di [orig:171 _93 ] [171])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 396 392 400 19 (set (reg/f:SI 4 si [orig:201 _123 ] [201])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [20 %sfp+-20 S4 A32])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 400 396 404 19 (set (reg/f:SI 5 di [orig:177 _99 ] [177])
        (reg/f:SI 6 bp [orig:177 _99 ] [177])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 404 400 350 19 (set (reg/f:SI 6 bp [orig:183 _105 ] [183])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [20 %sfp+-24 S4 A32])) "kernel/fork.c":160:5 75 {*movsi_internal}
     (nil))
(insn 350 404 351 19 (parallel [
            (asm_operands/v ("movw $104, %1
	movw %%ax, %2
	rorl $16, %%eax
	movb %%al, %3
	movb $0x82, %4
	movb $0x00, %5
	movb %%ah, %6
	rorl $16, %%eax") ("") 0 [
                    (reg:SI 0 ax [orig:166 _88 ] [166])
                    (mem:QI (reg/f:SI 3 bx [orig:171 _93 ] [171]) [0 *_93+0 S1 A8])
                    (mem:QI (reg/f:SI 5 di [orig:177 _99 ] [177]) [0 *_99+0 S1 A8])
                    (mem:QI (reg/f:SI 6 bp [orig:183 _105 ] [183]) [0 *_105+0 S1 A8])
                    (mem:QI (reg/f:SI 1 dx [orig:189 _111 ] [189]) [0 *_111+0 S1 A8])
                    (mem:QI (reg/f:SI 2 cx [orig:195 _117 ] [195]) [0 *_117+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:201 _123 ] [201]) [0 *_123+0 S1 A8])
                ]
                 [
                    (asm_input:SI ("a") kernel/fork.c:160)
                    (asm_input:QI ("m") kernel/fork.c:160)
                    (asm_input:QI ("m") kernel/fork.c:160)
                    (asm_input:QI ("m") kernel/fork.c:160)
                    (asm_input:QI ("m") kernel/fork.c:160)
                    (asm_input:QI ("m") kernel/fork.c:160)
                    (asm_input:QI ("m") kernel/fork.c:160)
                ]
                 [] kernel/fork.c:160)
            (clobber (reg:CC 17 flags))
        ]) "kernel/fork.c":160:5 -1
     (nil))
(insn 351 350 352 19 (set (reg/f:SI 0 ax [320])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [13 p+0 S4 A32])) "kernel/fork.c":161:14 75 {*movsi_internal}
     (nil))
(insn 352 351 409 19 (set (mem:SI (reg/f:SI 0 ax [320]) [1 p_134->state+0 S4 A32])
        (const_int 0 [0])) "kernel/fork.c":161:14 75 {*movsi_internal}
     (nil))
(insn 409 352 353 19 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [20 %sfp+-28 S4 A32])) "kernel/fork.c":162:12 75 {*movsi_internal}
     (nil))
(insn 353 409 354 19 (set (reg:SI 0 ax [orig:202 _125 ] [202])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_pid") [flags 0x2]  <var_decl 0x7c5bf252e750 last_pid>)
                        ] UNSPEC_GOTOFF))) [1 last_pid+0 S4 A32])) "kernel/fork.c":162:12 75 {*movsi_internal}
     (nil))
(code_label 354 353 355 20 23 (nil) [2 uses])
(note 355 354 361 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 361 355 370 20 (use (reg/i:SI 0 ax)) "kernel/fork.c":163:1 -1
     (nil))
(note 370 361 0 NOTE_INSN_DELETED)
