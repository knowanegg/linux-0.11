
;; Function _get_base (_get_base, funcdef_no=0, decl_uid=1278, cgraph_uid=1, symbol_order=0)

scanning new insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 21(l0): point = 0
   Insn 20(l0): point = 2
   Insn 16(l0): point = 4
   Insn 13(l0): point = 6
   Insn 11(l0): point = 8
   Insn 12(l0): point = 10
   Insn 10(l0): point = 12
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 6(l0): point = 20
   Insn 5(l0): point = 22
   Insn 23(l0): point = 24
 a0(r87): [3..4]
 a1(r86): [5..6]
 a2(r91): [9..10]
 a3(r83): [11..20]
 a4(r84): [11..16]
 a5(r85): [11..12]
 a6(r90): [13..14]
 a7(r89): [17..18]
 a8(r88): [21..22]
 a9(r82): [24..24]
Compressing live ranges: from 27 to 15 - 55%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r86): [2..3]
 a2(r91): [4..5]
 a3(r83): [6..11]
 a4(r84): [6..9]
 a5(r85): [6..7]
 a6(r90): [8..9]
 a7(r89): [10..11]
 a8(r88): [12..13]
 a9(r82): [14..14]
  pref0:a2(r91)<-hr1@1000
  pref1:a0(r87)<-hr0@1500
  regions=1, blocks=3, points=15
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    9:r82  l0     0    3:r83  l0     0    4:r84  l0     1    5:r85  l0     2
    1:r86  l0     0    0:r87  l0     0    8:r88  l0     0    7:r89  l0     1
    6:r90  l0     2    2:r91  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_get_base

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,4u,3e} r17={5d} r19={1d,4u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 49{23d,23u,3e} in 13{13 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 23 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 23 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 23 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 88)
        (mem/f/c:SI (reg/f:SI 16 argp) [18 addr+0 S4 A32])) "include/linux/sched.h":181:28 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg/f:SI 83 [ _1 ])
                (plus:SI (reg/f:SI 88)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":181:28 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 88)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [18 addr+0 S4 A32])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 7 6 8 2 (set (reg/f:SI 89)
        (mem/f/c:SI (reg/f:SI 16 argp) [18 addr+0 S4 A32])) "include/linux/sched.h":181:48 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 84 [ _2 ])
                (plus:SI (reg/f:SI 89)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":181:48 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [18 addr+0 S4 A32])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 9 8 10 2 (set (reg/f:SI 90)
        (mem/f/c:SI (reg/f:SI 16 argp) [18 addr+0 S4 A32])) "include/linux/sched.h":181:68 75 {*movsi_internal}
     (nil))
(insn 10 9 12 2 (parallel [
            (set (reg/f:SI 85 [ _3 ])
                (plus:SI (reg/f:SI 90)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":181:68 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [18 addr+0 S4 A32])
                    (const_int 7 [0x7]))
                (nil)))))
(insn 12 10 11 2 (parallel [
            (set (reg:SI 91 [ __base ])
                (asm_operands:SI ("movb %3, %%dh
	movb %2, %%dl
	shll $16, %%edx
	movw %1, %%dx") ("=&d") 0 [
                        (mem:QI (reg/f:SI 83 [ _1 ]) [0 *_1+0 S1 A8])
                        (mem:QI (reg/f:SI 84 [ _2 ]) [0 *_2+0 S1 A8])
                        (mem:QI (reg/f:SI 85 [ _3 ]) [0 *_3+0 S1 A8])
                    ]
                     [
                        (asm_input:QI ("m") include/linux/sched.h:177)
                        (asm_input:QI ("m") include/linux/sched.h:177)
                        (asm_input:QI ("m") include/linux/sched.h:177)
                    ]
                     [] include/linux/sched.h:177))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":177:5 -1
     (expr_list:REG_DEAD (reg/f:SI 85 [ _3 ])
        (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
            (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 11 12 13 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 __base+0 S4 A32])
        (reg:SI 91 [ __base ])) "include/linux/sched.h":177:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ __base ])
        (nil)))
(insn 13 11 16 2 (set (reg:SI 86 [ _7 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 __base+0 S4 A32])) "include/linux/sched.h":182:12 75 {*movsi_internal}
     (nil))
(insn 16 13 20 2 (set (reg:SI 87 [ <retval> ])
        (reg:SI 86 [ _7 ])) "include/linux/sched.h":182:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ _7 ])
        (nil)))
(insn 20 16 21 2 (set (reg/i:SI 0 ax)
        (reg:SI 87 [ <retval> ])) "include/linux/sched.h":183:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ <retval> ])
        (nil)))
(insn 21 20 0 2 (use (reg/i:SI 0 ax)) "include/linux/sched.h":183:1 -1
     (nil))

;; Function put_fs_long (put_fs_long, funcdef_no=3, decl_uid=1395, cgraph_uid=4, symbol_order=3)

scanning new insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 11(l0): point = 0
   Insn 7(l0): point = 3
   Insn 6(l0): point = 5
   Insn 5(l0): point = 7
   Insn 12(l0): point = 9
 a0(r83): [4..7]
 a1(r84): [4..5]
 a2(r82): [9..9]
Compressing live ranges: from 12 to 3 - 25%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r84): [0..1]
 a2(r82): [2..2]
  regions=1, blocks=4, points=3
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r82  l0     0    0:r83  l0     0    1:r84  l0     1
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


put_fs_long

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 17 [flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r6={1d,3u} r7={1d,3u} r16={1d,4u} r17={2d} r19={1d,3u} r82={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 27{12d,15u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 12 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 12 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 12 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 83)
        (mem/c:SI (reg/f:SI 16 argp) [2 val+0 S4 A32])) "include/asm/segment.h":19:5 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 84)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [19 addr+0 S4 A32])) "include/asm/segment.h":19:5 75 {*movsi_internal}
     (nil))
(insn 7 6 10 2 (parallel [
            (asm_operands/v ("movl %0, %%fs:%1") ("") 0 [
                    (reg:SI 83)
                    (mem:SI (reg/f:SI 84) [2 *addr_3(D)+0 S4 A32])
                ]
                 [
                    (asm_input:SI ("r") include/asm/segment.h:19)
                    (asm_input:SI ("m") include/asm/segment.h:19)
                ]
                 [] include/asm/segment.h:19)
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":19:5 -1
     (expr_list:REG_DEAD (reg/f:SI 84)
        (expr_list:REG_DEAD (reg:SI 83)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(note 10 7 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 0 3 (const_int 0 [0]) "include/asm/segment.h":20:1 843 {nop}
     (nil))

;; Function release (release, funcdef_no=8, decl_uid=1416, cgraph_uid=9, symbol_order=8)

scanning new insn with uid = 65.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 11 n_edges 13 count 13 (  1.2)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 10 9
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4
;; 2 succs { 10 3 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 9 }
;; 6 succs { 7 }
;; 7 succs { 4 8 }
;; 8 succs { 9 }
;; 10 succs { 9 }
;; 9 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:6000 DREG:6000 CREG:6000 BREG:6000 SIREG:6000 DIREG:6000 AD_REGS:6000 CLOBBERED_REGS:6000 Q_REGS:6000 NON_Q_REGS:6000 TLS_GOTBASE_REGS:6000 GENERAL_REGS:6000 MEM:42000
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 64(l0): point = 1
   Insn 60(l0): point = 4
   Insn 51(l0): point = 6
   Insn 50(l0): point = 8
   Insn 49(l0): point = 10
   Insn 48(l0): point = 12
   Insn 47(l0): point = 14
   Insn 46(l0): point = 16
   Insn 58(l0): point = 19
   Insn 32(l0): point = 21
   Insn 31(l0): point = 23
   Insn 30(l0): point = 25
   Insn 29(l0): point = 27
   Insn 28(l0): point = 29
   Insn 27(l0): point = 31
   Insn 26(l0): point = 33
   Insn 25(l0): point = 35
   Insn 24(l0): point = 37
   Insn 23(l0): point = 39
   Insn 22(l0): point = 41
   Insn 20(l0): point = 44
   Insn 19(l0): point = 46
   Insn 18(l0): point = 48
   Insn 17(l0): point = 50
   Insn 16(l0): point = 52
   Insn 44(l0): point = 55
   Insn 43(l0): point = 57
   Insn 37(l0): point = 60
   Insn 56(l0): point = 63
   Insn 12(l0): point = 65
   Insn 6(l0): point = 68
   Insn 5(l0): point = 70
   Insn 65(l0): point = 72
 a0(r82): [24..72] [11..18]
 a1(r89): [13..14]
 a2(r84): [32..35]
 a3(r87): [38..41]
 a4(r88): [38..39]
 a5(r83): [47..48]
 a6(r85): [49..52]
 a7(r86): [49..50]
Compressing live ranges: from 75 to 10 - 13%
Ranges after the compression:
 a0(r82): [0..9]
 a1(r89): [0..1]
 a2(r84): [2..3]
 a3(r87): [4..5]
 a4(r88): [4..5]
 a5(r83): [6..7]
 a6(r85): [8..9]
 a7(r86): [8..9]
  pref0:a0(r82)<-hr3@3000
  regions=1, blocks=11, points=10
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    0:r82  l0     3    5:r83  l0     0    2:r84  l0     0    6:r85  l0     0
    7:r86  l0     1    3:r87  l0     0    4:r88  l0     1    1:r89  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


release

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d} r1={4d} r2={4d} r3={3d,3u} r6={1d,10u} r7={7d,23u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,12u} r17={12d,3u} r18={3d} r19={1d,16u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,6u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 320{240d,80u,0e} in 33{30 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 65 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 65 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 65 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 16 argp) [13 p+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":25:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 63)
            (pc))) "kernel/exit.c":25:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 63)
(note 11 6 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 56 3 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
        (const_int 1 [0x1])) "kernel/exit.c":27:12 75 {*movsi_internal}
     (nil))
(jump_insn 56 12 57 3 (set (pc)
        (label_ref 38)) "kernel/exit.c":27:5 807 {jump}
     (nil)
 -> 38)
(barrier 57 56 40)
(code_label 40 57 15 4 9 (nil) [1 uses])
(note 15 40 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg/f:SI 85)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":28:17 75 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:SI 86)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])) "kernel/exit.c":28:17 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (set (reg/f:SI 83 [ _1 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 86)
                    (const_int 4 [0x4]))
                (reg/f:SI 85)) [13 task[i_3]+0 S4 A32])) "kernel/exit.c":28:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86)
        (expr_list:REG_DEAD (reg/f:SI 85)
            (nil))))
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 16 argp) [13 p+0 S4 A32])
            (reg/f:SI 83 [ _1 ]))) "kernel/exit.c":28:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (nil)))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "kernel/exit.c":28:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 35)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:SI 87)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":29:21 75 {*movsi_internal}
     (nil))
(insn 23 22 24 5 (set (reg:SI 88)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])) "kernel/exit.c":29:21 75 {*movsi_internal}
     (nil))
(insn 24 23 25 5 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 88)
                    (const_int 4 [0x4]))
                (reg/f:SI 87)) [13 task[i_3]+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":29:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88)
        (expr_list:REG_DEAD (reg/f:SI 87)
            (nil))))
(insn 25 24 26 5 (set (reg:SI 84 [ p.0_2 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [13 p+0 S4 A32])) "kernel/exit.c":30:13 75 {*movsi_internal}
     (nil))
(insn 26 25 27 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":30:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 27 26 28 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 84 [ p.0_2 ])) "kernel/exit.c":30:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 84 [ p.0_2 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 28 27 29 5 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/exit.c":30:13 75 {*movsi_internal}
     (nil))
(call_insn 29 28 30 5 (call (mem:QI (symbol_ref:SI ("free_page") [flags 0x41]  <function_decl 0x7d3b7894d300 free_page>) [0 free_page S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":30:13 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 30 29 31 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":30:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 31 30 32 5 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/exit.c":31:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 32 31 58 5 (call (mem:QI (symbol_ref:SI ("schedule") [flags 0x41]  <function_decl 0x7d3b78915c00 schedule>) [0 schedule S1 A8])
        (const_int 0 [0])) "kernel/exit.c":31:13 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(jump_insn 58 32 59 5 (set (pc)
        (label_ref 54)) "kernel/exit.c":32:13 807 {jump}
     (nil)
 -> 54)
(barrier 59 58 35)
(code_label 35 59 36 6 8 (nil) [1 uses])
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":27:32 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 38 37 39 7 7 (nil) [1 uses])
(note 39 38 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 39 44 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
            (const_int 63 [0x3f]))) "kernel/exit.c":27:19 11 {*cmpsi_1}
     (nil))
(jump_insn 44 43 45 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "kernel/exit.c":27:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 40)
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":34:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 47 46 48 8 (set (reg/f:SI 89)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7d3b789916c0 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "kernel/exit.c":34:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7d3b789916c0 *.LC0>)
        (nil)))
(insn 48 47 49 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 89)) "kernel/exit.c":34:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 49 48 50 8 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/exit.c":34:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 50 49 51 8 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7d3b78938700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":34:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 51 50 60 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":34:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 60 51 61 8 (set (pc)
        (label_ref 54)) 807 {jump}
     (nil)
 -> 54)
(barrier 61 60 63)
(code_label 63 61 62 10 10 (nil) [1 uses])
(note 62 63 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 62 54 10 (const_int 0 [0]) "kernel/exit.c":26:9 843 {nop}
     (nil))
(code_label 54 64 55 9 4 (nil) [2 uses])
(note 55 54 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

;; Function send_sig (send_sig, funcdef_no=9, decl_uid=1426, cgraph_uid=10, symbol_order=9)

scanning new insn with uid = 70.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 12 n_edges 17 count 12 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;; 2 succs { 5 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 6 }
;; 5 succs { 11 }
;; 6 succs { 9 7 }
;; 7 succs { 9 8 }
;; 8 succs { 9 10 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best CREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:8000
  a2(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a5(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a6(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a7(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a8(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a14(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a15(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a16(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 64(l0): point = 0
   Insn 63(l0): point = 2
   Insn 59(l0): point = 4
   Insn 56(l0): point = 7
   Insn 68(l0): point = 10
   Insn 51(l0): point = 12
   Insn 50(l0): point = 14
   Insn 49(l0): point = 16
   Insn 48(l0): point = 18
   Insn 47(l0): point = 20
   Insn 46(l0): point = 22
   Insn 45(l0): point = 24
   Insn 44(l0): point = 26
   Insn 43(l0): point = 28
   Insn 42(l0): point = 30
   Insn 39(l0): point = 33
   Insn 38(l0): point = 35
   Insn 37(l0): point = 37
   Insn 36(l0): point = 39
   Insn 35(l0): point = 41
   Insn 33(l0): point = 44
   Insn 32(l0): point = 46
   Insn 31(l0): point = 48
   Insn 30(l0): point = 50
   Insn 29(l0): point = 52
   Insn 28(l0): point = 54
   Insn 27(l0): point = 56
   Insn 25(l0): point = 59
   Insn 24(l0): point = 61
   Insn 66(l0): point = 64
   Insn 19(l0): point = 66
   Insn 16(l0): point = 69
   Insn 15(l0): point = 71
   Insn 11(l0): point = 74
   Insn 10(l0): point = 76
   Insn 6(l0): point = 79
   Insn 5(l0): point = 81
   Insn 70(l0): point = 83
 a0(r93): [3..4]
 a1(r92): [64..66] [10..12] [5..7]
 a2(r100): [15..16]
 a3(r91): [15..18]
 a4(r90): [19..20]
 a5(r88): [19..28]
 a6(r89): [21..24]
 a7(r99): [21..22]
 a8(r98): [25..26]
 a9(r97): [29..30]
 a10(r87): [36..37]
 a11(r86): [38..39]
 a12(r96): [40..41]
 a13(r82): [69..83] [42..63]
 a14(r85): [47..48]
 a15(r84): [47..52]
 a16(r95): [49..50]
 a17(r83): [53..54]
 a18(r94): [55..56]
Compressing live ranges: from 86 to 34 - 39%
Ranges after the compression:
 a0(r93): [0..1]
 a1(r92): [30..31] [2..5]
 a2(r100): [6..7]
 a3(r91): [6..7]
 a4(r90): [8..9]
 a5(r88): [8..13]
 a6(r89): [10..11]
 a7(r99): [10..11]
 a8(r98): [12..13]
 a9(r97): [14..15]
 a10(r87): [16..17]
 a11(r86): [18..19]
 a12(r96): [20..21]
 a13(r82): [32..33] [22..29]
 a14(r85): [22..23]
 a15(r84): [22..25]
 a16(r95): [24..25]
 a17(r83): [26..27]
 a18(r94): [28..29]
  pref0:a0(r93)<-hr0@1500
  pref1:a6(r89)<-hr2@1000
  regions=1, blocks=12, points=34
    allocnos=19 (big 0), copies=0, conflicts=0, ranges=21
Disposition:
   13:r82  l0     0   17:r83  l0     1   15:r84  l0     2   14:r85  l0     1
   11:r86  l0     0   10:r87  l0     0    5:r88  l0     1    6:r89  l0     0
    4:r90  l0     0    3:r91  l0     1    1:r92  l0     0    0:r93  l0     0
   18:r94  l0     1   16:r95  l0     1   12:r96  l0     0    9:r97  l0     0
    8:r98  l0     0    7:r99  l0     3    2:r100 l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


send_sig

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,11u} r7={1d,11u} r16={1d,18u,1e} r17={10d,6u} r19={1d,11u} r82={1d,2u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={3d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 119{39d,79u,1e} in 38{38 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 70 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 70 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 70 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [13 p+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":39:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "kernel/exit.c":39:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 17)
(note 7 6 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 7 11 3 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (reg/f:SI 16 argp) [2 sig+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":39:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "kernel/exit.c":39:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 17)
(note 12 11 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 12 16 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (reg/f:SI 16 argp) [2 sig+0 S4 A32])
            (const_int 32 [0x20]))) "kernel/exit.c":39:23 11 {*cmpsi_1}
     (nil))
(jump_insn 16 15 17 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "kernel/exit.c":39:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 22)
(code_label 17 16 18 5 12 (nil) [2 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 66 5 (set (reg:SI 92 [ _10 ])
        (const_int -22 [0xffffffffffffffea])) "kernel/exit.c":40:16 75 {*movsi_internal}
     (nil))
(jump_insn 66 19 67 5 (set (pc)
        (label_ref 57)) "kernel/exit.c":40:16 807 {jump}
     (nil)
 -> 57)
(barrier 67 66 22)
(code_label 22 67 23 6 13 (nil) [1 uses])
(note 23 22 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [5 priv+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":41:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 25 24 26 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "kernel/exit.c":41:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 40)
(note 26 25 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 7 (set (reg/f:SI 94)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":41:25 75 {*movsi_internal}
     (nil))
(insn 28 27 29 7 (set (reg/f:SI 83 [ current.23_1 ])
        (mem/f/c:SI (reg/f:SI 94) [13 current+0 S4 A32])) "kernel/exit.c":41:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (nil)))
(insn 29 28 30 7 (set (reg:HI 84 [ _2 ])
        (mem:HI (plus:SI (reg/f:SI 83 [ current.23_1 ])
                (const_int 578 [0x242])) [7 current.23_1->euid+0 S2 A16])) "kernel/exit.c":41:25 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ current.23_1 ])
        (nil)))
(insn 30 29 31 7 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [13 p+0 S4 A32])) "kernel/exit.c":41:36 75 {*movsi_internal}
     (nil))
(insn 31 30 32 7 (set (reg:HI 85 [ _3 ])
        (mem:HI (plus:SI (reg/f:SI 95)
                (const_int 578 [0x242])) [7 p_12(D)->euid+0 S2 A16])) "kernel/exit.c":41:36 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95)
        (nil)))
(insn 32 31 33 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 84 [ _2 ])
            (reg:HI 85 [ _3 ]))) "kernel/exit.c":41:14 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 85 [ _3 ])
        (expr_list:REG_DEAD (reg:HI 84 [ _2 ])
            (nil))))
(jump_insn 33 32 34 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "kernel/exit.c":41:14 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 40)
(note 34 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 8 (set (reg/f:SI 96)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":41:47 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 36 35 37 8 (set (reg/f:SI 86 [ current.24_4 ])
        (mem/f/c:SI (reg/f:SI 96) [13 current+0 S4 A32])) "kernel/exit.c":41:47 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96)
        (nil)))
(insn 37 36 38 8 (set (reg:HI 87 [ _5 ])
        (mem:HI (plus:SI (reg/f:SI 86 [ current.24_4 ])
                (const_int 578 [0x242])) [7 current.24_4->euid+0 S2 A16])) "kernel/exit.c":41:47 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ current.24_4 ])
        (nil)))
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 87 [ _5 ])
            (const_int 0 [0]))) "kernel/exit.c":41:44 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 87 [ _5 ])
        (nil)))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "kernel/exit.c":41:44 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 54)
(code_label 40 39 41 9 15 (nil) [2 uses])
(note 41 40 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 9 (set (reg/f:SI 97)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [13 p+0 S4 A32])) "kernel/exit.c":42:19 75 {*movsi_internal}
     (nil))
(insn 43 42 44 9 (set (reg:SI 88 [ _6 ])
        (mem:SI (plus:SI (reg/f:SI 97)
                (const_int 12 [0xc])) [2 p_12(D)->signal+0 S4 A32])) "kernel/exit.c":42:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97)
        (nil)))
(insn 44 43 45 9 (set (reg:SI 98)
        (mem/c:SI (reg/f:SI 16 argp) [2 sig+0 S4 A32])) "kernel/exit.c":42:33 75 {*movsi_internal}
     (nil))
(insn 45 44 46 9 (parallel [
            (set (reg:SI 89 [ _7 ])
                (plus:SI (reg:SI 98)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":42:33 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 98)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [2 sig+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 46 45 47 9 (set (reg:SI 99)
        (const_int 1 [0x1])) "kernel/exit.c":42:25 75 {*movsi_internal}
     (nil))
(insn 47 46 48 9 (parallel [
            (set (reg:SI 90 [ _8 ])
                (ashift:SI (reg:SI 99)
                    (subreg:QI (reg:SI 89 [ _7 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":42:25 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 99)
        (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 48 47 49 9 (parallel [
            (set (reg:SI 91 [ _9 ])
                (ior:SI (reg:SI 88 [ _6 ])
                    (reg:SI 90 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":42:19 520 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 49 48 50 9 (set (reg/f:SI 100)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [13 p+0 S4 A32])) "kernel/exit.c":42:19 75 {*movsi_internal}
     (nil))
(insn 50 49 51 9 (set (mem:SI (plus:SI (reg/f:SI 100)
                (const_int 12 [0xc])) [2 p_12(D)->signal+0 S4 A32])
        (reg:SI 91 [ _9 ])) "kernel/exit.c":42:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100)
        (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
            (nil))))
(insn 51 50 68 9 (set (reg:SI 92 [ _10 ])
        (const_int 0 [0])) "kernel/exit.c":45:12 75 {*movsi_internal}
     (nil))
(jump_insn 68 51 69 9 (set (pc)
        (label_ref 57)) "kernel/exit.c":45:12 807 {jump}
     (nil)
 -> 57)
(barrier 69 68 54)
(code_label 54 69 55 10 16 (nil) [1 uses])
(note 55 54 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 10 (set (reg:SI 92 [ _10 ])
        (const_int -1 [0xffffffffffffffff])) "kernel/exit.c":44:16 75 {*movsi_internal}
     (nil))
(code_label 57 56 58 11 14 (nil) [2 uses])
(note 58 57 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 63 11 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ _10 ])) "kernel/exit.c":46:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (nil)))
(insn 63 59 64 11 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) "kernel/exit.c":46:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ <retval> ])
        (nil)))
(insn 64 63 0 11 (use (reg/i:SI 0 ax)) "kernel/exit.c":46:1 -1
     (nil))

;; Function kill_session (kill_session, funcdef_no=10, decl_uid=1429, cgraph_uid=11, symbol_order=10)

scanning new insn with uid = 49.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 8 7 9
;;
;; Loop 1
;;  header 6, multiple latches: 5 3 4
;;  depth 1, outer 0
;;  nodes: 6 5 3 4
;; 2 succs { 6 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 3 8 }
;; 8 succs { 7 }
;; 7 succs { 9 }
;; 9 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a1(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:24000
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a10(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 48(l0): point = 0
   Insn 46(l0): point = 4
   Insn 14(l0): point = 7
   Insn 13(l0): point = 9
   Insn 12(l0): point = 11
   Insn 11(l0): point = 13
   Insn 39(l0): point = 16
   Insn 38(l0): point = 18
   Insn 37(l0): point = 20
   Insn 36(l0): point = 22
   Insn 34(l0): point = 24
   Insn 31(l0): point = 27
   Insn 30(l0): point = 29
   Insn 29(l0): point = 31
   Insn 28(l0): point = 33
   Insn 27(l0): point = 35
   Insn 26(l0): point = 37
   Insn 25(l0): point = 39
   Insn 23(l0): point = 42
   Insn 22(l0): point = 44
   Insn 21(l0): point = 46
   Insn 20(l0): point = 48
   Insn 19(l0): point = 50
   Insn 18(l0): point = 52
   Insn 17(l0): point = 54
   Insn 16(l0): point = 56
   Insn 43(l0): point = 59
   Insn 7(l0): point = 61
   Insn 6(l0): point = 63
   Insn 5(l0): point = 65
   Insn 49(l0): point = 67
 a0(r99): [19..20]
 a1(r100): [21..22]
 a2(r82): [7..67]
 a3(r90): [28..31]
 a4(r91): [28..29]
 a5(r89): [30..35]
 a6(r98): [32..33]
 a7(r88): [36..37]
 a8(r97): [38..39]
 a9(r87): [45..46]
 a10(r85): [45..52]
 a11(r86): [47..48]
 a12(r96): [49..50]
 a13(r84): [53..54]
 a14(r95): [55..56]
 a15(r83): [10..11]
 a16(r94): [12..13]
 a17(r92): [62..63]
 a18(r93): [64..65]
Compressing live ranges: from 70 to 32 - 45%
Ranges after the compression:
 a0(r99): [4..5]
 a1(r100): [6..7]
 a2(r82): [0..31]
 a3(r90): [8..11]
 a4(r91): [8..9]
 a5(r89): [10..13]
 a6(r98): [12..13]
 a7(r88): [14..15]
 a8(r97): [16..17]
 a9(r87): [18..19]
 a10(r85): [18..23]
 a11(r86): [20..21]
 a12(r96): [22..23]
 a13(r84): [24..25]
 a14(r95): [26..27]
 a15(r83): [0..1]
 a16(r94): [2..3]
 a17(r92): [28..29]
 a18(r93): [30..31]
  regions=1, blocks=10, points=32
    allocnos=19 (big 0), copies=0, conflicts=0, ranges=19
Disposition:
    2:r82  l0     0   15:r83  l0     1   13:r84  l0     1   10:r85  l0     2
   11:r86  l0     1    9:r87  l0     1    7:r88  l0     1    5:r89  l0     2
    3:r90  l0     1    4:r91  l0     2   17:r92  l0     1   18:r93  l0     1
   16:r94  l0     1   14:r95  l0     1   12:r96  l0     1    8:r97  l0     1
    6:r98  l0     1    0:r99  l0     1    1:r100 l0     1
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


kill_session

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 17 [flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r6={1d,9u} r7={1d,9u} r16={1d,8u} r17={6d,3u} r19={1d,17u} r82={1d,3u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 99{32d,67u,0e} in 31{31 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 49 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 49 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 49 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 93)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":50:26 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 92)
        (plus:SI (reg:SI 93)
            (const_int 256 [0x100]))) "kernel/exit.c":50:26 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 93)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 7 6 43 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])
        (reg/f:SI 92)) "kernel/exit.c":50:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (nil)))
(jump_insn 43 7 44 2 (set (pc)
        (label_ref 32)) "kernel/exit.c":52:11 807 {jump}
     (nil)
 -> 32)
(barrier 44 43 35)
(code_label 35 44 10 3 19 (nil) [1 uses])
(note 10 35 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 94)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])) "kernel/exit.c":53:13 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg/f:SI 83 [ _1 ])
        (mem/f:SI (reg/f:SI 94) [13 *p_14+0 S4 A32])) "kernel/exit.c":53:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (nil)))
(insn 13 12 14 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 83 [ _1 ])
            (const_int 0 [0]))) "kernel/exit.c":53:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (nil)))
(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "kernel/exit.c":53:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 32)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])) "kernel/exit.c":53:20 75 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (set (reg/f:SI 84 [ _2 ])
        (mem/f:SI (reg/f:SI 95) [13 *p_14+0 S4 A32])) "kernel/exit.c":53:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95)
        (nil)))
(insn 18 17 19 4 (set (reg:SI 85 [ _3 ])
        (mem:SI (plus:SI (reg/f:SI 84 [ _2 ])
                (const_int 568 [0x238])) [2 _2->session+0 S4 A32])) "kernel/exit.c":53:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
        (nil)))
(insn 19 18 20 4 (set (reg/f:SI 96)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":53:43 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg/f:SI 86 [ current.1_4 ])
        (mem/f/c:SI (reg/f:SI 96) [13 current+0 S4 A32])) "kernel/exit.c":53:43 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96)
        (nil)))
(insn 21 20 22 4 (set (reg:SI 87 [ _5 ])
        (mem:SI (plus:SI (reg/f:SI 86 [ current.1_4 ])
                (const_int 568 [0x238])) [2 current.1_4->session+0 S4 A32])) "kernel/exit.c":53:43 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ current.1_4 ])
        (nil)))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ _3 ])
            (reg:SI 87 [ _5 ]))) "kernel/exit.c":53:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
            (nil))))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "kernel/exit.c":53:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 32)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg/f:SI 97)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])) "kernel/exit.c":54:14 75 {*movsi_internal}
     (nil))
(insn 26 25 27 5 (set (reg/f:SI 88 [ _6 ])
        (mem/f:SI (reg/f:SI 97) [13 *p_14+0 S4 A32])) "kernel/exit.c":54:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97)
        (nil)))
(insn 27 26 28 5 (set (reg:SI 89 [ _7 ])
        (mem:SI (plus:SI (reg/f:SI 88 [ _6 ])
                (const_int 12 [0xc])) [2 _6->signal+0 S4 A32])) "kernel/exit.c":54:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88 [ _6 ])
        (nil)))
(insn 28 27 29 5 (set (reg/f:SI 98)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])) "kernel/exit.c":54:14 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg/f:SI 90 [ _8 ])
        (mem/f:SI (reg/f:SI 98) [13 *p_14+0 S4 A32])) "kernel/exit.c":54:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 98)
        (nil)))
(insn 30 29 31 5 (parallel [
            (set (reg:SI 91 [ _9 ])
                (ior:SI (reg:SI 89 [ _7 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":54:26 520 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 31 30 32 5 (set (mem:SI (plus:SI (reg/f:SI 90 [ _8 ])
                (const_int 12 [0xc])) [2 _8->signal+0 S4 A32])
        (reg:SI 91 [ _9 ])) "kernel/exit.c":54:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (expr_list:REG_DEAD (reg/f:SI 90 [ _8 ])
            (nil))))
(code_label 32 31 33 6 18 (nil) [3 uses])
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 36 6 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":52:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 36 34 37 6 (set (reg:SI 100)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":52:16 75 {*movsi_internal}
     (nil))
(insn 37 36 38 6 (set (reg:SI 99)
        (reg:SI 100)) "kernel/exit.c":52:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100)
        (expr_list:REG_EQUAL (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
            (nil))))
(insn 38 37 39 6 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])
            (reg:SI 99))) "kernel/exit.c":52:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 99)
        (nil)))
(jump_insn 39 38 45 6 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "kernel/exit.c":52:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 35)
(note 45 39 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 40 8 (const_int 0 [0]) "kernel/exit.c":56:1 843 {nop}
     (nil))
(note 40 46 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 47 40 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 0 9 (const_int 0 [0]) "kernel/exit.c":56:1 843 {nop}
     (nil))

;; Function tell_father (tell_father, funcdef_no=11, decl_uid=1436, cgraph_uid=12, symbol_order=11)

scanning new insn with uid = 84.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 13 n_edges 16 count 18 (  1.4)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 11 12 7 8 9 10
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 12 11 4 5
;; 2 succs { 3 9 }
;; 3 succs { 8 }
;; 4 succs { 11 5 }
;; 5 succs { 12 6 }
;; 6 succs { 10 }
;; 11 succs { 7 }
;; 12 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 4 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:48000
  a3(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 67(l0): point = 1
   Insn 66(l0): point = 3
   Insn 65(l0): point = 5
   Insn 64(l0): point = 7
   Insn 63(l0): point = 9
   Insn 62(l0): point = 11
   Insn 61(l0): point = 13
   Insn 60(l0): point = 15
   Insn 59(l0): point = 17
   Insn 58(l0): point = 19
   Insn 57(l0): point = 21
   Insn 56(l0): point = 23
   Insn 74(l0): point = 26
   Insn 41(l0): point = 28
   Insn 40(l0): point = 30
   Insn 39(l0): point = 32
   Insn 38(l0): point = 34
   Insn 37(l0): point = 36
   Insn 36(l0): point = 38
   Insn 35(l0): point = 40
   Insn 34(l0): point = 42
   Insn 33(l0): point = 44
   Insn 16(l0): point = 47
   Insn 15(l0): point = 49
   Insn 14(l0): point = 51
   Insn 13(l0): point = 53
   Insn 12(l0): point = 55
   Insn 53(l0): point = 58
   Insn 52(l0): point = 60
   Insn 46(l0): point = 63
   Insn 83(l0): point = 66
   Insn 27(l0): point = 69
   Insn 26(l0): point = 71
   Insn 25(l0): point = 73
   Insn 24(l0): point = 75
   Insn 23(l0): point = 77
   Insn 22(l0): point = 79
   Insn 79(l0): point = 82
   Insn 78(l0): point = 84
   Insn 72(l0): point = 87
   Insn 8(l0): point = 89
   Insn 6(l0): point = 92
   Insn 5(l0): point = 94
   Insn 84(l0): point = 96
 a0(r90): [6..9]
 a1(r100): [10..11]
 a2(r82): [37..96] [12..25]
 a3(r99): [20..21]
 a4(r88): [29..32]
 a5(r89): [29..30]
 a6(r87): [31..38]
 a7(r97): [33..36]
 a8(r98): [33..34]
 a9(r86): [39..40]
 a10(r95): [41..44]
 a11(r96): [41..42]
 a12(r85): [72..73]
 a13(r84): [74..75]
 a14(r93): [76..79]
 a15(r94): [76..77]
 a16(r83): [50..51]
 a17(r91): [52..55]
 a18(r92): [52..53]
Compressing live ranges: from 99 to 28 - 28%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r100): [2..3]
 a2(r82): [12..27] [4..5]
 a3(r99): [4..5]
 a4(r88): [6..9]
 a5(r89): [6..7]
 a6(r87): [8..13]
 a7(r97): [10..11]
 a8(r98): [10..11]
 a9(r86): [14..15]
 a10(r95): [16..17]
 a11(r96): [16..17]
 a12(r85): [22..23]
 a13(r84): [24..25]
 a14(r93): [26..27]
 a15(r94): [26..27]
 a16(r83): [18..19]
 a17(r91): [20..21]
 a18(r92): [20..21]
  regions=1, blocks=13, points=28
    allocnos=19 (big 0), copies=0, conflicts=0, ranges=20
Disposition:
    2:r82  l0     3   16:r83  l0     0   13:r84  l0     0   12:r85  l0     0
    9:r86  l0     0    6:r87  l0     2    4:r88  l0     0    5:r89  l0     1
    0:r90  l0     0   17:r91  l0     0   18:r92  l0     1   14:r93  l0     0
   15:r94  l0     1   10:r95  l0     0   11:r96  l0     1    7:r97  l0     0
    8:r98  l0     1    3:r99  l0     0    1:r100 l0     0
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


tell_father

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r3={1d,1u} r6={1d,12u} r7={7d,24u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,13u} r17={13d,4u} r18={2d} r19={1d,20u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,7u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 281{182d,99u,0e} in 44{42 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 84 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 84 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 84 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [5 pid+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":62:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "kernel/exit.c":62:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 54)
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 72 3 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":63:16 75 {*movsi_internal}
     (nil))
(jump_insn 72 8 73 3 (set (pc)
        (label_ref 47)) "kernel/exit.c":63:9 807 {jump}
     (nil)
 -> 47)
(barrier 73 72 49)
(code_label 49 73 11 4 27 (nil) [1 uses])
(note 11 49 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg/f:SI 91)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":64:22 75 {*movsi_internal}
     (nil))
(insn 13 12 14 4 (set (reg:SI 92)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])) "kernel/exit.c":64:22 75 {*movsi_internal}
     (nil))
(insn 14 13 15 4 (set (reg/f:SI 83 [ _1 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 92)
                    (const_int 4 [0x4]))
                (reg/f:SI 91)) [13 task[i_9]+0 S4 A32])) "kernel/exit.c":64:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92)
        (expr_list:REG_DEAD (reg/f:SI 91)
            (nil))))
(insn 15 14 16 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 83 [ _1 ])
            (const_int 0 [0]))) "kernel/exit.c":64:16 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (nil)))
(jump_insn 16 15 21 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 77)
            (pc))) "kernel/exit.c":64:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 77)
(note 21 16 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:SI 93)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":66:21 75 {*movsi_internal}
     (nil))
(insn 23 22 24 5 (set (reg:SI 94)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])) "kernel/exit.c":66:21 75 {*movsi_internal}
     (nil))
(insn 24 23 25 5 (set (reg/f:SI 84 [ _2 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 94)
                    (const_int 4 [0x4]))
                (reg/f:SI 93)) [13 task[i_9]+0 S4 A32])) "kernel/exit.c":66:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (expr_list:REG_DEAD (reg/f:SI 93)
            (nil))))
(insn 25 24 26 5 (set (reg:SI 85 [ _3 ])
        (mem:SI (plus:SI (reg/f:SI 84 [ _2 ])
                (const_int 556 [0x22c])) [2 _2->pid+0 S4 A32])) "kernel/exit.c":66:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
        (nil)))
(insn 26 25 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [5 pid+0 S4 A32])
            (reg:SI 85 [ _3 ]))) "kernel/exit.c":66:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (nil)))
(jump_insn 27 26 32 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 82)
            (pc))) "kernel/exit.c":66:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 82)
(note 32 27 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg/f:SI 95)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":68:17 75 {*movsi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:SI 96)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])) "kernel/exit.c":68:17 75 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (set (reg/f:SI 86 [ _4 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 96)
                    (const_int 4 [0x4]))
                (reg/f:SI 95)) [13 task[i_9]+0 S4 A32])) "kernel/exit.c":68:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96)
        (expr_list:REG_DEAD (reg/f:SI 95)
            (nil))))
(insn 36 35 37 6 (set (reg:SI 87 [ _5 ])
        (mem:SI (plus:SI (reg/f:SI 86 [ _4 ])
                (const_int 12 [0xc])) [2 _4->signal+0 S4 A32])) "kernel/exit.c":68:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ _4 ])
        (nil)))
(insn 37 36 38 6 (set (reg/f:SI 97)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":68:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 38 37 39 6 (set (reg:SI 98)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])) "kernel/exit.c":68:17 75 {*movsi_internal}
     (nil))
(insn 39 38 40 6 (set (reg/f:SI 88 [ _6 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 98)
                    (const_int 4 [0x4]))
                (reg/f:SI 97)) [13 task[i_9]+0 S4 A32])) "kernel/exit.c":68:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98)
        (expr_list:REG_DEAD (reg/f:SI 97)
            (nil))))
(insn 40 39 41 6 (parallel [
            (set (reg:SI 89 [ _7 ])
                (ior:SI (reg:SI 87 [ _5 ])
                    (const_int 65536 [0x10000])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":68:29 520 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 41 40 74 6 (set (mem:SI (plus:SI (reg/f:SI 88 [ _6 ])
                (const_int 12 [0xc])) [2 _6->signal+0 S4 A32])
        (reg:SI 89 [ _7 ])) "kernel/exit.c":68:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_DEAD (reg/f:SI 88 [ _6 ])
            (nil))))
(jump_insn 74 41 75 6 (set (pc)
        (label_ref 70)) "kernel/exit.c":69:13 807 {jump}
     (nil)
 -> 70)
(barrier 75 74 77)
(code_label 77 75 76 11 28 (nil) [1 uses])
(note 76 77 78 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 78 76 79 11 (const_int 0 [0]) "kernel/exit.c":65:17 843 {nop}
     (nil))
(jump_insn 79 78 80 11 (set (pc)
        (label_ref 44)) 807 {jump}
     (nil)
 -> 44)
(barrier 80 79 82)
(code_label 82 80 81 12 29 (nil) [1 uses])
(note 81 82 83 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 83 81 44 12 (const_int 0 [0]) "kernel/exit.c":67:17 843 {nop}
     (nil))
(code_label 44 83 45 7 24 (nil) [1 uses])
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":63:36 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 47 46 48 8 22 (nil) [1 uses])
(note 48 47 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 52 48 53 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
            (const_int 63 [0x3f]))) "kernel/exit.c":63:23 11 {*cmpsi_1}
     (nil))
(jump_insn 53 52 54 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "kernel/exit.c":63:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 49)
(code_label 54 53 55 9 21 (nil) [1 uses])
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":73:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 57 56 58 9 (set (reg/f:SI 99)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7d3b789917e0 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "kernel/exit.c":73:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7d3b789917e0 *.LC1>)
        (nil)))
(insn 58 57 59 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 99)) "kernel/exit.c":73:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 99)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 59 58 60 9 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/exit.c":73:5 75 {*movsi_internal}
     (nil))
(call_insn 60 59 61 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7d3b7894d000 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/exit.c":73:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 61 60 62 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":73:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 62 61 63 9 (set (reg/f:SI 100)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":74:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 63 62 64 9 (set (reg/f:SI 90 [ current.2_8 ])
        (mem/f/c:SI (reg/f:SI 100) [13 current+0 S4 A32])) "kernel/exit.c":74:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100)
        (nil)))
(insn 64 63 65 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":74:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 65 64 66 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg/f:SI 90 [ current.2_8 ])) "kernel/exit.c":74:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 90 [ current.2_8 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 66 65 67 9 (call (mem:QI (symbol_ref:SI ("release") [flags 0x3]  <function_decl 0x7d3b78952500 release>) [0 release S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":74:5 812 {*call}
     (nil)
    (nil))
(insn 67 66 70 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":74:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 70 67 71 10 20 (nil) [1 uses])
(note 71 70 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

;; Function do_exit (do_exit, funcdef_no=12, decl_uid=1444, cgraph_uid=13, symbol_order=12)

scanning new insn with uid = 226.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 22 n_edges 31 count 30 (  1.4)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 2
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12 10 11
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 3 4 5 6
;; 2 succs { 8 }
;; 3 succs { 4 7 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 3 9 }
;; 9 succs { 13 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 10 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r127,l0) best AREG, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a72 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a79 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r127,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a2(r82,l0) costs: AREG:14000 DREG:14000 CREG:14000 BREG:14000 SIREG:14000 DIREG:14000 AD_REGS:14000 CLOBBERED_REGS:14000 Q_REGS:14000 NON_Q_REGS:14000 TLS_GOTBASE_REGS:14000 GENERAL_REGS:14000 MEM:204000
  a3(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a16(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a20(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a21(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a22(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a23(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a30(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a36(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a37(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a38(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a41(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a42(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a44(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a45(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a46(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a47(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a48(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a49(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a51(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a52(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a53(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a54(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a55(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a56(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a57(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a58(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a59(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a60(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a61(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a62(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a63(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a64(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a65(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a66(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a67(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a68(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a69(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a70(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a71(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a72(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a73(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a74(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a75(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a76(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a77(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a78(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a79(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a80(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a81(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a82(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a83(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a84(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a85(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000

   Insn 220(l0): point = 0
   Insn 219(l0): point = 2
   Insn 215(l0): point = 4
   Insn 212(l0): point = 6
   Insn 211(l0): point = 8
   Insn 210(l0): point = 10
   Insn 209(l0): point = 12
   Insn 208(l0): point = 14
   Insn 207(l0): point = 16
   Insn 206(l0): point = 18
   Insn 205(l0): point = 20
   Insn 204(l0): point = 22
   Insn 203(l0): point = 24
   Insn 202(l0): point = 26
   Insn 201(l0): point = 28
   Insn 200(l0): point = 30
   Insn 199(l0): point = 32
   Insn 198(l0): point = 34
   Insn 197(l0): point = 36
   Insn 196(l0): point = 38
   Insn 193(l0): point = 41
   Insn 191(l0): point = 44
   Insn 190(l0): point = 46
   Insn 189(l0): point = 48
   Insn 188(l0): point = 50
   Insn 187(l0): point = 52
   Insn 184(l0): point = 55
   Insn 183(l0): point = 57
   Insn 181(l0): point = 60
   Insn 180(l0): point = 62
   Insn 179(l0): point = 64
   Insn 178(l0): point = 66
   Insn 177(l0): point = 68
   Insn 176(l0): point = 70
   Insn 173(l0): point = 73
   Insn 172(l0): point = 75
   Insn 171(l0): point = 77
   Insn 170(l0): point = 79
   Insn 169(l0): point = 81
   Insn 168(l0): point = 83
   Insn 167(l0): point = 85
   Insn 166(l0): point = 87
   Insn 164(l0): point = 90
   Insn 163(l0): point = 92
   Insn 160(l0): point = 94
   Insn 159(l0): point = 96
   Insn 158(l0): point = 98
   Insn 156(l0): point = 101
   Insn 155(l0): point = 103
   Insn 154(l0): point = 105
   Insn 153(l0): point = 107
   Insn 152(l0): point = 109
   Insn 151(l0): point = 111
   Insn 150(l0): point = 113
   Insn 149(l0): point = 115
   Insn 148(l0): point = 117
   Insn 147(l0): point = 119
   Insn 146(l0): point = 121
   Insn 145(l0): point = 123
   Insn 144(l0): point = 125
   Insn 143(l0): point = 127
   Insn 142(l0): point = 129
   Insn 141(l0): point = 131
   Insn 140(l0): point = 133
   Insn 139(l0): point = 135
   Insn 138(l0): point = 137
   Insn 137(l0): point = 139
   Insn 136(l0): point = 141
   Insn 135(l0): point = 143
   Insn 134(l0): point = 145
   Insn 133(l0): point = 147
   Insn 132(l0): point = 149
   Insn 131(l0): point = 151
   Insn 130(l0): point = 153
   Insn 129(l0): point = 155
   Insn 128(l0): point = 157
   Insn 127(l0): point = 159
   Insn 126(l0): point = 161
   Insn 125(l0): point = 163
   Insn 124(l0): point = 165
   Insn 123(l0): point = 167
   Insn 122(l0): point = 169
   Insn 121(l0): point = 171
   Insn 120(l0): point = 173
   Insn 119(l0): point = 175
   Insn 100(l0): point = 178
   Insn 99(l0): point = 180
   Insn 98(l0): point = 182
   Insn 97(l0): point = 184
   Insn 96(l0): point = 186
   Insn 95(l0): point = 188
   Insn 94(l0): point = 190
   Insn 117(l0): point = 193
   Insn 116(l0): point = 195
   Insn 110(l0): point = 198
   Insn 107(l0): point = 201
   Insn 106(l0): point = 203
   Insn 105(l0): point = 205
   Insn 104(l0): point = 207
   Insn 103(l0): point = 209
   Insn 102(l0): point = 211
   Insn 224(l0): point = 214
   Insn 90(l0): point = 216
   Insn 48(l0): point = 219
   Insn 47(l0): point = 221
   Insn 46(l0): point = 223
   Insn 45(l0): point = 225
   Insn 44(l0): point = 227
   Insn 88(l0): point = 230
   Insn 87(l0): point = 232
   Insn 81(l0): point = 235
   Insn 58(l0): point = 238
   Insn 57(l0): point = 240
   Insn 56(l0): point = 242
   Insn 55(l0): point = 244
   Insn 54(l0): point = 246
   Insn 53(l0): point = 248
   Insn 52(l0): point = 250
   Insn 51(l0): point = 252
   Insn 50(l0): point = 254
   Insn 69(l0): point = 257
   Insn 68(l0): point = 259
   Insn 67(l0): point = 261
   Insn 66(l0): point = 263
   Insn 65(l0): point = 265
   Insn 64(l0): point = 267
   Insn 63(l0): point = 269
   Insn 62(l0): point = 271
   Insn 61(l0): point = 273
   Insn 60(l0): point = 275
   Insn 78(l0): point = 278
   Insn 77(l0): point = 280
   Insn 76(l0): point = 282
   Insn 75(l0): point = 284
   Insn 74(l0): point = 286
   Insn 73(l0): point = 288
   Insn 72(l0): point = 290
   Insn 71(l0): point = 292
   Insn 222(l0): point = 295
   Insn 40(l0): point = 297
   Insn 39(l0): point = 299
   Insn 38(l0): point = 301
   Insn 37(l0): point = 303
   Insn 36(l0): point = 305
   Insn 35(l0): point = 307
   Insn 34(l0): point = 309
   Insn 33(l0): point = 311
   Insn 32(l0): point = 313
   Insn 31(l0): point = 315
   Insn 30(l0): point = 317
   Insn 29(l0): point = 319
   Insn 28(l0): point = 321
   Insn 27(l0): point = 323
   Insn 26(l0): point = 325
   Insn 25(l0): point = 327
   Insn 22(l0): point = 329
   Insn 24(l0): point = 331
   Insn 23(l0): point = 333
   Insn 21(l0): point = 335
   Insn 20(l0): point = 337
   Insn 19(l0): point = 339
   Insn 18(l0): point = 341
   Insn 17(l0): point = 343
   Insn 16(l0): point = 345
   Insn 15(l0): point = 347
   Insn 14(l0): point = 349
   Insn 13(l0): point = 351
   Insn 12(l0): point = 353
   Insn 11(l0): point = 355
   Insn 10(l0): point = 357
   Insn 9(l0): point = 359
   Insn 8(l0): point = 361
   Insn 5(l0): point = 363
   Insn 7(l0): point = 365
   Insn 6(l0): point = 367
   Insn 226(l0): point = 369
 a0(r127): [3..4]
 a1(r126): [5..6]
 a2(r82): [11..369]
 a3(r123): [17..20]
 a4(r122): [21..22]
 a5(r167): [23..24]
 a6(r121): [27..30]
 a7(r166): [27..28]
 a8(r165): [31..32]
 a9(r120): [35..36]
 a10(r164): [37..38]
 a11(r119): [47..48]
 a12(r118): [49..50]
 a13(r163): [51..52]
 a14(r162): [56..57]
 a15(r117): [63..64]
 a16(r116): [63..68]
 a17(r161): [65..66]
 a18(r160): [69..70]
 a19(r159): [74..75]
 a20(r158): [76..77]
 a21(r157): [78..79]
 a22(r156): [78..81]
 a23(r115): [80..83]
 a24(r114): [84..85]
 a25(r155): [86..87]
 a26(r113): [93..94]
 a27(r112): [95..96]
 a28(r154): [97..98]
 a29(r111): [104..105]
 a30(r110): [106..107]
 a31(r153): [108..109]
 a32(r109): [112..113]
 a33(r152): [114..115]
 a34(r108): [124..127]
 a35(r107): [128..129]
 a36(r151): [130..131]
 a37(r106): [134..135]
 a38(r150): [136..137]
 a39(r105): [146..149]
 a40(r104): [150..151]
 a41(r149): [152..153]
 a42(r103): [156..157]
 a43(r148): [158..159]
 a44(r102): [168..171]
 a45(r101): [172..173]
 a46(r147): [174..175]
 a47(r100): [208..211]
 a48(r99): [181..182]
 a49(r98): [183..188]
 a50(r145): [183..184]
 a51(r146): [185..186]
 a52(r144): [189..190]
 a53(r97): [285..290]
 a54(r143): [291..292]
 a55(r96): [260..261]
 a56(r95): [262..263]
 a57(r141): [264..267]
 a58(r142): [264..265]
 a59(r94): [270..271]
 a60(r139): [272..275]
 a61(r140): [272..273]
 a62(r93): [241..242]
 a63(r91): [241..248]
 a64(r92): [243..244]
 a65(r138): [245..246]
 a66(r90): [249..250]
 a67(r136): [251..254]
 a68(r137): [251..252]
 a69(r89): [222..223]
 a70(r134): [224..227]
 a71(r135): [224..225]
 a72(r88): [306..311]
 a73(r125): [308..327]
 a74(r87): [318..321]
 a75(r86): [322..323]
 a76(r133): [324..325]
 a77(r131): [330..331]
 a78(r132): [332..333]
 a79(r85): [342..347]
 a80(r124): [344..361]
 a81(r84): [354..355]
 a82(r83): [356..357]
 a83(r130): [358..359]
 a84(r128): [364..365]
 a85(r129): [366..367]
Compressing live ranges: from 372 to 148 - 39%
Ranges after the compression:
 a0(r127): [0..1]
 a1(r126): [2..3]
 a2(r82): [4..147]
 a3(r123): [4..5]
 a4(r122): [6..7]
 a5(r167): [8..9]
 a6(r121): [10..11]
 a7(r166): [10..11]
 a8(r165): [12..13]
 a9(r120): [14..15]
 a10(r164): [16..17]
 a11(r119): [18..19]
 a12(r118): [20..21]
 a13(r163): [22..23]
 a14(r162): [24..25]
 a15(r117): [26..27]
 a16(r116): [26..29]
 a17(r161): [28..29]
 a18(r160): [30..31]
 a19(r159): [32..33]
 a20(r158): [34..35]
 a21(r157): [36..37]
 a22(r156): [36..39]
 a23(r115): [38..39]
 a24(r114): [40..41]
 a25(r155): [42..43]
 a26(r113): [44..45]
 a27(r112): [46..47]
 a28(r154): [48..49]
 a29(r111): [50..51]
 a30(r110): [52..53]
 a31(r153): [54..55]
 a32(r109): [56..57]
 a33(r152): [58..59]
 a34(r108): [60..61]
 a35(r107): [62..63]
 a36(r151): [64..65]
 a37(r106): [66..67]
 a38(r150): [68..69]
 a39(r105): [70..71]
 a40(r104): [72..73]
 a41(r149): [74..75]
 a42(r103): [76..77]
 a43(r148): [78..79]
 a44(r102): [80..81]
 a45(r101): [82..83]
 a46(r147): [84..85]
 a47(r100): [94..95]
 a48(r99): [86..87]
 a49(r98): [88..91]
 a50(r145): [88..89]
 a51(r146): [90..91]
 a52(r144): [92..93]
 a53(r97): [120..121]
 a54(r143): [122..123]
 a55(r96): [110..111]
 a56(r95): [112..113]
 a57(r141): [114..115]
 a58(r142): [114..115]
 a59(r94): [116..117]
 a60(r139): [118..119]
 a61(r140): [118..119]
 a62(r93): [100..101]
 a63(r91): [100..105]
 a64(r92): [102..103]
 a65(r138): [104..105]
 a66(r90): [106..107]
 a67(r136): [108..109]
 a68(r137): [108..109]
 a69(r89): [96..97]
 a70(r134): [98..99]
 a71(r135): [98..99]
 a72(r88): [124..125]
 a73(r125): [124..131]
 a74(r87): [126..127]
 a75(r86): [128..129]
 a76(r133): [130..131]
 a77(r131): [132..133]
 a78(r132): [134..135]
 a79(r85): [136..137]
 a80(r124): [136..143]
 a81(r84): [138..139]
 a82(r83): [140..141]
 a83(r130): [142..143]
 a84(r128): [144..145]
 a85(r129): [146..147]
  pref0:a0(r127)<-hr0@1500
  pref1:a72(r88)<-hr0@1500
  pref2:a79(r85)<-hr0@1500
  pref3:a2(r82)<-hr3@1500
  regions=1, blocks=22, points=148
    allocnos=86 (big 0), copies=0, conflicts=0, ranges=86
Disposition:
    2:r82  l0     3   82:r83  l0     0   81:r84  l0     0   79:r85  l0     0
   75:r86  l0     0   74:r87  l0     0   72:r88  l0     0   69:r89  l0     0
   66:r90  l0     0   63:r91  l0     1   64:r92  l0     0   62:r93  l0     0
   59:r94  l0     0   56:r95  l0     0   55:r96  l0     0   53:r97  l0     0
   49:r98  l0     0   48:r99  l0     0   47:r100 l0     0   45:r101 l0     0
   44:r102 l0     0   42:r103 l0     0   40:r104 l0     0   39:r105 l0     0
   37:r106 l0     0   35:r107 l0     0   34:r108 l0     0   32:r109 l0     0
   30:r110 l0     0   29:r111 l0     0   27:r112 l0     0   26:r113 l0     0
   24:r114 l0     0   23:r115 l0     0   16:r116 l0     1   15:r117 l0     0
   12:r118 l0     0   11:r119 l0     0    9:r120 l0     0    6:r121 l0     0
    4:r122 l0     0    3:r123 l0     0   80:r124 l0     4   73:r125 l0     4
    1:r126 l0     0    0:r127 l0     0   84:r128 l0     0   85:r129 l0     0
   83:r130 l0     0   77:r131 l0     0   78:r132 l0     0   76:r133 l0     0
   70:r134 l0     0   71:r135 l0     1   67:r136 l0     0   68:r137 l0     1
   65:r138 l0     0   60:r139 l0     0   61:r140 l0     1   57:r141 l0     0
   58:r142 l0     1   54:r143 l0     0   52:r144 l0     0   50:r145 l0     1
   51:r146 l0     1   46:r147 l0     0   43:r148 l0     0   41:r149 l0     0
   38:r150 l0     0   36:r151 l0     0   33:r152 l0     0   31:r153 l0     0
   28:r154 l0     0   25:r155 l0     0   22:r156 l0     1   21:r157 l0     0
   20:r158 l0     0   19:r159 l0     0   18:r160 l0     0   17:r161 l0     0
   14:r162 l0     0   13:r163 l0     0   10:r164 l0     0    8:r165 l0     0
    7:r166 l0     1    5:r167 l0     0
+++Costs: overall 8000, reg 8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_exit

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={14d,4u} r1={13d} r2={13d} r3={7d,7u} r6={1d,21u} r7={34d,85u} r8={12d} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r16={1d,21u} r17={52d,10u} r18={12d} r19={1d,39u,1e} r20={12d} r21={12d} r22={12d} r23={12d} r24={12d} r25={12d} r26={12d} r27={12d} r28={12d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={12d} r38={12d} r39={12d} r40={12d} r41={12d} r42={12d} r43={12d} r44={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} r82={1d,33u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} 
;;    total ref usage 1308{1002d,305u,1e} in 176{164 regular + 12 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 226 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 226 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 226 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg:SI 129)
        (const_int 15 [0xf])) "kernel/exit.c":81:49 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:SI 128 [ __limit ])
                (asm_operands:SI ("lsll %1, %0
	incl %0") ("=r") 0 [
                        (reg:SI 129)
                    ]
                     [
                        (asm_input:SI ("r") kernel/exit.c:81)
                    ]
                     [] kernel/exit.c:81))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":81:49 -1
     (expr_list:REG_DEAD (reg:SI 129)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 5 7 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 __limit+0 S4 A32])
        (reg:SI 128 [ __limit ])) "kernel/exit.c":81:49 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 128 [ __limit ])
        (nil)))
(insn 8 5 9 2 (set (reg:SI 124 [ _52 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 __limit+0 S4 A32])) "kernel/exit.c":81:49 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 130)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":81:22 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 83 [ current.3_1 ])
        (mem/f/c:SI (reg/f:SI 130) [13 current+0 S4 A32])) "kernel/exit.c":81:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 130)
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg/f:SI 84 [ _2 ])
                (plus:SI (reg/f:SI 83 [ current.3_1 ])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":81:22 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 83 [ current.3_1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 12 11 13 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg/f:SI 84 [ _2 ])) "kernel/exit.c":81:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_get_base") [flags 0x3]  <function_decl 0x7d3b78915900 _get_base>) [0 _get_base S1 A8])
            (const_int 4 [0x4]))) "kernel/exit.c":81:5 823 {*call_value}
     (nil)
    (nil))
(insn 14 13 15 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":81:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 15 14 16 2 (set (reg:SI 85 [ _3 ])
        (reg:SI 0 ax)) "kernel/exit.c":81:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":81:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 17 16 18 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 124 [ _52 ])) "kernel/exit.c":81:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 124 [ _52 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 18 17 19 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 85 [ _3 ])) "kernel/exit.c":81:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 19 18 20 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/exit.c":81:5 75 {*movsi_internal}
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("free_page_tables") [flags 0x41]  <function_decl 0x7d3b78938400 free_page_tables>) [0 free_page_tables S1 A8])
            (const_int 16 [0x10]))) "kernel/exit.c":81:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 21 20 23 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":81:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 23 21 24 2 (set (reg:SI 132)
        (const_int 23 [0x17])) "kernel/exit.c":82:49 75 {*movsi_internal}
     (nil))
(insn 24 23 22 2 (parallel [
            (set (reg:SI 131 [ __limit ])
                (asm_operands:SI ("lsll %1, %0
	incl %0") ("=r") 0 [
                        (reg:SI 132)
                    ]
                     [
                        (asm_input:SI ("r") kernel/exit.c:82)
                    ]
                     [] kernel/exit.c:82))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":82:49 -1
     (expr_list:REG_DEAD (reg:SI 132)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 22 24 25 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 __limit+0 S4 A32])
        (reg:SI 131 [ __limit ])) "kernel/exit.c":82:49 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 131 [ __limit ])
        (nil)))
(insn 25 22 26 2 (set (reg:SI 125 [ _57 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 __limit+0 S4 A32])) "kernel/exit.c":82:49 75 {*movsi_internal}
     (nil))
(insn 26 25 27 2 (set (reg/f:SI 133)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":82:22 75 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (reg/f:SI 86 [ current.4_4 ])
        (mem/f/c:SI (reg/f:SI 133) [13 current+0 S4 A32])) "kernel/exit.c":82:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 133)
        (nil)))
(insn 28 27 29 2 (parallel [
            (set (reg/f:SI 87 [ _5 ])
                (plus:SI (reg/f:SI 86 [ current.4_4 ])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":82:22 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 86 [ current.4_4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 29 28 30 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":82:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 30 29 31 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg/f:SI 87 [ _5 ])) "kernel/exit.c":82:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 87 [ _5 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 31 30 32 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_get_base") [flags 0x3]  <function_decl 0x7d3b78915900 _get_base>) [0 _get_base S1 A8])
            (const_int 16 [0x10]))) "kernel/exit.c":82:5 823 {*call_value}
     (nil)
    (nil))
(insn 32 31 33 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":82:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 33 32 34 2 (set (reg:SI 88 [ _6 ])
        (reg:SI 0 ax)) "kernel/exit.c":82:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 34 33 35 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":82:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 35 34 36 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 125 [ _57 ])) "kernel/exit.c":82:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 125 [ _57 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 36 35 37 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 88 [ _6 ])) "kernel/exit.c":82:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 37 36 38 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/exit.c":82:5 75 {*movsi_internal}
     (nil))
(call_insn 38 37 39 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("free_page_tables") [flags 0x41]  <function_decl 0x7d3b78938400 free_page_tables>) [0 free_page_tables S1 A8])
            (const_int 16 [0x10]))) "kernel/exit.c":82:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 39 38 40 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":82:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 40 39 222 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":83:12 75 {*movsi_internal}
     (nil))
(jump_insn 222 40 223 2 (set (pc)
        (label_ref 82)) "kernel/exit.c":83:5 807 {jump}
     (nil)
 -> 82)
(barrier 223 222 84)
(code_label 84 223 43 3 33 (nil) [1 uses])
(note 43 84 44 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 3 (set (reg/f:SI 134)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":84:17 75 {*movsi_internal}
     (nil))
(insn 45 44 46 3 (set (reg:SI 135)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])) "kernel/exit.c":84:17 75 {*movsi_internal}
     (nil))
(insn 46 45 47 3 (set (reg/f:SI 89 [ _7 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 135)
                    (const_int 4 [0x4]))
                (reg/f:SI 134)) [13 task[i_42]+0 S4 A32])) "kernel/exit.c":84:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 135)
        (expr_list:REG_DEAD (reg/f:SI 134)
            (nil))))
(insn 47 46 48 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 89 [ _7 ])
            (const_int 0 [0]))) "kernel/exit.c":84:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 89 [ _7 ])
        (nil)))
(jump_insn 48 47 49 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "kernel/exit.c":84:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 79)
(note 49 48 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 4 (set (reg/f:SI 136)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":84:28 75 {*movsi_internal}
     (nil))
(insn 51 50 52 4 (set (reg:SI 137)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])) "kernel/exit.c":84:28 75 {*movsi_internal}
     (nil))
(insn 52 51 53 4 (set (reg/f:SI 90 [ _8 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 137)
                    (const_int 4 [0x4]))
                (reg/f:SI 136)) [13 task[i_42]+0 S4 A32])) "kernel/exit.c":84:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_DEAD (reg/f:SI 136)
            (nil))))
(insn 53 52 54 4 (set (reg:SI 91 [ _9 ])
        (mem:SI (plus:SI (reg/f:SI 90 [ _8 ])
                (const_int 560 [0x230])) [2 _8->father+0 S4 A32])) "kernel/exit.c":84:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90 [ _8 ])
        (nil)))
(insn 54 53 55 4 (set (reg/f:SI 138)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":84:50 75 {*movsi_internal}
     (nil))
(insn 55 54 56 4 (set (reg/f:SI 92 [ current.5_10 ])
        (mem/f/c:SI (reg/f:SI 138) [13 current+0 S4 A32])) "kernel/exit.c":84:50 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 138)
        (nil)))
(insn 56 55 57 4 (set (reg:SI 93 [ _11 ])
        (mem:SI (plus:SI (reg/f:SI 92 [ current.5_10 ])
                (const_int 556 [0x22c])) [2 current.5_10->pid+0 S4 A32])) "kernel/exit.c":84:50 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92 [ current.5_10 ])
        (nil)))
(insn 57 56 58 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ _9 ])
            (reg:SI 93 [ _11 ]))) "kernel/exit.c":84:21 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
        (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
            (nil))))
(jump_insn 58 57 59 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "kernel/exit.c":84:21 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 79)
(note 59 58 60 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 5 (set (reg/f:SI 139)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":85:17 75 {*movsi_internal}
     (nil))
(insn 61 60 62 5 (set (reg:SI 140)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])) "kernel/exit.c":85:17 75 {*movsi_internal}
     (nil))
(insn 62 61 63 5 (set (reg/f:SI 94 [ _12 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 140)
                    (const_int 4 [0x4]))
                (reg/f:SI 139)) [13 task[i_42]+0 S4 A32])) "kernel/exit.c":85:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_DEAD (reg/f:SI 139)
            (nil))))
(insn 63 62 64 5 (set (mem:SI (plus:SI (reg/f:SI 94 [ _12 ])
                (const_int 560 [0x230])) [2 _12->father+0 S4 A32])
        (const_int 1 [0x1])) "kernel/exit.c":85:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94 [ _12 ])
        (nil)))
(insn 64 63 65 5 (set (reg/f:SI 141)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":86:21 75 {*movsi_internal}
     (nil))
(insn 65 64 66 5 (set (reg:SI 142)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])) "kernel/exit.c":86:21 75 {*movsi_internal}
     (nil))
(insn 66 65 67 5 (set (reg/f:SI 95 [ _13 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 142)
                    (const_int 4 [0x4]))
                (reg/f:SI 141)) [13 task[i_42]+0 S4 A32])) "kernel/exit.c":86:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_DEAD (reg/f:SI 141)
            (nil))))
(insn 67 66 68 5 (set (reg:SI 96 [ _14 ])
        (mem:SI (reg/f:SI 95 [ _13 ]) [2 _13->state+0 S4 A32])) "kernel/exit.c":86:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95 [ _13 ])
        (nil)))
(insn 68 67 69 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ _14 ])
            (const_int 3 [0x3]))) "kernel/exit.c":86:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
        (nil)))
(jump_insn 69 68 70 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "kernel/exit.c":86:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 79)
(note 70 69 71 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 6 (set (reg/f:SI 143)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":88:24 75 {*movsi_internal}
     (nil))
(insn 72 71 73 6 (set (reg/f:SI 97 [ _15 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 143)
                (const_int 4 [0x4])) [13 task[1]+0 S4 A32])) "kernel/exit.c":88:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (nil)))
(insn 73 72 74 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":88:24 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 74 73 75 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (const_int 1 [0x1])) "kernel/exit.c":88:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 75 74 76 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg/f:SI 97 [ _15 ])) "kernel/exit.c":88:24 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 97 [ _15 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 76 75 77 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (const_int 17 [0x11])) "kernel/exit.c":88:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 77 76 78 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("send_sig") [flags 0x3]  <function_decl 0x7d3b78952700 send_sig>) [0 send_sig S1 A8])
            (const_int 16 [0x10]))) "kernel/exit.c":88:24 823 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (nil))
(insn 78 77 79 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":88:24 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 79 78 80 7 32 (nil) [3 uses])
(note 80 79 81 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":83:32 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 82 81 83 8 31 (nil) [1 uses])
(note 83 82 87 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 87 83 88 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
            (const_int 63 [0x3f]))) "kernel/exit.c":83:19 11 {*cmpsi_1}
     (nil))
(jump_insn 88 87 89 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "kernel/exit.c":83:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 84)
(note 89 88 90 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 224 9 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":90:11 75 {*movsi_internal}
     (nil))
(jump_insn 224 90 225 9 (set (pc)
        (label_ref 111)) "kernel/exit.c":90:5 807 {jump}
     (nil)
 -> 111)
(barrier 225 224 113)
(code_label 113 225 93 10 36 (nil) [1 uses])
(note 93 113 94 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 10 (set (reg/f:SI 144)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":91:20 75 {*movsi_internal}
     (nil))
(insn 95 94 96 10 (set (reg/f:SI 98 [ current.6_16 ])
        (mem/f/c:SI (reg/f:SI 144) [13 current+0 S4 A32])) "kernel/exit.c":91:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 144)
        (nil)))
(insn 96 95 97 10 (set (reg:SI 146)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])) "kernel/exit.c":91:26 75 {*movsi_internal}
     (nil))
(insn 97 96 98 10 (parallel [
            (set (reg:SI 145)
                (plus:SI (reg:SI 146)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":91:26 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
                    (const_int 160 [0xa0]))
                (nil)))))
(insn 98 97 99 10 (set (reg/f:SI 99 [ _17 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 145)
                    (const_int 4 [0x4]))
                (reg/f:SI 98 [ current.6_16 ])) [9 current.6_16->filp[i_43]+0 S4 A32])) "kernel/exit.c":91:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_DEAD (reg/f:SI 98 [ current.6_16 ])
            (nil))))
(insn 99 98 100 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 99 [ _17 ])
            (const_int 0 [0]))) "kernel/exit.c":91:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 99 [ _17 ])
        (nil)))
(jump_insn 100 99 101 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) "kernel/exit.c":91:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 108)
(note 101 100 102 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 11 (set (reg:SI 100 [ i.7_18 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])) "kernel/exit.c":92:13 75 {*movsi_internal}
     (nil))
(insn 103 102 104 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":92:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 104 103 105 11 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (reg:SI 100 [ i.7_18 ])) "kernel/exit.c":92:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 100 [ i.7_18 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 105 104 106 11 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/exit.c":92:13 75 {*movsi_internal}
     (nil))
(call_insn 106 105 107 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sys_close") [flags 0x41]  <function_decl 0x7d3b78952400 sys_close>) [0 sys_close S1 A8])
            (const_int 16 [0x10]))) "kernel/exit.c":92:13 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 107 106 108 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":92:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 108 107 109 12 35 (nil) [1 uses])
(note 109 108 110 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 12 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":90:30 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 111 110 112 13 34 (nil) [1 uses])
(note 112 111 116 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 116 112 117 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
            (const_int 19 [0x13]))) "kernel/exit.c":90:18 11 {*cmpsi_1}
     (nil))
(jump_insn 117 116 118 13 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) "kernel/exit.c":90:18 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 113)
(note 118 117 119 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 14 (set (reg/f:SI 147)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":93:17 75 {*movsi_internal}
     (nil))
(insn 120 119 121 14 (set (reg/f:SI 101 [ current.8_19 ])
        (mem/f/c:SI (reg/f:SI 147) [13 current+0 S4 A32])) "kernel/exit.c":93:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 147)
        (nil)))
(insn 121 120 122 14 (set (reg/f:SI 102 [ _20 ])
        (mem/f:SI (plus:SI (reg/f:SI 101 [ current.8_19 ])
                (const_int 624 [0x270])) [8 current.8_19->pwd+0 S4 A32])) "kernel/exit.c":93:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101 [ current.8_19 ])
        (nil)))
(insn 122 121 123 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":93:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 123 122 124 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 102 [ _20 ])) "kernel/exit.c":93:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 102 [ _20 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 124 123 125 14 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/exit.c":93:5 75 {*movsi_internal}
     (nil))
(call_insn 125 124 126 14 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7d3b788d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":93:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 126 125 127 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":93:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 127 126 128 14 (set (reg/f:SI 148)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":94:12 75 {*movsi_internal}
     (nil))
(insn 128 127 129 14 (set (reg/f:SI 103 [ current.9_21 ])
        (mem/f/c:SI (reg/f:SI 148) [13 current+0 S4 A32])) "kernel/exit.c":94:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 148)
        (nil)))
(insn 129 128 130 14 (set (mem/f:SI (plus:SI (reg/f:SI 103 [ current.9_21 ])
                (const_int 624 [0x270])) [8 current.9_21->pwd+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":94:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103 [ current.9_21 ])
        (nil)))
(insn 130 129 131 14 (set (reg/f:SI 149)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":95:17 75 {*movsi_internal}
     (nil))
(insn 131 130 132 14 (set (reg/f:SI 104 [ current.10_22 ])
        (mem/f/c:SI (reg/f:SI 149) [13 current+0 S4 A32])) "kernel/exit.c":95:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 149)
        (nil)))
(insn 132 131 133 14 (set (reg/f:SI 105 [ _23 ])
        (mem/f:SI (plus:SI (reg/f:SI 104 [ current.10_22 ])
                (const_int 628 [0x274])) [8 current.10_22->root+0 S4 A32])) "kernel/exit.c":95:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104 [ current.10_22 ])
        (nil)))
(insn 133 132 134 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":95:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 134 133 135 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 105 [ _23 ])) "kernel/exit.c":95:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 105 [ _23 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 135 134 136 14 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/exit.c":95:5 75 {*movsi_internal}
     (nil))
(call_insn 136 135 137 14 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7d3b788d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":95:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 137 136 138 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":95:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 138 137 139 14 (set (reg/f:SI 150)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":96:12 75 {*movsi_internal}
     (nil))
(insn 139 138 140 14 (set (reg/f:SI 106 [ current.11_24 ])
        (mem/f/c:SI (reg/f:SI 150) [13 current+0 S4 A32])) "kernel/exit.c":96:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 150)
        (nil)))
(insn 140 139 141 14 (set (mem/f:SI (plus:SI (reg/f:SI 106 [ current.11_24 ])
                (const_int 628 [0x274])) [8 current.11_24->root+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":96:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106 [ current.11_24 ])
        (nil)))
(insn 141 140 142 14 (set (reg/f:SI 151)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":97:17 75 {*movsi_internal}
     (nil))
(insn 142 141 143 14 (set (reg/f:SI 107 [ current.12_25 ])
        (mem/f/c:SI (reg/f:SI 151) [13 current+0 S4 A32])) "kernel/exit.c":97:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 151)
        (nil)))
(insn 143 142 144 14 (set (reg/f:SI 108 [ _26 ])
        (mem/f:SI (plus:SI (reg/f:SI 107 [ current.12_25 ])
                (const_int 632 [0x278])) [8 current.12_25->executable+0 S4 A32])) "kernel/exit.c":97:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107 [ current.12_25 ])
        (nil)))
(insn 144 143 145 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":97:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 145 144 146 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 108 [ _26 ])) "kernel/exit.c":97:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 108 [ _26 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 146 145 147 14 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/exit.c":97:5 75 {*movsi_internal}
     (nil))
(call_insn 147 146 148 14 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7d3b788d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":97:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 148 147 149 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":97:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 149 148 150 14 (set (reg/f:SI 152)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":98:12 75 {*movsi_internal}
     (nil))
(insn 150 149 151 14 (set (reg/f:SI 109 [ current.13_27 ])
        (mem/f/c:SI (reg/f:SI 152) [13 current+0 S4 A32])) "kernel/exit.c":98:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 152)
        (nil)))
(insn 151 150 152 14 (set (mem/f:SI (plus:SI (reg/f:SI 109 [ current.13_27 ])
                (const_int 632 [0x278])) [8 current.13_27->executable+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":98:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109 [ current.13_27 ])
        (nil)))
(insn 152 151 153 14 (set (reg/f:SI 153)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":99:16 75 {*movsi_internal}
     (nil))
(insn 153 152 154 14 (set (reg/f:SI 110 [ current.14_28 ])
        (mem/f/c:SI (reg/f:SI 153) [13 current+0 S4 A32])) "kernel/exit.c":99:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 153)
        (nil)))
(insn 154 153 155 14 (set (reg:SI 111 [ _29 ])
        (mem:SI (plus:SI (reg/f:SI 110 [ current.14_28 ])
                (const_int 572 [0x23c])) [2 current.14_28->leader+0 S4 A32])) "kernel/exit.c":99:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110 [ current.14_28 ])
        (nil)))
(insn 155 154 156 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ _29 ])
            (const_int 0 [0]))) "kernel/exit.c":99:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 111 [ _29 ])
        (nil)))
(jump_insn 156 155 157 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) "kernel/exit.c":99:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 174)
(note 157 156 158 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 15 (set (reg/f:SI 154)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":99:35 75 {*movsi_internal}
     (nil))
(insn 159 158 160 15 (set (reg/f:SI 112 [ current.15_30 ])
        (mem/f/c:SI (reg/f:SI 154) [13 current+0 S4 A32])) "kernel/exit.c":99:35 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 154)
        (nil)))
(insn 160 159 163 15 (set (reg:SI 113 [ _31 ])
        (mem:SI (plus:SI (reg/f:SI 112 [ current.15_30 ])
                (const_int 616 [0x268])) [5 current.15_30->tty+0 S4 A32])) "kernel/exit.c":99:35 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112 [ current.15_30 ])
        (nil)))
(insn 163 160 164 15 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 113 [ _31 ])
            (const_int 0 [0]))) "kernel/exit.c":99:25 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 113 [ _31 ])
        (nil)))
(jump_insn 164 163 165 15 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) "kernel/exit.c":99:25 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 174)
(note 165 164 166 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 16 (set (reg/f:SI 155)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":100:26 75 {*movsi_internal}
     (nil))
(insn 167 166 168 16 (set (reg/f:SI 114 [ current.16_32 ])
        (mem/f/c:SI (reg/f:SI 155) [13 current+0 S4 A32])) "kernel/exit.c":100:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 155)
        (nil)))
(insn 168 167 169 16 (set (reg:SI 115 [ _33 ])
        (mem:SI (plus:SI (reg/f:SI 114 [ current.16_32 ])
                (const_int 616 [0x268])) [5 current.16_32->tty+0 S4 A32])) "kernel/exit.c":100:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114 [ current.16_32 ])
        (nil)))
(insn 169 168 170 16 (set (reg/f:SI 156)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("tty_table") [flags 0x40]  <var_decl 0x7d3b7892e480 tty_table>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":100:38 75 {*movsi_internal}
     (nil))
(insn 170 169 171 16 (parallel [
            (set (reg:SI 157)
                (mult:SI (reg:SI 115 [ _33 ])
                    (const_int 3168 [0xc60])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":100:38 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 115 [ _33 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 171 170 172 16 (parallel [
            (set (reg:SI 158)
                (plus:SI (reg/f:SI 156)
                    (reg:SI 157)))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":100:38 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_DEAD (reg/f:SI 156)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 172 171 173 16 (parallel [
            (set (reg/f:SI 159)
                (plus:SI (reg:SI 158)
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":100:38 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 173 172 174 16 (set (mem:SI (reg/f:SI 159) [5 tty_table[_33].pgrp+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":100:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 159)
        (nil)))
(code_label 174 173 175 17 37 (nil) [2 uses])
(note 175 174 176 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 17 (set (reg/f:SI 160)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_task_used_math") [flags 0x40]  <var_decl 0x7d3b7892e240 last_task_used_math>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":101:29 75 {*movsi_internal}
     (nil))
(insn 177 176 178 17 (set (reg/f:SI 116 [ last_task_used_math.17_34 ])
        (mem/f/c:SI (reg/f:SI 160) [13 last_task_used_math+0 S4 A32])) "kernel/exit.c":101:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 160)
        (nil)))
(insn 178 177 179 17 (set (reg/f:SI 161)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":101:29 75 {*movsi_internal}
     (nil))
(insn 179 178 180 17 (set (reg/f:SI 117 [ current.18_35 ])
        (mem/f/c:SI (reg/f:SI 161) [13 current+0 S4 A32])) "kernel/exit.c":101:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 161)
        (nil)))
(insn 180 179 181 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 116 [ last_task_used_math.17_34 ])
            (reg/f:SI 117 [ current.18_35 ]))) "kernel/exit.c":101:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 117 [ current.18_35 ])
        (expr_list:REG_DEAD (reg/f:SI 116 [ last_task_used_math.17_34 ])
            (nil))))
(jump_insn 181 180 182 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 185)
            (pc))) "kernel/exit.c":101:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 185)
(note 182 181 183 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 18 (set (reg/f:SI 162)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_task_used_math") [flags 0x40]  <var_decl 0x7d3b7892e240 last_task_used_math>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":102:29 75 {*movsi_internal}
     (nil))
(insn 184 183 185 18 (set (mem/f/c:SI (reg/f:SI 162) [13 last_task_used_math+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":102:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 162)
        (nil)))
(code_label 185 184 186 19 38 (nil) [1 uses])
(note 186 185 187 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 187 186 188 19 (set (reg/f:SI 163)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":103:16 75 {*movsi_internal}
     (nil))
(insn 188 187 189 19 (set (reg/f:SI 118 [ current.19_36 ])
        (mem/f/c:SI (reg/f:SI 163) [13 current+0 S4 A32])) "kernel/exit.c":103:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 163)
        (nil)))
(insn 189 188 190 19 (set (reg:SI 119 [ _37 ])
        (mem:SI (plus:SI (reg/f:SI 118 [ current.19_36 ])
                (const_int 572 [0x23c])) [2 current.19_36->leader+0 S4 A32])) "kernel/exit.c":103:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118 [ current.19_36 ])
        (nil)))
(insn 190 189 191 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ _37 ])
            (const_int 0 [0]))) "kernel/exit.c":103:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 119 [ _37 ])
        (nil)))
(jump_insn 191 190 192 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "kernel/exit.c":103:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 194)
(note 192 191 193 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(call_insn 193 192 194 20 (call (mem:QI (symbol_ref:SI ("kill_session") [flags 0x3]  <function_decl 0x7d3b78952900 kill_session>) [0 kill_session S1 A8])
        (const_int 0 [0])) "kernel/exit.c":104:9 812 {*call}
     (nil)
    (nil))
(code_label 194 193 195 21 39 (nil) [1 uses])
(note 195 194 196 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 21 (set (reg/f:SI 164)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":105:12 75 {*movsi_internal}
     (nil))
(insn 197 196 198 21 (set (reg/f:SI 120 [ current.20_38 ])
        (mem/f/c:SI (reg/f:SI 164) [13 current+0 S4 A32])) "kernel/exit.c":105:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 164)
        (nil)))
(insn 198 197 199 21 (set (mem:SI (reg/f:SI 120 [ current.20_38 ]) [2 current.20_38->state+0 S4 A32])
        (const_int 3 [0x3])) "kernel/exit.c":105:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120 [ current.20_38 ])
        (nil)))
(insn 199 198 200 21 (set (reg/f:SI 165)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":106:12 75 {*movsi_internal}
     (nil))
(insn 200 199 201 21 (set (reg/f:SI 121 [ current.21_39 ])
        (mem/f/c:SI (reg/f:SI 165) [13 current+0 S4 A32])) "kernel/exit.c":106:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 165)
        (nil)))
(insn 201 200 202 21 (set (reg:SI 166)
        (mem/c:SI (reg/f:SI 16 argp) [2 code+0 S4 A32])) "kernel/exit.c":106:24 75 {*movsi_internal}
     (nil))
(insn 202 201 203 21 (set (mem:SI (plus:SI (reg/f:SI 121 [ current.21_39 ])
                (const_int 532 [0x214])) [5 current.21_39->exit_code+0 S4 A32])
        (reg:SI 166)) "kernel/exit.c":106:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_DEAD (reg/f:SI 121 [ current.21_39 ])
            (nil))))
(insn 203 202 204 21 (set (reg/f:SI 167)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":107:24 75 {*movsi_internal}
     (nil))
(insn 204 203 205 21 (set (reg/f:SI 122 [ current.22_40 ])
        (mem/f/c:SI (reg/f:SI 167) [13 current+0 S4 A32])) "kernel/exit.c":107:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 167)
        (nil)))
(insn 205 204 206 21 (set (reg:SI 123 [ _41 ])
        (mem:SI (plus:SI (reg/f:SI 122 [ current.22_40 ])
                (const_int 560 [0x230])) [2 current.22_40->father+0 S4 A32])) "kernel/exit.c":107:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 122 [ current.22_40 ])
        (nil)))
(insn 206 205 207 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":107:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 207 206 208 21 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 123 [ _41 ])) "kernel/exit.c":107:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 123 [ _41 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 208 207 209 21 (call (mem:QI (symbol_ref:SI ("tell_father") [flags 0x3]  <function_decl 0x7d3b78952b00 tell_father>) [0 tell_father S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":107:5 812 {*call}
     (nil)
    (nil))
(insn 209 208 210 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":107:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 210 209 211 21 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/exit.c":108:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 211 210 212 21 (call (mem:QI (symbol_ref:SI ("schedule") [flags 0x41]  <function_decl 0x7d3b78915c00 schedule>) [0 schedule S1 A8])
        (const_int 0 [0])) "kernel/exit.c":108:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 212 211 215 21 (set (reg:SI 126 [ _76 ])
        (const_int -1 [0xffffffffffffffff])) "kernel/exit.c":109:12 75 {*movsi_internal}
     (nil))
(insn 215 212 219 21 (set (reg:SI 127 [ <retval> ])
        (reg:SI 126 [ _76 ])) "kernel/exit.c":109:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 126 [ _76 ])
        (nil)))
(insn 219 215 220 21 (set (reg/i:SI 0 ax)
        (reg:SI 127 [ <retval> ])) "kernel/exit.c":110:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 127 [ <retval> ])
        (nil)))
(insn 220 219 0 21 (use (reg/i:SI 0 ax)) "kernel/exit.c":110:1 -1
     (nil))

;; Function sys_exit (sys_exit, funcdef_no=13, decl_uid=1460, cgraph_uid=14, symbol_order=13)

scanning new insn with uid = 22.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 20(l0): point = 0
   Insn 19(l0): point = 2
   Insn 15(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
   Insn 5(l0): point = 20
   Insn 22(l0): point = 22
 a0(r86): [3..4]
 a1(r85): [5..6]
 a2(r84): [13..16]
 a3(r83): [17..18]
 a4(r87): [19..20]
 a5(r82): [22..22]
Compressing live ranges: from 25 to 11 - 44%
Ranges after the compression:
 a0(r86): [0..1]
 a1(r85): [2..3]
 a2(r84): [4..5]
 a3(r83): [6..7]
 a4(r87): [8..9]
 a5(r82): [10..10]
  pref0:a0(r86)<-hr0@1500
  pref1:a1(r85)<-hr0@1500
  regions=1, blocks=3, points=11
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    5:r82  l0     0    3:r83  l0     0    2:r84  l0     0    1:r85  l0     0
    0:r86  l0     0    4:r87  l0     0
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_exit

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r6={1d,2u} r7={4d,8u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u,1e} r17={5d} r18={1d} r19={1d,2u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 113{90d,22u,1e} in 12{11 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 22 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 22 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 22 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 87)
        (mem/c:SI (reg/f:SI 16 argp) [5 error_code+0 S4 A32])) "kernel/exit.c":114:40 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 83 [ _1 ])
                (ashift:SI (reg:SI 87)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":114:40 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 87)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (reg/f:SI 16 argp) [5 error_code+0 S4 A32])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 7 6 8 2 (set (reg:SI 84 [ _2 ])
        (zero_extend:SI (subreg:HI (reg:SI 83 [ _1 ]) 0))) "kernel/exit.c":114:12 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (nil)))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":114:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 9 8 10 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 84 [ _2 ])) "kernel/exit.c":114:12 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("do_exit") [flags 0x3]  <function_decl 0x7d3b78952d00 do_exit>) [0 do_exit S1 A8])
            (const_int 16 [0x10]))) "kernel/exit.c":114:12 823 {*call_value}
     (nil)
    (nil))
(insn 11 10 12 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":114:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 12 11 15 2 (set (reg:SI 85 [ _6 ])
        (reg:SI 0 ax)) "kernel/exit.c":114:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 15 12 19 2 (set (reg:SI 86 [ <retval> ])
        (reg:SI 85 [ _6 ])) "kernel/exit.c":114:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ _6 ])
        (nil)))
(insn 19 15 20 2 (set (reg/i:SI 0 ax)
        (reg:SI 86 [ <retval> ])) "kernel/exit.c":115:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ <retval> ])
        (nil)))
(insn 20 19 0 2 (use (reg/i:SI 0 ax)) "kernel/exit.c":115:1 -1
     (nil))

;; Function sys_waitpid (sys_waitpid, funcdef_no=14, decl_uid=1465, cgraph_uid=15, symbol_order=14)

scanning new insn with uid = 269.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 35 n_edges 50 count 35 (    1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 31 32 33 34 21 22 23 24 25 26 27 28 29 30
;;
;; Loop 1
;;  header 3, latch 27
;;  depth 1, outer 0
;;  nodes: 3 27 26 24 23 22 21 20 31 12 9 32 34 33 14 13 10 7 6 5 4 17 16 15 8 11
;;
;; Loop 2
;;  header 22, latch 21
;;  depth 2, outer 1
;;  nodes: 22 21 20 31 12 9 32 34 33 14 13 10 7 6 5 4 17 16 15 8 11
;; 2 succs { 3 }
;; 3 succs { 22 }
;; 4 succs { 31 5 }
;; 5 succs { 31 6 }
;; 6 succs { 32 7 }
;; 7 succs { 8 10 }
;; 8 succs { 9 15 }
;; 9 succs { 21 }
;; 10 succs { 11 13 }
;; 11 succs { 12 15 }
;; 12 succs { 21 }
;; 13 succs { 14 15 }
;; 14 succs { 33 15 }
;; 15 succs { 16 19 }
;; 16 succs { 20 17 }
;; 17 succs { 34 18 }
;; 18 succs { 30 }
;; 19 succs { 30 }
;; 20 succs { 21 }
;; 31 succs { 21 }
;; 32 succs { 21 }
;; 33 succs { 21 }
;; 34 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 4 23 }
;; 23 succs { 24 29 }
;; 24 succs { 25 26 }
;; 25 succs { 30 }
;; 26 succs { 27 28 }
;; 27 succs { 3 }
;; 28 succs { 30 }
;; 29 succs { 30 }
;; 30 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r127,l0) best AREG, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r127,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:20000
  a2(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:90000
  a3(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a5(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a13(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a15(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a16(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a27(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a28(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a29(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a30(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a36(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a37(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a38(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a41(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a42(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a44(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a45(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a46(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a47(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:16000
  a48(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a49(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a51(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a52(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a53(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a54(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a55(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a56(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a57(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a58(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a59(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a60(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a61(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a62(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a63(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a64(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a65(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a66(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a67(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a68(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a69(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a70(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a71(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a72(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a73(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a74(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a75(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a76(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a77(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 229(l0): point = 0
   Insn 228(l0): point = 2
   Insn 224(l0): point = 4
   Insn 221(l0): point = 7
   Insn 247(l0): point = 10
   Insn 216(l0): point = 12
   Insn 243(l0): point = 15
   Insn 191(l0): point = 17
   Insn 241(l0): point = 20
   Insn 166(l0): point = 22
   Insn 165(l0): point = 24
   Insn 164(l0): point = 26
   Insn 163(l0): point = 28
   Insn 162(l0): point = 30
   Insn 161(l0): point = 32
   Insn 160(l0): point = 34
   Insn 159(l0): point = 36
   Insn 158(l0): point = 38
   Insn 157(l0): point = 40
   Insn 156(l0): point = 42
   Insn 155(l0): point = 44
   Insn 154(l0): point = 46
   Insn 153(l0): point = 48
   Insn 152(l0): point = 50
   Insn 151(l0): point = 52
   Insn 150(l0): point = 54
   Insn 149(l0): point = 56
   Insn 148(l0): point = 58
   Insn 147(l0): point = 60
   Insn 146(l0): point = 62
   Insn 145(l0): point = 64
   Insn 144(l0): point = 66
   Insn 143(l0): point = 68
   Insn 142(l0): point = 70
   Insn 141(l0): point = 72
   Insn 140(l0): point = 74
   Insn 139(l0): point = 76
   Insn 138(l0): point = 78
   Insn 137(l0): point = 80
   Insn 136(l0): point = 82
   Insn 135(l0): point = 84
   Insn 134(l0): point = 86
   Insn 133(l0): point = 88
   Insn 132(l0): point = 90
   Insn 131(l0): point = 92
   Insn 130(l0): point = 94
   Insn 129(l0): point = 96
   Insn 128(l0): point = 98
   Insn 127(l0): point = 100
   Insn 126(l0): point = 102
   Insn 239(l0): point = 105
   Insn 121(l0): point = 107
   Insn 120(l0): point = 109
   Insn 119(l0): point = 111
   Insn 118(l0): point = 113
   Insn 117(l0): point = 115
   Insn 116(l0): point = 117
   Insn 115(l0): point = 119
   Insn 114(l0): point = 121
   Insn 231(l0): point = 124
   Insn 16(l0): point = 126
   Insn 15(l0): point = 128
   Insn 14(l0): point = 130
   Insn 13(l0): point = 132
   Insn 245(l0): point = 135
   Insn 210(l0): point = 138
   Insn 209(l0): point = 140
   Insn 208(l0): point = 142
   Insn 207(l0): point = 144
   Insn 206(l0): point = 146
   Insn 205(l0): point = 148
   Insn 204(l0): point = 150
   Insn 203(l0): point = 152
   Insn 202(l0): point = 154
   Insn 201(l0): point = 156
   Insn 200(l0): point = 158
   Insn 199(l0): point = 160
   Insn 198(l0): point = 162
   Insn 197(l0): point = 164
   Insn 196(l0): point = 166
   Insn 189(l0): point = 169
   Insn 188(l0): point = 171
   Insn 187(l0): point = 173
   Insn 186(l0): point = 175
   Insn 184(l0): point = 178
   Insn 183(l0): point = 180
   Insn 181(l0): point = 183
   Insn 180(l0): point = 185
   Insn 179(l0): point = 187
   Insn 178(l0): point = 189
   Insn 174(l0): point = 192
   Insn 249(l0): point = 195
   Insn 171(l0): point = 197
   Insn 254(l0): point = 200
   Insn 253(l0): point = 202
   Insn 237(l0): point = 205
   Insn 234(l0): point = 208
   Insn 259(l0): point = 211
   Insn 258(l0): point = 213
   Insn 268(l0): point = 216
   Insn 108(l0): point = 219
   Insn 107(l0): point = 221
   Insn 106(l0): point = 223
   Insn 105(l0): point = 225
   Insn 103(l0): point = 228
   Insn 102(l0): point = 230
   Insn 100(l0): point = 233
   Insn 99(l0): point = 235
   Insn 98(l0): point = 237
   Insn 97(l0): point = 239
   Insn 96(l0): point = 241
   Insn 59(l0): point = 244
   Insn 58(l0): point = 246
   Insn 57(l0): point = 248
   Insn 56(l0): point = 250
   Insn 55(l0): point = 252
   Insn 75(l0): point = 255
   Insn 74(l0): point = 257
   Insn 73(l0): point = 259
   Insn 72(l0): point = 261
   Insn 71(l0): point = 263
   Insn 70(l0): point = 265
   Insn 69(l0): point = 267
   Insn 68(l0): point = 269
   Insn 264(l0): point = 272
   Insn 263(l0): point = 274
   Insn 90(l0): point = 277
   Insn 89(l0): point = 279
   Insn 88(l0): point = 281
   Insn 87(l0): point = 283
   Insn 86(l0): point = 285
   Insn 85(l0): point = 287
   Insn 84(l0): point = 289
   Insn 82(l0): point = 292
   Insn 81(l0): point = 294
   Insn 66(l0): point = 297
   Insn 65(l0): point = 299
   Insn 53(l0): point = 302
   Insn 52(l0): point = 304
   Insn 44(l0): point = 307
   Insn 43(l0): point = 309
   Insn 42(l0): point = 311
   Insn 41(l0): point = 313
   Insn 40(l0): point = 315
   Insn 39(l0): point = 317
   Insn 38(l0): point = 319
   Insn 37(l0): point = 321
   Insn 30(l0): point = 324
   Insn 29(l0): point = 326
   Insn 28(l0): point = 328
   Insn 27(l0): point = 330
   Insn 26(l0): point = 332
   Insn 25(l0): point = 334
   Insn 23(l0): point = 337
   Insn 22(l0): point = 339
   Insn 21(l0): point = 341
   Insn 20(l0): point = 343
   Insn 10(l0): point = 346
   Insn 9(l0): point = 348
   Insn 8(l0): point = 350
   Insn 7(l0): point = 352
   Insn 6(l0): point = 354
   Insn 5(l0): point = 356
   Insn 269(l0): point = 358
 a0(r127): [3..4]
 a1(r126): [105..107] [20..22] [15..17] [10..12] [5..7]
 a2(r82): [124..358] [71..104]
 a3(r125): [141..142]
 a4(r123): [143..148]
 a5(r124): [145..146]
 a6(r122): [147..152]
 a7(r159): [149..150]
 a8(r121): [153..154]
 a9(r158): [155..156]
 a10(r120): [163..164]
 a11(r157): [165..166]
 a12(r119): [172..173]
 a13(r156): [174..175]
 a14(r154): [186..187]
 a15(r155): [188..189]
 a16(r118): [29..34]
 a17(r117): [41..44]
 a18(r153): [45..46]
 a19(r152): [49..50]
 a20(r116): [51..52]
 a21(r151): [53..54]
 a22(r150): [57..58]
 a23(r115): [59..60]
 a24(r149): [61..62]
 a25(r113): [65..68]
 a26(r114): [65..66]
 a27(r112): [67..72]
 a28(r110): [67..78]
 a29(r148): [69..70]
 a30(r111): [73..74]
 a31(r147): [75..76]
 a32(r109): [79..80]
 a33(r146): [81..82]
 a34(r107): [85..88]
 a35(r108): [85..86]
 a36(r106): [87..92]
 a37(r104): [87..98]
 a38(r145): [89..90]
 a39(r105): [93..94]
 a40(r144): [95..96]
 a41(r103): [99..100]
 a42(r143): [101..102]
 a43(r102): [108..109]
 a44(r142): [110..111]
 a45(r101): [222..223]
 a46(r141): [224..225]
 a47(r100): [231..237]
 a48(r99): [238..239]
 a49(r140): [240..241]
 a50(r98): [280..281]
 a51(r97): [280..285]
 a52(r139): [282..283]
 a53(r96): [286..287]
 a54(r138): [288..289]
 a55(r95): [258..259]
 a56(r93): [258..265]
 a57(r94): [260..261]
 a58(r137): [262..263]
 a59(r92): [266..267]
 a60(r136): [268..269]
 a61(r91): [247..248]
 a62(r90): [249..250]
 a63(r135): [251..252]
 a64(r89): [310..311]
 a65(r87): [310..317]
 a66(r88): [312..313]
 a67(r134): [314..315]
 a68(r86): [318..319]
 a69(r133): [320..321]
 a70(r85): [327..328]
 a71(r84): [327..332]
 a72(r132): [329..330]
 a73(r131): [333..334]
 a74(r83): [340..341]
 a75(r130): [342..343]
 a76(r128): [127..128]
 a77(r129): [129..130]
Compressing live ranges: from 361 to 146 - 40%
Ranges after the compression:
 a0(r127): [0..1]
 a1(r126): [58..59] [2..9]
 a2(r82): [64..145] [34..57]
 a3(r125): [68..69]
 a4(r123): [70..73]
 a5(r124): [70..71]
 a6(r122): [72..75]
 a7(r159): [74..75]
 a8(r121): [76..77]
 a9(r158): [78..79]
 a10(r120): [80..81]
 a11(r157): [82..83]
 a12(r119): [84..85]
 a13(r156): [86..87]
 a14(r154): [88..89]
 a15(r155): [90..91]
 a16(r118): [10..11]
 a17(r117): [12..13]
 a18(r153): [14..15]
 a19(r152): [16..17]
 a20(r116): [18..19]
 a21(r151): [20..21]
 a22(r150): [22..23]
 a23(r115): [24..25]
 a24(r149): [26..27]
 a25(r113): [28..31]
 a26(r114): [28..29]
 a27(r112): [30..35]
 a28(r110): [30..39]
 a29(r148): [32..33]
 a30(r111): [36..37]
 a31(r147): [38..39]
 a32(r109): [40..41]
 a33(r146): [42..43]
 a34(r107): [44..47]
 a35(r108): [44..45]
 a36(r106): [46..49]
 a37(r104): [46..53]
 a38(r145): [48..49]
 a39(r105): [50..51]
 a40(r144): [52..53]
 a41(r103): [54..55]
 a42(r143): [56..57]
 a43(r102): [60..61]
 a44(r142): [62..63]
 a45(r101): [92..93]
 a46(r141): [94..95]
 a47(r100): [96..97]
 a48(r99): [98..99]
 a49(r140): [100..101]
 a50(r98): [118..119]
 a51(r97): [118..121]
 a52(r139): [120..121]
 a53(r96): [122..123]
 a54(r138): [124..125]
 a55(r95): [108..109]
 a56(r93): [108..113]
 a57(r94): [110..111]
 a58(r137): [112..113]
 a59(r92): [114..115]
 a60(r136): [116..117]
 a61(r91): [102..103]
 a62(r90): [104..105]
 a63(r135): [106..107]
 a64(r89): [126..127]
 a65(r87): [126..131]
 a66(r88): [128..129]
 a67(r134): [130..131]
 a68(r86): [132..133]
 a69(r133): [134..135]
 a70(r85): [136..137]
 a71(r84): [136..139]
 a72(r132): [138..139]
 a73(r131): [140..141]
 a74(r83): [142..143]
 a75(r130): [144..145]
 a76(r128): [64..65]
 a77(r129): [66..67]
  pref0:a0(r127)<-hr0@1500
  regions=1, blocks=35, points=146
    allocnos=78 (big 0), copies=0, conflicts=0, ranges=80
Disposition:
    2:r82  l0     3   74:r83  l0     0   71:r84  l0     1   70:r85  l0     0
   68:r86  l0     0   65:r87  l0     1   66:r88  l0     0   64:r89  l0     0
   62:r90  l0     0   61:r91  l0     0   59:r92  l0     0   56:r93  l0     1
   57:r94  l0     0   55:r95  l0     0   53:r96  l0     0   51:r97  l0     0
   50:r98  l0     1   48:r99  l0     0   47:r100 l0     0   45:r101 l0     0
   43:r102 l0     0   41:r103 l0     0   37:r104 l0     2   39:r105 l0     0
   36:r106 l0     1   34:r107 l0     0   35:r108 l0     1   32:r109 l0     0
   28:r110 l0     2   30:r111 l0     0   27:r112 l0     1   25:r113 l0     0
   26:r114 l0     1   23:r115 l0     0   20:r116 l0     0   17:r117 l0     0
   16:r118 l0     0   12:r119 l0     0   10:r120 l0     0    8:r121 l0     0
    6:r122 l0     1    4:r123 l0     0    5:r124 l0     1    3:r125 l0     0
    1:r126 l0     0    0:r127 l0     0   76:r128 l0     0   77:r129 l0     0
   75:r130 l0     0   73:r131 l0     0   72:r132 l0     0   69:r133 l0     0
   67:r134 l0     0   63:r135 l0     0   60:r136 l0     0   58:r137 l0     0
   54:r138 l0     0   52:r139 l0     1   49:r140 l0     0   46:r141 l0     0
   44:r142 l0     0   42:r143 l0     0   40:r144 l0     0   38:r145 l0     0
   33:r146 l0     0   31:r147 l0     0   29:r148 l0     0   24:r149 l0     0
   22:r150 l0     0   21:r151 l0     0   19:r152 l0     0   18:r153 l0     0
   14:r154 l0     0   15:r155 l0     0   13:r156 l0     0   11:r157 l0     0
    9:r158 l0     0    7:r159 l0     0
+++Costs: overall 3000, reg 3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_waitpid

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,2u} r1={6d} r2={6d} r3={2d,2u} r6={1d,34u} r7={16d,62u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,43u,3e} r17={37d,16u} r18={5d} r19={1d,58u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r82={1d,14u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,2u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,2u} r124={1d,1u} r125={1d,1u} r126={5d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} 
;;    total ref usage 797{484d,310u,3e} in 164{159 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 269 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 269 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 269 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":122:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (const_int 4 [0x4])) "kernel/exit.c":122:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 7 6 8 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [19 stat_addr+0 S4 A32])) "kernel/exit.c":122:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 8 7 9 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/exit.c":122:5 75 {*movsi_internal}
     (nil))
(call_insn 9 8 10 2 (call (mem:QI (symbol_ref:SI ("verify_area") [flags 0x41]  <function_decl 0x7d3b78938500 verify_area>) [0 verify_area S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":122:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":122:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 11 10 12 3 44 ("repeat") [1 uses])
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 flag+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":124:10 75 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:SI 129)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":125:12 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg/f:SI 128)
        (plus:SI (reg:SI 129)
            (const_int 252 [0xfc]))) "kernel/exit.c":125:12 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 129)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                    (const_int 252 [0xfc])))
            (nil))))
(insn 16 15 231 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [21 p+0 S4 A32])
        (reg/f:SI 128)) "kernel/exit.c":125:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 128)
        (nil)))
(jump_insn 231 16 232 3 (set (pc)
        (label_ref 175)) "kernel/exit.c":125:5 807 {jump}
     (nil)
 -> 175)
(barrier 232 231 177)
(code_label 177 232 19 4 57 (nil) [1 uses])
(note 19 177 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [21 p+0 S4 A32])) "kernel/exit.c":126:14 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg/f:SI 83 [ _1 ])
        (mem/f:SI (reg/f:SI 130) [13 *p_46+0 S4 A32])) "kernel/exit.c":126:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 130)
        (nil)))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 83 [ _1 ])
            (const_int 0 [0]))) "kernel/exit.c":126:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (nil)))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 252)
            (pc))) "kernel/exit.c":126:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 252)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [21 p+0 S4 A32])) "kernel/exit.c":126:20 75 {*movsi_internal}
     (nil))
(insn 26 25 27 5 (set (reg/f:SI 84 [ _2 ])
        (mem/f:SI (reg/f:SI 131) [13 *p_46+0 S4 A32])) "kernel/exit.c":126:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 131)
        (nil)))
(insn 27 26 28 5 (set (reg/f:SI 132)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":126:23 75 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (set (reg/f:SI 85 [ current.25_3 ])
        (mem/f/c:SI (reg/f:SI 132) [13 current+0 S4 A32])) "kernel/exit.c":126:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 132)
        (nil)))
(insn 29 28 30 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 84 [ _2 ])
            (reg/f:SI 85 [ current.25_3 ]))) "kernel/exit.c":126:17 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 85 [ current.25_3 ])
        (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
            (nil))))
(jump_insn 30 29 36 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 252)
            (pc))) "kernel/exit.c":126:17 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 252)
(note 36 30 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (set (reg/f:SI 133)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [21 p+0 S4 A32])) "kernel/exit.c":128:14 75 {*movsi_internal}
     (nil))
(insn 38 37 39 6 (set (reg/f:SI 86 [ _4 ])
        (mem/f:SI (reg/f:SI 133) [13 *p_46+0 S4 A32])) "kernel/exit.c":128:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 133)
        (nil)))
(insn 39 38 40 6 (set (reg:SI 87 [ _5 ])
        (mem:SI (plus:SI (reg/f:SI 86 [ _4 ])
                (const_int 560 [0x230])) [2 _4->father+0 S4 A32])) "kernel/exit.c":128:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ _4 ])
        (nil)))
(insn 40 39 41 6 (set (reg/f:SI 134)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":128:36 75 {*movsi_internal}
     (nil))
(insn 41 40 42 6 (set (reg/f:SI 88 [ current.26_6 ])
        (mem/f/c:SI (reg/f:SI 134) [13 current+0 S4 A32])) "kernel/exit.c":128:36 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 134)
        (nil)))
(insn 42 41 43 6 (set (reg:SI 89 [ _7 ])
        (mem:SI (plus:SI (reg/f:SI 88 [ current.26_6 ])
                (const_int 556 [0x22c])) [2 current.26_6->pid+0 S4 A32])) "kernel/exit.c":128:36 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88 [ current.26_6 ])
        (nil)))
(insn 43 42 44 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _5 ])
            (reg:SI 89 [ _7 ]))) "kernel/exit.c":128:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
            (nil))))
(jump_insn 44 43 49 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 257)
            (pc))) "kernel/exit.c":128:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 257)
(note 49 44 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 52 49 53 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (reg/f:SI 16 argp) [5 pid+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":130:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 53 52 54 7 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "kernel/exit.c":130:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 63)
(note 54 53 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 8 (set (reg/f:SI 135)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [21 p+0 S4 A32])) "kernel/exit.c":131:18 75 {*movsi_internal}
     (nil))
(insn 56 55 57 8 (set (reg/f:SI 90 [ _8 ])
        (mem/f:SI (reg/f:SI 135) [13 *p_46+0 S4 A32])) "kernel/exit.c":131:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 135)
        (nil)))
(insn 57 56 58 8 (set (reg:SI 91 [ _9 ])
        (mem:SI (plus:SI (reg/f:SI 90 [ _8 ])
                (const_int 556 [0x22c])) [2 _8->pid+0 S4 A32])) "kernel/exit.c":131:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90 [ _8 ])
        (nil)))
(insn 58 57 59 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [5 pid+0 S4 A32])
            (reg:SI 91 [ _9 ]))) "kernel/exit.c":131:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (nil)))
(jump_insn 59 58 233 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "kernel/exit.c":131:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 94)
(note 233 59 234 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 234 233 235 9 (set (pc)
        (label_ref 172)) "kernel/exit.c":132:17 807 {jump}
     (nil)
 -> 172)
(barrier 235 234 63)
(code_label 63 235 64 10 50 (nil) [1 uses])
(note 64 63 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [5 pid+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":133:19 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 66 65 67 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "kernel/exit.c":133:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 79)
(note 67 66 68 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 11 (set (reg/f:SI 136)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [21 p+0 S4 A32])) "kernel/exit.c":134:18 75 {*movsi_internal}
     (nil))
(insn 69 68 70 11 (set (reg/f:SI 92 [ _10 ])
        (mem/f:SI (reg/f:SI 136) [13 *p_46+0 S4 A32])) "kernel/exit.c":134:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (nil)))
(insn 70 69 71 11 (set (reg:SI 93 [ _11 ])
        (mem:SI (plus:SI (reg/f:SI 92 [ _10 ])
                (const_int 564 [0x234])) [2 _10->pgrp+0 S4 A32])) "kernel/exit.c":134:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92 [ _10 ])
        (nil)))
(insn 71 70 72 11 (set (reg/f:SI 137)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":134:38 75 {*movsi_internal}
     (nil))
(insn 72 71 73 11 (set (reg/f:SI 94 [ current.27_12 ])
        (mem/f/c:SI (reg/f:SI 137) [13 current+0 S4 A32])) "kernel/exit.c":134:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 137)
        (nil)))
(insn 73 72 74 11 (set (reg:SI 95 [ _13 ])
        (mem:SI (plus:SI (reg/f:SI 94 [ current.27_12 ])
                (const_int 564 [0x234])) [2 current.27_12->pgrp+0 S4 A32])) "kernel/exit.c":134:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94 [ current.27_12 ])
        (nil)))
(insn 74 73 75 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ _11 ])
            (reg:SI 95 [ _13 ]))) "kernel/exit.c":134:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _13 ])
        (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
            (nil))))
(jump_insn 75 74 236 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "kernel/exit.c":134:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 94)
(note 236 75 237 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 237 236 238 12 (set (pc)
        (label_ref 172)) "kernel/exit.c":135:17 807 {jump}
     (nil)
 -> 172)
(barrier 238 237 79)
(code_label 79 238 80 13 52 (nil) [1 uses])
(note 80 79 81 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [5 pid+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) "kernel/exit.c":136:19 11 {*cmpsi_1}
     (nil))
(jump_insn 82 81 83 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "kernel/exit.c":136:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 94)
(note 83 82 84 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 14 (set (reg/f:SI 138)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [21 p+0 S4 A32])) "kernel/exit.c":137:18 75 {*movsi_internal}
     (nil))
(insn 85 84 86 14 (set (reg/f:SI 96 [ _14 ])
        (mem/f:SI (reg/f:SI 138) [13 *p_46+0 S4 A32])) "kernel/exit.c":137:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 138)
        (nil)))
(insn 86 85 87 14 (set (reg:SI 97 [ _15 ])
        (mem:SI (plus:SI (reg/f:SI 96 [ _14 ])
                (const_int 564 [0x234])) [2 _14->pgrp+0 S4 A32])) "kernel/exit.c":137:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96 [ _14 ])
        (nil)))
(insn 87 86 88 14 (set (reg:SI 139)
        (mem/c:SI (reg/f:SI 16 argp) [5 pid+0 S4 A32])) "kernel/exit.c":137:31 75 {*movsi_internal}
     (nil))
(insn 88 87 89 14 (parallel [
            (set (reg:SI 98 [ _16 ])
                (neg:SI (reg:SI 139)))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":137:31 575 {*negsi_1}
     (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (neg:SI (mem/c:SI (reg/f:SI 16 argp) [5 pid+0 S4 A32]))
                (nil)))))
(insn 89 88 90 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ _15 ])
            (reg:SI 98 [ _16 ]))) "kernel/exit.c":137:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 98 [ _16 ])
        (expr_list:REG_DEAD (reg:SI 97 [ _15 ])
            (nil))))
(jump_insn 90 89 94 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 262)
            (pc))) "kernel/exit.c":137:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 262)
(code_label 94 90 95 15 51 (nil) [3 uses])
(note 95 94 96 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 15 (set (reg/f:SI 140)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [21 p+0 S4 A32])) "kernel/exit.c":140:18 75 {*movsi_internal}
     (nil))
(insn 97 96 98 15 (set (reg/f:SI 99 [ _17 ])
        (mem/f:SI (reg/f:SI 140) [13 *p_46+0 S4 A32])) "kernel/exit.c":140:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 140)
        (nil)))
(insn 98 97 99 15 (set (reg:SI 100 [ _18 ])
        (mem:SI (reg/f:SI 99 [ _17 ]) [2 _17->state+0 S4 A32])) "kernel/exit.c":140:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99 [ _17 ])
        (nil)))
(insn 99 98 100 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ _18 ])
            (const_int 3 [0x3]))) "kernel/exit.c":140:9 11 {*cmpsi_1}
     (nil))
(jump_insn 100 99 101 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 124)
            (pc))) "kernel/exit.c":140:9 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 124)
(note 101 100 102 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ _18 ])
            (const_int 4 [0x4]))) "kernel/exit.c":140:9 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 100 [ _18 ])
        (nil)))
(jump_insn 103 102 104 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) "kernel/exit.c":140:9 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 169)
(note 104 103 105 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 17 (set (reg:SI 141)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [5 options+0 S4 A32])) "kernel/exit.c":142:27 75 {*movsi_internal}
     (nil))
(insn 106 105 107 17 (parallel [
            (set (reg:SI 101 [ _19 ])
                (and:SI (reg:SI 141)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":142:27 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [5 options+0 S4 A32])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 107 106 108 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ _19 ])
            (const_int 0 [0]))) "kernel/exit.c":142:16 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 101 [ _19 ])
        (nil)))
(jump_insn 108 107 113 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 267)
            (pc))) "kernel/exit.c":142:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 267)
(note 113 108 114 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":144:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 115 114 116 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [19 stat_addr+0 S4 A32])) "kernel/exit.c":144:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 116 115 117 18 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (const_int 127 [0x7f])) "kernel/exit.c":144:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 117 116 118 18 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x7d3b7894dc00 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":144:13 812 {*call}
     (nil)
    (nil))
(insn 118 117 119 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":144:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 119 118 120 18 (set (reg/f:SI 142)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [21 p+0 S4 A32])) "kernel/exit.c":145:21 75 {*movsi_internal}
     (nil))
(insn 120 119 121 18 (set (reg/f:SI 102 [ _20 ])
        (mem/f:SI (reg/f:SI 142) [13 *p_46+0 S4 A32])) "kernel/exit.c":145:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 142)
        (nil)))
(insn 121 120 239 18 (set (reg:SI 126 [ _47 ])
        (mem:SI (plus:SI (reg/f:SI 102 [ _20 ])
                (const_int 556 [0x22c])) [2 _20->pid+0 S4 A32])) "kernel/exit.c":145:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102 [ _20 ])
        (nil)))
(jump_insn 239 121 240 18 (set (pc)
        (label_ref 222)) "kernel/exit.c":145:24 807 {jump}
     (nil)
 -> 222)
(barrier 240 239 124)
(code_label 124 240 125 19 53 (nil) [1 uses])
(note 125 124 126 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 19 (set (reg/f:SI 143)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":147:29 75 {*movsi_internal}
     (nil))
(insn 127 126 128 19 (set (reg/f:SI 103 [ current.28_21 ])
        (mem/f/c:SI (reg/f:SI 143) [13 current+0 S4 A32])) "kernel/exit.c":147:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (nil)))
(insn 128 127 129 19 (set (reg:SI 104 [ _22 ])
        (mem:SI (plus:SI (reg/f:SI 103 [ current.28_21 ])
                (const_int 600 [0x258])) [2 current.28_21->cutime+0 S4 A32])) "kernel/exit.c":147:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103 [ current.28_21 ])
        (nil)))
(insn 129 128 130 19 (set (reg/f:SI 144)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [21 p+0 S4 A32])) "kernel/exit.c":147:33 75 {*movsi_internal}
     (nil))
(insn 130 129 131 19 (set (reg/f:SI 105 [ _23 ])
        (mem/f:SI (reg/f:SI 144) [13 *p_46+0 S4 A32])) "kernel/exit.c":147:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 144)
        (nil)))
(insn 131 130 132 19 (set (reg:SI 106 [ _24 ])
        (mem:SI (plus:SI (reg/f:SI 105 [ _23 ])
                (const_int 592 [0x250])) [2 _23->utime+0 S4 A32])) "kernel/exit.c":147:36 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105 [ _23 ])
        (nil)))
(insn 132 131 133 19 (set (reg/f:SI 145)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":147:29 75 {*movsi_internal}
     (nil))
(insn 133 132 134 19 (set (reg/f:SI 107 [ current.29_25 ])
        (mem/f/c:SI (reg/f:SI 145) [13 current+0 S4 A32])) "kernel/exit.c":147:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 145)
        (nil)))
(insn 134 133 135 19 (parallel [
            (set (reg:SI 108 [ _26 ])
                (plus:SI (reg:SI 104 [ _22 ])
                    (reg:SI 106 [ _24 ])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":147:29 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 106 [ _24 ])
        (expr_list:REG_DEAD (reg:SI 104 [ _22 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 135 134 136 19 (set (mem:SI (plus:SI (reg/f:SI 107 [ current.29_25 ])
                (const_int 600 [0x258])) [2 current.29_25->cutime+0 S4 A32])
        (reg:SI 108 [ _26 ])) "kernel/exit.c":147:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108 [ _26 ])
        (expr_list:REG_DEAD (reg/f:SI 107 [ current.29_25 ])
            (nil))))
(insn 136 135 137 19 (set (reg/f:SI 146)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":148:29 75 {*movsi_internal}
     (nil))
(insn 137 136 138 19 (set (reg/f:SI 109 [ current.30_27 ])
        (mem/f/c:SI (reg/f:SI 146) [13 current+0 S4 A32])) "kernel/exit.c":148:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 146)
        (nil)))
(insn 138 137 139 19 (set (reg:SI 110 [ _28 ])
        (mem:SI (plus:SI (reg/f:SI 109 [ current.30_27 ])
                (const_int 604 [0x25c])) [2 current.30_27->cstime+0 S4 A32])) "kernel/exit.c":148:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109 [ current.30_27 ])
        (nil)))
(insn 139 138 140 19 (set (reg/f:SI 147)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [21 p+0 S4 A32])) "kernel/exit.c":148:33 75 {*movsi_internal}
     (nil))
(insn 140 139 141 19 (set (reg/f:SI 111 [ _29 ])
        (mem/f:SI (reg/f:SI 147) [13 *p_46+0 S4 A32])) "kernel/exit.c":148:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 147)
        (nil)))
(insn 141 140 142 19 (set (reg:SI 112 [ _30 ])
        (mem:SI (plus:SI (reg/f:SI 111 [ _29 ])
                (const_int 596 [0x254])) [2 _29->stime+0 S4 A32])) "kernel/exit.c":148:36 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111 [ _29 ])
        (nil)))
(insn 142 141 143 19 (set (reg/f:SI 148)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":148:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 143 142 144 19 (set (reg/f:SI 113 [ current.31_31 ])
        (mem/f/c:SI (reg/f:SI 148) [13 current+0 S4 A32])) "kernel/exit.c":148:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 148)
        (nil)))
(insn 144 143 145 19 (parallel [
            (set (reg:SI 114 [ _32 ])
                (plus:SI (reg:SI 110 [ _28 ])
                    (reg:SI 112 [ _30 ])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":148:29 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 112 [ _30 ])
        (expr_list:REG_DEAD (reg:SI 110 [ _28 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 145 144 146 19 (set (mem:SI (plus:SI (reg/f:SI 113 [ current.31_31 ])
                (const_int 604 [0x25c])) [2 current.31_31->cstime+0 S4 A32])
        (reg:SI 114 [ _32 ])) "kernel/exit.c":148:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 114 [ _32 ])
        (expr_list:REG_DEAD (reg/f:SI 113 [ current.31_31 ])
            (nil))))
(insn 146 145 147 19 (set (reg/f:SI 149)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [21 p+0 S4 A32])) "kernel/exit.c":149:21 75 {*movsi_internal}
     (nil))
(insn 147 146 148 19 (set (reg/f:SI 115 [ _33 ])
        (mem/f:SI (reg/f:SI 149) [13 *p_46+0 S4 A32])) "kernel/exit.c":149:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 149)
        (nil)))
(insn 148 147 149 19 (set (reg:SI 150)
        (mem:SI (plus:SI (reg/f:SI 115 [ _33 ])
                (const_int 556 [0x22c])) [2 _33->pid+0 S4 A32])) "kernel/exit.c":149:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115 [ _33 ])
        (nil)))
(insn 149 148 150 19 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 flag+0 S4 A32])
        (reg:SI 150)) "kernel/exit.c":149:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 150)
        (nil)))
(insn 150 149 151 19 (set (reg/f:SI 151)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [21 p+0 S4 A32])) "kernel/exit.c":150:21 75 {*movsi_internal}
     (nil))
(insn 151 150 152 19 (set (reg/f:SI 116 [ _34 ])
        (mem/f:SI (reg/f:SI 151) [13 *p_46+0 S4 A32])) "kernel/exit.c":150:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 151)
        (nil)))
(insn 152 151 153 19 (set (reg:SI 152)
        (mem:SI (plus:SI (reg/f:SI 116 [ _34 ])
                (const_int 532 [0x214])) [5 _34->exit_code+0 S4 A32])) "kernel/exit.c":150:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116 [ _34 ])
        (nil)))
(insn 153 152 154 19 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 code+0 S4 A32])
        (reg:SI 152)) "kernel/exit.c":150:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 152)
        (nil)))
(insn 154 153 155 19 (set (reg/f:SI 153)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [21 p+0 S4 A32])) "kernel/exit.c":151:13 75 {*movsi_internal}
     (nil))
(insn 155 154 156 19 (set (reg/f:SI 117 [ _35 ])
        (mem/f:SI (reg/f:SI 153) [13 *p_46+0 S4 A32])) "kernel/exit.c":151:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 153)
        (nil)))
(insn 156 155 157 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":151:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 157 156 158 19 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg/f:SI 117 [ _35 ])) "kernel/exit.c":151:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 117 [ _35 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 158 157 159 19 (call (mem:QI (symbol_ref:SI ("release") [flags 0x3]  <function_decl 0x7d3b78952500 release>) [0 release S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":151:13 812 {*call}
     (nil)
    (nil))
(insn 159 158 160 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":151:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 160 159 161 19 (set (reg:SI 118 [ code.32_36 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 code+0 S4 A32])) "kernel/exit.c":152:13 75 {*movsi_internal}
     (nil))
(insn 161 160 162 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":152:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 162 161 163 19 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [19 stat_addr+0 S4 A32])) "kernel/exit.c":152:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 163 162 164 19 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 118 [ code.32_36 ])) "kernel/exit.c":152:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 118 [ code.32_36 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 164 163 165 19 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x7d3b7894dc00 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":152:13 812 {*call}
     (nil)
    (nil))
(insn 165 164 166 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":152:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 166 165 241 19 (set (reg:SI 126 [ _47 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 flag+0 S4 A32])) "kernel/exit.c":153:20 75 {*movsi_internal}
     (nil))
(jump_insn 241 166 242 19 (set (pc)
        (label_ref 222)) "kernel/exit.c":153:20 807 {jump}
     (nil)
 -> 222)
(barrier 242 241 169)
(code_label 169 242 170 20 54 (nil) [1 uses])
(note 170 169 171 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 249 20 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 flag+0 S4 A32])
        (const_int 1 [0x1])) "kernel/exit.c":155:18 75 {*movsi_internal}
     (nil))
(jump_insn 249 171 250 20 (set (pc)
        (label_ref 172)) "kernel/exit.c":156:13 807 {jump}
     (nil)
 -> 172)
(barrier 250 249 252)
(code_label 252 250 251 31 61 (nil) [2 uses])
(note 251 252 253 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 253 251 254 31 (const_int 0 [0]) "kernel/exit.c":127:13 843 {nop}
     (nil))
(jump_insn 254 253 255 31 (set (pc)
        (label_ref 172)) 807 {jump}
     (nil)
 -> 172)
(barrier 255 254 257)
(code_label 257 255 256 32 62 (nil) [1 uses])
(note 256 257 258 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 258 256 259 32 (const_int 0 [0]) "kernel/exit.c":129:13 843 {nop}
     (nil))
(jump_insn 259 258 260 32 (set (pc)
        (label_ref 172)) 807 {jump}
     (nil)
 -> 172)
(barrier 260 259 262)
(code_label 262 260 261 33 63 (nil) [1 uses])
(note 261 262 263 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 263 261 264 33 (const_int 0 [0]) "kernel/exit.c":138:17 843 {nop}
     (nil))
(jump_insn 264 263 265 33 (set (pc)
        (label_ref 172)) 807 {jump}
     (nil)
 -> 172)
(barrier 265 264 267)
(code_label 267 265 266 34 64 (nil) [1 uses])
(note 266 267 268 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 268 266 172 34 (const_int 0 [0]) "kernel/exit.c":143:17 843 {nop}
     (nil))
(code_label 172 268 173 21 48 (nil) [6 uses])
(note 173 172 174 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 21 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [21 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [21 p+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":125:43 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 175 174 176 22 45 (nil) [1 uses])
(note 176 175 178 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 178 176 179 22 (set (reg:SI 155)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":125:28 75 {*movsi_internal}
     (nil))
(insn 179 178 180 22 (set (reg:SI 154)
        (reg:SI 155)) "kernel/exit.c":125:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_EQUAL (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
            (nil))))
(insn 180 179 181 22 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [21 p+0 S4 A32])
            (reg:SI 154))) "kernel/exit.c":125:28 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 154)
        (nil)))
(jump_insn 181 180 182 22 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 177)
            (pc))) "kernel/exit.c":125:28 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 177)
(note 182 181 183 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 flag+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":159:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 184 183 185 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 219)
            (pc))) "kernel/exit.c":159:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 219)
(note 185 184 186 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 24 (set (reg:SI 156)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [5 options+0 S4 A32])) "kernel/exit.c":160:21 75 {*movsi_internal}
     (nil))
(insn 187 186 188 24 (parallel [
            (set (reg:SI 119 [ _37 ])
                (and:SI (reg:SI 156)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":160:21 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 156)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [5 options+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 188 187 189 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ _37 ])
            (const_int 0 [0]))) "kernel/exit.c":160:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 119 [ _37 ])
        (nil)))
(jump_insn 189 188 190 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "kernel/exit.c":160:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 194)
(note 190 189 191 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 243 25 (set (reg:SI 126 [ _47 ])
        (const_int 0 [0])) "kernel/exit.c":161:20 75 {*movsi_internal}
     (nil))
(jump_insn 243 191 244 25 (set (pc)
        (label_ref 222)) "kernel/exit.c":161:20 807 {jump}
     (nil)
 -> 222)
(barrier 244 243 194)
(code_label 194 244 195 26 59 (nil) [1 uses])
(note 195 194 196 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 26 (set (reg/f:SI 157)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":162:16 75 {*movsi_internal}
     (nil))
(insn 197 196 198 26 (set (reg/f:SI 120 [ current.33_38 ])
        (mem/f/c:SI (reg/f:SI 157) [13 current+0 S4 A32])) "kernel/exit.c":162:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 157)
        (nil)))
(insn 198 197 199 26 (set (mem:SI (reg/f:SI 120 [ current.33_38 ]) [2 current.33_38->state+0 S4 A32])
        (const_int 1 [0x1])) "kernel/exit.c":162:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120 [ current.33_38 ])
        (nil)))
(insn 199 198 200 26 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/exit.c":163:9 75 {*movsi_internal}
     (nil))
(call_insn 200 199 201 26 (call (mem:QI (symbol_ref:SI ("schedule") [flags 0x41]  <function_decl 0x7d3b78915c00 schedule>) [0 schedule S1 A8])
        (const_int 0 [0])) "kernel/exit.c":163:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 201 200 202 26 (set (reg/f:SI 158)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":164:31 75 {*movsi_internal}
     (nil))
(insn 202 201 203 26 (set (reg/f:SI 121 [ current.34_39 ])
        (mem/f/c:SI (reg/f:SI 158) [13 current+0 S4 A32])) "kernel/exit.c":164:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 158)
        (nil)))
(insn 203 202 204 26 (set (reg:SI 122 [ _40 ])
        (mem:SI (plus:SI (reg/f:SI 121 [ current.34_39 ])
                (const_int 12 [0xc])) [2 current.34_39->signal+0 S4 A32])) "kernel/exit.c":164:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121 [ current.34_39 ])
        (nil)))
(insn 204 203 205 26 (set (reg/f:SI 159)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":164:31 75 {*movsi_internal}
     (nil))
(insn 205 204 206 26 (set (reg/f:SI 123 [ current.35_41 ])
        (mem/f/c:SI (reg/f:SI 159) [13 current+0 S4 A32])) "kernel/exit.c":164:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 159)
        (nil)))
(insn 206 205 207 26 (parallel [
            (set (reg:SI 124 [ _42 ])
                (and:SI (reg:SI 122 [ _40 ])
                    (const_int -65537 [0xfffffffffffeffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":164:31 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 122 [ _40 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 207 206 208 26 (set (mem:SI (plus:SI (reg/f:SI 123 [ current.35_41 ])
                (const_int 12 [0xc])) [2 current.35_41->signal+0 S4 A32])
        (reg:SI 124 [ _42 ])) "kernel/exit.c":164:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 124 [ _42 ])
        (nil)))
(insn 208 207 209 26 (set (reg:SI 125 [ _43 ])
        (mem:SI (plus:SI (reg/f:SI 123 [ current.35_41 ])
                (const_int 12 [0xc])) [2 current.35_41->signal+0 S4 A32])) "kernel/exit.c":164:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123 [ current.35_41 ])
        (nil)))
(insn 209 208 210 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 125 [ _43 ])
            (const_int 0 [0]))) "kernel/exit.c":164:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 125 [ _43 ])
        (nil)))
(jump_insn 210 209 211 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 214)
            (pc))) "kernel/exit.c":164:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 214)
(note 211 210 245 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(jump_insn 245 211 246 27 (set (pc)
        (label_ref 11)) "kernel/exit.c":165:13 807 {jump}
     (nil)
 -> 11)
(barrier 246 245 214)
(code_label 214 246 215 28 60 (nil) [1 uses])
(note 215 214 216 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 216 215 247 28 (set (reg:SI 126 [ _47 ])
        (const_int -4 [0xfffffffffffffffc])) "kernel/exit.c":167:20 75 {*movsi_internal}
     (nil))
(jump_insn 247 216 248 28 (set (pc)
        (label_ref 222)) "kernel/exit.c":167:20 807 {jump}
     (nil)
 -> 222)
(barrier 248 247 219)
(code_label 219 248 220 29 58 (nil) [1 uses])
(note 220 219 221 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 29 (set (reg:SI 126 [ _47 ])
        (const_int -10 [0xfffffffffffffff6])) "kernel/exit.c":169:12 75 {*movsi_internal}
     (nil))
(code_label 222 221 223 30 56 (nil) [4 uses])
(note 223 222 224 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 228 30 (set (reg:SI 127 [ <retval> ])
        (reg:SI 126 [ _47 ])) "kernel/exit.c":170:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 126 [ _47 ])
        (nil)))
(insn 228 224 229 30 (set (reg/i:SI 0 ax)
        (reg:SI 127 [ <retval> ])) "kernel/exit.c":170:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 127 [ <retval> ])
        (nil)))
(insn 229 228 0 30 (use (reg/i:SI 0 ax)) "kernel/exit.c":170:1 -1
     (nil))

;; Function sys_kill (sys_kill, funcdef_no=15, decl_uid=1481, cgraph_uid=16, symbol_order=15)

scanning new insn with uid = 202.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 31 n_edges 47 count 31 (    1)
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
;;
;; Loop 4
;;  header 8, multiple latches: 7 4 5 6
;;  depth 1, outer 0
;;  nodes: 8 7 4 5 6
;;
;; Loop 3
;;  header 16, multiple latches: 15 12 13 14
;;  depth 1, outer 0
;;  nodes: 16 15 12 13 14
;;
;; Loop 2
;;  header 22, multiple latches: 21 20
;;  depth 1, outer 0
;;  nodes: 22 21 20
;;
;; Loop 1
;;  header 29, multiple latches: 28 25 26 27
;;  depth 1, outer 0
;;  nodes: 29 28 25 26 27
;; 2 succs { 3 10 }
;; 3 succs { 8 }
;; 4 succs { 5 8 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 4 9 }
;; 9 succs { 30 }
;; 10 succs { 11 18 }
;; 11 succs { 16 }
;; 12 succs { 13 16 }
;; 13 succs { 14 16 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 12 17 }
;; 17 succs { 30 }
;; 18 succs { 19 24 }
;; 19 succs { 22 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 20 23 }
;; 23 succs { 30 }
;; 24 succs { 29 }
;; 25 succs { 26 29 }
;; 26 succs { 27 29 }
;; 27 succs { 28 29 }
;; 28 succs { 29 }
;; 29 succs { 25 30 }
;; 30 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r127,l0) best AREG, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r119,l0) best AREG, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r114,l0) best AREG, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r107,l0) best AREG, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a3(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:42000
  a5(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r127,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a7(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a10(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a12(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a17(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a18(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r119,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a20(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a23(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r114,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a26(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a30(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a34(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a35(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a36(r107,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a37(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a38(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a40(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a41(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a42(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a44(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a45(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a46(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a47(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a48(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 183(l0): point = 0
   Insn 182(l0): point = 2
   Insn 178(l0): point = 4
   Insn 175(l0): point = 6
   Insn 141(l0): point = 9
   Insn 140(l0): point = 11
   Insn 139(l0): point = 13
   Insn 138(l0): point = 15
   Insn 172(l0): point = 18
   Insn 171(l0): point = 20
   Insn 170(l0): point = 22
   Insn 169(l0): point = 24
   Insn 167(l0): point = 26
   Insn 164(l0): point = 29
   Insn 163(l0): point = 31
   Insn 149(l0): point = 34
   Insn 148(l0): point = 36
   Insn 147(l0): point = 38
   Insn 146(l0): point = 40
   Insn 145(l0): point = 42
   Insn 144(l0): point = 44
   Insn 143(l0): point = 46
   Insn 161(l0): point = 49
   Insn 160(l0): point = 51
   Insn 159(l0): point = 53
   Insn 158(l0): point = 55
   Insn 157(l0): point = 57
   Insn 156(l0): point = 59
   Insn 155(l0): point = 61
   Insn 154(l0): point = 63
   Insn 153(l0): point = 65
   Insn 152(l0): point = 67
   Insn 151(l0): point = 69
   Insn 200(l0): point = 72
   Insn 198(l0): point = 75
   Insn 118(l0): point = 78
   Insn 117(l0): point = 80
   Insn 116(l0): point = 82
   Insn 115(l0): point = 84
   Insn 114(l0): point = 86
   Insn 113(l0): point = 88
   Insn 112(l0): point = 90
   Insn 111(l0): point = 92
   Insn 110(l0): point = 94
   Insn 109(l0): point = 96
   Insn 108(l0): point = 98
   Insn 129(l0): point = 101
   Insn 128(l0): point = 103
   Insn 127(l0): point = 105
   Insn 126(l0): point = 107
   Insn 124(l0): point = 109
   Insn 121(l0): point = 112
   Insn 120(l0): point = 114
   Insn 195(l0): point = 117
   Insn 103(l0): point = 120
   Insn 102(l0): point = 122
   Insn 193(l0): point = 125
   Insn 67(l0): point = 128
   Insn 66(l0): point = 130
   Insn 65(l0): point = 132
   Insn 64(l0): point = 134
   Insn 96(l0): point = 137
   Insn 95(l0): point = 139
   Insn 94(l0): point = 141
   Insn 93(l0): point = 143
   Insn 91(l0): point = 145
   Insn 88(l0): point = 148
   Insn 87(l0): point = 150
   Insn 73(l0): point = 153
   Insn 72(l0): point = 155
   Insn 71(l0): point = 157
   Insn 70(l0): point = 159
   Insn 69(l0): point = 161
   Insn 85(l0): point = 164
   Insn 84(l0): point = 166
   Insn 83(l0): point = 168
   Insn 82(l0): point = 170
   Insn 81(l0): point = 172
   Insn 80(l0): point = 174
   Insn 79(l0): point = 176
   Insn 78(l0): point = 178
   Insn 77(l0): point = 180
   Insn 76(l0): point = 182
   Insn 75(l0): point = 184
   Insn 190(l0): point = 187
   Insn 59(l0): point = 190
   Insn 58(l0): point = 192
   Insn 188(l0): point = 195
   Insn 18(l0): point = 198
   Insn 17(l0): point = 200
   Insn 16(l0): point = 202
   Insn 15(l0): point = 204
   Insn 50(l0): point = 207
   Insn 49(l0): point = 209
   Insn 48(l0): point = 211
   Insn 47(l0): point = 213
   Insn 45(l0): point = 215
   Insn 42(l0): point = 218
   Insn 41(l0): point = 220
   Insn 27(l0): point = 223
   Insn 26(l0): point = 225
   Insn 25(l0): point = 227
   Insn 24(l0): point = 229
   Insn 23(l0): point = 231
   Insn 22(l0): point = 233
   Insn 21(l0): point = 235
   Insn 20(l0): point = 237
   Insn 39(l0): point = 240
   Insn 38(l0): point = 242
   Insn 37(l0): point = 244
   Insn 36(l0): point = 246
   Insn 35(l0): point = 248
   Insn 34(l0): point = 250
   Insn 33(l0): point = 252
   Insn 32(l0): point = 254
   Insn 31(l0): point = 256
   Insn 30(l0): point = 258
   Insn 29(l0): point = 260
   Insn 185(l0): point = 263
   Insn 10(l0): point = 266
   Insn 9(l0): point = 268
   Insn 8(l0): point = 270
   Insn 7(l0): point = 272
   Insn 6(l0): point = 274
   Insn 5(l0): point = 276
   Insn 202(l0): point = 278
 a0(r100): [3..4]
 a1(r99): [5..6]
 a2(r129): [21..22]
 a3(r130): [23..24]
 a4(r82): [198..278] [128..194] [78..124] [9..74]
 a5(r128): [30..31]
 a6(r127): [54..55]
 a7(r98): [64..67]
 a8(r126): [68..69]
 a9(r97): [37..38]
 a10(r96): [37..42]
 a11(r125): [39..40]
 a12(r95): [43..44]
 a13(r124): [45..46]
 a14(r94): [12..13]
 a15(r123): [14..15]
 a16(r121): [104..105]
 a17(r122): [106..107]
 a18(r120): [113..114]
 a19(r119): [83..84]
 a20(r93): [93..96]
 a21(r118): [97..98]
 a22(r116): [140..141]
 a23(r117): [142..143]
 a24(r115): [149..150]
 a25(r114): [169..170]
 a26(r92): [179..182]
 a27(r113): [183..184]
 a28(r91): [156..157]
 a29(r90): [158..159]
 a30(r112): [160..161]
 a31(r89): [131..132]
 a32(r111): [133..134]
 a33(r109): [210..211]
 a34(r110): [212..213]
 a35(r108): [219..220]
 a36(r107): [245..246]
 a37(r88): [255..258]
 a38(r106): [259..260]
 a39(r87): [226..227]
 a40(r85): [226..233]
 a41(r86): [228..229]
 a42(r105): [230..231]
 a43(r84): [234..235]
 a44(r104): [236..237]
 a45(r83): [201..202]
 a46(r103): [203..204]
 a47(r101): [273..274]
 a48(r102): [275..276]
Compressing live ranges: from 281 to 92 - 32%
Ranges after the compression:
 a0(r100): [0..1]
 a1(r99): [2..3]
 a2(r129): [8..9]
 a3(r130): [10..11]
 a4(r82): [4..91]
 a5(r128): [12..13]
 a6(r127): [22..23]
 a7(r98): [24..25]
 a8(r126): [26..27]
 a9(r97): [14..15]
 a10(r96): [14..17]
 a11(r125): [16..17]
 a12(r95): [18..19]
 a13(r124): [20..21]
 a14(r94): [4..5]
 a15(r123): [6..7]
 a16(r121): [34..35]
 a17(r122): [36..37]
 a18(r120): [38..39]
 a19(r119): [28..29]
 a20(r93): [30..31]
 a21(r118): [32..33]
 a22(r116): [44..45]
 a23(r117): [46..47]
 a24(r115): [48..49]
 a25(r114): [56..57]
 a26(r92): [58..59]
 a27(r113): [60..61]
 a28(r91): [50..51]
 a29(r90): [52..53]
 a30(r112): [54..55]
 a31(r89): [40..41]
 a32(r111): [42..43]
 a33(r109): [66..67]
 a34(r110): [68..69]
 a35(r108): [70..71]
 a36(r107): [82..83]
 a37(r88): [84..85]
 a38(r106): [86..87]
 a39(r87): [72..73]
 a40(r85): [72..77]
 a41(r86): [74..75]
 a42(r105): [76..77]
 a43(r84): [78..79]
 a44(r104): [80..81]
 a45(r83): [62..63]
 a46(r103): [64..65]
 a47(r101): [88..89]
 a48(r102): [90..91]
  pref0:a6(r127)<-hr0@1500
  pref1:a19(r119)<-hr0@1500
  pref2:a25(r114)<-hr0@1500
  pref3:a36(r107)<-hr0@1500
  pref4:a0(r100)<-hr0@1500
  regions=1, blocks=31, points=92
    allocnos=49 (big 0), copies=0, conflicts=0, ranges=49
Disposition:
    4:r82  l0     3   45:r83  l0     0   43:r84  l0     0   40:r85  l0     1
   41:r86  l0     0   39:r87  l0     0   37:r88  l0     0   31:r89  l0     0
   29:r90  l0     0   28:r91  l0     0   26:r92  l0     0   20:r93  l0     0
   14:r94  l0     0   12:r95  l0     0   10:r96  l0     0    9:r97  l0     1
    7:r98  l0     0    1:r99  l0     0    0:r100 l0     0   47:r101 l0     0
   48:r102 l0     0   46:r103 l0     0   44:r104 l0     0   42:r105 l0     0
   38:r106 l0     0   36:r107 l0     0   35:r108 l0     0   33:r109 l0     0
   34:r110 l0     0   32:r111 l0     0   30:r112 l0     0   27:r113 l0     0
   25:r114 l0     0   24:r115 l0     0   22:r116 l0     0   23:r117 l0     0
   21:r118 l0     0   19:r119 l0     0   18:r120 l0     0   16:r121 l0     0
   17:r122 l0     0   15:r123 l0     0   13:r124 l0     0   11:r125 l0     1
    8:r126 l0     0    6:r127 l0     0    5:r128 l0     0    2:r129 l0     0
    3:r130 l0     0
+++Costs: overall -5000, reg -5000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_kill

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,6u} r1={5d} r2={5d} r6={1d,30u} r7={17d,54u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,38u,1e} r17={31d,17u} r18={4d} r19={1d,71u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d,6u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} 
;;    total ref usage 647{376d,270u,1e} in 126{122 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 202 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 202 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 202 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 102)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":178:26 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 101)
        (plus:SI (reg:SI 102)
            (const_int 256 [0x100]))) "kernel/exit.c":178:26 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 102)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])
        (reg/f:SI 101)) "kernel/exit.c":178:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(insn 8 7 9 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 retval+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":179:14 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [5 pid+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":181:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "kernel/exit.c":181:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 54)
(note 11 10 185 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 185 11 186 3 (set (pc)
        (label_ref 43)) "kernel/exit.c":181:21 807 {jump}
     (nil)
 -> 43)
(barrier 186 185 46)
(code_label 46 186 14 4 68 (nil) [1 uses])
(note 14 46 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:SI 103)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])) "kernel/exit.c":182:13 75 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (reg/f:SI 83 [ _1 ])
        (mem/f:SI (reg/f:SI 103) [13 *p_48+0 S4 A32])) "kernel/exit.c":182:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (nil)))
(insn 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 83 [ _1 ])
            (const_int 0 [0]))) "kernel/exit.c":182:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (nil)))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "kernel/exit.c":182:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 43)
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])) "kernel/exit.c":182:20 75 {*movsi_internal}
     (nil))
(insn 21 20 22 5 (set (reg/f:SI 84 [ _2 ])
        (mem/f:SI (reg/f:SI 104) [13 *p_48+0 S4 A32])) "kernel/exit.c":182:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (nil)))
(insn 22 21 23 5 (set (reg:SI 85 [ _3 ])
        (mem:SI (plus:SI (reg/f:SI 84 [ _2 ])
                (const_int 564 [0x234])) [2 _2->pgrp+0 S4 A32])) "kernel/exit.c":182:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
        (nil)))
(insn 23 22 24 5 (set (reg/f:SI 105)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7d3b7892e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":182:40 75 {*movsi_internal}
     (nil))
(insn 24 23 25 5 (set (reg/f:SI 86 [ current.36_4 ])
        (mem/f/c:SI (reg/f:SI 105) [13 current+0 S4 A32])) "kernel/exit.c":182:40 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (nil)))
(insn 25 24 26 5 (set (reg:SI 87 [ _5 ])
        (mem:SI (plus:SI (reg/f:SI 86 [ current.36_4 ])
                (const_int 556 [0x22c])) [2 current.36_4->pid+0 S4 A32])) "kernel/exit.c":182:40 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ current.36_4 ])
        (nil)))
(insn 26 25 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ _3 ])
            (reg:SI 87 [ _5 ]))) "kernel/exit.c":182:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
            (nil))))
(jump_insn 27 26 28 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "kernel/exit.c":182:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 43)
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])) "kernel/exit.c":183:24 75 {*movsi_internal}
     (nil))
(insn 30 29 31 6 (set (reg/f:SI 88 [ _6 ])
        (mem/f:SI (reg/f:SI 106) [13 *p_48+0 S4 A32])) "kernel/exit.c":183:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 31 30 32 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (const_int 1 [0x1])) "kernel/exit.c":183:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 32 31 33 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg/f:SI 88 [ _6 ])) "kernel/exit.c":183:24 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 88 [ _6 ])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 33 32 34 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [5 sig+0 S4 A32])) "kernel/exit.c":183:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(call_insn 34 33 35 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("send_sig") [flags 0x3]  <function_decl 0x7d3b78952700 send_sig>) [0 send_sig S1 A8])
            (const_int 12 [0xc]))) "kernel/exit.c":183:24 823 {*call_value}
     (nil)
    (nil))
(insn 35 34 36 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":183:24 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 36 35 37 6 (set (reg:SI 107)
        (reg:SI 0 ax)) "kernel/exit.c":183:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 37 36 38 6 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 err+0 S4 A32])
        (reg:SI 107)) "kernel/exit.c":183:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 107)
        (nil)))
(insn 38 37 39 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [5 err+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":183:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 39 38 40 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "kernel/exit.c":183:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 43)
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg:SI 108)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 err+0 S4 A32])) "kernel/exit.c":184:24 75 {*movsi_internal}
     (nil))
(insn 42 41 43 7 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 retval+0 S4 A32])
        (reg:SI 108)) "kernel/exit.c":184:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108)
        (nil)))
(code_label 43 42 44 8 67 (nil) [4 uses])
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 47 8 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":181:26 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 47 45 48 8 (set (reg:SI 110)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":181:26 75 {*movsi_internal}
     (nil))
(insn 48 47 49 8 (set (reg:SI 109)
        (reg:SI 110)) "kernel/exit.c":181:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 110)
        (expr_list:REG_EQUAL (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
            (nil))))
(insn 49 48 50 8 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])
            (reg:SI 109))) "kernel/exit.c":181:26 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 109)
        (nil)))
(jump_insn 50 49 187 8 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "kernel/exit.c":181:26 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 46)
(note 187 50 188 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 188 187 189 9 (set (pc)
        (label_ref 173)) 807 {jump}
     (nil)
 -> 173)
(barrier 189 188 54)
(code_label 54 189 55 10 66 (nil) [1 uses])
(note 55 54 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 55 59 10 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (reg/f:SI 16 argp) [5 pid+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":185:15 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 59 58 60 10 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) "kernel/exit.c":185:15 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 100)
(note 60 59 190 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 190 60 191 11 (set (pc)
        (label_ref 89)) "kernel/exit.c":185:31 807 {jump}
     (nil)
 -> 89)
(barrier 191 190 92)
(code_label 92 191 63 12 72 (nil) [1 uses])
(note 63 92 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 12 (set (reg/f:SI 111)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])) "kernel/exit.c":186:13 75 {*movsi_internal}
     (nil))
(insn 65 64 66 12 (set (reg/f:SI 89 [ _7 ])
        (mem/f:SI (reg/f:SI 111) [13 *p_44+0 S4 A32])) "kernel/exit.c":186:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
(insn 66 65 67 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 89 [ _7 ])
            (const_int 0 [0]))) "kernel/exit.c":186:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 89 [ _7 ])
        (nil)))
(jump_insn 67 66 68 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "kernel/exit.c":186:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 89)
(note 68 67 69 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 13 (set (reg/f:SI 112)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])) "kernel/exit.c":186:20 75 {*movsi_internal}
     (nil))
(insn 70 69 71 13 (set (reg/f:SI 90 [ _8 ])
        (mem/f:SI (reg/f:SI 112) [13 *p_44+0 S4 A32])) "kernel/exit.c":186:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 71 70 72 13 (set (reg:SI 91 [ _9 ])
        (mem:SI (plus:SI (reg/f:SI 90 [ _8 ])
                (const_int 556 [0x22c])) [2 _8->pid+0 S4 A32])) "kernel/exit.c":186:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90 [ _8 ])
        (nil)))
(insn 72 71 73 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [5 pid+0 S4 A32])
            (reg:SI 91 [ _9 ]))) "kernel/exit.c":186:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (nil)))
(jump_insn 73 72 74 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "kernel/exit.c":186:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 89)
(note 74 73 75 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 14 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])) "kernel/exit.c":187:24 75 {*movsi_internal}
     (nil))
(insn 76 75 77 14 (set (reg/f:SI 92 [ _10 ])
        (mem/f:SI (reg/f:SI 113) [13 *p_44+0 S4 A32])) "kernel/exit.c":187:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (nil)))
(insn 77 76 78 14 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (const_int 0 [0])) "kernel/exit.c":187:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 78 77 79 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg/f:SI 92 [ _10 ])) "kernel/exit.c":187:24 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 92 [ _10 ])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 79 78 80 14 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [5 sig+0 S4 A32])) "kernel/exit.c":187:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(call_insn 80 79 81 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("send_sig") [flags 0x3]  <function_decl 0x7d3b78952700 send_sig>) [0 send_sig S1 A8])
            (const_int 12 [0xc]))) "kernel/exit.c":187:24 823 {*call_value}
     (nil)
    (nil))
(insn 81 80 82 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":187:24 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 82 81 83 14 (set (reg:SI 114)
        (reg:SI 0 ax)) "kernel/exit.c":187:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 83 82 84 14 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 err+0 S4 A32])
        (reg:SI 114)) "kernel/exit.c":187:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 114)
        (nil)))
(insn 84 83 85 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [5 err+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":187:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 85 84 86 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "kernel/exit.c":187:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 89)
(note 86 85 87 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 15 (set (reg:SI 115)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 err+0 S4 A32])) "kernel/exit.c":188:24 75 {*movsi_internal}
     (nil))
(insn 88 87 89 15 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 retval+0 S4 A32])
        (reg:SI 115)) "kernel/exit.c":188:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
(code_label 89 88 90 16 71 (nil) [4 uses])
(note 90 89 91 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 93 16 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":185:36 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 93 91 94 16 (set (reg:SI 117)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":185:36 75 {*movsi_internal}
     (nil))
(insn 94 93 95 16 (set (reg:SI 116)
        (reg:SI 117)) "kernel/exit.c":185:36 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 117)
        (expr_list:REG_EQUAL (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
            (nil))))
(insn 95 94 96 16 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])
            (reg:SI 116))) "kernel/exit.c":185:36 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 116)
        (nil)))
(jump_insn 96 95 192 16 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) "kernel/exit.c":185:36 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 92)
(note 192 96 193 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(jump_insn 193 192 194 17 (set (pc)
        (label_ref 173)) 807 {jump}
     (nil)
 -> 173)
(barrier 194 193 100)
(code_label 100 194 101 18 70 (nil) [1 uses])
(note 101 100 102 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [5 pid+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) "kernel/exit.c":189:15 11 {*cmpsi_1}
     (nil))
(jump_insn 103 102 104 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 133)
            (pc))) "kernel/exit.c":189:15 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 133)
(note 104 103 195 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(jump_insn 195 104 196 19 (set (pc)
        (label_ref 122)) "kernel/exit.c":189:33 807 {jump}
     (nil)
 -> 122)
(barrier 196 195 125)
(code_label 125 196 107 20 75 (nil) [1 uses])
(note 107 125 108 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 20 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])) "kernel/exit.c":190:20 75 {*movsi_internal}
     (nil))
(insn 109 108 110 20 (set (reg/f:SI 93 [ _11 ])
        (mem/f:SI (reg/f:SI 118) [13 *p_40+0 S4 A32])) "kernel/exit.c":190:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 110 109 111 20 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (const_int 0 [0])) "kernel/exit.c":190:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 111 110 112 20 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg/f:SI 93 [ _11 ])) "kernel/exit.c":190:20 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 93 [ _11 ])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 112 111 113 20 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [5 sig+0 S4 A32])) "kernel/exit.c":190:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(call_insn 113 112 114 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("send_sig") [flags 0x3]  <function_decl 0x7d3b78952700 send_sig>) [0 send_sig S1 A8])
            (const_int 12 [0xc]))) "kernel/exit.c":190:20 823 {*call_value}
     (nil)
    (nil))
(insn 114 113 115 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":190:20 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 115 114 116 20 (set (reg:SI 119)
        (reg:SI 0 ax)) "kernel/exit.c":190:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 116 115 117 20 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 err+0 S4 A32])
        (reg:SI 119)) "kernel/exit.c":190:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 119)
        (nil)))
(insn 117 116 118 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [5 err+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":190:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 118 117 119 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) "kernel/exit.c":190:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 122)
(note 119 118 120 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 21 (set (reg:SI 120)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 err+0 S4 A32])) "kernel/exit.c":191:20 75 {*movsi_internal}
     (nil))
(insn 121 120 122 21 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 retval+0 S4 A32])
        (reg:SI 120)) "kernel/exit.c":191:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 120)
        (nil)))
(code_label 122 121 123 22 74 (nil) [2 uses])
(note 123 122 124 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 126 22 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":189:38 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 126 124 127 22 (set (reg:SI 122)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":189:38 75 {*movsi_internal}
     (nil))
(insn 127 126 128 22 (set (reg:SI 121)
        (reg:SI 122)) "kernel/exit.c":189:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 122)
        (expr_list:REG_EQUAL (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
            (nil))))
(insn 128 127 129 22 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])
            (reg:SI 121))) "kernel/exit.c":189:38 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 121)
        (nil)))
(jump_insn 129 128 197 22 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) "kernel/exit.c":189:38 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 125)
(note 197 129 198 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 198 197 199 23 (set (pc)
        (label_ref 173)) 807 {jump}
     (nil)
 -> 173)
(barrier 199 198 133)
(code_label 133 199 134 24 73 (nil) [1 uses])
(note 134 133 200 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 200 134 201 24 (set (pc)
        (label_ref 165)) "kernel/exit.c":192:18 807 {jump}
     (nil)
 -> 165)
(barrier 201 200 168)
(code_label 168 201 137 25 77 (nil) [1 uses])
(note 137 168 138 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 25 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])) "kernel/exit.c":193:13 75 {*movsi_internal}
     (nil))
(insn 139 138 140 25 (set (reg/f:SI 94 [ _12 ])
        (mem/f:SI (reg/f:SI 123) [13 *p_35+0 S4 A32])) "kernel/exit.c":193:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (nil)))
(insn 140 139 141 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 94 [ _12 ])
            (const_int 0 [0]))) "kernel/exit.c":193:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 94 [ _12 ])
        (nil)))
(jump_insn 141 140 142 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) "kernel/exit.c":193:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 165)
(note 142 141 143 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 26 (set (reg/f:SI 124)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])) "kernel/exit.c":193:20 75 {*movsi_internal}
     (nil))
(insn 144 143 145 26 (set (reg/f:SI 95 [ _13 ])
        (mem/f:SI (reg/f:SI 124) [13 *p_35+0 S4 A32])) "kernel/exit.c":193:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 124)
        (nil)))
(insn 145 144 146 26 (set (reg:SI 96 [ _14 ])
        (mem:SI (plus:SI (reg/f:SI 95 [ _13 ])
                (const_int 564 [0x234])) [2 _13->pgrp+0 S4 A32])) "kernel/exit.c":193:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95 [ _13 ])
        (nil)))
(insn 146 145 147 26 (set (reg:SI 125)
        (mem/c:SI (reg/f:SI 16 argp) [5 pid+0 S4 A32])) "kernel/exit.c":193:33 75 {*movsi_internal}
     (nil))
(insn 147 146 148 26 (parallel [
            (set (reg:SI 97 [ _15 ])
                (neg:SI (reg:SI 125)))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":193:33 575 {*negsi_1}
     (expr_list:REG_DEAD (reg:SI 125)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (neg:SI (mem/c:SI (reg/f:SI 16 argp) [5 pid+0 S4 A32]))
                (nil)))))
(insn 148 147 149 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ _14 ])
            (reg:SI 97 [ _15 ]))) "kernel/exit.c":193:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 97 [ _15 ])
        (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
            (nil))))
(jump_insn 149 148 150 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) "kernel/exit.c":193:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 165)
(note 150 149 151 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 27 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])) "kernel/exit.c":194:24 75 {*movsi_internal}
     (nil))
(insn 152 151 153 27 (set (reg/f:SI 98 [ _16 ])
        (mem/f:SI (reg/f:SI 126) [13 *p_35+0 S4 A32])) "kernel/exit.c":194:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 126)
        (nil)))
(insn 153 152 154 27 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (const_int 0 [0])) "kernel/exit.c":194:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 154 153 155 27 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg/f:SI 98 [ _16 ])) "kernel/exit.c":194:24 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 98 [ _16 ])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 155 154 156 27 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [5 sig+0 S4 A32])) "kernel/exit.c":194:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(call_insn 156 155 157 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("send_sig") [flags 0x3]  <function_decl 0x7d3b78952700 send_sig>) [0 send_sig S1 A8])
            (const_int 12 [0xc]))) "kernel/exit.c":194:24 823 {*call_value}
     (nil)
    (nil))
(insn 157 156 158 27 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":194:24 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 158 157 159 27 (set (reg:SI 127)
        (reg:SI 0 ax)) "kernel/exit.c":194:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 159 158 160 27 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 err+0 S4 A32])
        (reg:SI 127)) "kernel/exit.c":194:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 127)
        (nil)))
(insn 160 159 161 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [5 err+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":194:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 161 160 162 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) "kernel/exit.c":194:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 165)
(note 162 161 163 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 28 (set (reg:SI 128)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 err+0 S4 A32])) "kernel/exit.c":195:24 75 {*movsi_internal}
     (nil))
(insn 164 163 165 28 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 retval+0 S4 A32])
        (reg:SI 128)) "kernel/exit.c":195:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 128)
        (nil)))
(code_label 165 164 166 29 76 (nil) [4 uses])
(note 166 165 167 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 169 29 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":192:23 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 169 167 170 29 (set (reg:SI 130)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":192:23 75 {*movsi_internal}
     (nil))
(insn 170 169 171 29 (set (reg:SI 129)
        (reg:SI 130)) "kernel/exit.c":192:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 130)
        (expr_list:REG_EQUAL (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x7d3b7892e1b0 task>)
            (nil))))
(insn 171 170 172 29 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [21 p+0 S4 A32])
            (reg:SI 129))) "kernel/exit.c":192:23 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 129)
        (nil)))
(jump_insn 172 171 173 29 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) "kernel/exit.c":192:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 168)
(code_label 173 172 174 30 69 (nil) [3 uses])
(note 174 173 175 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 178 30 (set (reg:SI 99 [ _52 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 retval+0 S4 A32])) "kernel/exit.c":196:12 75 {*movsi_internal}
     (nil))
(insn 178 175 182 30 (set (reg:SI 100 [ <retval> ])
        (reg:SI 99 [ _52 ])) "kernel/exit.c":196:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99 [ _52 ])
        (nil)))
(insn 182 178 183 30 (set (reg/i:SI 0 ax)
        (reg:SI 100 [ <retval> ])) "kernel/exit.c":197:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100 [ <retval> ])
        (nil)))
(insn 183 182 0 30 (use (reg/i:SI 0 ax)) "kernel/exit.c":197:1 -1
     (nil))
