
;; Function _get_base (_get_base, funcdef_no=0, decl_uid=1278, cgraph_uid=1, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 6:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            0 Early clobber: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 12:  (0) =&d  (1) m  (2) m  (3) m
      Creating newreg=94 from oldreg=91, assigning class DREG to r94
   12: {r94:SI=asm_operands;clobber flags:CC;}
      REG_DEAD r85:SI
      REG_DEAD r84:SI
      REG_DEAD r83:SI
      REG_UNUSED flags:CC
    Inserting insn reload after:
   25: r91:SI=r94:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 21: point = 0, n_alt = -1
   Insn 20: point = 0, n_alt = -2
   Insn 16: point = 1, n_alt = -2
   Insn 13: point = 3, n_alt = 0
   Insn 11: point = 4, n_alt = 1
   Insn 25: point = 5, n_alt = -2
	Hard reg 0 is preferable by r94 with profit 1000
   Insn 12: point = 7, n_alt = 0
   Insn 10: point = 8, n_alt = 0
   Insn 9: point = 10, n_alt = 0
   Insn 8: point = 11, n_alt = 0
   Insn 7: point = 13, n_alt = 0
   Insn 6: point = 14, n_alt = 0
   Insn 5: point = 16, n_alt = 0
   Insn 23: point = 17, n_alt = 0
 r82: [17..17]
 r83: [7..14]
 r84: [7..11]
 r85: [7..8]
 r86: [2..3]
 r87: [0..1]
 r88: [15..16]
 r89: [12..13]
 r90: [9..10]
 r91: [4..5]
 r94: [6..7]
Compressing live ranges: from 18 to 16 - 88%
Ranges after the compression:
 r82: [15..15]
 r83: [7..12]
 r84: [7..10]
 r85: [7..8]
 r86: [2..3]
 r87: [0..1]
 r88: [13..14]
 r89: [11..12]
 r90: [9..10]
 r91: [4..5]
 r94: [6..7]

********** Assignment #1: **********

	 Assigning to 94 (cl=DREG, orig=91, freq=2000, tfirst=94, tfreq=2000)...
	 Trying 1: spill 84(freq=2000)	 Now best 1(cost=0, bad_spills=0, insn_pseudos=1)

      Spill r84(hr=1, freq=2000) for r94
	   Assign 1 to reload r94 (freq=2000)
  Reassigning non-reload pseudos
	   Assign 3 to r84 (freq=2000)

********** Undoing inheritance #1: **********


********** Pseudos coalescing #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =&d  (1) m  (2) m  (3) m
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 8:  (0) r  (1) r  (2) le {*addsi_1}
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=24)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
changing reg in insn 23
changing reg in insn 6
changing reg in insn 12
changing reg in insn 8
changing reg in insn 12
changing reg in insn 10
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 16
changing reg in insn 20
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
deleting insn with uid = 16.
deleting insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns


_get_base

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;;  ref usage 	r0={6d,5u} r1={3d,2u} r2={3d,2u} r3={1d,1u} r7={1d,7u} r16={3e} r17={5d} 
;;    total ref usage 39{19d,17u,3e} in 12{12 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 23 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 23 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 23 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [88])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [18 addr+0 S4 A32])) "include/linux/sched.h":180:28 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
                (plus:SI (reg/f:SI 0 ax [88])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":180:28 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [18 addr+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 7 6 8 2 (set (reg/f:SI 1 dx [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [18 addr+0 S4 A32])) "include/linux/sched.h":180:48 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 3 bx [orig:84 _2 ] [84])
                (plus:SI (reg/f:SI 1 dx [89])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":180:48 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [18 addr+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 9 8 10 2 (set (reg/f:SI 2 cx [90])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [18 addr+0 S4 A32])) "include/linux/sched.h":180:68 75 {*movsi_internal}
     (nil))
(insn 10 9 12 2 (parallel [
            (set (reg/f:SI 2 cx [orig:85 _3 ] [85])
                (plus:SI (reg/f:SI 2 cx [90])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":180:68 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [18 addr+0 S4 A32])
            (const_int 7 [0x7]))
        (nil)))
(insn 12 10 25 2 (parallel [
            (set (reg:SI 1 dx [orig:91 __base ] [91])
                (asm_operands:SI ("movb %3, %%dh
	movb %2, %%dl
	shll $16, %%edx
	movw %1, %%dx") ("=&d") 0 [
                        (mem:QI (reg/f:SI 0 ax [orig:83 _1 ] [83]) [0 *_1+0 S1 A8])
                        (mem:QI (reg/f:SI 3 bx [orig:84 _2 ] [84]) [0 *_2+0 S1 A8])
                        (mem:QI (reg/f:SI 2 cx [orig:85 _3 ] [85]) [0 *_3+0 S1 A8])
                    ]
                     [
                        (asm_input:QI ("m") include/linux/sched.h:176)
                        (asm_input:QI ("m") include/linux/sched.h:176)
                        (asm_input:QI ("m") include/linux/sched.h:176)
                    ]
                     [] include/linux/sched.h:176))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":176:5 -1
     (nil))
(insn 25 12 11 2 (set (reg:SI 0 ax [orig:91 __base ] [91])
        (reg:SI 1 dx [orig:91 __base ] [91])) "include/linux/sched.h":176:5 75 {*movsi_internal}
     (nil))
(insn 11 25 13 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 __base+0 S4 A32])
        (reg:SI 0 ax [orig:91 __base ] [91])) "include/linux/sched.h":176:5 75 {*movsi_internal}
     (nil))
(insn 13 11 21 2 (set (reg:SI 0 ax [orig:86 _7 ] [86])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 __base+0 S4 A32])) "include/linux/sched.h":181:12 75 {*movsi_internal}
     (nil))
(insn 21 13 24 2 (use (reg/i:SI 0 ax)) "include/linux/sched.h":182:1 -1
     (nil))
(note 24 21 0 NOTE_INSN_DELETED)

;; Function put_fs_long (put_fs_long, funcdef_no=3, decl_uid=1395, cgraph_uid=4, symbol_order=3)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) r  (1) m
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 11: point = 0, n_alt = -1
  BB 2
   Insn 7: point = 0, n_alt = 0
   Insn 6: point = 1, n_alt = 0
   Insn 5: point = 2, n_alt = 0
   Insn 12: point = 3, n_alt = 0
 r82: [3..3]
 r83: [0..2]
 r84: [0..1]
Compressing live ranges: from 4 to 3 - 75%
Ranges after the compression:
 r82: [2..2]
 r83: [0..1]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 12
changing reg in insn 5
changing reg in insn 7
changing reg in insn 6
changing reg in insn 7
starting the processing of deferred insns
ending the processing of deferred insns


put_fs_long

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 17 [flags]
;;  ref usage 	r0={3d,1u} r1={2d,1u} r2={1d} r7={1d,5u} r17={2d} 
;;    total ref usage 16{9d,7u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 12 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 12 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 12 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 ax [83])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 val+0 S4 A32])) "include/asm/segment.h":19:5 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 1 dx [84])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [19 addr+0 S4 A32])) "include/asm/segment.h":19:5 75 {*movsi_internal}
     (nil))
(insn 7 6 10 2 (parallel [
            (asm_operands/v ("movl %0, %%fs:%1") ("") 0 [
                    (reg:SI 0 ax [83])
                    (mem:SI (reg/f:SI 1 dx [84]) [2 *addr_3(D)+0 S4 A32])
                ]
                 [
                    (asm_input:SI ("r") include/asm/segment.h:19)
                    (asm_input:SI ("m") include/asm/segment.h:19)
                ]
                 [] include/asm/segment.h:19)
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":19:5 -1
     (nil))
(note 10 7 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 13 3 (const_int 0 [0]) "include/asm/segment.h":20:1 843 {nop}
     (nil))
(note 13 11 0 NOTE_INSN_DELETED)

;; Function release (release, funcdef_no=8, decl_uid=1416, cgraph_uid=9, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 26:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 30:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 37:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 46:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 51:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7 8
EBB 10
EBB 9

********** Pseudo live ranges #1: **********

  BB 9
  BB 8
   Insn 60: point = 0, n_alt = -1
   Insn 51: point = 0, n_alt = 0
   Insn 50: point = 0, n_alt = 0
   Insn 49: point = 0, n_alt = -2
   Insn 48: point = 1, n_alt = 0
   Insn 47: point = 2, n_alt = 0
   Insn 46: point = 3, n_alt = 0
  BB 10
   Insn 64: point = 4, n_alt = -1
  BB 5
   Insn 58: point = 4, n_alt = -1
   Insn 32: point = 4, n_alt = 0
   Insn 31: point = 4, n_alt = -2
   Insn 30: point = 5, n_alt = 0
   Insn 29: point = 5, n_alt = 0
   Insn 28: point = 5, n_alt = -2
   Insn 27: point = 5, n_alt = 0
   Insn 26: point = 6, n_alt = 0
   Insn 25: point = 6, n_alt = 0
   Insn 24: point = 7, n_alt = 1
   Insn 23: point = 8, n_alt = 0
   Insn 22: point = 9, n_alt = 0
  BB 4
   Insn 20: point = 11, n_alt = -1
   Insn 19: point = 11, n_alt = 0
   Insn 18: point = 12, n_alt = 0
   Insn 17: point = 14, n_alt = 0
   Insn 16: point = 15, n_alt = 0
  BB 7
   Insn 44: point = 17, n_alt = -1
   Insn 43: point = 17, n_alt = 0
  BB 3
   Insn 56: point = 18, n_alt = -1
   Insn 12: point = 18, n_alt = 1
  BB 2
   Insn 6: point = 19, n_alt = -1
   Insn 5: point = 19, n_alt = 1
   Insn 65: point = 19, n_alt = 0
  BB 6
   Insn 37: point = 20, n_alt = 0
 r82: [0..20]
 r83: [11..12]
 r84: [5..6]
 r85: [13..15]
 r86: [13..14]
 r87: [7..9]
 r88: [7..8]
 r89: [1..2]
Compressing live ranges: from 21 to 10 - 47%
Ranges after the compression:
 r82: [0..9]
 r83: [6..7]
 r84: [2..3]
 r85: [8..9]
 r86: [8..9]
 r87: [4..5]
 r88: [4..5]
 r89: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 65
changing reg in insn 49
changing reg in insn 47
changing reg in insn 31
changing reg in insn 28
changing reg in insn 22
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 25
changing reg in insn 27
changing reg in insn 16
changing reg in insn 18
changing reg in insn 17
changing reg in insn 18
changing reg in insn 22
changing reg in insn 24
changing reg in insn 23
changing reg in insn 24
changing reg in insn 47
changing reg in insn 48
deleting insn with uid = 28.
deleting insn with uid = 31.
deleting insn with uid = 49.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 50.


release

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,5u} r1={6d,2u} r2={4d} r3={1d,6u} r7={7d,32u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={12d,3u} r18={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 282{234d,48u,0e} in 30{27 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 65 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 65 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 65 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [13 p+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":25:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 63)
            (pc))) "kernel/exit.c":25:8 806 {*jcc}
     (nil)
 -> 63)
(note 11 6 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 56 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])
        (const_int 1 [0x1])) "kernel/exit.c":27:12 75 {*movsi_internal}
     (nil))
(jump_insn 56 12 57 3 (set (pc)
        (label_ref 38)) "kernel/exit.c":27:5 807 {jump}
     (nil)
 -> 38)
(barrier 57 56 40)
(code_label 40 57 15 4 9 (nil) [1 uses])
(note 15 40 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg/f:SI 0 ax [85])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":28:17 75 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:SI 1 dx [86])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])) "kernel/exit.c":28:17 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [86])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [85])) [13 task[i_3]+0 S4 A32])) "kernel/exit.c":28:17 75 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [13 p+0 S4 A32])
            (reg/f:SI 0 ax [orig:83 _1 ] [83]))) "kernel/exit.c":28:12 11 {*cmpsi_1}
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "kernel/exit.c":28:12 806 {*jcc}
     (nil)
 -> 35)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:SI 0 ax [87])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":29:21 75 {*movsi_internal}
     (nil))
(insn 23 22 24 5 (set (reg:SI 1 dx [88])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])) "kernel/exit.c":29:21 75 {*movsi_internal}
     (nil))
(insn 24 23 25 5 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [88])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [87])) [13 task[i_3]+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":29:21 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg:SI 0 ax [orig:84 p.0_2 ] [84])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [13 p+0 S4 A32])) "kernel/exit.c":30:13 75 {*movsi_internal}
     (nil))
(insn 26 25 27 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":30:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 27 26 29 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 0 ax [orig:84 p.0_2 ] [84])) "kernel/exit.c":30:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 29 27 30 5 (call (mem:QI (symbol_ref:SI ("free_page") [flags 0x41]  <function_decl 0x76c2f074d300 free_page>) [0 free_page S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":30:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 30 29 32 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":30:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(call_insn 32 30 58 5 (call (mem:QI (symbol_ref:SI ("schedule") [flags 0x41]  <function_decl 0x76c2f0715c00 schedule>) [0 schedule S1 A8])
        (const_int 0 [0])) "kernel/exit.c":31:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(jump_insn 58 32 59 5 (set (pc)
        (label_ref 54)) "kernel/exit.c":32:13 807 {jump}
     (nil)
 -> 54)
(barrier 59 58 35)
(code_label 35 59 36 6 8 (nil) [1 uses])
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [5 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [5 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":27:32 209 {*addsi_1}
     (nil))
(code_label 38 37 39 7 7 (nil) [1 uses])
(note 39 38 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 39 44 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [5 i+0 S4 A32])
            (const_int 63 [0x3f]))) "kernel/exit.c":27:19 11 {*cmpsi_1}
     (nil))
(jump_insn 44 43 45 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "kernel/exit.c":27:19 806 {*jcc}
     (nil)
 -> 40)
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":34:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 47 46 48 8 (set (reg/f:SI 0 ax [89])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x76c2f07916c0 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "kernel/exit.c":34:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x76c2f07916c0 *.LC0>)
        (nil)))
(insn 48 47 50 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 0 ax [89])) "kernel/exit.c":34:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 50 48 51 8 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x76c2f0738700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":34:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 51 50 60 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":34:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 60 51 61 8 (set (pc)
        (label_ref 54)) 807 {jump}
     (nil)
 -> 54)
(barrier 61 60 63)
(code_label 63 61 62 10 10 (nil) [1 uses])
(note 62 63 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 62 54 10 (const_int 0 [0]) "kernel/exit.c":26:9 843 {nop}
     (nil))
(code_label 54 64 55 9 4 (nil) [2 uses])
(note 55 54 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 66 55 0 NOTE_INSN_DELETED)

;; Function send_sig (send_sig, funcdef_no=9, decl_uid=1426, cgraph_uid=10, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 29:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 31:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 37:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 45:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
            2 Small class reload: reject+=3
          alt=0,overall=15,losers=2,rld_nregs=2
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 47:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
      Creating newreg=103 from oldreg=99, assigning class GENERAL_REGS to r103
      Creating newreg=104, assigning class CREG to r104
   47: {r103:SI=r103:SI<<r104:QI;clobber flags:CC;}
      REG_DEAD r99:SI
      REG_DEAD r89:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   72: r103:SI=r99:SI
   74: r104:QI=r89:SI#0
    Inserting insn reload after:
   73: r90:SI=r103:SI

            0 Non pseudo reload: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =Q  (1) Q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 0 in insn 48:  (0) =rm  (1) %0  (2) re {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5
EBB 6 7 8
EBB 9
EBB 10
EBB 11

********** Pseudo live ranges #1: **********

  BB 11
   Insn 64: point = 0, n_alt = -1
   Insn 63: point = 0, n_alt = -2
   Insn 59: point = 1, n_alt = -2
  BB 9
   Insn 68: point = 4, n_alt = -1
   Insn 51: point = 4, n_alt = 0
   Insn 50: point = 5, n_alt = 1
   Insn 49: point = 6, n_alt = 0
   Insn 48: point = 7, n_alt = 0
   Insn 73: point = 9, n_alt = -2
	Hard reg 0 is preferable by r103 with profit 1000
   Insn 47: point = 11, n_alt = 0
   Insn 74: point = 13, n_alt = 0
   Insn 72: point = 15, n_alt = -2
	Hard reg 0 is preferable by r103 with profit 1000
	Hard reg 3 is preferable by r103 with profit 1000
   Insn 46: point = 17, n_alt = 0
   Insn 45: point = 18, n_alt = 0
   Insn 44: point = 20, n_alt = 0
   Insn 43: point = 21, n_alt = 0
   Insn 42: point = 23, n_alt = 0
  BB 10
   Insn 56: point = 24, n_alt = 0
  BB 8
   Insn 39: point = 25, n_alt = -1
   Insn 38: point = 25, n_alt = 0
   Insn 37: point = 26, n_alt = 2
   Insn 36: point = 28, n_alt = 0
   Insn 35: point = 30, n_alt = 0
  BB 7
   Insn 33: point = 33, n_alt = -1
   Insn 32: point = 33, n_alt = 0
   Insn 31: point = 34, n_alt = 2
   Insn 30: point = 36, n_alt = 0
   Insn 29: point = 37, n_alt = 2
   Insn 28: point = 39, n_alt = 0
   Insn 27: point = 41, n_alt = 0
  BB 6
   Insn 25: point = 43, n_alt = -1
   Insn 24: point = 43, n_alt = 1
  BB 5
   Insn 66: point = 44, n_alt = -1
   Insn 19: point = 44, n_alt = 0
  BB 4
   Insn 16: point = 45, n_alt = -1
   Insn 15: point = 45, n_alt = 0
  BB 3
   Insn 11: point = 46, n_alt = -1
   Insn 10: point = 46, n_alt = 1
  BB 2
   Insn 6: point = 47, n_alt = -1
   Insn 5: point = 47, n_alt = 1
   Insn 70: point = 47, n_alt = 0
 r82: [45..47] [31..43]
 r83: [38..39]
 r84: [33..37]
 r85: [33..34]
 r86: [27..28]
 r87: [25..26]
 r88: [8..21]
 r89: [14..18]
 r90: [8..9]
 r91: [5..7]
 r92: [44..44] [24..24] [2..4]
 r93: [0..1]
 r94: [40..41]
 r95: [35..36]
 r96: [29..30]
 r97: [22..23]
 r98: [19..20]
 r99: [16..17]
 r100: [5..6]
 r103: [10..15]
 r104: [12..13]
Compressing live ranges: from 48 to 36 - 75%
Ranges after the compression:
 r82: [34..35] [25..32]
 r83: [29..30]
 r84: [25..28]
 r85: [25..26]
 r86: [21..22]
 r87: [19..20]
 r88: [6..15]
 r89: [10..13]
 r90: [6..7]
 r91: [4..5]
 r92: [33..33] [18..18] [2..3]
 r93: [0..1]
 r94: [31..32]
 r95: [27..28]
 r96: [23..24]
 r97: [16..17]
 r98: [14..15]
 r99: [12..13]
 r100: [4..5]
 r103: [8..11]
 r104: [8..9]

********** Assignment #1: **********

	 Assigning to 104 (cl=CREG, orig=104, freq=2000, tfirst=104, tfreq=2000)...
	   Assign 2 to reload r104 (freq=2000)
	 Assigning to 103 (cl=GENERAL_REGS, orig=99, freq=3000, tfirst=103, tfreq=3000)...
	   Assign 3 to reload r103 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=8)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
changing reg in insn 70
changing reg in insn 35
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 32
changing reg in insn 31
changing reg in insn 32
changing reg in insn 36
changing reg in insn 37
changing reg in insn 37
changing reg in insn 38
changing reg in insn 43
changing reg in insn 48
changing reg in insn 45
changing reg in insn 48
changing reg in insn 48
changing reg in insn 50
changing reg in insn 56
changing reg in insn 51
changing reg in insn 19
changing reg in insn 59
changing reg in insn 59
changing reg in insn 63
changing reg in insn 27
changing reg in insn 28
changing reg in insn 30
changing reg in insn 31
changing reg in insn 35
changing reg in insn 36
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 49
changing reg in insn 50
deleting insn with uid = 72.
deleting insn with uid = 59.
deleting insn with uid = 63.
starting the processing of deferred insns
ending the processing of deferred insns


send_sig

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;;  ref usage 	r0={13d,12u} r1={7d,6u} r2={3d,2u} r3={2d,2u} r7={1d,19u} r16={1e} r17={10d,6u} 
;;    total ref usage 84{36d,47u,1e} in 38{38 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 70 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 70 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 70 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [13 p+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":39:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "kernel/exit.c":39:8 806 {*jcc}
     (nil)
 -> 17)
(note 7 6 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 7 11 3 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [2 sig+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":39:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "kernel/exit.c":39:12 806 {*jcc}
     (nil)
 -> 17)
(note 12 11 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 12 16 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [2 sig+0 S4 A32])
            (const_int 32 [0x20]))) "kernel/exit.c":39:23 11 {*cmpsi_1}
     (nil))
(jump_insn 16 15 17 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "kernel/exit.c":39:23 806 {*jcc}
     (nil)
 -> 22)
(code_label 17 16 18 5 12 (nil) [2 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 66 5 (set (reg:SI 0 ax [orig:92 _10 ] [92])
        (const_int -22 [0xffffffffffffffea])) "kernel/exit.c":40:16 75 {*movsi_internal}
     (nil))
(jump_insn 66 19 67 5 (set (pc)
        (label_ref 57)) "kernel/exit.c":40:16 807 {jump}
     (nil)
 -> 57)
(barrier 67 66 22)
(code_label 22 67 23 6 13 (nil) [1 uses])
(note 23 22 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [5 priv+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":41:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 25 24 26 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "kernel/exit.c":41:8 806 {*jcc}
     (nil)
 -> 40)
(note 26 25 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 7 (set (reg/f:SI 1 dx [94])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":41:25 75 {*movsi_internal}
     (nil))
(insn 28 27 29 7 (set (reg/f:SI 1 dx [orig:83 current.23_1 ] [83])
        (mem/f/c:SI (reg/f:SI 1 dx [94]) [13 current+0 S4 A32])) "kernel/exit.c":41:25 75 {*movsi_internal}
     (nil))
(insn 29 28 30 7 (set (reg:HI 2 cx [orig:84 _2 ] [84])
        (mem:HI (plus:SI (reg/f:SI 1 dx [orig:83 current.23_1 ] [83])
                (const_int 578 [0x242])) [7 current.23_1->euid+0 S2 A16])) "kernel/exit.c":41:25 76 {*movhi_internal}
     (nil))
(insn 30 29 31 7 (set (reg/f:SI 1 dx [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [13 p+0 S4 A32])) "kernel/exit.c":41:36 75 {*movsi_internal}
     (nil))
(insn 31 30 32 7 (set (reg:HI 1 dx [orig:85 _3 ] [85])
        (mem:HI (plus:SI (reg/f:SI 1 dx [95])
                (const_int 578 [0x242])) [7 p_12(D)->euid+0 S2 A16])) "kernel/exit.c":41:36 76 {*movhi_internal}
     (nil))
(insn 32 31 33 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 2 cx [orig:84 _2 ] [84])
            (reg:HI 1 dx [orig:85 _3 ] [85]))) "kernel/exit.c":41:14 10 {*cmphi_1}
     (nil))
(jump_insn 33 32 34 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "kernel/exit.c":41:14 806 {*jcc}
     (nil)
 -> 40)
(note 34 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 8 (set (reg/f:SI 0 ax [96])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":41:47 75 {*movsi_internal}
     (nil))
(insn 36 35 37 8 (set (reg/f:SI 0 ax [orig:86 current.24_4 ] [86])
        (mem/f/c:SI (reg/f:SI 0 ax [96]) [13 current+0 S4 A32])) "kernel/exit.c":41:47 75 {*movsi_internal}
     (nil))
(insn 37 36 38 8 (set (reg:HI 0 ax [orig:87 _5 ] [87])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:86 current.24_4 ] [86])
                (const_int 578 [0x242])) [7 current.24_4->euid+0 S2 A16])) "kernel/exit.c":41:47 76 {*movhi_internal}
     (nil))
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:87 _5 ] [87])
            (const_int 0 [0]))) "kernel/exit.c":41:44 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "kernel/exit.c":41:44 806 {*jcc}
     (nil)
 -> 54)
(code_label 40 39 41 9 15 (nil) [2 uses])
(note 41 40 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 9 (set (reg/f:SI 0 ax [97])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [13 p+0 S4 A32])) "kernel/exit.c":42:19 75 {*movsi_internal}
     (nil))
(insn 43 42 44 9 (set (reg:SI 1 dx [orig:88 _6 ] [88])
        (mem:SI (plus:SI (reg/f:SI 0 ax [97])
                (const_int 12 [0xc])) [2 p_12(D)->signal+0 S4 A32])) "kernel/exit.c":42:19 75 {*movsi_internal}
     (nil))
(insn 44 43 45 9 (set (reg:SI 0 ax [98])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 sig+0 S4 A32])) "kernel/exit.c":42:33 75 {*movsi_internal}
     (nil))
(insn 45 44 46 9 (parallel [
            (set (reg:SI 0 ax [orig:89 _7 ] [89])
                (plus:SI (reg:SI 0 ax [98])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":42:33 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [2 sig+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 46 45 74 9 (set (reg:SI 3 bx [99])
        (const_int 1 [0x1])) "kernel/exit.c":42:25 75 {*movsi_internal}
     (nil))
(insn 74 46 47 9 (set (reg:QI 2 cx [104])
        (reg:QI 0 ax [orig:89 _7 ] [89])) "kernel/exit.c":42:25 77 {*movqi_internal}
     (nil))
(insn 47 74 73 9 (parallel [
            (set (reg:SI 3 bx [99])
                (ashift:SI (reg:SI 3 bx [99])
                    (reg:QI 2 cx [104])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":42:25 655 {*ashlsi3_1}
     (nil))
(insn 73 47 48 9 (set (reg:SI 0 ax [orig:90 _8 ] [90])
        (reg:SI 3 bx [99])) "kernel/exit.c":42:25 75 {*movsi_internal}
     (nil))
(insn 48 73 49 9 (parallel [
            (set (reg:SI 1 dx [orig:91 _9 ] [91])
                (ior:SI (reg:SI 1 dx [orig:88 _6 ] [88])
                    (reg:SI 0 ax [orig:90 _8 ] [90])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":42:19 520 {*iorsi_1}
     (nil))
(insn 49 48 50 9 (set (reg/f:SI 0 ax [100])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [13 p+0 S4 A32])) "kernel/exit.c":42:19 75 {*movsi_internal}
     (nil))
(insn 50 49 51 9 (set (mem:SI (plus:SI (reg/f:SI 0 ax [100])
                (const_int 12 [0xc])) [2 p_12(D)->signal+0 S4 A32])
        (reg:SI 1 dx [orig:91 _9 ] [91])) "kernel/exit.c":42:19 75 {*movsi_internal}
     (nil))
(insn 51 50 68 9 (set (reg:SI 0 ax [orig:92 _10 ] [92])
        (const_int 0 [0])) "kernel/exit.c":45:12 75 {*movsi_internal}
     (nil))
(jump_insn 68 51 69 9 (set (pc)
        (label_ref 57)) "kernel/exit.c":45:12 807 {jump}
     (nil)
 -> 57)
(barrier 69 68 54)
(code_label 54 69 55 10 16 (nil) [1 uses])
(note 55 54 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 10 (set (reg:SI 0 ax [orig:92 _10 ] [92])
        (const_int -1 [0xffffffffffffffff])) "kernel/exit.c":44:16 75 {*movsi_internal}
     (nil))
(code_label 57 56 58 11 14 (nil) [2 uses])
(note 58 57 64 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 64 58 71 11 (use (reg/i:SI 0 ax)) "kernel/exit.c":46:1 -1
     (nil))
(note 71 64 0 NOTE_INSN_DELETED)

;; Function kill_session (kill_session, funcdef_no=10, decl_uid=1429, cgraph_uid=11, symbol_order=10)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 30:  (0) =rm  (1) %0  (2) re {*iorsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 34:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) rm  (1) re {*cmpsi_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4 5
EBB 6 8 7 9

********** Pseudo live ranges #1: **********

  BB 9
   Insn 48: point = 0, n_alt = -1
  BB 7
  BB 8
   Insn 46: point = 0, n_alt = -1
  BB 6
   Insn 39: point = 0, n_alt = -1
   Insn 38: point = 0, n_alt = 0
   Insn 37: point = 1, n_alt = -2
   Insn 36: point = 3, n_alt = 0
   Insn 34: point = 4, n_alt = 0
  BB 2
   Insn 43: point = 5, n_alt = -1
   Insn 7: point = 5, n_alt = 1
   Insn 6: point = 6, n_alt = 0
   Insn 5: point = 8, n_alt = 0
   Insn 49: point = 9, n_alt = 0
  BB 5
   Insn 31: point = 10, n_alt = 1
   Insn 30: point = 11, n_alt = 0
   Insn 29: point = 13, n_alt = 0
   Insn 28: point = 15, n_alt = 0
   Insn 27: point = 16, n_alt = 0
   Insn 26: point = 18, n_alt = 0
   Insn 25: point = 20, n_alt = 0
  BB 4
   Insn 23: point = 22, n_alt = -1
   Insn 22: point = 22, n_alt = 0
   Insn 21: point = 23, n_alt = 0
   Insn 20: point = 25, n_alt = 0
   Insn 19: point = 27, n_alt = 0
   Insn 18: point = 28, n_alt = 0
   Insn 17: point = 30, n_alt = 0
   Insn 16: point = 32, n_alt = 0
  BB 3
   Insn 14: point = 34, n_alt = -1
   Insn 13: point = 34, n_alt = 0
   Insn 12: point = 35, n_alt = 0
   Insn 11: point = 37, n_alt = 0
 r82: [0..38]
 r83: [34..35]
 r84: [29..30]
 r85: [22..28]
 r86: [24..25]
 r87: [22..23]
 r88: [17..18]
 r89: [12..16]
 r90: [10..13]
 r91: [10..11]
 r92: [5..6]
 r93: [7..8]
 r94: [36..37]
 r95: [31..32]
 r96: [26..27]
 r97: [19..20]
 r98: [14..15]
 r99: [0..1]
 r100: [2..3]
Compressing live ranges: from 39 to 32 - 82%
Ranges after the compression:
 r82: [0..31]
 r83: [28..29]
 r84: [24..25]
 r85: [18..23]
 r86: [20..21]
 r87: [18..19]
 r88: [14..15]
 r89: [10..13]
 r90: [8..11]
 r91: [8..9]
 r92: [4..5]
 r93: [6..7]
 r94: [30..31]
 r95: [26..27]
 r96: [22..23]
 r97: [16..17]
 r98: [12..13]
 r99: [0..1]
 r100: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 49
changing reg in insn 36
changing reg in insn 19
changing reg in insn 5
changing reg in insn 12
changing reg in insn 13
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 22
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 30
changing reg in insn 29
changing reg in insn 31
changing reg in insn 30
changing reg in insn 31
changing reg in insn 6
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 11
changing reg in insn 12
changing reg in insn 16
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 25
changing reg in insn 26
changing reg in insn 28
changing reg in insn 29
changing reg in insn 37
changing reg in insn 38
changing reg in insn 36
changing reg in insn 37
deleting insn with uid = 37.
starting the processing of deferred insns
ending the processing of deferred insns


kill_session

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={2d,3u} r1={15d,14u} r2={4d,3u} r7={1d,17u} r17={6d,3u} 
;;    total ref usage 68{28d,40u,0e} in 30{30 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 49 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 49 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 49 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 1 dx [93])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":50:26 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 1 dx [92])
        (plus:SI (reg:SI 1 dx [93])
            (const_int 256 [0x100]))) "kernel/exit.c":50:26 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                (const_int 256 [0x100])))
        (nil)))
(insn 7 6 43 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 p+0 S4 A32])
        (reg/f:SI 1 dx [92])) "kernel/exit.c":50:26 75 {*movsi_internal}
     (nil))
(jump_insn 43 7 44 2 (set (pc)
        (label_ref 32)) "kernel/exit.c":52:11 807 {jump}
     (nil)
 -> 32)
(barrier 44 43 35)
(code_label 35 44 10 3 19 (nil) [1 uses])
(note 10 35 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 1 dx [94])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 p+0 S4 A32])) "kernel/exit.c":53:13 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg/f:SI 1 dx [orig:83 _1 ] [83])
        (mem/f:SI (reg/f:SI 1 dx [94]) [13 *p_14+0 S4 A32])) "kernel/exit.c":53:13 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 1 dx [orig:83 _1 ] [83])
            (const_int 0 [0]))) "kernel/exit.c":53:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "kernel/exit.c":53:12 806 {*jcc}
     (nil)
 -> 32)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg/f:SI 1 dx [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 p+0 S4 A32])) "kernel/exit.c":53:20 75 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (set (reg/f:SI 1 dx [orig:84 _2 ] [84])
        (mem/f:SI (reg/f:SI 1 dx [95]) [13 *p_14+0 S4 A32])) "kernel/exit.c":53:20 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (set (reg:SI 2 cx [orig:85 _3 ] [85])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:84 _2 ] [84])
                (const_int 568 [0x238])) [2 _2->session+0 S4 A32])) "kernel/exit.c":53:23 75 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg/f:SI 1 dx [96])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":53:43 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg/f:SI 1 dx [orig:86 current.1_4 ] [86])
        (mem/f/c:SI (reg/f:SI 1 dx [96]) [13 current+0 S4 A32])) "kernel/exit.c":53:43 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:SI 1 dx [orig:87 _5 ] [87])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:86 current.1_4 ] [86])
                (const_int 568 [0x238])) [2 current.1_4->session+0 S4 A32])) "kernel/exit.c":53:43 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 2 cx [orig:85 _3 ] [85])
            (reg:SI 1 dx [orig:87 _5 ] [87]))) "kernel/exit.c":53:16 11 {*cmpsi_1}
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "kernel/exit.c":53:16 806 {*jcc}
     (nil)
 -> 32)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg/f:SI 1 dx [97])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 p+0 S4 A32])) "kernel/exit.c":54:14 75 {*movsi_internal}
     (nil))
(insn 26 25 27 5 (set (reg/f:SI 1 dx [orig:88 _6 ] [88])
        (mem/f:SI (reg/f:SI 1 dx [97]) [13 *p_14+0 S4 A32])) "kernel/exit.c":54:14 75 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (set (reg:SI 2 cx [orig:89 _7 ] [89])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:88 _6 ] [88])
                (const_int 12 [0xc])) [2 _6->signal+0 S4 A32])) "kernel/exit.c":54:26 75 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (set (reg/f:SI 1 dx [98])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 p+0 S4 A32])) "kernel/exit.c":54:14 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg/f:SI 1 dx [orig:90 _8 ] [90])
        (mem/f:SI (reg/f:SI 1 dx [98]) [13 *p_14+0 S4 A32])) "kernel/exit.c":54:14 75 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (parallel [
            (set (reg:SI 2 cx [orig:91 _9 ] [91])
                (ior:SI (reg:SI 2 cx [orig:89 _7 ] [89])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":54:26 520 {*iorsi_1}
     (nil))
(insn 31 30 32 5 (set (mem:SI (plus:SI (reg/f:SI 1 dx [orig:90 _8 ] [90])
                (const_int 12 [0xc])) [2 _8->signal+0 S4 A32])
        (reg:SI 2 cx [orig:91 _9 ] [91])) "kernel/exit.c":54:26 75 {*movsi_internal}
     (nil))
(code_label 32 31 33 6 18 (nil) [3 uses])
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 36 6 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [21 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [21 p+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":52:16 209 {*addsi_1}
     (nil))
(insn 36 34 38 6 (set (reg:SI 1 dx [100])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":52:16 75 {*movsi_internal}
     (nil))
(insn 38 36 39 6 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [21 p+0 S4 A32])
            (reg:SI 1 dx [99]))) "kernel/exit.c":52:16 11 {*cmpsi_1}
     (nil))
(jump_insn 39 38 45 6 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "kernel/exit.c":52:16 806 {*jcc}
     (nil)
 -> 35)
(note 45 39 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 40 8 (const_int 0 [0]) "kernel/exit.c":56:1 843 {nop}
     (nil))
(note 40 46 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 47 40 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 50 9 (const_int 0 [0]) "kernel/exit.c":56:1 843 {nop}
     (nil))
(note 50 48 0 NOTE_INSN_DELETED)

;; Function tell_father (tell_father, funcdef_no=11, decl_uid=1436, cgraph_uid=12, symbol_order=11)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =rm  (1) %0  (2) re {*iorsi_1}
      Creating newreg=102 from oldreg=87, assigning class GENERAL_REGS to r102
   40: {r102:SI=r102:SI|0x10000;clobber flags:CC;}
      REG_DEAD r87:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   86: r102:SI=r87:SI
    Inserting insn reload after:
   87: r89:SI=r102:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 46:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 56:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 61:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 64:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 67:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5 6
EBB 11
EBB 12
EBB 7
EBB 8
EBB 9
EBB 10

********** Pseudo live ranges #1: **********

  BB 10
  BB 6
   Insn 74: point = 0, n_alt = -1
   Insn 41: point = 0, n_alt = 1
   Insn 87: point = 1, n_alt = -2
	Hard reg 1 is preferable by r102 with profit 1000
   Insn 40: point = 3, n_alt = 0
   Insn 86: point = 4, n_alt = -2
	Hard reg 1 is preferable by r102 with profit 1000
	Hard reg 2 is preferable by r102 with profit 1000
   Insn 39: point = 6, n_alt = 0
   Insn 38: point = 8, n_alt = 0
   Insn 37: point = 9, n_alt = 0
   Insn 36: point = 11, n_alt = 0
   Insn 35: point = 13, n_alt = 0
   Insn 34: point = 15, n_alt = 0
   Insn 33: point = 16, n_alt = 0
  BB 9
   Insn 67: point = 18, n_alt = 0
   Insn 66: point = 18, n_alt = 0
   Insn 65: point = 18, n_alt = 0
   Insn 64: point = 19, n_alt = 0
   Insn 63: point = 19, n_alt = 0
   Insn 62: point = 21, n_alt = 0
   Insn 61: point = 23, n_alt = 0
   Insn 60: point = 23, n_alt = 0
   Insn 59: point = 23, n_alt = -2
   Insn 58: point = 23, n_alt = 0
   Insn 57: point = 24, n_alt = 0
   Insn 56: point = 25, n_alt = 0
  BB 8
   Insn 53: point = 26, n_alt = -1
   Insn 52: point = 26, n_alt = 0
  BB 3
   Insn 72: point = 27, n_alt = -1
   Insn 8: point = 27, n_alt = 1
  BB 7
   Insn 46: point = 28, n_alt = 0
  BB 11
   Insn 79: point = 29, n_alt = -1
   Insn 78: point = 29, n_alt = -1
  BB 12
   Insn 83: point = 30, n_alt = -1
  BB 5
   Insn 27: point = 31, n_alt = -1
   Insn 26: point = 31, n_alt = 0
   Insn 25: point = 32, n_alt = 0
   Insn 24: point = 34, n_alt = 0
   Insn 23: point = 36, n_alt = 0
   Insn 22: point = 37, n_alt = 0
  BB 4
   Insn 16: point = 39, n_alt = -1
   Insn 15: point = 39, n_alt = 0
   Insn 14: point = 40, n_alt = 0
   Insn 13: point = 42, n_alt = 0
   Insn 12: point = 43, n_alt = 0
  BB 2
   Insn 6: point = 45, n_alt = -1
   Insn 5: point = 45, n_alt = 1
   Insn 84: point = 45, n_alt = 0
 r82: [22..45] [10..17]
 r83: [39..40]
 r84: [33..34]
 r85: [31..32]
 r86: [12..13]
 r87: [5..11]
 r88: [0..6]
 r89: [0..1]
 r90: [18..19]
 r91: [41..43]
 r92: [41..42]
 r93: [35..37]
 r94: [35..36]
 r95: [14..16]
 r96: [14..15]
 r97: [7..9]
 r98: [7..8]
 r99: [23..24]
 r100: [20..21]
 r102: [2..4]
Compressing live ranges: from 46 to 30 - 65%
Ranges after the compression:
 r82: [18..29] [8..13]
 r83: [26..27]
 r84: [22..23]
 r85: [20..21]
 r86: [10..11]
 r87: [4..9]
 r88: [0..5]
 r89: [0..1]
 r90: [14..15]
 r91: [28..29]
 r92: [28..29]
 r93: [24..25]
 r94: [24..25]
 r95: [12..13]
 r96: [12..13]
 r97: [6..7]
 r98: [6..7]
 r99: [18..19]
 r100: [16..17]
 r102: [2..3]

********** Assignment #1: **********

	 Assigning to 102 (cl=GENERAL_REGS, orig=87, freq=3000, tfirst=102, tfreq=3000)...
	   Assign 2 to reload r102 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 84
changing reg in insn 62
changing reg in insn 59
changing reg in insn 57
changing reg in insn 37
changing reg in insn 33
changing reg in insn 22
changing reg in insn 12
changing reg in insn 14
changing reg in insn 15
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 26
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 39
changing reg in insn 41
changing reg in insn 41
changing reg in insn 63
changing reg in insn 65
changing reg in insn 12
changing reg in insn 14
changing reg in insn 13
changing reg in insn 14
changing reg in insn 22
changing reg in insn 24
changing reg in insn 23
changing reg in insn 24
changing reg in insn 33
changing reg in insn 35
changing reg in insn 34
changing reg in insn 35
changing reg in insn 37
changing reg in insn 39
changing reg in insn 38
changing reg in insn 39
changing reg in insn 57
changing reg in insn 58
changing reg in insn 62
changing reg in insn 63
deleting insn with uid = 86.
deleting insn with uid = 59.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 66.


tell_father

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={15d,12u} r1={8d,5u} r2={5d,2u} r3={1d,7u} r7={7d,34u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={13d,4u} r18={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 243{179d,64u,0e} in 44{42 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 84 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 84 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 84 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [5 pid+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":62:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "kernel/exit.c":62:8 806 {*jcc}
     (nil)
 -> 54)
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 72 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":63:16 75 {*movsi_internal}
     (nil))
(jump_insn 72 8 73 3 (set (pc)
        (label_ref 47)) "kernel/exit.c":63:9 807 {jump}
     (nil)
 -> 47)
(barrier 73 72 49)
(code_label 49 73 11 4 27 (nil) [1 uses])
(note 11 49 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg/f:SI 0 ax [91])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":64:22 75 {*movsi_internal}
     (nil))
(insn 13 12 14 4 (set (reg:SI 1 dx [92])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])) "kernel/exit.c":64:22 75 {*movsi_internal}
     (nil))
(insn 14 13 15 4 (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [92])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [91])) [13 task[i_9]+0 S4 A32])) "kernel/exit.c":64:22 75 {*movsi_internal}
     (nil))
(insn 15 14 16 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "kernel/exit.c":64:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 16 15 21 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 77)
            (pc))) "kernel/exit.c":64:16 806 {*jcc}
     (nil)
 -> 77)
(note 21 16 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:SI 0 ax [93])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":66:21 75 {*movsi_internal}
     (nil))
(insn 23 22 24 5 (set (reg:SI 1 dx [94])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])) "kernel/exit.c":66:21 75 {*movsi_internal}
     (nil))
(insn 24 23 25 5 (set (reg/f:SI 0 ax [orig:84 _2 ] [84])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [94])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [93])) [13 task[i_9]+0 S4 A32])) "kernel/exit.c":66:21 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg:SI 0 ax [orig:85 _3 ] [85])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:84 _2 ] [84])
                (const_int 556 [0x22c])) [2 _2->pid+0 S4 A32])) "kernel/exit.c":66:24 75 {*movsi_internal}
     (nil))
(insn 26 25 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [5 pid+0 S4 A32])
            (reg:SI 0 ax [orig:85 _3 ] [85]))) "kernel/exit.c":66:16 11 {*cmpsi_1}
     (nil))
(jump_insn 27 26 32 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 82)
            (pc))) "kernel/exit.c":66:16 806 {*jcc}
     (nil)
 -> 82)
(note 32 27 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg/f:SI 0 ax [95])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":68:17 75 {*movsi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:SI 1 dx [96])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])) "kernel/exit.c":68:17 75 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (set (reg/f:SI 0 ax [orig:86 _4 ] [86])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [96])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [95])) [13 task[i_9]+0 S4 A32])) "kernel/exit.c":68:17 75 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg:SI 2 cx [orig:87 _5 ] [87])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:86 _4 ] [86])
                (const_int 12 [0xc])) [2 _4->signal+0 S4 A32])) "kernel/exit.c":68:29 75 {*movsi_internal}
     (nil))
(insn 37 36 38 6 (set (reg/f:SI 0 ax [97])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":68:17 75 {*movsi_internal}
     (nil))
(insn 38 37 39 6 (set (reg:SI 1 dx [98])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])) "kernel/exit.c":68:17 75 {*movsi_internal}
     (nil))
(insn 39 38 40 6 (set (reg/f:SI 0 ax [orig:88 _6 ] [88])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [98])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [97])) [13 task[i_9]+0 S4 A32])) "kernel/exit.c":68:17 75 {*movsi_internal}
     (nil))
(insn 40 39 87 6 (parallel [
            (set (reg:SI 2 cx [orig:87 _5 ] [87])
                (ior:SI (reg:SI 2 cx [orig:87 _5 ] [87])
                    (const_int 65536 [0x10000])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":68:29 520 {*iorsi_1}
     (nil))
(insn 87 40 41 6 (set (reg:SI 1 dx [orig:89 _7 ] [89])
        (reg:SI 2 cx [orig:87 _5 ] [87])) "kernel/exit.c":68:29 75 {*movsi_internal}
     (nil))
(insn 41 87 74 6 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:88 _6 ] [88])
                (const_int 12 [0xc])) [2 _6->signal+0 S4 A32])
        (reg:SI 1 dx [orig:89 _7 ] [89])) "kernel/exit.c":68:29 75 {*movsi_internal}
     (nil))
(jump_insn 74 41 75 6 (set (pc)
        (label_ref 70)) "kernel/exit.c":69:13 807 {jump}
     (nil)
 -> 70)
(barrier 75 74 77)
(code_label 77 75 76 11 28 (nil) [1 uses])
(note 76 77 78 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 78 76 79 11 (const_int 0 [0]) "kernel/exit.c":65:17 843 {nop}
     (nil))
(jump_insn 79 78 80 11 (set (pc)
        (label_ref 44)) 807 {jump}
     (nil)
 -> 44)
(barrier 80 79 82)
(code_label 82 80 81 12 29 (nil) [1 uses])
(note 81 82 83 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 83 81 44 12 (const_int 0 [0]) "kernel/exit.c":67:17 843 {nop}
     (nil))
(code_label 44 83 45 7 24 (nil) [1 uses])
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [5 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [5 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":63:36 209 {*addsi_1}
     (nil))
(code_label 47 46 48 8 22 (nil) [1 uses])
(note 48 47 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 52 48 53 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [5 i+0 S4 A32])
            (const_int 63 [0x3f]))) "kernel/exit.c":63:23 11 {*cmpsi_1}
     (nil))
(jump_insn 53 52 54 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "kernel/exit.c":63:23 806 {*jcc}
     (nil)
 -> 49)
(code_label 54 53 55 9 21 (nil) [1 uses])
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":73:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 57 56 58 9 (set (reg/f:SI 0 ax [99])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x76c2f07917e0 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "kernel/exit.c":73:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x76c2f07917e0 *.LC1>)
        (nil)))
(insn 58 57 60 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 0 ax [99])) "kernel/exit.c":73:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 60 58 61 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x76c2f074d000 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/exit.c":73:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 61 60 62 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":73:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 62 61 63 9 (set (reg/f:SI 0 ax [100])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":74:5 75 {*movsi_internal}
     (nil))
(insn 63 62 64 9 (set (reg/f:SI 0 ax [orig:90 current.2_8 ] [90])
        (mem/f/c:SI (reg/f:SI 0 ax [100]) [13 current+0 S4 A32])) "kernel/exit.c":74:5 75 {*movsi_internal}
     (nil))
(insn 64 63 65 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":74:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 65 64 66 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg/f:SI 0 ax [orig:90 current.2_8 ] [90])) "kernel/exit.c":74:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 66 65 67 9 (call (mem:QI (symbol_ref:SI ("release") [flags 0x3]  <function_decl 0x76c2f0752500 release>) [0 release S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":74:5 812 {*call}
     (nil)
    (nil))
(insn 67 66 70 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":74:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 70 67 71 10 20 (nil) [1 uses])
(note 71 70 85 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(note 85 71 0 NOTE_INSN_DELETED)

;; Function do_exit (do_exit, funcdef_no=12, decl_uid=1444, cgraph_uid=13, symbol_order=12)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 226:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) r
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (1) lBwBz {*call_value} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 16:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 21:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) r
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 28:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 29:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 32:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 34:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 39:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 73:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 78:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 81:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 97:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 103:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 107:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 110:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 122:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 126:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 129:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 133:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 137:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 140:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 144:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 148:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 151:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 170:  (0) r  (1) rm  (2) e {*mulsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 171
	 Choosing alt 0 in insn 171:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 172:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 173:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 184:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 188:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 198:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 202:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 206:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 209:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4 5 6
EBB 7
EBB 8 9
EBB 10 11
EBB 12
EBB 13 14 15 16
EBB 17 18
EBB 19 20
EBB 21

********** Pseudo live ranges #1: **********

  BB 21
   Insn 220: point = 0, n_alt = -1
   Insn 219: point = 0, n_alt = -2
   Insn 215: point = 1, n_alt = -2
   Insn 212: point = 3, n_alt = 0
   Insn 211: point = 4, n_alt = 0
   Insn 210: point = 4, n_alt = -2
   Insn 209: point = 5, n_alt = 0
   Insn 208: point = 5, n_alt = 0
   Insn 207: point = 5, n_alt = 0
   Insn 206: point = 6, n_alt = 0
   Insn 205: point = 6, n_alt = 0
   Insn 204: point = 8, n_alt = 0
   Insn 203: point = 10, n_alt = 0
   Insn 202: point = 11, n_alt = 1
   Insn 201: point = 12, n_alt = 0
   Insn 200: point = 13, n_alt = 0
   Insn 199: point = 15, n_alt = 0
   Insn 198: point = 16, n_alt = 1
   Insn 197: point = 17, n_alt = 0
   Insn 196: point = 19, n_alt = 0
  BB 20
   Insn 193: point = 21, n_alt = 0
  BB 19
   Insn 191: point = 22, n_alt = -1
   Insn 190: point = 22, n_alt = 0
   Insn 189: point = 23, n_alt = 0
   Insn 188: point = 25, n_alt = 0
   Insn 187: point = 27, n_alt = 0
  BB 18
   Insn 184: point = 29, n_alt = 1
   Insn 183: point = 30, n_alt = 0
  BB 17
   Insn 181: point = 32, n_alt = -1
   Insn 180: point = 32, n_alt = 0
   Insn 179: point = 33, n_alt = 0
   Insn 178: point = 35, n_alt = 0
   Insn 177: point = 36, n_alt = 0
   Insn 176: point = 38, n_alt = 0
  BB 16
   Insn 173: point = 40, n_alt = 1
   Insn 172: point = 41, n_alt = 0
   Insn 171: point = 43, n_alt = 0
   Insn 170: point = 45, n_alt = 1
   Insn 169: point = 47, n_alt = 0
   Insn 168: point = 48, n_alt = 0
   Insn 167: point = 50, n_alt = 0
   Insn 166: point = 52, n_alt = 0
  BB 15
   Insn 164: point = 54, n_alt = -1
   Insn 163: point = 54, n_alt = 0
   Insn 160: point = 55, n_alt = 0
   Insn 159: point = 57, n_alt = 0
   Insn 158: point = 59, n_alt = 0
  BB 14
   Insn 156: point = 61, n_alt = -1
   Insn 155: point = 61, n_alt = 0
   Insn 154: point = 62, n_alt = 0
   Insn 153: point = 64, n_alt = 0
   Insn 152: point = 66, n_alt = 0
   Insn 151: point = 67, n_alt = 1
   Insn 150: point = 68, n_alt = 0
   Insn 149: point = 70, n_alt = 0
   Insn 148: point = 71, n_alt = 0
   Insn 147: point = 71, n_alt = 0
   Insn 146: point = 71, n_alt = -2
   Insn 145: point = 71, n_alt = 0
   Insn 144: point = 72, n_alt = 0
   Insn 143: point = 72, n_alt = 0
   Insn 142: point = 74, n_alt = 0
   Insn 141: point = 76, n_alt = 0
   Insn 140: point = 77, n_alt = 1
   Insn 139: point = 78, n_alt = 0
   Insn 138: point = 80, n_alt = 0
   Insn 137: point = 81, n_alt = 0
   Insn 136: point = 81, n_alt = 0
   Insn 135: point = 81, n_alt = -2
   Insn 134: point = 81, n_alt = 0
   Insn 133: point = 82, n_alt = 0
   Insn 132: point = 82, n_alt = 0
   Insn 131: point = 84, n_alt = 0
   Insn 130: point = 86, n_alt = 0
   Insn 129: point = 87, n_alt = 1
   Insn 128: point = 88, n_alt = 0
   Insn 127: point = 90, n_alt = 0
   Insn 126: point = 91, n_alt = 0
   Insn 125: point = 91, n_alt = 0
   Insn 124: point = 91, n_alt = -2
   Insn 123: point = 91, n_alt = 0
   Insn 122: point = 92, n_alt = 0
   Insn 121: point = 92, n_alt = 0
   Insn 120: point = 94, n_alt = 0
   Insn 119: point = 96, n_alt = 0
  BB 13
   Insn 117: point = 98, n_alt = -1
   Insn 116: point = 98, n_alt = 0
  BB 9
   Insn 224: point = 99, n_alt = -1
   Insn 90: point = 99, n_alt = 1
  BB 8
   Insn 88: point = 100, n_alt = -1
   Insn 87: point = 100, n_alt = 0
  BB 2
   Insn 222: point = 101, n_alt = -1
   Insn 40: point = 101, n_alt = 1
   Insn 39: point = 101, n_alt = 0
   Insn 38: point = 101, n_alt = 0
   Insn 37: point = 101, n_alt = -2
   Insn 36: point = 101, n_alt = 0
   Insn 35: point = 102, n_alt = 0
   Insn 34: point = 103, n_alt = 0
   Insn 33: point = 103, n_alt = -2
   Insn 32: point = 104, n_alt = 0
   Insn 31: point = 104, n_alt = 0
   Insn 30: point = 104, n_alt = 0
   Insn 29: point = 105, n_alt = 0
   Insn 28: point = 105, n_alt = 0
   Insn 27: point = 107, n_alt = 0
   Insn 26: point = 109, n_alt = 0
   Insn 25: point = 110, n_alt = 0
   Insn 22: point = 111, n_alt = 1
   Insn 24: point = 112, n_alt = 0
   Insn 23: point = 114, n_alt = 0
   Insn 21: point = 115, n_alt = 0
   Insn 20: point = 115, n_alt = 0
   Insn 19: point = 115, n_alt = -2
   Insn 18: point = 115, n_alt = 0
   Insn 17: point = 116, n_alt = 0
   Insn 16: point = 117, n_alt = 0
   Insn 15: point = 117, n_alt = -2
   Insn 14: point = 118, n_alt = 0
   Insn 13: point = 118, n_alt = 0
   Insn 12: point = 118, n_alt = 0
   Insn 11: point = 119, n_alt = 0
   Insn 10: point = 121, n_alt = 0
   Insn 9: point = 123, n_alt = 0
   Insn 8: point = 124, n_alt = 0
   Insn 5: point = 125, n_alt = 1
   Insn 7: point = 126, n_alt = 0
   Insn 6: point = 128, n_alt = 0
   Insn 226: point = 129, n_alt = 0
  BB 7
   Insn 81: point = 130, n_alt = 0
  BB 6
   Insn 78: point = 131, n_alt = 0
   Insn 77: point = 131, n_alt = 0
   Insn 76: point = 131, n_alt = 0
   Insn 75: point = 131, n_alt = 0
   Insn 74: point = 132, n_alt = 0
   Insn 73: point = 132, n_alt = 0
   Insn 72: point = 132, n_alt = 0
   Insn 71: point = 134, n_alt = 0
  BB 5
   Insn 69: point = 136, n_alt = -1
   Insn 68: point = 136, n_alt = 0
   Insn 67: point = 137, n_alt = 0
   Insn 66: point = 139, n_alt = 0
   Insn 65: point = 141, n_alt = 0
   Insn 64: point = 142, n_alt = 0
   Insn 63: point = 143, n_alt = 1
   Insn 62: point = 144, n_alt = 0
   Insn 61: point = 146, n_alt = 0
   Insn 60: point = 147, n_alt = 0
  BB 4
   Insn 58: point = 149, n_alt = -1
   Insn 57: point = 149, n_alt = 0
   Insn 56: point = 150, n_alt = 0
   Insn 55: point = 152, n_alt = 0
   Insn 54: point = 154, n_alt = 0
   Insn 53: point = 155, n_alt = 0
   Insn 52: point = 157, n_alt = 0
   Insn 51: point = 159, n_alt = 0
   Insn 50: point = 160, n_alt = 0
  BB 3
   Insn 48: point = 162, n_alt = -1
   Insn 47: point = 162, n_alt = 0
   Insn 46: point = 163, n_alt = 0
   Insn 45: point = 165, n_alt = 0
   Insn 44: point = 166, n_alt = 0
  BB 12
   Insn 110: point = 168, n_alt = 0
  BB 11
   Insn 107: point = 169, n_alt = 0
   Insn 106: point = 169, n_alt = 0
   Insn 105: point = 169, n_alt = -2
   Insn 104: point = 169, n_alt = 0
   Insn 103: point = 170, n_alt = 0
   Insn 102: point = 170, n_alt = 0
  BB 10
   Insn 100: point = 172, n_alt = -1
   Insn 99: point = 172, n_alt = 0
   Insn 98: point = 173, n_alt = 0
   Insn 97: point = 175, n_alt = 0
   Insn 96: point = 177, n_alt = 0
   Insn 95: point = 178, n_alt = 0
   Insn 94: point = 180, n_alt = 0
 r82: [4..181]
 r83: [120..121]
 r84: [118..119]
 r85: [115..117]
 r86: [106..107]
 r87: [104..105]
 r88: [101..103]
 r89: [162..163]
 r90: [156..157]
 r91: [149..155]
 r92: [151..152]
 r93: [149..150]
 r94: [143..144]
 r95: [138..139]
 r96: [136..137]
 r97: [131..132]
 r98: [174..178]
 r99: [172..173]
 r100: [169..170]
 r101: [93..94]
 r102: [91..92]
 r103: [87..88]
 r104: [83..84]
 r105: [81..82]
 r106: [77..78]
 r107: [73..74]
 r108: [71..72]
 r109: [67..68]
 r110: [63..64]
 r111: [61..62]
 r112: [56..57]
 r113: [54..55]
 r114: [49..50]
 r115: [46..48]
 r116: [32..36]
 r117: [32..33]
 r118: [24..25]
 r119: [22..23]
 r120: [16..17]
 r121: [11..13]
 r122: [7..8]
 r123: [5..6]
 r124: [116..124]
 r125: [102..110]
 r126: [2..3]
 r127: [0..1]
 r128: [125..126]
 r129: [127..128]
 r130: [122..123]
 r131: [111..112]
 r132: [113..114]
 r133: [108..109]
 r134: [164..166]
 r135: [164..165]
 r136: [158..160]
 r137: [158..159]
 r138: [153..154]
 r139: [145..147]
 r140: [145..146]
 r141: [140..142]
 r142: [140..141]
 r143: [133..134]
 r144: [179..180]
 r145: [174..175]
 r146: [176..177]
 r147: [95..96]
 r148: [89..90]
 r149: [85..86]
 r150: [79..80]
 r151: [75..76]
 r152: [69..70]
 r153: [65..66]
 r154: [58..59]
 r155: [51..52]
 r156: [44..47]
 r157: [44..45]
 r158: [42..43]
 r159: [40..41]
 r160: [37..38]
 r161: [34..35]
 r162: [29..30]
 r163: [26..27]
 r164: [18..19]
 r165: [14..15]
 r166: [11..12]
 r167: [9..10]
Compressing live ranges: from 182 to 148 - 81%
Ranges after the compression:
 r82: [4..147]
 r83: [102..103]
 r84: [100..101]
 r85: [98..99]
 r86: [90..91]
 r87: [88..89]
 r88: [86..87]
 r89: [134..135]
 r90: [130..131]
 r91: [124..129]
 r92: [126..127]
 r93: [124..125]
 r94: [120..121]
 r95: [116..117]
 r96: [114..115]
 r97: [110..111]
 r98: [142..145]
 r99: [140..141]
 r100: [138..139]
 r101: [82..83]
 r102: [80..81]
 r103: [76..77]
 r104: [72..73]
 r105: [70..71]
 r106: [66..67]
 r107: [62..63]
 r108: [60..61]
 r109: [56..57]
 r110: [52..53]
 r111: [50..51]
 r112: [46..47]
 r113: [44..45]
 r114: [40..41]
 r115: [38..39]
 r116: [26..29]
 r117: [26..27]
 r118: [20..21]
 r119: [18..19]
 r120: [14..15]
 r121: [10..11]
 r122: [6..7]
 r123: [4..5]
 r124: [98..105]
 r125: [86..93]
 r126: [2..3]
 r127: [0..1]
 r128: [106..107]
 r129: [108..109]
 r130: [104..105]
 r131: [94..95]
 r132: [96..97]
 r133: [92..93]
 r134: [136..137]
 r135: [136..137]
 r136: [132..133]
 r137: [132..133]
 r138: [128..129]
 r139: [122..123]
 r140: [122..123]
 r141: [118..119]
 r142: [118..119]
 r143: [112..113]
 r144: [146..147]
 r145: [142..143]
 r146: [144..145]
 r147: [84..85]
 r148: [78..79]
 r149: [74..75]
 r150: [68..69]
 r151: [64..65]
 r152: [58..59]
 r153: [54..55]
 r154: [48..49]
 r155: [42..43]
 r156: [36..39]
 r157: [36..37]
 r158: [34..35]
 r159: [32..33]
 r160: [30..31]
 r161: [28..29]
 r162: [24..25]
 r163: [22..23]
 r164: [16..17]
 r165: [12..13]
 r166: [10..11]
 r167: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 226
changing reg in insn 210
changing reg in insn 203
changing reg in insn 199
changing reg in insn 196
changing reg in insn 187
changing reg in insn 183
changing reg in insn 178
changing reg in insn 176
changing reg in insn 169
changing reg in insn 166
changing reg in insn 158
changing reg in insn 152
changing reg in insn 149
changing reg in insn 146
changing reg in insn 141
changing reg in insn 138
changing reg in insn 135
changing reg in insn 130
changing reg in insn 127
changing reg in insn 124
changing reg in insn 119
changing reg in insn 105
changing reg in insn 94
changing reg in insn 71
changing reg in insn 64
changing reg in insn 60
changing reg in insn 54
changing reg in insn 50
changing reg in insn 44
changing reg in insn 37
changing reg in insn 26
changing reg in insn 19
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15
changing reg in insn 18
changing reg in insn 27
changing reg in insn 28
changing reg in insn 28
changing reg in insn 30
changing reg in insn 33
changing reg in insn 36
changing reg in insn 46
changing reg in insn 47
changing reg in insn 52
changing reg in insn 53
changing reg in insn 53
changing reg in insn 57
changing reg in insn 55
changing reg in insn 56
changing reg in insn 56
changing reg in insn 57
changing reg in insn 62
changing reg in insn 63
changing reg in insn 66
changing reg in insn 67
changing reg in insn 67
changing reg in insn 68
changing reg in insn 72
changing reg in insn 75
changing reg in insn 95
changing reg in insn 98
changing reg in insn 98
changing reg in insn 99
changing reg in insn 102
changing reg in insn 104
changing reg in insn 120
changing reg in insn 121
changing reg in insn 121
changing reg in insn 123
changing reg in insn 128
changing reg in insn 129
changing reg in insn 131
changing reg in insn 132
changing reg in insn 132
changing reg in insn 134
changing reg in insn 139
changing reg in insn 140
changing reg in insn 142
changing reg in insn 143
changing reg in insn 143
changing reg in insn 145
changing reg in insn 150
changing reg in insn 151
changing reg in insn 153
changing reg in insn 154
changing reg in insn 154
changing reg in insn 155
changing reg in insn 159
changing reg in insn 160
changing reg in insn 160
changing reg in insn 163
changing reg in insn 167
changing reg in insn 168
changing reg in insn 168
changing reg in insn 170
changing reg in insn 177
changing reg in insn 180
changing reg in insn 179
changing reg in insn 180
changing reg in insn 188
changing reg in insn 189
changing reg in insn 189
changing reg in insn 190
changing reg in insn 197
changing reg in insn 198
changing reg in insn 200
changing reg in insn 202
changing reg in insn 204
changing reg in insn 205
changing reg in insn 205
changing reg in insn 207
changing reg in insn 8
changing reg in insn 17
changing reg in insn 25
changing reg in insn 35
changing reg in insn 212
changing reg in insn 215
changing reg in insn 215
changing reg in insn 219
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 9
changing reg in insn 10
changing reg in insn 24
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 26
changing reg in insn 27
changing reg in insn 44
changing reg in insn 46
changing reg in insn 45
changing reg in insn 46
changing reg in insn 50
changing reg in insn 52
changing reg in insn 51
changing reg in insn 52
changing reg in insn 54
changing reg in insn 55
changing reg in insn 60
changing reg in insn 62
changing reg in insn 61
changing reg in insn 62
changing reg in insn 64
changing reg in insn 66
changing reg in insn 65
changing reg in insn 66
changing reg in insn 71
changing reg in insn 72
changing reg in insn 94
changing reg in insn 95
changing reg in insn 97
changing reg in insn 98
changing reg in insn 96
changing reg in insn 97
changing reg in insn 119
changing reg in insn 120
changing reg in insn 127
changing reg in insn 128
changing reg in insn 130
changing reg in insn 131
changing reg in insn 138
changing reg in insn 139
changing reg in insn 141
changing reg in insn 142
changing reg in insn 149
changing reg in insn 150
changing reg in insn 152
changing reg in insn 153
changing reg in insn 158
changing reg in insn 159
changing reg in insn 166
changing reg in insn 167
changing reg in insn 169
changing reg in insn 170
changing reg in insn 171
changing reg in insn 172
changing reg in insn 172
changing reg in insn 173
changing reg in insn 176
changing reg in insn 177
changing reg in insn 178
changing reg in insn 179
changing reg in insn 183
changing reg in insn 184
changing reg in insn 187
changing reg in insn 188
changing reg in insn 196
changing reg in insn 197
changing reg in insn 199
changing reg in insn 200
changing reg in insn 201
changing reg in insn 202
changing reg in insn 203
changing reg in insn 204
deleting insn with uid = 15.
deleting insn with uid = 19.
deleting insn with uid = 33.
deleting insn with uid = 37.
deleting insn with uid = 105.
deleting insn with uid = 124.
deleting insn with uid = 135.
deleting insn with uid = 146.
deleting insn with uid = 210.
deleting insn with uid = 215.
deleting insn with uid = 219.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 106.
verify found no changes in insn with uid = 125.
verify found no changes in insn with uid = 136.
verify found no changes in insn with uid = 147.
verify found no changes in insn with uid = 193.
verify found no changes in insn with uid = 208.
verify found no changes in insn with uid = 211.


do_exit

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;;  ref usage 	r0={83d,73u} r1={23d,10u} r2={13d} r3={1d,33u} r4={2d,2u} r7={34d,104u} r8={12d} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r17={52d,10u} r18={12d} r19={1e} r20={12d} r21={12d} r22={12d} r23={12d} r24={12d} r25={12d} r26={12d} r27={12d} r28={12d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={12d} r38={12d} r39={12d} r40={12d} r41={12d} r42={12d} r43={12d} r44={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} 
;;    total ref usage 1221{988d,232u,1e} in 165{153 regular + 12 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 226 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 226 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 226 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg:SI 0 ax [129])
        (const_int 15 [0xf])) "kernel/exit.c":81:49 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:SI 0 ax [orig:128 __limit ] [128])
                (asm_operands:SI ("lsll %1, %0
	incl %0") ("=r") 0 [
                        (reg:SI 0 ax [129])
                    ]
                     [
                        (asm_input:SI ("r") kernel/exit.c:81)
                    ]
                     [] kernel/exit.c:81))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":81:49 -1
     (nil))
(insn 5 7 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 __limit+0 S4 A32])
        (reg:SI 0 ax [orig:128 __limit ] [128])) "kernel/exit.c":81:49 75 {*movsi_internal}
     (nil))
(insn 8 5 9 2 (set (reg:SI 4 si [orig:124 _52 ] [124])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 __limit+0 S4 A32])) "kernel/exit.c":81:49 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 0 ax [130])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":81:22 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 0 ax [orig:83 current.3_1 ] [83])
        (mem/f/c:SI (reg/f:SI 0 ax [130]) [13 current+0 S4 A32])) "kernel/exit.c":81:22 75 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg/f:SI 0 ax [orig:84 _2 ] [84])
                (plus:SI (reg/f:SI 0 ax [orig:83 current.3_1 ] [83])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":81:22 209 {*addsi_1}
     (nil))
(insn 12 11 13 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg/f:SI 0 ax [orig:84 _2 ] [84])) "kernel/exit.c":81:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_get_base") [flags 0x3]  <function_decl 0x76c2f0715900 _get_base>) [0 _get_base S1 A8])
            (const_int 4 [0x4]))) "kernel/exit.c":81:5 823 {*call_value}
     (nil)
    (nil))
(insn 14 13 16 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":81:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 16 14 17 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":81:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 17 16 18 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 4 si [orig:124 _52 ] [124])) "kernel/exit.c":81:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 18 17 20 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 0 ax [orig:85 _3 ] [85])) "kernel/exit.c":81:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 20 18 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("free_page_tables") [flags 0x41]  <function_decl 0x76c2f0738400 free_page_tables>) [0 free_page_tables S1 A8])
            (const_int 16 [0x10]))) "kernel/exit.c":81:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 21 20 23 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":81:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 23 21 24 2 (set (reg:SI 0 ax [132])
        (const_int 23 [0x17])) "kernel/exit.c":82:49 75 {*movsi_internal}
     (nil))
(insn 24 23 22 2 (parallel [
            (set (reg:SI 0 ax [orig:131 __limit ] [131])
                (asm_operands:SI ("lsll %1, %0
	incl %0") ("=r") 0 [
                        (reg:SI 0 ax [132])
                    ]
                     [
                        (asm_input:SI ("r") kernel/exit.c:82)
                    ]
                     [] kernel/exit.c:82))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":82:49 -1
     (nil))
(insn 22 24 25 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 __limit+0 S4 A32])
        (reg:SI 0 ax [orig:131 __limit ] [131])) "kernel/exit.c":82:49 75 {*movsi_internal}
     (nil))
(insn 25 22 26 2 (set (reg:SI 4 si [orig:125 _57 ] [125])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 __limit+0 S4 A32])) "kernel/exit.c":82:49 75 {*movsi_internal}
     (nil))
(insn 26 25 27 2 (set (reg/f:SI 0 ax [133])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":82:22 75 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (reg/f:SI 0 ax [orig:86 current.4_4 ] [86])
        (mem/f/c:SI (reg/f:SI 0 ax [133]) [13 current+0 S4 A32])) "kernel/exit.c":82:22 75 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (parallel [
            (set (reg/f:SI 0 ax [orig:87 _5 ] [87])
                (plus:SI (reg/f:SI 0 ax [orig:86 current.4_4 ] [86])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":82:22 209 {*addsi_1}
     (nil))
(insn 29 28 30 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":82:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 30 29 31 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg/f:SI 0 ax [orig:87 _5 ] [87])) "kernel/exit.c":82:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 31 30 32 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_get_base") [flags 0x3]  <function_decl 0x76c2f0715900 _get_base>) [0 _get_base S1 A8])
            (const_int 16 [0x10]))) "kernel/exit.c":82:5 823 {*call_value}
     (nil)
    (nil))
(insn 32 31 34 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":82:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 34 32 35 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":82:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 35 34 36 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 4 si [orig:125 _57 ] [125])) "kernel/exit.c":82:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 36 35 38 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 0 ax [orig:88 _6 ] [88])) "kernel/exit.c":82:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 38 36 39 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("free_page_tables") [flags 0x41]  <function_decl 0x76c2f0738400 free_page_tables>) [0 free_page_tables S1 A8])
            (const_int 16 [0x10]))) "kernel/exit.c":82:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 39 38 40 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":82:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 40 39 222 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":83:12 75 {*movsi_internal}
     (nil))
(jump_insn 222 40 223 2 (set (pc)
        (label_ref 82)) "kernel/exit.c":83:5 807 {jump}
     (nil)
 -> 82)
(barrier 223 222 84)
(code_label 84 223 43 3 33 (nil) [1 uses])
(note 43 84 44 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 3 (set (reg/f:SI 0 ax [134])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":84:17 75 {*movsi_internal}
     (nil))
(insn 45 44 46 3 (set (reg:SI 1 dx [135])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])) "kernel/exit.c":84:17 75 {*movsi_internal}
     (nil))
(insn 46 45 47 3 (set (reg/f:SI 0 ax [orig:89 _7 ] [89])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [135])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [134])) [13 task[i_42]+0 S4 A32])) "kernel/exit.c":84:17 75 {*movsi_internal}
     (nil))
(insn 47 46 48 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:89 _7 ] [89])
            (const_int 0 [0]))) "kernel/exit.c":84:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 48 47 49 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "kernel/exit.c":84:12 806 {*jcc}
     (nil)
 -> 79)
(note 49 48 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 4 (set (reg/f:SI 0 ax [136])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":84:28 75 {*movsi_internal}
     (nil))
(insn 51 50 52 4 (set (reg:SI 1 dx [137])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])) "kernel/exit.c":84:28 75 {*movsi_internal}
     (nil))
(insn 52 51 53 4 (set (reg/f:SI 0 ax [orig:90 _8 ] [90])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [137])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [136])) [13 task[i_42]+0 S4 A32])) "kernel/exit.c":84:28 75 {*movsi_internal}
     (nil))
(insn 53 52 54 4 (set (reg:SI 1 dx [orig:91 _9 ] [91])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:90 _8 ] [90])
                (const_int 560 [0x230])) [2 _8->father+0 S4 A32])) "kernel/exit.c":84:31 75 {*movsi_internal}
     (nil))
(insn 54 53 55 4 (set (reg/f:SI 0 ax [138])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":84:50 75 {*movsi_internal}
     (nil))
(insn 55 54 56 4 (set (reg/f:SI 0 ax [orig:92 current.5_10 ] [92])
        (mem/f/c:SI (reg/f:SI 0 ax [138]) [13 current+0 S4 A32])) "kernel/exit.c":84:50 75 {*movsi_internal}
     (nil))
(insn 56 55 57 4 (set (reg:SI 0 ax [orig:93 _11 ] [93])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:92 current.5_10 ] [92])
                (const_int 556 [0x22c])) [2 current.5_10->pid+0 S4 A32])) "kernel/exit.c":84:50 75 {*movsi_internal}
     (nil))
(insn 57 56 58 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:91 _9 ] [91])
            (reg:SI 0 ax [orig:93 _11 ] [93]))) "kernel/exit.c":84:21 11 {*cmpsi_1}
     (nil))
(jump_insn 58 57 59 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "kernel/exit.c":84:21 806 {*jcc}
     (nil)
 -> 79)
(note 59 58 60 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 5 (set (reg/f:SI 0 ax [139])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":85:17 75 {*movsi_internal}
     (nil))
(insn 61 60 62 5 (set (reg:SI 1 dx [140])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])) "kernel/exit.c":85:17 75 {*movsi_internal}
     (nil))
(insn 62 61 63 5 (set (reg/f:SI 0 ax [orig:94 _12 ] [94])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [140])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [139])) [13 task[i_42]+0 S4 A32])) "kernel/exit.c":85:17 75 {*movsi_internal}
     (nil))
(insn 63 62 64 5 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:94 _12 ] [94])
                (const_int 560 [0x230])) [2 _12->father+0 S4 A32])
        (const_int 1 [0x1])) "kernel/exit.c":85:29 75 {*movsi_internal}
     (nil))
(insn 64 63 65 5 (set (reg/f:SI 0 ax [141])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":86:21 75 {*movsi_internal}
     (nil))
(insn 65 64 66 5 (set (reg:SI 1 dx [142])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])) "kernel/exit.c":86:21 75 {*movsi_internal}
     (nil))
(insn 66 65 67 5 (set (reg/f:SI 0 ax [orig:95 _13 ] [95])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [142])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [141])) [13 task[i_42]+0 S4 A32])) "kernel/exit.c":86:21 75 {*movsi_internal}
     (nil))
(insn 67 66 68 5 (set (reg:SI 0 ax [orig:96 _14 ] [96])
        (mem:SI (reg/f:SI 0 ax [orig:95 _13 ] [95]) [2 _13->state+0 S4 A32])) "kernel/exit.c":86:24 75 {*movsi_internal}
     (nil))
(insn 68 67 69 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:96 _14 ] [96])
            (const_int 3 [0x3]))) "kernel/exit.c":86:16 11 {*cmpsi_1}
     (nil))
(jump_insn 69 68 70 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "kernel/exit.c":86:16 806 {*jcc}
     (nil)
 -> 79)
(note 70 69 71 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 6 (set (reg/f:SI 0 ax [143])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":88:24 75 {*movsi_internal}
     (nil))
(insn 72 71 73 6 (set (reg/f:SI 0 ax [orig:97 _15 ] [97])
        (mem/f/c:SI (plus:SI (reg/f:SI 0 ax [143])
                (const_int 4 [0x4])) [13 task[1]+0 S4 A32])) "kernel/exit.c":88:24 75 {*movsi_internal}
     (nil))
(insn 73 72 74 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":88:24 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 74 73 75 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (const_int 1 [0x1])) "kernel/exit.c":88:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 75 74 76 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg/f:SI 0 ax [orig:97 _15 ] [97])) "kernel/exit.c":88:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 76 75 77 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (const_int 17 [0x11])) "kernel/exit.c":88:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 77 76 78 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("send_sig") [flags 0x3]  <function_decl 0x76c2f0752700 send_sig>) [0 send_sig S1 A8])
            (const_int 16 [0x10]))) "kernel/exit.c":88:24 823 {*call_value}
     (nil)
    (nil))
(insn 78 77 79 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":88:24 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 79 78 80 7 32 (nil) [3 uses])
(note 80 79 81 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [5 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [5 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":83:32 209 {*addsi_1}
     (nil))
(code_label 82 81 83 8 31 (nil) [1 uses])
(note 83 82 87 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 87 83 88 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [5 i+0 S4 A32])
            (const_int 63 [0x3f]))) "kernel/exit.c":83:19 11 {*cmpsi_1}
     (nil))
(jump_insn 88 87 89 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "kernel/exit.c":83:19 806 {*jcc}
     (nil)
 -> 84)
(note 89 88 90 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 224 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":90:11 75 {*movsi_internal}
     (nil))
(jump_insn 224 90 225 9 (set (pc)
        (label_ref 111)) "kernel/exit.c":90:5 807 {jump}
     (nil)
 -> 111)
(barrier 225 224 113)
(code_label 113 225 93 10 36 (nil) [1 uses])
(note 93 113 94 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 10 (set (reg/f:SI 0 ax [144])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":91:20 75 {*movsi_internal}
     (nil))
(insn 95 94 96 10 (set (reg/f:SI 0 ax [orig:98 current.6_16 ] [98])
        (mem/f/c:SI (reg/f:SI 0 ax [144]) [13 current+0 S4 A32])) "kernel/exit.c":91:20 75 {*movsi_internal}
     (nil))
(insn 96 95 97 10 (set (reg:SI 1 dx [146])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])) "kernel/exit.c":91:26 75 {*movsi_internal}
     (nil))
(insn 97 96 98 10 (parallel [
            (set (reg:SI 1 dx [145])
                (plus:SI (reg:SI 1 dx [146])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":91:26 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 i+0 S4 A32])
            (const_int 160 [0xa0]))
        (nil)))
(insn 98 97 99 10 (set (reg/f:SI 0 ax [orig:99 _17 ] [99])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [145])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [orig:98 current.6_16 ] [98])) [9 current.6_16->filp[i_43]+0 S4 A32])) "kernel/exit.c":91:26 75 {*movsi_internal}
     (nil))
(insn 99 98 100 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:99 _17 ] [99])
            (const_int 0 [0]))) "kernel/exit.c":91:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 100 99 101 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) "kernel/exit.c":91:12 806 {*jcc}
     (nil)
 -> 108)
(note 101 100 102 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 11 (set (reg:SI 0 ax [orig:100 i.7_18 ] [100])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 i+0 S4 A32])) "kernel/exit.c":92:13 75 {*movsi_internal}
     (nil))
(insn 103 102 104 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":92:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 104 103 106 11 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (reg:SI 0 ax [orig:100 i.7_18 ] [100])) "kernel/exit.c":92:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 106 104 107 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sys_close") [flags 0x41]  <function_decl 0x76c2f0752400 sys_close>) [0 sys_close S1 A8])
            (const_int 16 [0x10]))) "kernel/exit.c":92:13 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 107 106 108 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":92:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 108 107 109 12 35 (nil) [1 uses])
(note 109 108 110 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 12 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [5 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [5 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":90:30 209 {*addsi_1}
     (nil))
(code_label 111 110 112 13 34 (nil) [1 uses])
(note 112 111 116 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 116 112 117 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [5 i+0 S4 A32])
            (const_int 19 [0x13]))) "kernel/exit.c":90:18 11 {*cmpsi_1}
     (nil))
(jump_insn 117 116 118 13 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) "kernel/exit.c":90:18 806 {*jcc}
     (nil)
 -> 113)
(note 118 117 119 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 14 (set (reg/f:SI 0 ax [147])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":93:17 75 {*movsi_internal}
     (nil))
(insn 120 119 121 14 (set (reg/f:SI 0 ax [orig:101 current.8_19 ] [101])
        (mem/f/c:SI (reg/f:SI 0 ax [147]) [13 current+0 S4 A32])) "kernel/exit.c":93:17 75 {*movsi_internal}
     (nil))
(insn 121 120 122 14 (set (reg/f:SI 0 ax [orig:102 _20 ] [102])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:101 current.8_19 ] [101])
                (const_int 624 [0x270])) [8 current.8_19->pwd+0 S4 A32])) "kernel/exit.c":93:5 75 {*movsi_internal}
     (nil))
(insn 122 121 123 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":93:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 123 122 125 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:102 _20 ] [102])) "kernel/exit.c":93:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 125 123 126 14 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x76c2f06d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":93:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 126 125 127 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":93:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 127 126 128 14 (set (reg/f:SI 0 ax [148])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":94:12 75 {*movsi_internal}
     (nil))
(insn 128 127 129 14 (set (reg/f:SI 0 ax [orig:103 current.9_21 ] [103])
        (mem/f/c:SI (reg/f:SI 0 ax [148]) [13 current+0 S4 A32])) "kernel/exit.c":94:12 75 {*movsi_internal}
     (nil))
(insn 129 128 130 14 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:103 current.9_21 ] [103])
                (const_int 624 [0x270])) [8 current.9_21->pwd+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":94:18 75 {*movsi_internal}
     (nil))
(insn 130 129 131 14 (set (reg/f:SI 0 ax [149])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":95:17 75 {*movsi_internal}
     (nil))
(insn 131 130 132 14 (set (reg/f:SI 0 ax [orig:104 current.10_22 ] [104])
        (mem/f/c:SI (reg/f:SI 0 ax [149]) [13 current+0 S4 A32])) "kernel/exit.c":95:17 75 {*movsi_internal}
     (nil))
(insn 132 131 133 14 (set (reg/f:SI 0 ax [orig:105 _23 ] [105])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:104 current.10_22 ] [104])
                (const_int 628 [0x274])) [8 current.10_22->root+0 S4 A32])) "kernel/exit.c":95:5 75 {*movsi_internal}
     (nil))
(insn 133 132 134 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":95:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 134 133 136 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:105 _23 ] [105])) "kernel/exit.c":95:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 136 134 137 14 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x76c2f06d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":95:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 137 136 138 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":95:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 138 137 139 14 (set (reg/f:SI 0 ax [150])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":96:12 75 {*movsi_internal}
     (nil))
(insn 139 138 140 14 (set (reg/f:SI 0 ax [orig:106 current.11_24 ] [106])
        (mem/f/c:SI (reg/f:SI 0 ax [150]) [13 current+0 S4 A32])) "kernel/exit.c":96:12 75 {*movsi_internal}
     (nil))
(insn 140 139 141 14 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:106 current.11_24 ] [106])
                (const_int 628 [0x274])) [8 current.11_24->root+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":96:19 75 {*movsi_internal}
     (nil))
(insn 141 140 142 14 (set (reg/f:SI 0 ax [151])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":97:17 75 {*movsi_internal}
     (nil))
(insn 142 141 143 14 (set (reg/f:SI 0 ax [orig:107 current.12_25 ] [107])
        (mem/f/c:SI (reg/f:SI 0 ax [151]) [13 current+0 S4 A32])) "kernel/exit.c":97:17 75 {*movsi_internal}
     (nil))
(insn 143 142 144 14 (set (reg/f:SI 0 ax [orig:108 _26 ] [108])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:107 current.12_25 ] [107])
                (const_int 632 [0x278])) [8 current.12_25->executable+0 S4 A32])) "kernel/exit.c":97:5 75 {*movsi_internal}
     (nil))
(insn 144 143 145 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":97:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 145 144 147 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:108 _26 ] [108])) "kernel/exit.c":97:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 147 145 148 14 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x76c2f06d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":97:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 148 147 149 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":97:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 149 148 150 14 (set (reg/f:SI 0 ax [152])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":98:12 75 {*movsi_internal}
     (nil))
(insn 150 149 151 14 (set (reg/f:SI 0 ax [orig:109 current.13_27 ] [109])
        (mem/f/c:SI (reg/f:SI 0 ax [152]) [13 current+0 S4 A32])) "kernel/exit.c":98:12 75 {*movsi_internal}
     (nil))
(insn 151 150 152 14 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:109 current.13_27 ] [109])
                (const_int 632 [0x278])) [8 current.13_27->executable+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":98:25 75 {*movsi_internal}
     (nil))
(insn 152 151 153 14 (set (reg/f:SI 0 ax [153])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":99:16 75 {*movsi_internal}
     (nil))
(insn 153 152 154 14 (set (reg/f:SI 0 ax [orig:110 current.14_28 ] [110])
        (mem/f/c:SI (reg/f:SI 0 ax [153]) [13 current+0 S4 A32])) "kernel/exit.c":99:16 75 {*movsi_internal}
     (nil))
(insn 154 153 155 14 (set (reg:SI 0 ax [orig:111 _29 ] [111])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:110 current.14_28 ] [110])
                (const_int 572 [0x23c])) [2 current.14_28->leader+0 S4 A32])) "kernel/exit.c":99:16 75 {*movsi_internal}
     (nil))
(insn 155 154 156 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:111 _29 ] [111])
            (const_int 0 [0]))) "kernel/exit.c":99:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 156 155 157 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) "kernel/exit.c":99:8 806 {*jcc}
     (nil)
 -> 174)
(note 157 156 158 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 15 (set (reg/f:SI 0 ax [154])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":99:35 75 {*movsi_internal}
     (nil))
(insn 159 158 160 15 (set (reg/f:SI 0 ax [orig:112 current.15_30 ] [112])
        (mem/f/c:SI (reg/f:SI 0 ax [154]) [13 current+0 S4 A32])) "kernel/exit.c":99:35 75 {*movsi_internal}
     (nil))
(insn 160 159 163 15 (set (reg:SI 0 ax [orig:113 _31 ] [113])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:112 current.15_30 ] [112])
                (const_int 616 [0x268])) [5 current.15_30->tty+0 S4 A32])) "kernel/exit.c":99:35 75 {*movsi_internal}
     (nil))
(insn 163 160 164 15 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:113 _31 ] [113])
            (const_int 0 [0]))) "kernel/exit.c":99:25 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 164 163 165 15 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) "kernel/exit.c":99:25 806 {*jcc}
     (nil)
 -> 174)
(note 165 164 166 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 16 (set (reg/f:SI 0 ax [155])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":100:26 75 {*movsi_internal}
     (nil))
(insn 167 166 168 16 (set (reg/f:SI 0 ax [orig:114 current.16_32 ] [114])
        (mem/f/c:SI (reg/f:SI 0 ax [155]) [13 current+0 S4 A32])) "kernel/exit.c":100:26 75 {*movsi_internal}
     (nil))
(insn 168 167 169 16 (set (reg:SI 0 ax [orig:115 _33 ] [115])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:114 current.16_32 ] [114])
                (const_int 616 [0x268])) [5 current.16_32->tty+0 S4 A32])) "kernel/exit.c":100:26 75 {*movsi_internal}
     (nil))
(insn 169 168 170 16 (set (reg/f:SI 1 dx [156])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("tty_table") [flags 0x40]  <var_decl 0x76c2f072e480 tty_table>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":100:38 75 {*movsi_internal}
     (nil))
(insn 170 169 171 16 (parallel [
            (set (reg:SI 0 ax [157])
                (mult:SI (reg:SI 0 ax [orig:115 _33 ] [115])
                    (const_int 3168 [0xc60])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":100:38 408 {*mulsi3_1}
     (nil))
(insn 171 170 172 16 (parallel [
            (set (reg:SI 0 ax [158])
                (plus:SI (reg:SI 0 ax [157])
                    (reg/f:SI 1 dx [156])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":100:38 209 {*addsi_1}
     (nil))
(insn 172 171 173 16 (parallel [
            (set (reg/f:SI 0 ax [159])
                (plus:SI (reg:SI 0 ax [158])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":100:38 209 {*addsi_1}
     (nil))
(insn 173 172 174 16 (set (mem:SI (reg/f:SI 0 ax [159]) [5 tty_table[_33].pgrp+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":100:38 75 {*movsi_internal}
     (nil))
(code_label 174 173 175 17 37 (nil) [2 uses])
(note 175 174 176 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 17 (set (reg/f:SI 0 ax [160])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_task_used_math") [flags 0x40]  <var_decl 0x76c2f072e240 last_task_used_math>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":101:29 75 {*movsi_internal}
     (nil))
(insn 177 176 178 17 (set (reg/f:SI 1 dx [orig:116 last_task_used_math.17_34 ] [116])
        (mem/f/c:SI (reg/f:SI 0 ax [160]) [13 last_task_used_math+0 S4 A32])) "kernel/exit.c":101:29 75 {*movsi_internal}
     (nil))
(insn 178 177 179 17 (set (reg/f:SI 0 ax [161])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":101:29 75 {*movsi_internal}
     (nil))
(insn 179 178 180 17 (set (reg/f:SI 0 ax [orig:117 current.18_35 ] [117])
        (mem/f/c:SI (reg/f:SI 0 ax [161]) [13 current+0 S4 A32])) "kernel/exit.c":101:29 75 {*movsi_internal}
     (nil))
(insn 180 179 181 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 1 dx [orig:116 last_task_used_math.17_34 ] [116])
            (reg/f:SI 0 ax [orig:117 current.18_35 ] [117]))) "kernel/exit.c":101:8 11 {*cmpsi_1}
     (nil))
(jump_insn 181 180 182 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 185)
            (pc))) "kernel/exit.c":101:8 806 {*jcc}
     (nil)
 -> 185)
(note 182 181 183 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 18 (set (reg/f:SI 0 ax [162])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_task_used_math") [flags 0x40]  <var_decl 0x76c2f072e240 last_task_used_math>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":102:29 75 {*movsi_internal}
     (nil))
(insn 184 183 185 18 (set (mem/f/c:SI (reg/f:SI 0 ax [162]) [13 last_task_used_math+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":102:29 75 {*movsi_internal}
     (nil))
(code_label 185 184 186 19 38 (nil) [1 uses])
(note 186 185 187 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 187 186 188 19 (set (reg/f:SI 0 ax [163])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":103:16 75 {*movsi_internal}
     (nil))
(insn 188 187 189 19 (set (reg/f:SI 0 ax [orig:118 current.19_36 ] [118])
        (mem/f/c:SI (reg/f:SI 0 ax [163]) [13 current+0 S4 A32])) "kernel/exit.c":103:16 75 {*movsi_internal}
     (nil))
(insn 189 188 190 19 (set (reg:SI 0 ax [orig:119 _37 ] [119])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:118 current.19_36 ] [118])
                (const_int 572 [0x23c])) [2 current.19_36->leader+0 S4 A32])) "kernel/exit.c":103:16 75 {*movsi_internal}
     (nil))
(insn 190 189 191 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:119 _37 ] [119])
            (const_int 0 [0]))) "kernel/exit.c":103:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 191 190 192 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "kernel/exit.c":103:8 806 {*jcc}
     (nil)
 -> 194)
(note 192 191 193 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(call_insn 193 192 194 20 (call (mem:QI (symbol_ref:SI ("kill_session") [flags 0x3]  <function_decl 0x76c2f0752900 kill_session>) [0 kill_session S1 A8])
        (const_int 0 [0])) "kernel/exit.c":104:9 812 {*call}
     (nil)
    (nil))
(code_label 194 193 195 21 39 (nil) [1 uses])
(note 195 194 196 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 21 (set (reg/f:SI 0 ax [164])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":105:12 75 {*movsi_internal}
     (nil))
(insn 197 196 198 21 (set (reg/f:SI 0 ax [orig:120 current.20_38 ] [120])
        (mem/f/c:SI (reg/f:SI 0 ax [164]) [13 current+0 S4 A32])) "kernel/exit.c":105:12 75 {*movsi_internal}
     (nil))
(insn 198 197 199 21 (set (mem:SI (reg/f:SI 0 ax [orig:120 current.20_38 ] [120]) [2 current.20_38->state+0 S4 A32])
        (const_int 3 [0x3])) "kernel/exit.c":105:20 75 {*movsi_internal}
     (nil))
(insn 199 198 200 21 (set (reg/f:SI 0 ax [165])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":106:12 75 {*movsi_internal}
     (nil))
(insn 200 199 201 21 (set (reg/f:SI 0 ax [orig:121 current.21_39 ] [121])
        (mem/f/c:SI (reg/f:SI 0 ax [165]) [13 current+0 S4 A32])) "kernel/exit.c":106:12 75 {*movsi_internal}
     (nil))
(insn 201 200 202 21 (set (reg:SI 1 dx [166])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [2 code+0 S4 A32])) "kernel/exit.c":106:24 75 {*movsi_internal}
     (nil))
(insn 202 201 203 21 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:121 current.21_39 ] [121])
                (const_int 532 [0x214])) [5 current.21_39->exit_code+0 S4 A32])
        (reg:SI 1 dx [166])) "kernel/exit.c":106:24 75 {*movsi_internal}
     (nil))
(insn 203 202 204 21 (set (reg/f:SI 0 ax [167])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":107:24 75 {*movsi_internal}
     (nil))
(insn 204 203 205 21 (set (reg/f:SI 0 ax [orig:122 current.22_40 ] [122])
        (mem/f/c:SI (reg/f:SI 0 ax [167]) [13 current+0 S4 A32])) "kernel/exit.c":107:24 75 {*movsi_internal}
     (nil))
(insn 205 204 206 21 (set (reg:SI 0 ax [orig:123 _41 ] [123])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:122 current.22_40 ] [122])
                (const_int 560 [0x230])) [2 current.22_40->father+0 S4 A32])) "kernel/exit.c":107:24 75 {*movsi_internal}
     (nil))
(insn 206 205 207 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":107:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 207 206 208 21 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 0 ax [orig:123 _41 ] [123])) "kernel/exit.c":107:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 208 207 209 21 (call (mem:QI (symbol_ref:SI ("tell_father") [flags 0x3]  <function_decl 0x76c2f0752b00 tell_father>) [0 tell_father S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":107:5 812 {*call}
     (nil)
    (nil))
(insn 209 208 211 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":107:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(call_insn 211 209 212 21 (call (mem:QI (symbol_ref:SI ("schedule") [flags 0x41]  <function_decl 0x76c2f0715c00 schedule>) [0 schedule S1 A8])
        (const_int 0 [0])) "kernel/exit.c":108:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 212 211 220 21 (set (reg:SI 0 ax [orig:126 _76 ] [126])
        (const_int -1 [0xffffffffffffffff])) "kernel/exit.c":109:12 75 {*movsi_internal}
     (nil))
(insn 220 212 227 21 (use (reg/i:SI 0 ax)) "kernel/exit.c":110:1 -1
     (nil))
(note 227 220 0 NOTE_INSN_DELETED)

;; Function sys_exit (sys_exit, funcdef_no=13, decl_uid=1460, cgraph_uid=14, symbol_order=13)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 20: point = 0, n_alt = -1
   Insn 19: point = 0, n_alt = -2
   Insn 15: point = 1, n_alt = -2
   Insn 12: point = 3, n_alt = -2
   Insn 11: point = 4, n_alt = 0
   Insn 10: point = 4, n_alt = 0
   Insn 9: point = 4, n_alt = 0
   Insn 8: point = 5, n_alt = 0
   Insn 7: point = 5, n_alt = 0
   Insn 6: point = 7, n_alt = 0
   Insn 5: point = 9, n_alt = 0
   Insn 22: point = 10, n_alt = 0
 r82: [10..10]
 r83: [6..7]
 r84: [4..5]
 r85: [2..3]
 r86: [0..1]
 r87: [8..9]
Compressing live ranges: from 11 to 11 - 100%
Ranges after the compression:
 r82: [10..10]
 r83: [6..7]
 r84: [4..5]
 r85: [2..3]
 r86: [0..1]
 r87: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 22
changing reg in insn 6
changing reg in insn 7
changing reg in insn 9
changing reg in insn 12
changing reg in insn 15
changing reg in insn 15
changing reg in insn 19
changing reg in insn 5
changing reg in insn 6
deleting insn with uid = 12.
deleting insn with uid = 15.
deleting insn with uid = 19.
starting the processing of deferred insns
ending the processing of deferred insns


sys_exit

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,5u} r1={2d} r2={2d} r7={4d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1e} r17={5d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 99{84d,14u,1e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 22 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 22 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 22 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 ax [87])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 error_code+0 S4 A32])) "kernel/exit.c":114:40 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 0 ax [orig:83 _1 ] [83])
                (ashift:SI (reg:SI 0 ax [87])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":114:40 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (reg/f:SI 16 argp) [5 error_code+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 7 6 8 2 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (zero_extend:SI (reg:HI 0 ax [orig:83 _1 ] [83]))) "kernel/exit.c":114:12 144 {*zero_extendhisi2}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":114:12 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 9 8 10 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 0 ax [orig:84 _2 ] [84])) "kernel/exit.c":114:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("do_exit") [flags 0x3]  <function_decl 0x76c2f0752d00 do_exit>) [0 do_exit S1 A8])
            (const_int 16 [0x10]))) "kernel/exit.c":114:12 823 {*call_value}
     (nil)
    (nil))
(insn 11 10 20 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":114:12 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 20 11 23 2 (use (reg/i:SI 0 ax)) "kernel/exit.c":115:1 -1
     (nil))
(note 23 20 0 NOTE_INSN_DELETED)

;; Function sys_waitpid (sys_waitpid, funcdef_no=14, decl_uid=1465, cgraph_uid=15, symbol_order=14)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 269:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =rm  (1) 0 {*negsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 106:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 114:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 118:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 134
	 Choosing alt 0 in insn 134:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 135:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 144
	 Choosing alt 0 in insn 144:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 149:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 153:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 156:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 159:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 161:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 165:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 171:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 174:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 183:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 187:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 188:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 198:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 206:  (0) =rm  (1) %0  (2) re {*andsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 207:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 216:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5 6 7 8 9
EBB 10 11 12
EBB 13 14
EBB 15 16 17 18
EBB 19
EBB 20
EBB 31
EBB 32
EBB 33
EBB 34
EBB 21
EBB 22 23 24 25
EBB 26 27
EBB 28
EBB 29
EBB 30

********** Pseudo live ranges #1: **********

  BB 30
   Insn 229: point = 0, n_alt = -1
   Insn 228: point = 0, n_alt = -2
   Insn 224: point = 1, n_alt = -2
  BB 28
   Insn 247: point = 4, n_alt = -1
   Insn 216: point = 4, n_alt = 0
  BB 25
   Insn 243: point = 5, n_alt = -1
   Insn 191: point = 5, n_alt = 0
  BB 19
   Insn 241: point = 6, n_alt = -1
   Insn 166: point = 6, n_alt = 0
   Insn 165: point = 7, n_alt = 0
   Insn 164: point = 7, n_alt = 0
   Insn 163: point = 7, n_alt = 0
   Insn 162: point = 8, n_alt = 0
   Insn 161: point = 8, n_alt = 0
   Insn 160: point = 8, n_alt = 0
   Insn 159: point = 9, n_alt = 0
   Insn 158: point = 9, n_alt = 0
   Insn 157: point = 9, n_alt = 0
   Insn 156: point = 10, n_alt = 0
   Insn 155: point = 10, n_alt = 0
   Insn 154: point = 12, n_alt = 0
   Insn 153: point = 13, n_alt = 1
   Insn 152: point = 14, n_alt = 0
   Insn 151: point = 16, n_alt = 0
   Insn 150: point = 18, n_alt = 0
   Insn 149: point = 19, n_alt = 1
   Insn 148: point = 20, n_alt = 0
   Insn 147: point = 22, n_alt = 0
   Insn 146: point = 24, n_alt = 0
   Insn 145: point = 25, n_alt = 1
   Insn 144: point = 26, n_alt = 0
   Insn 143: point = 28, n_alt = 0
   Insn 142: point = 30, n_alt = 0
   Insn 141: point = 32, n_alt = 0
   Insn 140: point = 34, n_alt = 0
   Insn 139: point = 36, n_alt = 0
   Insn 138: point = 37, n_alt = 0
   Insn 137: point = 39, n_alt = 0
   Insn 136: point = 41, n_alt = 0
   Insn 135: point = 42, n_alt = 1
   Insn 134: point = 43, n_alt = 0
   Insn 133: point = 45, n_alt = 0
   Insn 132: point = 47, n_alt = 0
   Insn 131: point = 48, n_alt = 0
   Insn 130: point = 50, n_alt = 0
   Insn 129: point = 52, n_alt = 0
   Insn 128: point = 53, n_alt = 0
   Insn 127: point = 55, n_alt = 0
   Insn 126: point = 57, n_alt = 0
  BB 18
   Insn 239: point = 59, n_alt = -1
   Insn 121: point = 59, n_alt = 0
   Insn 120: point = 61, n_alt = 0
   Insn 119: point = 63, n_alt = 0
   Insn 118: point = 64, n_alt = 0
   Insn 117: point = 64, n_alt = 0
   Insn 116: point = 64, n_alt = 0
   Insn 115: point = 64, n_alt = 0
   Insn 114: point = 64, n_alt = 0
  BB 29
   Insn 221: point = 64, n_alt = 0
  BB 23
   Insn 184: point = 65, n_alt = -1
   Insn 183: point = 65, n_alt = 1
  BB 22
   Insn 181: point = 66, n_alt = -1
   Insn 180: point = 66, n_alt = 0
   Insn 179: point = 67, n_alt = -2
   Insn 178: point = 69, n_alt = 0
  BB 3
   Insn 231: point = 71, n_alt = -1
   Insn 16: point = 71, n_alt = 1
   Insn 15: point = 72, n_alt = 0
   Insn 14: point = 74, n_alt = 0
   Insn 13: point = 75, n_alt = 1
  BB 27
   Insn 245: point = 76, n_alt = -1
  BB 26
   Insn 210: point = 77, n_alt = -1
   Insn 209: point = 77, n_alt = 0
   Insn 208: point = 78, n_alt = 0
   Insn 207: point = 80, n_alt = 1
   Insn 206: point = 81, n_alt = 0
   Insn 205: point = 83, n_alt = 0
   Insn 204: point = 85, n_alt = 0
   Insn 203: point = 86, n_alt = 0
   Insn 202: point = 88, n_alt = 0
   Insn 201: point = 90, n_alt = 0
   Insn 200: point = 91, n_alt = 0
   Insn 199: point = 91, n_alt = -2
   Insn 198: point = 91, n_alt = 1
   Insn 197: point = 92, n_alt = 0
   Insn 196: point = 94, n_alt = 0
  BB 24
   Insn 189: point = 96, n_alt = -1
   Insn 188: point = 96, n_alt = 0
   Insn 187: point = 97, n_alt = 0
   Insn 186: point = 99, n_alt = 0
  BB 2
   Insn 10: point = 101, n_alt = 0
   Insn 9: point = 101, n_alt = 0
   Insn 8: point = 101, n_alt = -2
   Insn 7: point = 101, n_alt = 0
   Insn 6: point = 101, n_alt = 0
   Insn 5: point = 101, n_alt = 0
   Insn 269: point = 101, n_alt = 0
  BB 21
   Insn 174: point = 102, n_alt = 0
  BB 33
   Insn 264: point = 103, n_alt = -1
   Insn 263: point = 103, n_alt = -1
  BB 34
   Insn 268: point = 104, n_alt = -1
  BB 17
   Insn 108: point = 105, n_alt = -1
   Insn 107: point = 105, n_alt = 0
   Insn 106: point = 106, n_alt = 0
   Insn 105: point = 108, n_alt = 0
  BB 32
   Insn 259: point = 110, n_alt = -1
   Insn 258: point = 110, n_alt = -1
  BB 9
   Insn 234: point = 111, n_alt = -1
  BB 12
   Insn 237: point = 112, n_alt = -1
  BB 31
   Insn 254: point = 113, n_alt = -1
   Insn 253: point = 113, n_alt = -1
  BB 20
   Insn 249: point = 114, n_alt = -1
   Insn 171: point = 114, n_alt = 1
  BB 16
   Insn 103: point = 115, n_alt = -1
   Insn 102: point = 115, n_alt = 0
  BB 15
   Insn 100: point = 117, n_alt = -1
   Insn 99: point = 117, n_alt = 0
   Insn 98: point = 117, n_alt = 0
   Insn 97: point = 119, n_alt = 0
   Insn 96: point = 121, n_alt = 0
  BB 14
   Insn 90: point = 123, n_alt = -1
   Insn 89: point = 123, n_alt = 0
   Insn 88: point = 124, n_alt = 0
   Insn 87: point = 126, n_alt = 0
   Insn 86: point = 127, n_alt = 0
   Insn 85: point = 129, n_alt = 0
   Insn 84: point = 131, n_alt = 0
  BB 13
   Insn 82: point = 133, n_alt = -1
   Insn 81: point = 133, n_alt = 0
  BB 11
   Insn 75: point = 134, n_alt = -1
   Insn 74: point = 134, n_alt = 0
   Insn 73: point = 135, n_alt = 0
   Insn 72: point = 137, n_alt = 0
   Insn 71: point = 139, n_alt = 0
   Insn 70: point = 140, n_alt = 0
   Insn 69: point = 142, n_alt = 0
   Insn 68: point = 144, n_alt = 0
  BB 10
   Insn 66: point = 146, n_alt = -1
   Insn 65: point = 146, n_alt = 1
  BB 8
   Insn 59: point = 147, n_alt = -1
   Insn 58: point = 147, n_alt = 0
   Insn 57: point = 148, n_alt = 0
   Insn 56: point = 150, n_alt = 0
   Insn 55: point = 152, n_alt = 0
  BB 7
   Insn 53: point = 154, n_alt = -1
   Insn 52: point = 154, n_alt = 1
  BB 6
   Insn 44: point = 155, n_alt = -1
   Insn 43: point = 155, n_alt = 0
   Insn 42: point = 156, n_alt = 0
   Insn 41: point = 158, n_alt = 0
   Insn 40: point = 160, n_alt = 0
   Insn 39: point = 161, n_alt = 0
   Insn 38: point = 163, n_alt = 0
   Insn 37: point = 165, n_alt = 0
  BB 5
   Insn 30: point = 167, n_alt = -1
   Insn 29: point = 167, n_alt = 0
   Insn 28: point = 168, n_alt = 0
   Insn 27: point = 170, n_alt = 0
   Insn 26: point = 171, n_alt = 0
   Insn 25: point = 173, n_alt = 0
  BB 4
   Insn 23: point = 175, n_alt = -1
   Insn 22: point = 175, n_alt = 0
   Insn 21: point = 176, n_alt = 0
   Insn 20: point = 178, n_alt = 0
 r82: [65..179] [31..58]
 r83: [175..176]
 r84: [167..171]
 r85: [167..168]
 r86: [162..163]
 r87: [155..161]
 r88: [157..158]
 r89: [155..156]
 r90: [149..150]
 r91: [147..148]
 r92: [141..142]
 r93: [134..140]
 r94: [136..137]
 r95: [134..135]
 r96: [128..129]
 r97: [123..127]
 r98: [123..124]
 r99: [118..119]
 r100: [115..117]
 r101: [105..106]
 r102: [60..61]
 r103: [54..55]
 r104: [44..53]
 r105: [49..50]
 r106: [44..48]
 r107: [42..45]
 r108: [42..43]
 r109: [38..39]
 r110: [27..37]
 r111: [33..34]
 r112: [27..32]
 r113: [25..28]
 r114: [25..26]
 r115: [21..22]
 r116: [15..16]
 r117: [9..10]
 r118: [7..8]
 r119: [96..97]
 r120: [91..92]
 r121: [87..88]
 r122: [82..86]
 r123: [79..83]
 r124: [80..81]
 r125: [77..78]
 r126: [64..64] [59..59] [2..6]
 r127: [0..1]
 r128: [71..72]
 r129: [73..74]
 r130: [177..178]
 r131: [172..173]
 r132: [169..170]
 r133: [164..165]
 r134: [159..160]
 r135: [151..152]
 r136: [143..144]
 r137: [138..139]
 r138: [130..131]
 r139: [125..126]
 r140: [120..121]
 r141: [107..108]
 r142: [62..63]
 r143: [56..57]
 r144: [51..52]
 r145: [46..47]
 r146: [40..41]
 r147: [35..36]
 r148: [29..30]
 r149: [23..24]
 r150: [19..20]
 r151: [17..18]
 r152: [13..14]
 r153: [11..12]
 r154: [66..67]
 r155: [68..69]
 r156: [98..99]
 r157: [93..94]
 r158: [89..90]
 r159: [84..85]
Compressing live ranges: from 180 to 140 - 77%
Ranges after the compression:
 r82: [58..139] [28..51]
 r83: [136..137]
 r84: [130..133]
 r85: [130..131]
 r86: [126..127]
 r87: [120..125]
 r88: [122..123]
 r89: [120..121]
 r90: [116..117]
 r91: [114..115]
 r92: [110..111]
 r93: [104..109]
 r94: [106..107]
 r95: [104..105]
 r96: [100..101]
 r97: [96..99]
 r98: [96..97]
 r99: [92..93]
 r100: [90..91]
 r101: [86..87]
 r102: [53..54]
 r103: [48..49]
 r104: [40..47]
 r105: [44..45]
 r106: [40..43]
 r107: [38..41]
 r108: [38..39]
 r109: [34..35]
 r110: [24..33]
 r111: [30..31]
 r112: [24..29]
 r113: [22..25]
 r114: [22..23]
 r115: [18..19]
 r116: [12..13]
 r117: [6..7]
 r118: [4..5]
 r119: [82..83]
 r120: [78..79]
 r121: [74..75]
 r122: [70..73]
 r123: [68..71]
 r124: [68..69]
 r125: [66..67]
 r126: [57..57] [52..52] [2..3]
 r127: [0..1]
 r128: [62..63]
 r129: [64..65]
 r130: [138..139]
 r131: [134..135]
 r132: [132..133]
 r133: [128..129]
 r134: [124..125]
 r135: [118..119]
 r136: [112..113]
 r137: [108..109]
 r138: [102..103]
 r139: [98..99]
 r140: [94..95]
 r141: [88..89]
 r142: [55..56]
 r143: [50..51]
 r144: [46..47]
 r145: [42..43]
 r146: [36..37]
 r147: [32..33]
 r148: [26..27]
 r149: [20..21]
 r150: [16..17]
 r151: [14..15]
 r152: [10..11]
 r153: [8..9]
 r154: [58..59]
 r155: [60..61]
 r156: [84..85]
 r157: [80..81]
 r158: [76..77]
 r159: [72..73]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 269
changing reg in insn 204
changing reg in insn 201
changing reg in insn 199
changing reg in insn 196
changing reg in insn 178
changing reg in insn 142
changing reg in insn 136
changing reg in insn 132
changing reg in insn 126
changing reg in insn 71
changing reg in insn 40
changing reg in insn 27
changing reg in insn 14
changing reg in insn 8
changing reg in insn 21
changing reg in insn 22
changing reg in insn 26
changing reg in insn 29
changing reg in insn 28
changing reg in insn 29
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 43
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 43
changing reg in insn 56
changing reg in insn 57
changing reg in insn 57
changing reg in insn 58
changing reg in insn 69
changing reg in insn 70
changing reg in insn 70
changing reg in insn 74
changing reg in insn 72
changing reg in insn 73
changing reg in insn 73
changing reg in insn 74
changing reg in insn 85
changing reg in insn 86
changing reg in insn 86
changing reg in insn 89
changing reg in insn 88
changing reg in insn 89
changing reg in insn 97
changing reg in insn 98
changing reg in insn 98
changing reg in insn 102
changing reg in insn 99
changing reg in insn 106
changing reg in insn 107
changing reg in insn 120
changing reg in insn 121
changing reg in insn 127
changing reg in insn 128
changing reg in insn 128
changing reg in insn 130
changing reg in insn 131
changing reg in insn 131
changing reg in insn 133
changing reg in insn 135
changing reg in insn 134
changing reg in insn 135
changing reg in insn 137
changing reg in insn 138
changing reg in insn 138
changing reg in insn 140
changing reg in insn 141
changing reg in insn 141
changing reg in insn 143
changing reg in insn 145
changing reg in insn 144
changing reg in insn 145
changing reg in insn 147
changing reg in insn 148
changing reg in insn 151
changing reg in insn 152
changing reg in insn 155
changing reg in insn 157
changing reg in insn 160
changing reg in insn 163
changing reg in insn 187
changing reg in insn 188
changing reg in insn 197
changing reg in insn 198
changing reg in insn 202
changing reg in insn 203
changing reg in insn 203
changing reg in insn 206
changing reg in insn 205
changing reg in insn 208
changing reg in insn 207
changing reg in insn 206
changing reg in insn 207
changing reg in insn 208
changing reg in insn 209
changing reg in insn 221
changing reg in insn 216
changing reg in insn 191
changing reg in insn 166
changing reg in insn 121
changing reg in insn 224
changing reg in insn 224
changing reg in insn 228
changing reg in insn 15
changing reg in insn 16
changing reg in insn 14
changing reg in insn 15
changing reg in insn 20
changing reg in insn 21
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 37
changing reg in insn 38
changing reg in insn 40
changing reg in insn 41
changing reg in insn 55
changing reg in insn 56
changing reg in insn 68
changing reg in insn 69
changing reg in insn 71
changing reg in insn 72
changing reg in insn 84
changing reg in insn 85
changing reg in insn 87
changing reg in insn 88
changing reg in insn 96
changing reg in insn 97
changing reg in insn 105
changing reg in insn 106
changing reg in insn 119
changing reg in insn 120
changing reg in insn 126
changing reg in insn 127
changing reg in insn 129
changing reg in insn 130
changing reg in insn 132
changing reg in insn 133
changing reg in insn 136
changing reg in insn 137
changing reg in insn 139
changing reg in insn 140
changing reg in insn 142
changing reg in insn 143
changing reg in insn 146
changing reg in insn 147
changing reg in insn 148
changing reg in insn 149
changing reg in insn 150
changing reg in insn 151
changing reg in insn 152
changing reg in insn 153
changing reg in insn 154
changing reg in insn 155
changing reg in insn 179
changing reg in insn 180
changing reg in insn 178
changing reg in insn 179
changing reg in insn 186
changing reg in insn 187
changing reg in insn 196
changing reg in insn 197
changing reg in insn 201
changing reg in insn 202
changing reg in insn 204
changing reg in insn 205
deleting insn with uid = 8.
deleting insn with uid = 179.
deleting insn with uid = 199.
deleting insn with uid = 224.
deleting insn with uid = 228.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 117.
verify found no changes in insn with uid = 158.
verify found no changes in insn with uid = 164.
verify found no changes in insn with uid = 200.


sys_waitpid

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={72d,65u} r1={17d,11u} r2={8d,2u} r3={1d,14u} r7={16d,96u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={3e} r17={37d,16u} r18={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} 
;;    total ref usage 683{476d,204u,3e} in 159{154 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 269 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 269 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 269 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":122:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (const_int 4 [0x4])) "kernel/exit.c":122:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 7 6 9 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [19 stat_addr+0 S4 A32])) "kernel/exit.c":122:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 9 7 10 2 (call (mem:QI (symbol_ref:SI ("verify_area") [flags 0x41]  <function_decl 0x76c2f0738500 verify_area>) [0 verify_area S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":122:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":122:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 11 10 12 3 44 ("repeat") [1 uses])
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 flag+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":124:10 75 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:SI 0 ax [129])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":125:12 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg/f:SI 0 ax [128])
        (plus:SI (reg:SI 0 ax [129])
            (const_int 252 [0xfc]))) "kernel/exit.c":125:12 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                (const_int 252 [0xfc])))
        (nil)))
(insn 16 15 231 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [21 p+0 S4 A32])
        (reg/f:SI 0 ax [128])) "kernel/exit.c":125:12 75 {*movsi_internal}
     (nil))
(jump_insn 231 16 232 3 (set (pc)
        (label_ref 175)) "kernel/exit.c":125:5 807 {jump}
     (nil)
 -> 175)
(barrier 232 231 177)
(code_label 177 232 19 4 57 (nil) [1 uses])
(note 19 177 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 0 ax [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [21 p+0 S4 A32])) "kernel/exit.c":126:14 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
        (mem/f:SI (reg/f:SI 0 ax [130]) [13 *p_46+0 S4 A32])) "kernel/exit.c":126:14 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "kernel/exit.c":126:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 252)
            (pc))) "kernel/exit.c":126:12 806 {*jcc}
     (nil)
 -> 252)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg/f:SI 0 ax [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [21 p+0 S4 A32])) "kernel/exit.c":126:20 75 {*movsi_internal}
     (nil))
(insn 26 25 27 5 (set (reg/f:SI 1 dx [orig:84 _2 ] [84])
        (mem/f:SI (reg/f:SI 0 ax [131]) [13 *p_46+0 S4 A32])) "kernel/exit.c":126:20 75 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (set (reg/f:SI 0 ax [132])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":126:23 75 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (set (reg/f:SI 0 ax [orig:85 current.25_3 ] [85])
        (mem/f/c:SI (reg/f:SI 0 ax [132]) [13 current+0 S4 A32])) "kernel/exit.c":126:23 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 1 dx [orig:84 _2 ] [84])
            (reg/f:SI 0 ax [orig:85 current.25_3 ] [85]))) "kernel/exit.c":126:17 11 {*cmpsi_1}
     (nil))
(jump_insn 30 29 36 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 252)
            (pc))) "kernel/exit.c":126:17 806 {*jcc}
     (nil)
 -> 252)
(note 36 30 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (set (reg/f:SI 0 ax [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [21 p+0 S4 A32])) "kernel/exit.c":128:14 75 {*movsi_internal}
     (nil))
(insn 38 37 39 6 (set (reg/f:SI 0 ax [orig:86 _4 ] [86])
        (mem/f:SI (reg/f:SI 0 ax [133]) [13 *p_46+0 S4 A32])) "kernel/exit.c":128:14 75 {*movsi_internal}
     (nil))
(insn 39 38 40 6 (set (reg:SI 1 dx [orig:87 _5 ] [87])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:86 _4 ] [86])
                (const_int 560 [0x230])) [2 _4->father+0 S4 A32])) "kernel/exit.c":128:17 75 {*movsi_internal}
     (nil))
(insn 40 39 41 6 (set (reg/f:SI 0 ax [134])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":128:36 75 {*movsi_internal}
     (nil))
(insn 41 40 42 6 (set (reg/f:SI 0 ax [orig:88 current.26_6 ] [88])
        (mem/f/c:SI (reg/f:SI 0 ax [134]) [13 current+0 S4 A32])) "kernel/exit.c":128:36 75 {*movsi_internal}
     (nil))
(insn 42 41 43 6 (set (reg:SI 0 ax [orig:89 _7 ] [89])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:88 current.26_6 ] [88])
                (const_int 556 [0x22c])) [2 current.26_6->pid+0 S4 A32])) "kernel/exit.c":128:36 75 {*movsi_internal}
     (nil))
(insn 43 42 44 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:87 _5 ] [87])
            (reg:SI 0 ax [orig:89 _7 ] [89]))) "kernel/exit.c":128:12 11 {*cmpsi_1}
     (nil))
(jump_insn 44 43 49 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 257)
            (pc))) "kernel/exit.c":128:12 806 {*jcc}
     (nil)
 -> 257)
(note 49 44 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 52 49 53 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [5 pid+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":130:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 53 52 54 7 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "kernel/exit.c":130:12 806 {*jcc}
     (nil)
 -> 63)
(note 54 53 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 8 (set (reg/f:SI 0 ax [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [21 p+0 S4 A32])) "kernel/exit.c":131:18 75 {*movsi_internal}
     (nil))
(insn 56 55 57 8 (set (reg/f:SI 0 ax [orig:90 _8 ] [90])
        (mem/f:SI (reg/f:SI 0 ax [135]) [13 *p_46+0 S4 A32])) "kernel/exit.c":131:18 75 {*movsi_internal}
     (nil))
(insn 57 56 58 8 (set (reg:SI 0 ax [orig:91 _9 ] [91])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:90 _8 ] [90])
                (const_int 556 [0x22c])) [2 _8->pid+0 S4 A32])) "kernel/exit.c":131:21 75 {*movsi_internal}
     (nil))
(insn 58 57 59 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [5 pid+0 S4 A32])
            (reg:SI 0 ax [orig:91 _9 ] [91]))) "kernel/exit.c":131:16 11 {*cmpsi_1}
     (nil))
(jump_insn 59 58 233 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "kernel/exit.c":131:16 806 {*jcc}
     (nil)
 -> 94)
(note 233 59 234 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 234 233 235 9 (set (pc)
        (label_ref 172)) "kernel/exit.c":132:17 807 {jump}
     (nil)
 -> 172)
(barrier 235 234 63)
(code_label 63 235 64 10 50 (nil) [1 uses])
(note 64 63 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [5 pid+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":133:19 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 66 65 67 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "kernel/exit.c":133:19 806 {*jcc}
     (nil)
 -> 79)
(note 67 66 68 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 11 (set (reg/f:SI 0 ax [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [21 p+0 S4 A32])) "kernel/exit.c":134:18 75 {*movsi_internal}
     (nil))
(insn 69 68 70 11 (set (reg/f:SI 0 ax [orig:92 _10 ] [92])
        (mem/f:SI (reg/f:SI 0 ax [136]) [13 *p_46+0 S4 A32])) "kernel/exit.c":134:18 75 {*movsi_internal}
     (nil))
(insn 70 69 71 11 (set (reg:SI 1 dx [orig:93 _11 ] [93])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:92 _10 ] [92])
                (const_int 564 [0x234])) [2 _10->pgrp+0 S4 A32])) "kernel/exit.c":134:21 75 {*movsi_internal}
     (nil))
(insn 71 70 72 11 (set (reg/f:SI 0 ax [137])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":134:38 75 {*movsi_internal}
     (nil))
(insn 72 71 73 11 (set (reg/f:SI 0 ax [orig:94 current.27_12 ] [94])
        (mem/f/c:SI (reg/f:SI 0 ax [137]) [13 current+0 S4 A32])) "kernel/exit.c":134:38 75 {*movsi_internal}
     (nil))
(insn 73 72 74 11 (set (reg:SI 0 ax [orig:95 _13 ] [95])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:94 current.27_12 ] [94])
                (const_int 564 [0x234])) [2 current.27_12->pgrp+0 S4 A32])) "kernel/exit.c":134:38 75 {*movsi_internal}
     (nil))
(insn 74 73 75 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:93 _11 ] [93])
            (reg:SI 0 ax [orig:95 _13 ] [95]))) "kernel/exit.c":134:16 11 {*cmpsi_1}
     (nil))
(jump_insn 75 74 236 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "kernel/exit.c":134:16 806 {*jcc}
     (nil)
 -> 94)
(note 236 75 237 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 237 236 238 12 (set (pc)
        (label_ref 172)) "kernel/exit.c":135:17 807 {jump}
     (nil)
 -> 172)
(barrier 238 237 79)
(code_label 79 238 80 13 52 (nil) [1 uses])
(note 80 79 81 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [5 pid+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) "kernel/exit.c":136:19 11 {*cmpsi_1}
     (nil))
(jump_insn 82 81 83 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "kernel/exit.c":136:19 806 {*jcc}
     (nil)
 -> 94)
(note 83 82 84 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 14 (set (reg/f:SI 0 ax [138])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [21 p+0 S4 A32])) "kernel/exit.c":137:18 75 {*movsi_internal}
     (nil))
(insn 85 84 86 14 (set (reg/f:SI 0 ax [orig:96 _14 ] [96])
        (mem/f:SI (reg/f:SI 0 ax [138]) [13 *p_46+0 S4 A32])) "kernel/exit.c":137:18 75 {*movsi_internal}
     (nil))
(insn 86 85 87 14 (set (reg:SI 0 ax [orig:97 _15 ] [97])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:96 _14 ] [96])
                (const_int 564 [0x234])) [2 _14->pgrp+0 S4 A32])) "kernel/exit.c":137:21 75 {*movsi_internal}
     (nil))
(insn 87 86 88 14 (set (reg:SI 1 dx [139])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 pid+0 S4 A32])) "kernel/exit.c":137:31 75 {*movsi_internal}
     (nil))
(insn 88 87 89 14 (parallel [
            (set (reg:SI 1 dx [orig:98 _16 ] [98])
                (neg:SI (reg:SI 1 dx [139])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":137:31 575 {*negsi_1}
     (expr_list:REG_EQUAL (neg:SI (mem/c:SI (reg/f:SI 16 argp) [5 pid+0 S4 A32]))
        (nil)))
(insn 89 88 90 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:97 _15 ] [97])
            (reg:SI 1 dx [orig:98 _16 ] [98]))) "kernel/exit.c":137:16 11 {*cmpsi_1}
     (nil))
(jump_insn 90 89 94 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 262)
            (pc))) "kernel/exit.c":137:16 806 {*jcc}
     (nil)
 -> 262)
(code_label 94 90 95 15 51 (nil) [3 uses])
(note 95 94 96 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 15 (set (reg/f:SI 0 ax [140])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [21 p+0 S4 A32])) "kernel/exit.c":140:18 75 {*movsi_internal}
     (nil))
(insn 97 96 98 15 (set (reg/f:SI 0 ax [orig:99 _17 ] [99])
        (mem/f:SI (reg/f:SI 0 ax [140]) [13 *p_46+0 S4 A32])) "kernel/exit.c":140:18 75 {*movsi_internal}
     (nil))
(insn 98 97 99 15 (set (reg:SI 0 ax [orig:100 _18 ] [100])
        (mem:SI (reg/f:SI 0 ax [orig:99 _17 ] [99]) [2 _17->state+0 S4 A32])) "kernel/exit.c":140:21 75 {*movsi_internal}
     (nil))
(insn 99 98 100 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:100 _18 ] [100])
            (const_int 3 [0x3]))) "kernel/exit.c":140:9 11 {*cmpsi_1}
     (nil))
(jump_insn 100 99 101 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 124)
            (pc))) "kernel/exit.c":140:9 806 {*jcc}
     (nil)
 -> 124)
(note 101 100 102 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:100 _18 ] [100])
            (const_int 4 [0x4]))) "kernel/exit.c":140:9 11 {*cmpsi_1}
     (nil))
(jump_insn 103 102 104 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) "kernel/exit.c":140:9 806 {*jcc}
     (nil)
 -> 169)
(note 104 103 105 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 17 (set (reg:SI 0 ax [141])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [5 options+0 S4 A32])) "kernel/exit.c":142:27 75 {*movsi_internal}
     (nil))
(insn 106 105 107 17 (parallel [
            (set (reg:SI 0 ax [orig:101 _19 ] [101])
                (and:SI (reg:SI 0 ax [141])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":142:27 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [5 options+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 107 106 108 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:101 _19 ] [101])
            (const_int 0 [0]))) "kernel/exit.c":142:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 108 107 113 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 267)
            (pc))) "kernel/exit.c":142:16 806 {*jcc}
     (nil)
 -> 267)
(note 113 108 114 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":144:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 115 114 116 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [19 stat_addr+0 S4 A32])) "kernel/exit.c":144:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 116 115 117 18 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (const_int 127 [0x7f])) "kernel/exit.c":144:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 117 116 118 18 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x76c2f074dc00 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":144:13 812 {*call}
     (nil)
    (nil))
(insn 118 117 119 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":144:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 119 118 120 18 (set (reg/f:SI 0 ax [142])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [21 p+0 S4 A32])) "kernel/exit.c":145:21 75 {*movsi_internal}
     (nil))
(insn 120 119 121 18 (set (reg/f:SI 0 ax [orig:102 _20 ] [102])
        (mem/f:SI (reg/f:SI 0 ax [142]) [13 *p_46+0 S4 A32])) "kernel/exit.c":145:21 75 {*movsi_internal}
     (nil))
(insn 121 120 239 18 (set (reg:SI 0 ax [orig:126 _47 ] [126])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:102 _20 ] [102])
                (const_int 556 [0x22c])) [2 _20->pid+0 S4 A32])) "kernel/exit.c":145:24 75 {*movsi_internal}
     (nil))
(jump_insn 239 121 240 18 (set (pc)
        (label_ref 222)) "kernel/exit.c":145:24 807 {jump}
     (nil)
 -> 222)
(barrier 240 239 124)
(code_label 124 240 125 19 53 (nil) [1 uses])
(note 125 124 126 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 19 (set (reg/f:SI 0 ax [143])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":147:29 75 {*movsi_internal}
     (nil))
(insn 127 126 128 19 (set (reg/f:SI 0 ax [orig:103 current.28_21 ] [103])
        (mem/f/c:SI (reg/f:SI 0 ax [143]) [13 current+0 S4 A32])) "kernel/exit.c":147:29 75 {*movsi_internal}
     (nil))
(insn 128 127 129 19 (set (reg:SI 2 cx [orig:104 _22 ] [104])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:103 current.28_21 ] [103])
                (const_int 600 [0x258])) [2 current.28_21->cutime+0 S4 A32])) "kernel/exit.c":147:29 75 {*movsi_internal}
     (nil))
(insn 129 128 130 19 (set (reg/f:SI 0 ax [144])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [21 p+0 S4 A32])) "kernel/exit.c":147:33 75 {*movsi_internal}
     (nil))
(insn 130 129 131 19 (set (reg/f:SI 0 ax [orig:105 _23 ] [105])
        (mem/f:SI (reg/f:SI 0 ax [144]) [13 *p_46+0 S4 A32])) "kernel/exit.c":147:33 75 {*movsi_internal}
     (nil))
(insn 131 130 132 19 (set (reg:SI 1 dx [orig:106 _24 ] [106])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:105 _23 ] [105])
                (const_int 592 [0x250])) [2 _23->utime+0 S4 A32])) "kernel/exit.c":147:36 75 {*movsi_internal}
     (nil))
(insn 132 131 133 19 (set (reg/f:SI 0 ax [145])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":147:29 75 {*movsi_internal}
     (nil))
(insn 133 132 134 19 (set (reg/f:SI 0 ax [orig:107 current.29_25 ] [107])
        (mem/f/c:SI (reg/f:SI 0 ax [145]) [13 current+0 S4 A32])) "kernel/exit.c":147:29 75 {*movsi_internal}
     (nil))
(insn 134 133 135 19 (parallel [
            (set (reg:SI 1 dx [orig:108 _26 ] [108])
                (plus:SI (reg:SI 1 dx [orig:106 _24 ] [106])
                    (reg:SI 2 cx [orig:104 _22 ] [104])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":147:29 209 {*addsi_1}
     (nil))
(insn 135 134 136 19 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:107 current.29_25 ] [107])
                (const_int 600 [0x258])) [2 current.29_25->cutime+0 S4 A32])
        (reg:SI 1 dx [orig:108 _26 ] [108])) "kernel/exit.c":147:29 75 {*movsi_internal}
     (nil))
(insn 136 135 137 19 (set (reg/f:SI 0 ax [146])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":148:29 75 {*movsi_internal}
     (nil))
(insn 137 136 138 19 (set (reg/f:SI 0 ax [orig:109 current.30_27 ] [109])
        (mem/f/c:SI (reg/f:SI 0 ax [146]) [13 current+0 S4 A32])) "kernel/exit.c":148:29 75 {*movsi_internal}
     (nil))
(insn 138 137 139 19 (set (reg:SI 2 cx [orig:110 _28 ] [110])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:109 current.30_27 ] [109])
                (const_int 604 [0x25c])) [2 current.30_27->cstime+0 S4 A32])) "kernel/exit.c":148:29 75 {*movsi_internal}
     (nil))
(insn 139 138 140 19 (set (reg/f:SI 0 ax [147])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [21 p+0 S4 A32])) "kernel/exit.c":148:33 75 {*movsi_internal}
     (nil))
(insn 140 139 141 19 (set (reg/f:SI 0 ax [orig:111 _29 ] [111])
        (mem/f:SI (reg/f:SI 0 ax [147]) [13 *p_46+0 S4 A32])) "kernel/exit.c":148:33 75 {*movsi_internal}
     (nil))
(insn 141 140 142 19 (set (reg:SI 1 dx [orig:112 _30 ] [112])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:111 _29 ] [111])
                (const_int 596 [0x254])) [2 _29->stime+0 S4 A32])) "kernel/exit.c":148:36 75 {*movsi_internal}
     (nil))
(insn 142 141 143 19 (set (reg/f:SI 0 ax [148])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":148:29 75 {*movsi_internal}
     (nil))
(insn 143 142 144 19 (set (reg/f:SI 0 ax [orig:113 current.31_31 ] [113])
        (mem/f/c:SI (reg/f:SI 0 ax [148]) [13 current+0 S4 A32])) "kernel/exit.c":148:29 75 {*movsi_internal}
     (nil))
(insn 144 143 145 19 (parallel [
            (set (reg:SI 1 dx [orig:114 _32 ] [114])
                (plus:SI (reg:SI 1 dx [orig:112 _30 ] [112])
                    (reg:SI 2 cx [orig:110 _28 ] [110])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":148:29 209 {*addsi_1}
     (nil))
(insn 145 144 146 19 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:113 current.31_31 ] [113])
                (const_int 604 [0x25c])) [2 current.31_31->cstime+0 S4 A32])
        (reg:SI 1 dx [orig:114 _32 ] [114])) "kernel/exit.c":148:29 75 {*movsi_internal}
     (nil))
(insn 146 145 147 19 (set (reg/f:SI 0 ax [149])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [21 p+0 S4 A32])) "kernel/exit.c":149:21 75 {*movsi_internal}
     (nil))
(insn 147 146 148 19 (set (reg/f:SI 0 ax [orig:115 _33 ] [115])
        (mem/f:SI (reg/f:SI 0 ax [149]) [13 *p_46+0 S4 A32])) "kernel/exit.c":149:21 75 {*movsi_internal}
     (nil))
(insn 148 147 149 19 (set (reg:SI 0 ax [150])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:115 _33 ] [115])
                (const_int 556 [0x22c])) [2 _33->pid+0 S4 A32])) "kernel/exit.c":149:18 75 {*movsi_internal}
     (nil))
(insn 149 148 150 19 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 flag+0 S4 A32])
        (reg:SI 0 ax [150])) "kernel/exit.c":149:18 75 {*movsi_internal}
     (nil))
(insn 150 149 151 19 (set (reg/f:SI 0 ax [151])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [21 p+0 S4 A32])) "kernel/exit.c":150:21 75 {*movsi_internal}
     (nil))
(insn 151 150 152 19 (set (reg/f:SI 0 ax [orig:116 _34 ] [116])
        (mem/f:SI (reg/f:SI 0 ax [151]) [13 *p_46+0 S4 A32])) "kernel/exit.c":150:21 75 {*movsi_internal}
     (nil))
(insn 152 151 153 19 (set (reg:SI 0 ax [152])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:116 _34 ] [116])
                (const_int 532 [0x214])) [5 _34->exit_code+0 S4 A32])) "kernel/exit.c":150:18 75 {*movsi_internal}
     (nil))
(insn 153 152 154 19 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 code+0 S4 A32])
        (reg:SI 0 ax [152])) "kernel/exit.c":150:18 75 {*movsi_internal}
     (nil))
(insn 154 153 155 19 (set (reg/f:SI 0 ax [153])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [21 p+0 S4 A32])) "kernel/exit.c":151:13 75 {*movsi_internal}
     (nil))
(insn 155 154 156 19 (set (reg/f:SI 0 ax [orig:117 _35 ] [117])
        (mem/f:SI (reg/f:SI 0 ax [153]) [13 *p_46+0 S4 A32])) "kernel/exit.c":151:13 75 {*movsi_internal}
     (nil))
(insn 156 155 157 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":151:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 157 156 158 19 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg/f:SI 0 ax [orig:117 _35 ] [117])) "kernel/exit.c":151:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 158 157 159 19 (call (mem:QI (symbol_ref:SI ("release") [flags 0x3]  <function_decl 0x76c2f0752500 release>) [0 release S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":151:13 812 {*call}
     (nil)
    (nil))
(insn 159 158 160 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":151:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 160 159 161 19 (set (reg:SI 0 ax [orig:118 code.32_36 ] [118])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 code+0 S4 A32])) "kernel/exit.c":152:13 75 {*movsi_internal}
     (nil))
(insn 161 160 162 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":152:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 162 161 163 19 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [19 stat_addr+0 S4 A32])) "kernel/exit.c":152:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 163 162 164 19 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 0 ax [orig:118 code.32_36 ] [118])) "kernel/exit.c":152:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 164 163 165 19 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x76c2f074dc00 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 16 [0x10])) "kernel/exit.c":152:13 812 {*call}
     (nil)
    (nil))
(insn 165 164 166 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":152:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 166 165 241 19 (set (reg:SI 0 ax [orig:126 _47 ] [126])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 flag+0 S4 A32])) "kernel/exit.c":153:20 75 {*movsi_internal}
     (nil))
(jump_insn 241 166 242 19 (set (pc)
        (label_ref 222)) "kernel/exit.c":153:20 807 {jump}
     (nil)
 -> 222)
(barrier 242 241 169)
(code_label 169 242 170 20 54 (nil) [1 uses])
(note 170 169 171 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 249 20 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 flag+0 S4 A32])
        (const_int 1 [0x1])) "kernel/exit.c":155:18 75 {*movsi_internal}
     (nil))
(jump_insn 249 171 250 20 (set (pc)
        (label_ref 172)) "kernel/exit.c":156:13 807 {jump}
     (nil)
 -> 172)
(barrier 250 249 252)
(code_label 252 250 251 31 61 (nil) [2 uses])
(note 251 252 253 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 253 251 254 31 (const_int 0 [0]) "kernel/exit.c":127:13 843 {nop}
     (nil))
(jump_insn 254 253 255 31 (set (pc)
        (label_ref 172)) 807 {jump}
     (nil)
 -> 172)
(barrier 255 254 257)
(code_label 257 255 256 32 62 (nil) [1 uses])
(note 256 257 258 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 258 256 259 32 (const_int 0 [0]) "kernel/exit.c":129:13 843 {nop}
     (nil))
(jump_insn 259 258 260 32 (set (pc)
        (label_ref 172)) 807 {jump}
     (nil)
 -> 172)
(barrier 260 259 262)
(code_label 262 260 261 33 63 (nil) [1 uses])
(note 261 262 263 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 263 261 264 33 (const_int 0 [0]) "kernel/exit.c":138:17 843 {nop}
     (nil))
(jump_insn 264 263 265 33 (set (pc)
        (label_ref 172)) 807 {jump}
     (nil)
 -> 172)
(barrier 265 264 267)
(code_label 267 265 266 34 64 (nil) [1 uses])
(note 266 267 268 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 268 266 172 34 (const_int 0 [0]) "kernel/exit.c":143:17 843 {nop}
     (nil))
(code_label 172 268 173 21 48 (nil) [6 uses])
(note 173 172 174 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 21 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [21 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [21 p+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":125:43 209 {*addsi_1}
     (nil))
(code_label 175 174 176 22 45 (nil) [1 uses])
(note 176 175 178 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 178 176 180 22 (set (reg:SI 0 ax [155])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":125:28 75 {*movsi_internal}
     (nil))
(insn 180 178 181 22 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [21 p+0 S4 A32])
            (reg:SI 0 ax [154]))) "kernel/exit.c":125:28 11 {*cmpsi_1}
     (nil))
(jump_insn 181 180 182 22 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 177)
            (pc))) "kernel/exit.c":125:28 806 {*jcc}
     (nil)
 -> 177)
(note 182 181 183 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [5 flag+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":159:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 184 183 185 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 219)
            (pc))) "kernel/exit.c":159:8 806 {*jcc}
     (nil)
 -> 219)
(note 185 184 186 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 24 (set (reg:SI 0 ax [156])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [5 options+0 S4 A32])) "kernel/exit.c":160:21 75 {*movsi_internal}
     (nil))
(insn 187 186 188 24 (parallel [
            (set (reg:SI 0 ax [orig:119 _37 ] [119])
                (and:SI (reg:SI 0 ax [156])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":160:21 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [5 options+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 188 187 189 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:119 _37 ] [119])
            (const_int 0 [0]))) "kernel/exit.c":160:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 189 188 190 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "kernel/exit.c":160:12 806 {*jcc}
     (nil)
 -> 194)
(note 190 189 191 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 243 25 (set (reg:SI 0 ax [orig:126 _47 ] [126])
        (const_int 0 [0])) "kernel/exit.c":161:20 75 {*movsi_internal}
     (nil))
(jump_insn 243 191 244 25 (set (pc)
        (label_ref 222)) "kernel/exit.c":161:20 807 {jump}
     (nil)
 -> 222)
(barrier 244 243 194)
(code_label 194 244 195 26 59 (nil) [1 uses])
(note 195 194 196 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 26 (set (reg/f:SI 0 ax [157])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":162:16 75 {*movsi_internal}
     (nil))
(insn 197 196 198 26 (set (reg/f:SI 0 ax [orig:120 current.33_38 ] [120])
        (mem/f/c:SI (reg/f:SI 0 ax [157]) [13 current+0 S4 A32])) "kernel/exit.c":162:16 75 {*movsi_internal}
     (nil))
(insn 198 197 200 26 (set (mem:SI (reg/f:SI 0 ax [orig:120 current.33_38 ] [120]) [2 current.33_38->state+0 S4 A32])
        (const_int 1 [0x1])) "kernel/exit.c":162:24 75 {*movsi_internal}
     (nil))
(call_insn 200 198 201 26 (call (mem:QI (symbol_ref:SI ("schedule") [flags 0x41]  <function_decl 0x76c2f0715c00 schedule>) [0 schedule S1 A8])
        (const_int 0 [0])) "kernel/exit.c":163:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 201 200 202 26 (set (reg/f:SI 0 ax [158])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":164:31 75 {*movsi_internal}
     (nil))
(insn 202 201 203 26 (set (reg/f:SI 0 ax [orig:121 current.34_39 ] [121])
        (mem/f/c:SI (reg/f:SI 0 ax [158]) [13 current+0 S4 A32])) "kernel/exit.c":164:31 75 {*movsi_internal}
     (nil))
(insn 203 202 204 26 (set (reg:SI 1 dx [orig:122 _40 ] [122])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:121 current.34_39 ] [121])
                (const_int 12 [0xc])) [2 current.34_39->signal+0 S4 A32])) "kernel/exit.c":164:31 75 {*movsi_internal}
     (nil))
(insn 204 203 205 26 (set (reg/f:SI 0 ax [159])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":164:31 75 {*movsi_internal}
     (nil))
(insn 205 204 206 26 (set (reg/f:SI 0 ax [orig:123 current.35_41 ] [123])
        (mem/f/c:SI (reg/f:SI 0 ax [159]) [13 current+0 S4 A32])) "kernel/exit.c":164:31 75 {*movsi_internal}
     (nil))
(insn 206 205 207 26 (parallel [
            (set (reg:SI 1 dx [orig:124 _42 ] [124])
                (and:SI (reg:SI 1 dx [orig:122 _40 ] [122])
                    (const_int -65537 [0xfffffffffffeffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":164:31 490 {*andsi_1}
     (nil))
(insn 207 206 208 26 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:123 current.35_41 ] [123])
                (const_int 12 [0xc])) [2 current.35_41->signal+0 S4 A32])
        (reg:SI 1 dx [orig:124 _42 ] [124])) "kernel/exit.c":164:31 75 {*movsi_internal}
     (nil))
(insn 208 207 209 26 (set (reg:SI 0 ax [orig:125 _43 ] [125])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:123 current.35_41 ] [123])
                (const_int 12 [0xc])) [2 current.35_41->signal+0 S4 A32])) "kernel/exit.c":164:31 75 {*movsi_internal}
     (nil))
(insn 209 208 210 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:125 _43 ] [125])
            (const_int 0 [0]))) "kernel/exit.c":164:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 210 209 211 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 214)
            (pc))) "kernel/exit.c":164:12 806 {*jcc}
     (nil)
 -> 214)
(note 211 210 245 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(jump_insn 245 211 246 27 (set (pc)
        (label_ref 11)) "kernel/exit.c":165:13 807 {jump}
     (nil)
 -> 11)
(barrier 246 245 214)
(code_label 214 246 215 28 60 (nil) [1 uses])
(note 215 214 216 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 216 215 247 28 (set (reg:SI 0 ax [orig:126 _47 ] [126])
        (const_int -4 [0xfffffffffffffffc])) "kernel/exit.c":167:20 75 {*movsi_internal}
     (nil))
(jump_insn 247 216 248 28 (set (pc)
        (label_ref 222)) "kernel/exit.c":167:20 807 {jump}
     (nil)
 -> 222)
(barrier 248 247 219)
(code_label 219 248 220 29 58 (nil) [1 uses])
(note 220 219 221 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 29 (set (reg:SI 0 ax [orig:126 _47 ] [126])
        (const_int -10 [0xfffffffffffffff6])) "kernel/exit.c":169:12 75 {*movsi_internal}
     (nil))
(code_label 222 221 223 30 56 (nil) [4 uses])
(note 223 222 229 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 229 223 270 30 (use (reg/i:SI 0 ax)) "kernel/exit.c":170:1 -1
     (nil))
(note 270 229 0 NOTE_INSN_DELETED)

;; Function sys_kill (sys_kill, funcdef_no=15, decl_uid=1481, cgraph_uid=16, symbol_order=15)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (1) lBwBz {*call_value} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 35:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-12)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 45:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (1) lBwBz {*call_value} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 81:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-12)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 84:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 88:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 91:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (1) lBwBz {*call_value} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 114:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-12)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 116:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 117:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 121:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 124:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =rm  (1) 0 {*negsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (1) lBwBz {*call_value} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 157:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-12)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 159:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 160:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 164:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 167:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5 6 7
EBB 8 9
EBB 10 11
EBB 12 13 14 15
EBB 16 17
EBB 18 19
EBB 20 21
EBB 22 23
EBB 24
EBB 25 26 27 28
EBB 29
EBB 30

********** Pseudo live ranges #1: **********

  BB 30
   Insn 183: point = 0, n_alt = -1
   Insn 182: point = 0, n_alt = -2
   Insn 178: point = 1, n_alt = -2
   Insn 175: point = 3, n_alt = 0
  BB 23
   Insn 198: point = 4, n_alt = -1
  BB 22
   Insn 129: point = 4, n_alt = -1
   Insn 128: point = 4, n_alt = 0
   Insn 127: point = 5, n_alt = -2
   Insn 126: point = 7, n_alt = 0
   Insn 124: point = 8, n_alt = 0
  BB 19
   Insn 195: point = 9, n_alt = -1
  BB 21
   Insn 121: point = 10, n_alt = 1
   Insn 120: point = 11, n_alt = 0
  BB 20
   Insn 118: point = 13, n_alt = -1
   Insn 117: point = 13, n_alt = 1
   Insn 116: point = 13, n_alt = 1
   Insn 115: point = 14, n_alt = -2
   Insn 114: point = 15, n_alt = 0
   Insn 113: point = 15, n_alt = 0
   Insn 112: point = 15, n_alt = 0
   Insn 111: point = 15, n_alt = 0
   Insn 110: point = 16, n_alt = 0
   Insn 109: point = 16, n_alt = 0
   Insn 108: point = 18, n_alt = 0
  BB 9
   Insn 188: point = 20, n_alt = -1
  BB 8
   Insn 50: point = 20, n_alt = -1
   Insn 49: point = 20, n_alt = 0
   Insn 48: point = 21, n_alt = -2
   Insn 47: point = 23, n_alt = 0
   Insn 45: point = 24, n_alt = 0
  BB 3
   Insn 185: point = 25, n_alt = -1
  BB 7
   Insn 42: point = 26, n_alt = 1
   Insn 41: point = 27, n_alt = 0
  BB 6
   Insn 39: point = 29, n_alt = -1
   Insn 38: point = 29, n_alt = 1
   Insn 37: point = 29, n_alt = 1
   Insn 36: point = 30, n_alt = -2
   Insn 35: point = 31, n_alt = 0
   Insn 34: point = 31, n_alt = 0
   Insn 33: point = 31, n_alt = 0
   Insn 32: point = 31, n_alt = 0
   Insn 31: point = 32, n_alt = 0
   Insn 30: point = 32, n_alt = 0
   Insn 29: point = 34, n_alt = 0
  BB 5
   Insn 27: point = 36, n_alt = -1
   Insn 26: point = 36, n_alt = 0
   Insn 25: point = 37, n_alt = 0
   Insn 24: point = 39, n_alt = 0
   Insn 23: point = 41, n_alt = 0
   Insn 22: point = 42, n_alt = 0
   Insn 21: point = 44, n_alt = 0
   Insn 20: point = 46, n_alt = 0
  BB 4
   Insn 18: point = 48, n_alt = -1
   Insn 17: point = 48, n_alt = 0
   Insn 16: point = 49, n_alt = 0
   Insn 15: point = 51, n_alt = 0
  BB 17
   Insn 193: point = 53, n_alt = -1
  BB 16
   Insn 96: point = 53, n_alt = -1
   Insn 95: point = 53, n_alt = 0
   Insn 94: point = 54, n_alt = -2
   Insn 93: point = 56, n_alt = 0
   Insn 91: point = 57, n_alt = 0
  BB 11
   Insn 190: point = 58, n_alt = -1
  BB 15
   Insn 88: point = 59, n_alt = 1
   Insn 87: point = 60, n_alt = 0
  BB 14
   Insn 85: point = 62, n_alt = -1
   Insn 84: point = 62, n_alt = 1
   Insn 83: point = 62, n_alt = 1
   Insn 82: point = 63, n_alt = -2
   Insn 81: point = 64, n_alt = 0
   Insn 80: point = 64, n_alt = 0
   Insn 79: point = 64, n_alt = 0
   Insn 78: point = 64, n_alt = 0
   Insn 77: point = 65, n_alt = 0
   Insn 76: point = 65, n_alt = 0
   Insn 75: point = 67, n_alt = 0
  BB 13
   Insn 73: point = 69, n_alt = -1
   Insn 72: point = 69, n_alt = 0
   Insn 71: point = 70, n_alt = 0
   Insn 70: point = 72, n_alt = 0
   Insn 69: point = 74, n_alt = 0
  BB 12
   Insn 67: point = 76, n_alt = -1
   Insn 66: point = 76, n_alt = 0
   Insn 65: point = 77, n_alt = 0
   Insn 64: point = 79, n_alt = 0
  BB 29
   Insn 172: point = 81, n_alt = -1
   Insn 171: point = 81, n_alt = 0
   Insn 170: point = 82, n_alt = -2
   Insn 169: point = 84, n_alt = 0
   Insn 167: point = 85, n_alt = 0
  BB 24
   Insn 200: point = 86, n_alt = -1
  BB 18
   Insn 103: point = 87, n_alt = -1
   Insn 102: point = 87, n_alt = 0
  BB 10
   Insn 59: point = 88, n_alt = -1
   Insn 58: point = 88, n_alt = 1
  BB 2
   Insn 10: point = 89, n_alt = -1
   Insn 9: point = 89, n_alt = 1
   Insn 8: point = 89, n_alt = 1
   Insn 7: point = 89, n_alt = 1
   Insn 6: point = 90, n_alt = 0
   Insn 5: point = 92, n_alt = 0
   Insn 202: point = 93, n_alt = 0
  BB 28
   Insn 164: point = 94, n_alt = 1
   Insn 163: point = 95, n_alt = 0
  BB 27
   Insn 161: point = 97, n_alt = -1
   Insn 160: point = 97, n_alt = 1
   Insn 159: point = 97, n_alt = 1
   Insn 158: point = 98, n_alt = -2
   Insn 157: point = 99, n_alt = 0
   Insn 156: point = 99, n_alt = 0
   Insn 155: point = 99, n_alt = 0
   Insn 154: point = 99, n_alt = 0
   Insn 153: point = 100, n_alt = 0
   Insn 152: point = 100, n_alt = 0
   Insn 151: point = 102, n_alt = 0
  BB 26
   Insn 149: point = 104, n_alt = -1
   Insn 148: point = 104, n_alt = 0
   Insn 147: point = 105, n_alt = 0
   Insn 146: point = 107, n_alt = 0
   Insn 145: point = 108, n_alt = 0
   Insn 144: point = 110, n_alt = 0
   Insn 143: point = 112, n_alt = 0
  BB 25
   Insn 141: point = 114, n_alt = -1
   Insn 140: point = 114, n_alt = 0
   Insn 139: point = 115, n_alt = 0
   Insn 138: point = 117, n_alt = 0
 r82: [4..118]
 r83: [48..49]
 r84: [43..44]
 r85: [36..42]
 r86: [38..39]
 r87: [36..37]
 r88: [31..32]
 r89: [76..77]
 r90: [71..72]
 r91: [69..70]
 r92: [64..65]
 r93: [15..16]
 r94: [114..115]
 r95: [109..110]
 r96: [104..108]
 r97: [104..105]
 r98: [99..100]
 r99: [2..3]
 r100: [0..1]
 r101: [89..90]
 r102: [91..92]
 r103: [50..51]
 r104: [45..46]
 r105: [40..41]
 r106: [33..34]
 r107: [29..30]
 r108: [26..27]
 r109: [20..21]
 r110: [22..23]
 r111: [78..79]
 r112: [73..74]
 r113: [66..67]
 r114: [62..63]
 r115: [59..60]
 r116: [53..54]
 r117: [55..56]
 r118: [17..18]
 r119: [13..14]
 r120: [10..11]
 r121: [4..5]
 r122: [6..7]
 r123: [116..117]
 r124: [111..112]
 r125: [106..107]
 r126: [101..102]
 r127: [97..98]
 r128: [94..95]
 r129: [81..82]
 r130: [83..84]
Compressing live ranges: from 119 to 92 - 77%
Ranges after the compression:
 r82: [4..91]
 r83: [38..39]
 r84: [34..35]
 r85: [28..33]
 r86: [30..31]
 r87: [28..29]
 r88: [24..25]
 r89: [60..61]
 r90: [56..57]
 r91: [54..55]
 r92: [50..51]
 r93: [12..13]
 r94: [88..89]
 r95: [84..85]
 r96: [80..83]
 r97: [80..81]
 r98: [76..77]
 r99: [2..3]
 r100: [0..1]
 r101: [68..69]
 r102: [70..71]
 r103: [40..41]
 r104: [36..37]
 r105: [32..33]
 r106: [26..27]
 r107: [22..23]
 r108: [20..21]
 r109: [16..17]
 r110: [18..19]
 r111: [62..63]
 r112: [58..59]
 r113: [52..53]
 r114: [48..49]
 r115: [46..47]
 r116: [42..43]
 r117: [44..45]
 r118: [14..15]
 r119: [10..11]
 r120: [8..9]
 r121: [4..5]
 r122: [6..7]
 r123: [90..91]
 r124: [86..87]
 r125: [82..83]
 r126: [78..79]
 r127: [74..75]
 r128: [72..73]
 r129: [64..65]
 r130: [66..67]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=24)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
changing reg in insn 202
changing reg in insn 169
changing reg in insn 126
changing reg in insn 93
changing reg in insn 47
changing reg in insn 23
changing reg in insn 5
changing reg in insn 16
changing reg in insn 17
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 26
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 26
changing reg in insn 30
changing reg in insn 32
changing reg in insn 65
changing reg in insn 66
changing reg in insn 70
changing reg in insn 71
changing reg in insn 71
changing reg in insn 72
changing reg in insn 76
changing reg in insn 78
changing reg in insn 109
changing reg in insn 111
changing reg in insn 139
changing reg in insn 140
changing reg in insn 144
changing reg in insn 145
changing reg in insn 145
changing reg in insn 148
changing reg in insn 147
changing reg in insn 148
changing reg in insn 152
changing reg in insn 154
changing reg in insn 175
changing reg in insn 178
changing reg in insn 178
changing reg in insn 182
changing reg in insn 6
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 15
changing reg in insn 16
changing reg in insn 20
changing reg in insn 21
changing reg in insn 23
changing reg in insn 24
changing reg in insn 29
changing reg in insn 30
changing reg in insn 36
changing reg in insn 37
changing reg in insn 41
changing reg in insn 42
changing reg in insn 48
changing reg in insn 49
changing reg in insn 47
changing reg in insn 48
changing reg in insn 64
changing reg in insn 65
changing reg in insn 69
changing reg in insn 70
changing reg in insn 75
changing reg in insn 76
changing reg in insn 82
changing reg in insn 83
changing reg in insn 87
changing reg in insn 88
changing reg in insn 94
changing reg in insn 95
changing reg in insn 93
changing reg in insn 94
changing reg in insn 108
changing reg in insn 109
changing reg in insn 115
changing reg in insn 116
changing reg in insn 120
changing reg in insn 121
changing reg in insn 127
changing reg in insn 128
changing reg in insn 126
changing reg in insn 127
changing reg in insn 138
changing reg in insn 139
changing reg in insn 143
changing reg in insn 144
changing reg in insn 146
changing reg in insn 147
changing reg in insn 151
changing reg in insn 152
changing reg in insn 158
changing reg in insn 159
changing reg in insn 163
changing reg in insn 164
changing reg in insn 170
changing reg in insn 171
changing reg in insn 169
changing reg in insn 170
deleting insn with uid = 36.
deleting insn with uid = 48.
deleting insn with uid = 82.
deleting insn with uid = 94.
deleting insn with uid = 115.
deleting insn with uid = 127.
deleting insn with uid = 158.
deleting insn with uid = 170.
deleting insn with uid = 178.
deleting insn with uid = 182.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 80.
verify found no changes in insn with uid = 113.
verify found no changes in insn with uid = 156.


sys_kill

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={41d,41u} r1={8d,3u} r2={5d} r3={1d,6u} r7={17d,104u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1e} r17={31d,17u} r18={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 535{363d,171u,1e} in 116{112 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 202 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 202 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 202 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 ax [102])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":178:26 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 0 ax [101])
        (plus:SI (reg:SI 0 ax [102])
            (const_int 256 [0x100]))) "kernel/exit.c":178:26 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                (const_int 256 [0x100])))
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 p+0 S4 A32])
        (reg/f:SI 0 ax [101])) "kernel/exit.c":178:26 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [5 retval+0 S4 A32])
        (const_int 0 [0])) "kernel/exit.c":179:14 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [5 pid+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":181:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "kernel/exit.c":181:8 806 {*jcc}
     (nil)
 -> 54)
(note 11 10 185 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 185 11 186 3 (set (pc)
        (label_ref 43)) "kernel/exit.c":181:21 807 {jump}
     (nil)
 -> 43)
(barrier 186 185 46)
(code_label 46 186 14 4 68 (nil) [1 uses])
(note 14 46 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:SI 0 ax [103])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 p+0 S4 A32])) "kernel/exit.c":182:13 75 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
        (mem/f:SI (reg/f:SI 0 ax [103]) [13 *p_48+0 S4 A32])) "kernel/exit.c":182:13 75 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "kernel/exit.c":182:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "kernel/exit.c":182:12 806 {*jcc}
     (nil)
 -> 43)
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg/f:SI 0 ax [104])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 p+0 S4 A32])) "kernel/exit.c":182:20 75 {*movsi_internal}
     (nil))
(insn 21 20 22 5 (set (reg/f:SI 0 ax [orig:84 _2 ] [84])
        (mem/f:SI (reg/f:SI 0 ax [104]) [13 *p_48+0 S4 A32])) "kernel/exit.c":182:20 75 {*movsi_internal}
     (nil))
(insn 22 21 23 5 (set (reg:SI 1 dx [orig:85 _3 ] [85])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:84 _2 ] [84])
                (const_int 564 [0x234])) [2 _2->pgrp+0 S4 A32])) "kernel/exit.c":182:23 75 {*movsi_internal}
     (nil))
(insn 23 22 24 5 (set (reg/f:SI 0 ax [105])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x76c2f072e120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":182:40 75 {*movsi_internal}
     (nil))
(insn 24 23 25 5 (set (reg/f:SI 0 ax [orig:86 current.36_4 ] [86])
        (mem/f/c:SI (reg/f:SI 0 ax [105]) [13 current+0 S4 A32])) "kernel/exit.c":182:40 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg:SI 0 ax [orig:87 _5 ] [87])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:86 current.36_4 ] [86])
                (const_int 556 [0x22c])) [2 current.36_4->pid+0 S4 A32])) "kernel/exit.c":182:40 75 {*movsi_internal}
     (nil))
(insn 26 25 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:85 _3 ] [85])
            (reg:SI 0 ax [orig:87 _5 ] [87]))) "kernel/exit.c":182:16 11 {*cmpsi_1}
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "kernel/exit.c":182:16 806 {*jcc}
     (nil)
 -> 43)
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg/f:SI 0 ax [106])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 p+0 S4 A32])) "kernel/exit.c":183:24 75 {*movsi_internal}
     (nil))
(insn 30 29 31 6 (set (reg/f:SI 0 ax [orig:88 _6 ] [88])
        (mem/f:SI (reg/f:SI 0 ax [106]) [13 *p_48+0 S4 A32])) "kernel/exit.c":183:24 75 {*movsi_internal}
     (nil))
(insn 31 30 32 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (const_int 1 [0x1])) "kernel/exit.c":183:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 32 31 33 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg/f:SI 0 ax [orig:88 _6 ] [88])) "kernel/exit.c":183:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 33 32 34 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [5 sig+0 S4 A32])) "kernel/exit.c":183:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(call_insn 34 33 35 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("send_sig") [flags 0x3]  <function_decl 0x76c2f0752700 send_sig>) [0 send_sig S1 A8])
            (const_int 12 [0xc]))) "kernel/exit.c":183:24 823 {*call_value}
     (nil)
    (nil))
(insn 35 34 37 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":183:24 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 37 35 38 6 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 err+0 S4 A32])
        (reg:SI 0 ax [107])) "kernel/exit.c":183:24 75 {*movsi_internal}
     (nil))
(insn 38 37 39 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [5 err+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":183:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 39 38 40 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "kernel/exit.c":183:16 806 {*jcc}
     (nil)
 -> 43)
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg:SI 0 ax [108])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 err+0 S4 A32])) "kernel/exit.c":184:24 75 {*movsi_internal}
     (nil))
(insn 42 41 43 7 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [5 retval+0 S4 A32])
        (reg:SI 0 ax [108])) "kernel/exit.c":184:24 75 {*movsi_internal}
     (nil))
(code_label 43 42 44 8 67 (nil) [4 uses])
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 47 8 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [21 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [21 p+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":181:26 209 {*addsi_1}
     (nil))
(insn 47 45 49 8 (set (reg:SI 0 ax [110])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":181:26 75 {*movsi_internal}
     (nil))
(insn 49 47 50 8 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [21 p+0 S4 A32])
            (reg:SI 0 ax [109]))) "kernel/exit.c":181:26 11 {*cmpsi_1}
     (nil))
(jump_insn 50 49 187 8 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "kernel/exit.c":181:26 806 {*jcc}
     (nil)
 -> 46)
(note 187 50 188 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 188 187 189 9 (set (pc)
        (label_ref 173)) 807 {jump}
     (nil)
 -> 173)
(barrier 189 188 54)
(code_label 54 189 55 10 66 (nil) [1 uses])
(note 55 54 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 55 59 10 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [5 pid+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":185:15 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 59 58 60 10 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) "kernel/exit.c":185:15 806 {*jcc}
     (nil)
 -> 100)
(note 60 59 190 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 190 60 191 11 (set (pc)
        (label_ref 89)) "kernel/exit.c":185:31 807 {jump}
     (nil)
 -> 89)
(barrier 191 190 92)
(code_label 92 191 63 12 72 (nil) [1 uses])
(note 63 92 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 12 (set (reg/f:SI 0 ax [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 p+0 S4 A32])) "kernel/exit.c":186:13 75 {*movsi_internal}
     (nil))
(insn 65 64 66 12 (set (reg/f:SI 0 ax [orig:89 _7 ] [89])
        (mem/f:SI (reg/f:SI 0 ax [111]) [13 *p_44+0 S4 A32])) "kernel/exit.c":186:13 75 {*movsi_internal}
     (nil))
(insn 66 65 67 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:89 _7 ] [89])
            (const_int 0 [0]))) "kernel/exit.c":186:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 67 66 68 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "kernel/exit.c":186:12 806 {*jcc}
     (nil)
 -> 89)
(note 68 67 69 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 13 (set (reg/f:SI 0 ax [112])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 p+0 S4 A32])) "kernel/exit.c":186:20 75 {*movsi_internal}
     (nil))
(insn 70 69 71 13 (set (reg/f:SI 0 ax [orig:90 _8 ] [90])
        (mem/f:SI (reg/f:SI 0 ax [112]) [13 *p_44+0 S4 A32])) "kernel/exit.c":186:20 75 {*movsi_internal}
     (nil))
(insn 71 70 72 13 (set (reg:SI 0 ax [orig:91 _9 ] [91])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:90 _8 ] [90])
                (const_int 556 [0x22c])) [2 _8->pid+0 S4 A32])) "kernel/exit.c":186:23 75 {*movsi_internal}
     (nil))
(insn 72 71 73 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [5 pid+0 S4 A32])
            (reg:SI 0 ax [orig:91 _9 ] [91]))) "kernel/exit.c":186:16 11 {*cmpsi_1}
     (nil))
(jump_insn 73 72 74 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "kernel/exit.c":186:16 806 {*jcc}
     (nil)
 -> 89)
(note 74 73 75 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 14 (set (reg/f:SI 0 ax [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 p+0 S4 A32])) "kernel/exit.c":187:24 75 {*movsi_internal}
     (nil))
(insn 76 75 77 14 (set (reg/f:SI 0 ax [orig:92 _10 ] [92])
        (mem/f:SI (reg/f:SI 0 ax [113]) [13 *p_44+0 S4 A32])) "kernel/exit.c":187:24 75 {*movsi_internal}
     (nil))
(insn 77 76 78 14 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (const_int 0 [0])) "kernel/exit.c":187:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 78 77 79 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg/f:SI 0 ax [orig:92 _10 ] [92])) "kernel/exit.c":187:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 79 78 80 14 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [5 sig+0 S4 A32])) "kernel/exit.c":187:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(call_insn 80 79 81 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("send_sig") [flags 0x3]  <function_decl 0x76c2f0752700 send_sig>) [0 send_sig S1 A8])
            (const_int 12 [0xc]))) "kernel/exit.c":187:24 823 {*call_value}
     (nil)
    (nil))
(insn 81 80 83 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":187:24 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 83 81 84 14 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 err+0 S4 A32])
        (reg:SI 0 ax [114])) "kernel/exit.c":187:24 75 {*movsi_internal}
     (nil))
(insn 84 83 85 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [5 err+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":187:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 85 84 86 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "kernel/exit.c":187:16 806 {*jcc}
     (nil)
 -> 89)
(note 86 85 87 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 15 (set (reg:SI 0 ax [115])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 err+0 S4 A32])) "kernel/exit.c":188:24 75 {*movsi_internal}
     (nil))
(insn 88 87 89 15 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [5 retval+0 S4 A32])
        (reg:SI 0 ax [115])) "kernel/exit.c":188:24 75 {*movsi_internal}
     (nil))
(code_label 89 88 90 16 71 (nil) [4 uses])
(note 90 89 91 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 93 16 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [21 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [21 p+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":185:36 209 {*addsi_1}
     (nil))
(insn 93 91 95 16 (set (reg:SI 0 ax [117])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":185:36 75 {*movsi_internal}
     (nil))
(insn 95 93 96 16 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [21 p+0 S4 A32])
            (reg:SI 0 ax [116]))) "kernel/exit.c":185:36 11 {*cmpsi_1}
     (nil))
(jump_insn 96 95 192 16 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) "kernel/exit.c":185:36 806 {*jcc}
     (nil)
 -> 92)
(note 192 96 193 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(jump_insn 193 192 194 17 (set (pc)
        (label_ref 173)) 807 {jump}
     (nil)
 -> 173)
(barrier 194 193 100)
(code_label 100 194 101 18 70 (nil) [1 uses])
(note 101 100 102 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [5 pid+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) "kernel/exit.c":189:15 11 {*cmpsi_1}
     (nil))
(jump_insn 103 102 104 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 133)
            (pc))) "kernel/exit.c":189:15 806 {*jcc}
     (nil)
 -> 133)
(note 104 103 195 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(jump_insn 195 104 196 19 (set (pc)
        (label_ref 122)) "kernel/exit.c":189:33 807 {jump}
     (nil)
 -> 122)
(barrier 196 195 125)
(code_label 125 196 107 20 75 (nil) [1 uses])
(note 107 125 108 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 20 (set (reg/f:SI 0 ax [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 p+0 S4 A32])) "kernel/exit.c":190:20 75 {*movsi_internal}
     (nil))
(insn 109 108 110 20 (set (reg/f:SI 0 ax [orig:93 _11 ] [93])
        (mem/f:SI (reg/f:SI 0 ax [118]) [13 *p_40+0 S4 A32])) "kernel/exit.c":190:20 75 {*movsi_internal}
     (nil))
(insn 110 109 111 20 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (const_int 0 [0])) "kernel/exit.c":190:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 111 110 112 20 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg/f:SI 0 ax [orig:93 _11 ] [93])) "kernel/exit.c":190:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 112 111 113 20 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [5 sig+0 S4 A32])) "kernel/exit.c":190:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(call_insn 113 112 114 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("send_sig") [flags 0x3]  <function_decl 0x76c2f0752700 send_sig>) [0 send_sig S1 A8])
            (const_int 12 [0xc]))) "kernel/exit.c":190:20 823 {*call_value}
     (nil)
    (nil))
(insn 114 113 116 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":190:20 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 116 114 117 20 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 err+0 S4 A32])
        (reg:SI 0 ax [119])) "kernel/exit.c":190:20 75 {*movsi_internal}
     (nil))
(insn 117 116 118 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [5 err+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":190:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 118 117 119 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) "kernel/exit.c":190:12 806 {*jcc}
     (nil)
 -> 122)
(note 119 118 120 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 21 (set (reg:SI 0 ax [120])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 err+0 S4 A32])) "kernel/exit.c":191:20 75 {*movsi_internal}
     (nil))
(insn 121 120 122 21 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [5 retval+0 S4 A32])
        (reg:SI 0 ax [120])) "kernel/exit.c":191:20 75 {*movsi_internal}
     (nil))
(code_label 122 121 123 22 74 (nil) [2 uses])
(note 123 122 124 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 126 22 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [21 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [21 p+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":189:38 209 {*addsi_1}
     (nil))
(insn 126 124 128 22 (set (reg:SI 0 ax [122])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":189:38 75 {*movsi_internal}
     (nil))
(insn 128 126 129 22 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [21 p+0 S4 A32])
            (reg:SI 0 ax [121]))) "kernel/exit.c":189:38 11 {*cmpsi_1}
     (nil))
(jump_insn 129 128 197 22 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) "kernel/exit.c":189:38 806 {*jcc}
     (nil)
 -> 125)
(note 197 129 198 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 198 197 199 23 (set (pc)
        (label_ref 173)) 807 {jump}
     (nil)
 -> 173)
(barrier 199 198 133)
(code_label 133 199 134 24 73 (nil) [1 uses])
(note 134 133 200 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 200 134 201 24 (set (pc)
        (label_ref 165)) "kernel/exit.c":192:18 807 {jump}
     (nil)
 -> 165)
(barrier 201 200 168)
(code_label 168 201 137 25 77 (nil) [1 uses])
(note 137 168 138 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 25 (set (reg/f:SI 0 ax [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 p+0 S4 A32])) "kernel/exit.c":193:13 75 {*movsi_internal}
     (nil))
(insn 139 138 140 25 (set (reg/f:SI 0 ax [orig:94 _12 ] [94])
        (mem/f:SI (reg/f:SI 0 ax [123]) [13 *p_35+0 S4 A32])) "kernel/exit.c":193:13 75 {*movsi_internal}
     (nil))
(insn 140 139 141 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:94 _12 ] [94])
            (const_int 0 [0]))) "kernel/exit.c":193:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 141 140 142 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) "kernel/exit.c":193:12 806 {*jcc}
     (nil)
 -> 165)
(note 142 141 143 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 26 (set (reg/f:SI 0 ax [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 p+0 S4 A32])) "kernel/exit.c":193:20 75 {*movsi_internal}
     (nil))
(insn 144 143 145 26 (set (reg/f:SI 0 ax [orig:95 _13 ] [95])
        (mem/f:SI (reg/f:SI 0 ax [124]) [13 *p_35+0 S4 A32])) "kernel/exit.c":193:20 75 {*movsi_internal}
     (nil))
(insn 145 144 146 26 (set (reg:SI 0 ax [orig:96 _14 ] [96])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:95 _13 ] [95])
                (const_int 564 [0x234])) [2 _13->pgrp+0 S4 A32])) "kernel/exit.c":193:23 75 {*movsi_internal}
     (nil))
(insn 146 145 147 26 (set (reg:SI 1 dx [125])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [5 pid+0 S4 A32])) "kernel/exit.c":193:33 75 {*movsi_internal}
     (nil))
(insn 147 146 148 26 (parallel [
            (set (reg:SI 1 dx [orig:97 _15 ] [97])
                (neg:SI (reg:SI 1 dx [125])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":193:33 575 {*negsi_1}
     (expr_list:REG_EQUAL (neg:SI (mem/c:SI (reg/f:SI 16 argp) [5 pid+0 S4 A32]))
        (nil)))
(insn 148 147 149 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:96 _14 ] [96])
            (reg:SI 1 dx [orig:97 _15 ] [97]))) "kernel/exit.c":193:16 11 {*cmpsi_1}
     (nil))
(jump_insn 149 148 150 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) "kernel/exit.c":193:16 806 {*jcc}
     (nil)
 -> 165)
(note 150 149 151 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 27 (set (reg/f:SI 0 ax [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 p+0 S4 A32])) "kernel/exit.c":194:24 75 {*movsi_internal}
     (nil))
(insn 152 151 153 27 (set (reg/f:SI 0 ax [orig:98 _16 ] [98])
        (mem/f:SI (reg/f:SI 0 ax [126]) [13 *p_35+0 S4 A32])) "kernel/exit.c":194:24 75 {*movsi_internal}
     (nil))
(insn 153 152 154 27 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (const_int 0 [0])) "kernel/exit.c":194:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 154 153 155 27 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg/f:SI 0 ax [orig:98 _16 ] [98])) "kernel/exit.c":194:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 155 154 156 27 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [5 sig+0 S4 A32])) "kernel/exit.c":194:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(call_insn 156 155 157 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("send_sig") [flags 0x3]  <function_decl 0x76c2f0752700 send_sig>) [0 send_sig S1 A8])
            (const_int 12 [0xc]))) "kernel/exit.c":194:24 823 {*call_value}
     (nil)
    (nil))
(insn 157 156 159 27 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":194:24 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 159 157 160 27 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 err+0 S4 A32])
        (reg:SI 0 ax [127])) "kernel/exit.c":194:24 75 {*movsi_internal}
     (nil))
(insn 160 159 161 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [5 err+0 S4 A32])
            (const_int 0 [0]))) "kernel/exit.c":194:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 161 160 162 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) "kernel/exit.c":194:16 806 {*jcc}
     (nil)
 -> 165)
(note 162 161 163 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 28 (set (reg:SI 0 ax [128])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 err+0 S4 A32])) "kernel/exit.c":195:24 75 {*movsi_internal}
     (nil))
(insn 164 163 165 28 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [5 retval+0 S4 A32])
        (reg:SI 0 ax [128])) "kernel/exit.c":195:24 75 {*movsi_internal}
     (nil))
(code_label 165 164 166 29 76 (nil) [4 uses])
(note 166 165 167 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 169 29 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [21 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [21 p+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/exit.c":192:23 209 {*addsi_1}
     (nil))
(insn 169 167 171 29 (set (reg:SI 0 ax [130])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x76c2f072e1b0 task>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "kernel/exit.c":192:23 75 {*movsi_internal}
     (nil))
(insn 171 169 172 29 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [21 p+0 S4 A32])
            (reg:SI 0 ax [129]))) "kernel/exit.c":192:23 11 {*cmpsi_1}
     (nil))
(jump_insn 172 171 173 29 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) "kernel/exit.c":192:23 806 {*jcc}
     (nil)
 -> 168)
(code_label 173 172 174 30 69 (nil) [3 uses])
(note 174 173 175 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 183 30 (set (reg:SI 0 ax [orig:99 _52 ] [99])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [5 retval+0 S4 A32])) "kernel/exit.c":196:12 75 {*movsi_internal}
     (nil))
(insn 183 175 203 30 (use (reg/i:SI 0 ax)) "kernel/exit.c":197:1 -1
     (nil))
(note 203 183 0 NOTE_INSN_DELETED)
