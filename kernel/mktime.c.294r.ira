
;; Function kernel_mktime (kernel_mktime, funcdef_no=0, decl_uid=1008, cgraph_uid=1, symbol_order=1)

scanning new insn with uid = 90.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 11 count 9 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r105,l0) best AREG, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r105,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a12(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a13(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a15(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a16(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a17(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a18(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a19(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a25(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a26(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a27(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a28(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a29(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:28000
  a30(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a31(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a32(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a33(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a34(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a35(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a36(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a37(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a38(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a39(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a41(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 86(l0): point = 0
   Insn 85(l0): point = 2
   Insn 81(l0): point = 4
   Insn 78(l0): point = 6
   Insn 77(l0): point = 8
   Insn 76(l0): point = 10
   Insn 75(l0): point = 12
   Insn 74(l0): point = 14
   Insn 73(l0): point = 16
   Insn 72(l0): point = 18
   Insn 71(l0): point = 20
   Insn 70(l0): point = 22
   Insn 69(l0): point = 24
   Insn 68(l0): point = 26
   Insn 67(l0): point = 28
   Insn 66(l0): point = 30
   Insn 65(l0): point = 32
   Insn 64(l0): point = 34
   Insn 63(l0): point = 36
   Insn 62(l0): point = 38
   Insn 59(l0): point = 41
   Insn 57(l0): point = 44
   Insn 56(l0): point = 46
   Insn 55(l0): point = 48
   Insn 54(l0): point = 50
   Insn 53(l0): point = 52
   Insn 52(l0): point = 54
   Insn 50(l0): point = 57
   Insn 49(l0): point = 59
   Insn 46(l0): point = 61
   Insn 45(l0): point = 63
   Insn 44(l0): point = 65
   Insn 43(l0): point = 67
   Insn 42(l0): point = 69
   Insn 41(l0): point = 71
   Insn 40(l0): point = 73
   Insn 39(l0): point = 75
   Insn 38(l0): point = 77
   Insn 37(l0): point = 79
   Insn 36(l0): point = 81
   Insn 35(l0): point = 83
   Insn 34(l0): point = 85
   Insn 31(l0): point = 87
   Insn 30(l0): point = 89
   Insn 29(l0): point = 91
   Insn 28(l0): point = 93
   Insn 27(l0): point = 95
   Insn 26(l0): point = 97
   Insn 23(l0): point = 100
   Insn 22(l0): point = 102
   Insn 21(l0): point = 104
   Insn 20(l0): point = 106
   Insn 88(l0): point = 109
   Insn 15(l0): point = 111
   Insn 14(l0): point = 113
   Insn 13(l0): point = 115
   Insn 12(l0): point = 117
   Insn 10(l0): point = 120
   Insn 9(l0): point = 122
   Insn 6(l0): point = 124
   Insn 5(l0): point = 126
   Insn 90(l0): point = 128
 a0(r105): [3..4]
 a1(r104): [5..6]
 a2(r103): [9..10]
 a3(r123): [11..12]
 a4(r102): [15..16]
 a5(r101): [17..18]
 a6(r122): [19..20]
 a7(r100): [23..24]
 a8(r99): [25..26]
 a9(r121): [27..28]
 a10(r98): [31..32]
 a11(r97): [33..34]
 a12(r96): [35..36]
 a13(r120): [37..38]
 a14(r95): [47..48]
 a15(r94): [49..50]
 a16(r93): [51..52]
 a17(r119): [53..54]
 a18(r92): [60..61]
 a19(r118): [62..63]
 a20(r91): [66..67]
 a21(r82): [68..128]
 a22(r90): [68..69]
 a23(r117): [70..71]
 a24(r116): [74..75]
 a25(r89): [76..77]
 a26(r86): [76..95]
 a27(r88): [78..79]
 a28(r115): [80..81]
 a29(r113): [82..89]
 a30(r114): [84..87]
 a31(r87): [90..91]
 a32(r112): [92..93]
 a33(r111): [96..97]
 a34(r110): [101..102]
 a35(r85): [103..104]
 a36(r109): [105..106]
 a37(r108): [112..113]
 a38(r84): [114..115]
 a39(r107): [116..117]
 a40(r83): [123..124]
 a41(r106): [125..126]
Compressing live ranges: from 131 to 78 - 59%
Ranges after the compression:
 a0(r105): [0..1]
 a1(r104): [2..3]
 a2(r103): [4..5]
 a3(r123): [6..7]
 a4(r102): [8..9]
 a5(r101): [10..11]
 a6(r122): [12..13]
 a7(r100): [14..15]
 a8(r99): [16..17]
 a9(r121): [18..19]
 a10(r98): [20..21]
 a11(r97): [22..23]
 a12(r96): [24..25]
 a13(r120): [26..27]
 a14(r95): [28..29]
 a15(r94): [30..31]
 a16(r93): [32..33]
 a17(r119): [34..35]
 a18(r92): [36..37]
 a19(r118): [38..39]
 a20(r91): [40..41]
 a21(r82): [42..77]
 a22(r90): [42..43]
 a23(r117): [44..45]
 a24(r116): [46..47]
 a25(r89): [48..49]
 a26(r86): [48..59]
 a27(r88): [50..51]
 a28(r115): [52..53]
 a29(r113): [54..55]
 a30(r114): [54..55]
 a31(r87): [56..57]
 a32(r112): [58..59]
 a33(r111): [60..61]
 a34(r110): [62..63]
 a35(r85): [64..65]
 a36(r109): [66..67]
 a37(r108): [68..69]
 a38(r84): [70..71]
 a39(r107): [72..73]
 a40(r83): [74..75]
 a41(r106): [76..77]
  pref0:a0(r105)<-hr0@1500
  regions=1, blocks=9, points=78
    allocnos=42 (big 0), copies=0, conflicts=0, ranges=42
Disposition:
   21:r82  l0     1   40:r83  l0     0   38:r84  l0     0   35:r85  l0     0
   26:r86  l0     3   31:r87  l0     0   27:r88  l0     0   25:r89  l0     0
   22:r90  l0     0   20:r91  l0     0   18:r92  l0     0   16:r93  l0     0
   15:r94  l0     0   14:r95  l0     0   12:r96  l0     0   11:r97  l0     0
   10:r98  l0     0    8:r99  l0     0    7:r100 l0     0    5:r101 l0     0
    4:r102 l0     0    2:r103 l0     0    1:r104 l0     0    0:r105 l0     0
   41:r106 l0     0   39:r107 l0     0   37:r108 l0     0   36:r109 l0     0
   34:r110 l0     0   33:r111 l0     0   32:r112 l0     0   29:r113 l0     0
   30:r114 l0     2   28:r115 l0     0   24:r116 l0     0   23:r117 l0     0
   19:r118 l0     0   17:r119 l0     0   13:r120 l0     0    9:r121 l0     0
    6:r122 l0     0    3:r123 l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


kernel_mktime

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,8u} r7={1d,8u} r16={1d,16u} r17={25d,4u} r19={1d,27u,2e} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={2d,4u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} 
;;    total ref usage 188{76d,110u,2e} in 62{62 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 90 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 90 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 90 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 106)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 tm+0 S4 A32])) "kernel/mktime.c":32:8 75 {*movsi_internal}
     (nil))
(insn 6 5 9 2 (set (reg:SI 83 [ _1 ])
        (mem:SI (plus:SI (reg/f:SI 106)
                (const_int 20 [0x14])) [1 tm_25(D)->tm_year+0 S4 A32])) "kernel/mktime.c":32:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 9 6 10 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 83 [ _1 ])
            (const_int 69 [0x45]))) "kernel/mktime.c":32:5 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (nil)))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "kernel/mktime.c":32:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 18)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg/f:SI 107)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 tm+0 S4 A32])) "kernel/mktime.c":33:12 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:SI 84 [ _2 ])
        (mem:SI (plus:SI (reg/f:SI 107)
                (const_int 20 [0x14])) [1 tm_25(D)->tm_year+0 S4 A32])) "kernel/mktime.c":33:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 14 13 15 3 (parallel [
            (set (reg:SI 108)
                (plus:SI (reg:SI 84 [ _2 ])
                    (const_int -70 [0xffffffffffffffba])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":33:8 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 15 14 88 3 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 year+0 S4 A32])
        (reg:SI 108)) "kernel/mktime.c":33:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108)
        (nil)))
(jump_insn 88 15 89 3 (set (pc)
        (label_ref 24)) 807 {jump}
     (nil)
 -> 24)
(barrier 89 88 18)
(code_label 18 89 19 4 2 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 109)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 tm+0 S4 A32])) "kernel/mktime.c":35:12 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:SI 85 [ _3 ])
        (mem:SI (plus:SI (reg/f:SI 109)
                (const_int 20 [0x14])) [1 tm_25(D)->tm_year+0 S4 A32])) "kernel/mktime.c":35:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 22 21 23 4 (parallel [
            (set (reg:SI 110)
                (plus:SI (reg:SI 85 [ _3 ])
                    (const_int 30 [0x1e])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":35:8 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 23 22 24 4 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 year+0 S4 A32])
        (reg:SI 110)) "kernel/mktime.c":35:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 110)
        (nil)))
(code_label 24 23 25 5 3 (nil) [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:SI 111)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 year+0 S4 A32])) "kernel/mktime.c":37:13 75 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (parallel [
            (set (reg:SI 86 [ _4 ])
                (mult:SI (reg:SI 111)
                    (const_int 31536000 [0x1e13380])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":37:13 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 111)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 5 (set (reg:SI 112)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 year+0 S4 A32])) "kernel/mktime.c":37:35 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg:SI 87 [ _5 ])
                (plus:SI (reg:SI 112)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":37:35 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 112)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 year+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 30 29 31 5 (set (reg:SI 113)
        (reg:SI 87 [ _5 ])) "kernel/mktime.c":37:40 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (nil)))
(insn 31 30 34 5 (parallel [
            (set (reg:SI 114)
                (plus:SI (reg:SI 113)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":37:40 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 34 31 35 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 113)
            (const_int 0 [0]))) "kernel/mktime.c":37:40 7 {*cmpsi_ccno_1}
     (nil))
(insn 35 34 36 5 (set (reg:SI 113)
        (if_then_else:SI (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 114)
            (reg:SI 113))) "kernel/mktime.c":37:40 1100 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 114)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 36 35 37 5 (parallel [
            (set (reg:SI 115)
                (ashiftrt:SI (reg:SI 113)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":37:40 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 113)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 5 (set (reg:SI 88 [ _6 ])
        (reg:SI 115)) "kernel/mktime.c":37:40 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
(insn 38 37 39 5 (parallel [
            (set (reg:SI 89 [ _7 ])
                (mult:SI (reg:SI 88 [ _6 ])
                    (const_int 86400 [0x15180])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":37:26 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 39 38 40 5 (parallel [
            (set (reg:SI 116)
                (plus:SI (reg:SI 86 [ _4 ])
                    (reg:SI 89 [ _7 ])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":37:6 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 40 39 41 5 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 res+0 S4 A32])
        (reg:SI 116)) "kernel/mktime.c":37:6 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 116)
        (nil)))
(insn 41 40 42 5 (set (reg/f:SI 117)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 tm+0 S4 A32])) "kernel/mktime.c":38:17 75 {*movsi_internal}
     (nil))
(insn 42 41 43 5 (set (reg:SI 90 [ _8 ])
        (mem:SI (plus:SI (reg/f:SI 117)
                (const_int 16 [0x10])) [1 tm_25(D)->tm_mon+0 S4 A32])) "kernel/mktime.c":38:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 43 42 44 5 (set (reg:SI 91 [ _9 ])
        (mem:SI (plus:SI (plus:SI (mult:SI (reg:SI 90 [ _8 ])
                        (const_int 4 [0x4]))
                    (reg:SI 82))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("month") [flags 0x2]  <var_decl 0x76113cc7fcf0 month>)
                        ] UNSPEC_GOTOFF))) [1 month[_8]+0 S4 A32])) "kernel/mktime.c":38:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (expr_list:REG_DEAD (reg:SI 82)
            (nil))))
(insn 44 43 45 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [2 res+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [2 res+0 S4 A32])
                    (reg:SI 91 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":38:6 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 45 44 46 5 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 tm+0 S4 A32])) "kernel/mktime.c":40:8 75 {*movsi_internal}
     (nil))
(insn 46 45 49 5 (set (reg:SI 92 [ _10 ])
        (mem:SI (plus:SI (reg/f:SI 118)
                (const_int 16 [0x10])) [1 tm_25(D)->tm_mon+0 S4 A32])) "kernel/mktime.c":40:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 49 46 50 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 92 [ _10 ])
            (const_int 1 [0x1]))) "kernel/mktime.c":40:5 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (nil)))
(jump_insn 50 49 51 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "kernel/mktime.c":40:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 60)
(note 51 50 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 6 (set (reg:SI 119)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 year+0 S4 A32])) "kernel/mktime.c":40:31 75 {*movsi_internal}
     (nil))
(insn 53 52 54 6 (parallel [
            (set (reg:SI 93 [ _11 ])
                (plus:SI (reg:SI 119)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":40:31 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 119)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 year+0 S4 A32])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 54 53 55 6 (set (reg:SI 94 [ _12 ])
        (reg:SI 93 [ _11 ])) "kernel/mktime.c":40:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
        (nil)))
(insn 55 54 56 6 (parallel [
            (set (reg:SI 95 [ _13 ])
                (and:SI (reg:SI 94 [ _12 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":40:21 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 56 55 57 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ _13 ])
            (const_int 0 [0]))) "kernel/mktime.c":40:21 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _13 ])
        (nil)))
(jump_insn 57 56 58 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "kernel/mktime.c":40:21 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 60)
(note 58 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [2 res+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [2 res+0 S4 A32])
                    (const_int -86400 [0xfffffffffffeae80])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":41:7 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 60 59 61 8 4 (nil) [2 uses])
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 8 (set (reg/f:SI 120)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 tm+0 S4 A32])) "kernel/mktime.c":43:18 75 {*movsi_internal}
     (nil))
(insn 63 62 64 8 (set (reg:SI 96 [ _14 ])
        (mem:SI (plus:SI (reg/f:SI 120)
                (const_int 12 [0xc])) [1 tm_25(D)->tm_mday+0 S4 A32])) "kernel/mktime.c":43:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (nil)))
(insn 64 63 65 8 (parallel [
            (set (reg:SI 97 [ _15 ])
                (plus:SI (reg:SI 96 [ _14 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":43:28 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 65 64 66 8 (parallel [
            (set (reg:SI 98 [ _16 ])
                (mult:SI (reg:SI 97 [ _15 ])
                    (const_int 86400 [0x15180])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":43:13 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 97 [ _15 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 66 65 67 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [2 res+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [2 res+0 S4 A32])
                    (reg:SI 98 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":43:6 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 98 [ _16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 67 66 68 8 (set (reg/f:SI 121)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 tm+0 S4 A32])) "kernel/mktime.c":44:18 75 {*movsi_internal}
     (nil))
(insn 68 67 69 8 (set (reg:SI 99 [ _17 ])
        (mem:SI (plus:SI (reg/f:SI 121)
                (const_int 8 [0x8])) [1 tm_25(D)->tm_hour+0 S4 A32])) "kernel/mktime.c":44:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 69 68 70 8 (parallel [
            (set (reg:SI 100 [ _18 ])
                (mult:SI (reg:SI 99 [ _17 ])
                    (const_int 3600 [0xe10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":44:14 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 99 [ _17 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 70 69 71 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [2 res+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [2 res+0 S4 A32])
                    (reg:SI 100 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":44:6 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 100 [ _18 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 71 70 72 8 (set (reg/f:SI 122)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 tm+0 S4 A32])) "kernel/mktime.c":45:20 75 {*movsi_internal}
     (nil))
(insn 72 71 73 8 (set (reg:SI 101 [ _19 ])
        (mem:SI (plus:SI (reg/f:SI 122)
                (const_int 4 [0x4])) [1 tm_25(D)->tm_min+0 S4 A32])) "kernel/mktime.c":45:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 122)
        (nil)))
(insn 73 72 74 8 (parallel [
            (set (reg:SI 102 [ _20 ])
                (mult:SI (reg:SI 101 [ _19 ])
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":45:16 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 101 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 74 73 75 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [2 res+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [2 res+0 S4 A32])
                    (reg:SI 102 [ _20 ])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":45:6 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 102 [ _20 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 75 74 76 8 (set (reg/f:SI 123)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 tm+0 S4 A32])) "kernel/mktime.c":46:11 75 {*movsi_internal}
     (nil))
(insn 76 75 77 8 (set (reg:SI 103 [ _21 ])
        (mem:SI (reg/f:SI 123) [1 tm_25(D)->tm_sec+0 S4 A32])) "kernel/mktime.c":46:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (nil)))
(insn 77 76 78 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [2 res+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [2 res+0 S4 A32])
                    (reg:SI 103 [ _21 ])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":46:6 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 103 [ _21 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 78 77 81 8 (set (reg:SI 104 [ _35 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 res+0 S4 A32])) "kernel/mktime.c":48:9 75 {*movsi_internal}
     (nil))
(insn 81 78 85 8 (set (reg:SI 105 [ <retval> ])
        (reg:SI 104 [ _35 ])) "kernel/mktime.c":48:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 104 [ _35 ])
        (nil)))
(insn 85 81 86 8 (set (reg/i:SI 0 ax)
        (reg:SI 105 [ <retval> ])) "kernel/mktime.c":49:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 105 [ <retval> ])
        (nil)))
(insn 86 85 0 8 (use (reg/i:SI 0 ax)) "kernel/mktime.c":49:1 -1
     (nil))
