
;; Function _get_base (_get_base, funcdef_no=0, decl_uid=1278, cgraph_uid=1, symbol_order=0)

scanning new insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 21(l0): point = 0
   Insn 20(l0): point = 2
   Insn 16(l0): point = 4
   Insn 13(l0): point = 6
   Insn 11(l0): point = 8
   Insn 12(l0): point = 10
   Insn 10(l0): point = 12
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 6(l0): point = 20
   Insn 5(l0): point = 22
   Insn 23(l0): point = 24
 a0(r87): [3..4]
 a1(r86): [5..6]
 a2(r91): [9..10]
 a3(r83): [11..20]
 a4(r84): [11..16]
 a5(r85): [11..12]
 a6(r90): [13..14]
 a7(r89): [17..18]
 a8(r88): [21..22]
 a9(r82): [24..24]
Compressing live ranges: from 27 to 15 - 55%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r86): [2..3]
 a2(r91): [4..5]
 a3(r83): [6..11]
 a4(r84): [6..9]
 a5(r85): [6..7]
 a6(r90): [8..9]
 a7(r89): [10..11]
 a8(r88): [12..13]
 a9(r82): [14..14]
  pref0:a2(r91)<-hr1@1000
  pref1:a0(r87)<-hr0@1500
  regions=1, blocks=3, points=15
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    9:r82  l0     0    3:r83  l0     0    4:r84  l0     1    5:r85  l0     2
    1:r86  l0     0    0:r87  l0     0    8:r88  l0     0    7:r89  l0     1
    6:r90  l0     2    2:r91  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_get_base

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,4u,3e} r17={5d} r19={1d,4u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 49{23d,23u,3e} in 13{13 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 23 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 23 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 23 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 88)
        (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])) "include/linux/sched.h":180:28 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg/f:SI 83 [ _1 ])
                (plus:SI (reg/f:SI 88)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":180:28 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 88)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 7 6 8 2 (set (reg/f:SI 89)
        (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])) "include/linux/sched.h":180:48 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 84 [ _2 ])
                (plus:SI (reg/f:SI 89)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":180:48 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 9 8 10 2 (set (reg/f:SI 90)
        (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])) "include/linux/sched.h":180:68 75 {*movsi_internal}
     (nil))
(insn 10 9 12 2 (parallel [
            (set (reg/f:SI 85 [ _3 ])
                (plus:SI (reg/f:SI 90)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":180:68 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])
                    (const_int 7 [0x7]))
                (nil)))))
(insn 12 10 11 2 (parallel [
            (set (reg:SI 91 [ __base ])
                (asm_operands:SI ("movb %3, %%dh
	movb %2, %%dl
	shll $16, %%edx
	movw %1, %%dx") ("=&d") 0 [
                        (mem:QI (reg/f:SI 83 [ _1 ]) [0 *_1+0 S1 A8])
                        (mem:QI (reg/f:SI 84 [ _2 ]) [0 *_2+0 S1 A8])
                        (mem:QI (reg/f:SI 85 [ _3 ]) [0 *_3+0 S1 A8])
                    ]
                     [
                        (asm_input:QI ("m") include/linux/sched.h:176)
                        (asm_input:QI ("m") include/linux/sched.h:176)
                        (asm_input:QI ("m") include/linux/sched.h:176)
                    ]
                     [] include/linux/sched.h:176))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":176:5 -1
     (expr_list:REG_DEAD (reg/f:SI 85 [ _3 ])
        (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
            (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 11 12 13 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __base+0 S4 A32])
        (reg:SI 91 [ __base ])) "include/linux/sched.h":176:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ __base ])
        (nil)))
(insn 13 11 16 2 (set (reg:SI 86 [ _7 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __base+0 S4 A32])) "include/linux/sched.h":181:12 75 {*movsi_internal}
     (nil))
(insn 16 13 20 2 (set (reg:SI 87 [ <retval> ])
        (reg:SI 86 [ _7 ])) "include/linux/sched.h":181:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ _7 ])
        (nil)))
(insn 20 16 21 2 (set (reg/i:SI 0 ax)
        (reg:SI 87 [ <retval> ])) "include/linux/sched.h":182:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ <retval> ])
        (nil)))
(insn 21 20 0 2 (use (reg/i:SI 0 ax)) "include/linux/sched.h":182:1 -1
     (nil))

;; Function die (die, funcdef_no=1, decl_uid=1374, cgraph_uid=2, symbol_order=1)

scanning new insn with uid = 195.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 12 n_edges 14 count 14 (  1.2)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 2
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8
;;
;; Loop 1
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4
;; 2 succs { 3 7 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 4 6 }
;; 6 succs { 7 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 8 10 }
;; 10 succs { 11 }
;; 11 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r154,l0) best AREG, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r148,l0) best AREG, allocno GENERAL_REGS
    r147: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r147,l0) best AREG, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r143,l0) best AREG, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a55 (r134,l0) best AREG, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a5 (r124,l0) best Q_REGS, allocno Q_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a4 (r116,l0) best Q_REGS, allocno Q_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r110,l0) best AREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:22000 DREG:22000 CREG:22000 BREG:22000 SIREG:22000 DIREG:22000 AD_REGS:22000 CLOBBERED_REGS:22000 Q_REGS:22000 NON_Q_REGS:22000 TLS_GOTBASE_REGS:22000 GENERAL_REGS:22000 MEM:144000
  a1(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a5(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:6000
  a6(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a7(r154,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a8(r110,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a9(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a10(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a11(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a12(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a13(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a16(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a23(r147,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a24(r148,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a25(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a28(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a29(r143,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:18000
  a30(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a31(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a32(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a33(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a34(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a35(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a36(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a37(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a38(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a39(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a41(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a42(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a43(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a44(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a45(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a46(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a47(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a48(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a49(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a51(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a52(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a53(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a54(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a55(r134,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a56(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a57(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a58(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a59(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a60(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a61(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a62(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a63(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a64(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a65(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a66(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a67(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a68(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a69(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a70(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a71(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a72(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a73(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a74(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 193(l0): point = 0
   Insn 185(l0): point = 3
   Insn 184(l0): point = 5
   Insn 183(l0): point = 7
   Insn 182(l0): point = 9
   Insn 181(l0): point = 11
   Insn 180(l0): point = 13
   Insn 179(l0): point = 15
   Insn 178(l0): point = 17
   Insn 177(l0): point = 19
   Insn 176(l0): point = 21
   Insn 175(l0): point = 23
   Insn 166(l0): point = 26
   Insn 165(l0): point = 28
   Insn 164(l0): point = 30
   Insn 163(l0): point = 32
   Insn 162(l0): point = 34
   Insn 161(l0): point = 36
   Insn 160(l0): point = 38
   Insn 159(l0): point = 40
   Insn 158(l0): point = 42
   Insn 157(l0): point = 44
   Insn 156(l0): point = 46
   Insn 154(l0): point = 48
   Insn 155(l0): point = 50
   Insn 153(l0): point = 52
   Insn 152(l0): point = 54
   Insn 151(l0): point = 56
   Insn 150(l0): point = 58
   Insn 149(l0): point = 60
   Insn 148(l0): point = 62
   Insn 147(l0): point = 64
   Insn 146(l0): point = 66
   Insn 145(l0): point = 68
   Insn 173(l0): point = 71
   Insn 172(l0): point = 73
   Insn 190(l0): point = 76
   Insn 141(l0): point = 78
   Insn 140(l0): point = 80
   Insn 139(l0): point = 82
   Insn 138(l0): point = 84
   Insn 137(l0): point = 86
   Insn 136(l0): point = 88
   Insn 135(l0): point = 90
   Insn 134(l0): point = 92
   Insn 133(l0): point = 94
   Insn 132(l0): point = 96
   Insn 131(l0): point = 98
   Insn 130(l0): point = 100
   Insn 129(l0): point = 102
   Insn 128(l0): point = 104
   Insn 125(l0): point = 106
   Insn 127(l0): point = 108
   Insn 126(l0): point = 110
   Insn 122(l0): point = 113
   Insn 121(l0): point = 115
   Insn 120(l0): point = 117
   Insn 119(l0): point = 119
   Insn 118(l0): point = 121
   Insn 117(l0): point = 123
   Insn 108(l0): point = 126
   Insn 107(l0): point = 128
   Insn 106(l0): point = 130
   Insn 105(l0): point = 132
   Insn 104(l0): point = 134
   Insn 103(l0): point = 136
   Insn 102(l0): point = 138
   Insn 101(l0): point = 140
   Insn 100(l0): point = 142
   Insn 97(l0): point = 144
   Insn 99(l0): point = 146
   Insn 194(l0): point = 148
   Insn 98(l0): point = 150
   Insn 96(l0): point = 152
   Insn 95(l0): point = 154
   Insn 94(l0): point = 156
   Insn 93(l0): point = 158
   Insn 92(l0): point = 160
   Insn 91(l0): point = 162
   Insn 90(l0): point = 164
   Insn 89(l0): point = 166
   Insn 115(l0): point = 169
   Insn 114(l0): point = 171
   Insn 188(l0): point = 174
   Insn 85(l0): point = 176
   Insn 84(l0): point = 178
   Insn 83(l0): point = 180
   Insn 82(l0): point = 182
   Insn 81(l0): point = 184
   Insn 80(l0): point = 186
   Insn 79(l0): point = 188
   Insn 77(l0): point = 191
   Insn 76(l0): point = 193
   Insn 75(l0): point = 195
   Insn 74(l0): point = 197
   Insn 73(l0): point = 199
   Insn 72(l0): point = 201
   Insn 71(l0): point = 203
   Insn 70(l0): point = 205
   Insn 69(l0): point = 207
   Insn 68(l0): point = 209
   Insn 67(l0): point = 211
   Insn 66(l0): point = 213
   Insn 65(l0): point = 215
   Insn 64(l0): point = 217
   Insn 63(l0): point = 219
   Insn 62(l0): point = 221
   Insn 61(l0): point = 223
   Insn 60(l0): point = 225
   Insn 59(l0): point = 227
   Insn 58(l0): point = 229
   Insn 57(l0): point = 231
   Insn 56(l0): point = 233
   Insn 53(l0): point = 235
   Insn 55(l0): point = 237
   Insn 54(l0): point = 239
   Insn 52(l0): point = 241
   Insn 51(l0): point = 243
   Insn 50(l0): point = 245
   Insn 49(l0): point = 247
   Insn 48(l0): point = 249
   Insn 47(l0): point = 251
   Insn 46(l0): point = 253
   Insn 45(l0): point = 255
   Insn 44(l0): point = 257
   Insn 42(l0): point = 259
   Insn 43(l0): point = 261
   Insn 41(l0): point = 263
   Insn 40(l0): point = 265
   Insn 39(l0): point = 267
   Insn 38(l0): point = 269
   Insn 37(l0): point = 271
   Insn 36(l0): point = 273
   Insn 35(l0): point = 275
   Insn 34(l0): point = 277
   Insn 33(l0): point = 279
   Insn 32(l0): point = 281
   Insn 31(l0): point = 283
   Insn 30(l0): point = 285
   Insn 29(l0): point = 287
   Insn 28(l0): point = 289
   Insn 27(l0): point = 291
   Insn 26(l0): point = 293
   Insn 25(l0): point = 295
   Insn 24(l0): point = 297
   Insn 23(l0): point = 299
   Insn 22(l0): point = 301
   Insn 21(l0): point = 303
   Insn 20(l0): point = 305
   Insn 19(l0): point = 307
   Insn 18(l0): point = 309
   Insn 17(l0): point = 311
   Insn 16(l0): point = 313
   Insn 15(l0): point = 315
   Insn 14(l0): point = 317
   Insn 13(l0): point = 319
   Insn 12(l0): point = 321
   Insn 11(l0): point = 323
   Insn 10(l0): point = 325
   Insn 9(l0): point = 327
   Insn 8(l0): point = 329
   Insn 7(l0): point = 331
   Insn 6(l0): point = 333
   Insn 5(l0): point = 335
   Insn 195(l0): point = 337
 a0(r82): [8..337]
 a1(r156): [20..21]
 a2(r155): [35..36]
 a3(r117): [39..42]
 a4(r116): [43..44]
 a5(r124): [45..46]
 a6(r123): [47..48]
 a7(r154): [49..50]
 a8(r110): [51..64]
 a9(r115): [51..52]
 a10(r114): [53..54]
 a11(r113): [55..56]
 a12(r112): [55..58]
 a13(r111): [59..60]
 a14(r153): [61..62]
 a15(r109): [65..66]
 a16(r152): [67..68]
 a17(r151): [87..88]
 a18(r108): [91..96]
 a19(r106): [93..102]
 a20(r107): [97..98]
 a21(r150): [99..100]
 a22(r149): [103..104]
 a23(r147): [107..108]
 a24(r148): [109..110]
 a25(r146): [120..121]
 a26(r145): [135..136]
 a27(r122): [139..142]
 a28(r121): [143..144]
 a29(r143): [145..148]
 a30(r105): [147..152]
 a31(r144): [149..150]
 a32(r104): [153..154]
 a33(r103): [155..156]
 a34(r100): [155..164]
 a35(r102): [157..158]
 a36(r101): [159..160]
 a37(r142): [161..162]
 a38(r99): [165..166]
 a39(r141): [185..186]
 a40(r98): [194..195]
 a41(r97): [196..197]
 a42(r140): [198..199]
 a43(r139): [208..209]
 a44(r96): [212..217]
 a45(r120): [214..233]
 a46(r95): [224..227]
 a47(r94): [228..229]
 a48(r138): [230..231]
 a49(r136): [236..237]
 a50(r137): [238..239]
 a51(r135): [248..249]
 a52(r93): [252..255]
 a53(r119): [256..257]
 a54(r118): [258..259]
 a55(r134): [260..261]
 a56(r133): [270..271]
 a57(r92): [274..285]
 a58(r90): [276..291]
 a59(r89): [278..295]
 a60(r87): [280..301]
 a61(r85): [282..307]
 a62(r91): [286..287]
 a63(r132): [288..289]
 a64(r131): [292..293]
 a65(r88): [296..297]
 a66(r130): [298..299]
 a67(r86): [302..303]
 a68(r129): [304..305]
 a69(r84): [308..309]
 a70(r128): [310..311]
 a71(r127): [320..321]
 a72(r83): [326..329]
 a73(r126): [330..331]
 a74(r125): [334..335]
Compressing live ranges: from 340 to 128 - 37%
Ranges after the compression:
 a0(r82): [0..127]
 a1(r156): [0..1]
 a2(r155): [2..3]
 a3(r117): [4..5]
 a4(r116): [6..7]
 a5(r124): [8..9]
 a6(r123): [10..11]
 a7(r154): [12..13]
 a8(r110): [14..23]
 a9(r115): [14..15]
 a10(r114): [16..17]
 a11(r113): [18..19]
 a12(r112): [18..19]
 a13(r111): [20..21]
 a14(r153): [22..23]
 a15(r109): [24..25]
 a16(r152): [26..27]
 a17(r151): [28..29]
 a18(r108): [30..31]
 a19(r106): [30..35]
 a20(r107): [32..33]
 a21(r150): [34..35]
 a22(r149): [36..37]
 a23(r147): [38..39]
 a24(r148): [40..41]
 a25(r146): [42..43]
 a26(r145): [44..45]
 a27(r122): [46..47]
 a28(r121): [48..49]
 a29(r143): [50..51]
 a30(r105): [50..53]
 a31(r144): [52..53]
 a32(r104): [54..55]
 a33(r103): [56..57]
 a34(r100): [56..63]
 a35(r102): [58..59]
 a36(r101): [60..61]
 a37(r142): [62..63]
 a38(r99): [64..65]
 a39(r141): [66..67]
 a40(r98): [68..69]
 a41(r97): [70..71]
 a42(r140): [72..73]
 a43(r139): [74..75]
 a44(r96): [76..77]
 a45(r120): [76..83]
 a46(r95): [78..79]
 a47(r94): [80..81]
 a48(r138): [82..83]
 a49(r136): [84..85]
 a50(r137): [86..87]
 a51(r135): [88..89]
 a52(r93): [90..91]
 a53(r119): [92..93]
 a54(r118): [94..95]
 a55(r134): [96..97]
 a56(r133): [98..99]
 a57(r92): [100..101]
 a58(r90): [100..105]
 a59(r89): [100..107]
 a60(r87): [100..111]
 a61(r85): [100..115]
 a62(r91): [102..103]
 a63(r132): [104..105]
 a64(r131): [106..107]
 a65(r88): [108..109]
 a66(r130): [110..111]
 a67(r86): [112..113]
 a68(r129): [114..115]
 a69(r84): [116..117]
 a70(r128): [118..119]
 a71(r127): [120..121]
 a72(r83): [122..123]
 a73(r126): [124..125]
 a74(r125): [126..127]
  pref0:a7(r154)<-hr0@1000
  pref1:a24(r148)<-hr0@1000
  pref2:a23(r147)<-hr0@1000
  pref3:a29(r143)<-hr0@2000
  pref4:a55(r134)<-hr0@1000
  pref5:a8(r110)<-hr0@1000
  pref6:a44(r96)<-hr0@1500
  pref7:a0(r82)<-hr3@1500
  regions=1, blocks=12, points=128
    allocnos=75 (big 0), copies=0, conflicts=0, ranges=75
Disposition:
    0:r82  l0     3   72:r83  l0     0   69:r84  l0     0   61:r85  l0     5
   67:r86  l0     0   60:r87  l0     4   65:r88  l0     0   59:r89  l0     2
   58:r90  l0     1   62:r91  l0     0   57:r92  l0     0   52:r93  l0     0
   47:r94  l0     0   46:r95  l0     0   44:r96  l0     0   41:r97  l0     0
   40:r98  l0     0   38:r99  l0     0   34:r100 l0     1   36:r101 l0     0
   35:r102 l0     0   33:r103 l0     0   32:r104 l0     0   30:r105 l0     1
   19:r106 l0     1   20:r107 l0     0   18:r108 l0     0   15:r109 l0     0
    8:r110 l0     0   13:r111 l0     1   12:r112 l0     2   11:r113 l0     1
   10:r114 l0     1    9:r115 l0     1    4:r116 l0     0    3:r117 l0     0
   54:r118 l0     4   53:r119 l0     0   45:r120 l0     4   28:r121 l0     4
   27:r122 l0     0    6:r123 l0     4    5:r124 l0     0   74:r125 l0     0
   73:r126 l0     0   71:r127 l0     0   70:r128 l0     0   68:r129 l0     0
   66:r130 l0     0   64:r131 l0     0   63:r132 l0     0   56:r133 l0     0
   55:r134 l0     0   51:r135 l0     0   49:r136 l0     0   50:r137 l0     0
   48:r138 l0     0   43:r139 l0     0   42:r140 l0     0   39:r141 l0     0
   37:r142 l0     0   29:r143 l0     0   31:r144 l0     0   26:r145 l0     0
   25:r146 l0     0   23:r147 l0     0   24:r148 l0     0   22:r149 l0     0
   21:r150 l0     0   17:r151 l0     0   16:r152 l0     0   14:r153 l0     1
    7:r154 l0     0    2:r155 l0     0    1:r156 l0     0
+++Costs: overall 18000, reg 18000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


die

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={13d,1u} r1={13d} r2={13d} r3={11d,11u} r6={1d,11u} r7={51d,97u} r8={12d} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r16={1d,13u,1e} r17={58d,3u} r18={12d} r19={1d,35u,8e} r20={12d} r21={12d} r22={12d} r23={12d} r24={12d} r25={12d} r26={12d} r27={12d} r28={12d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={12d} r38={12d} r39={12d} r40={12d} r41={12d} r42={12d} r43={12d} r44={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} r82={1d,23u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={2d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} 
;;    total ref usage 1296{1018d,269u,9e} in 165{153 regular + 12 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 195 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 195 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 195 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 125)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 esp_ptr+0 S4 A32])) "kernel/traps.c":59:11 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])
        (reg:SI 125)) "kernel/traps.c":59:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 125)
        (nil)))
(insn 7 6 8 2 (set (reg:SI 126)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 nr+0 S4 A32])) "kernel/traps.c":62:5 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 83 [ _1 ])
        (zero_extend:SI (subreg:HI (reg:SI 126) 0))) "kernel/traps.c":62:5 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 126)
        (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 8 [0x8])) [1 nr+0 S4 A32])
                (const_int 65535 [0xffff]))
            (nil))))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":62:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 10 9 11 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 83 [ _1 ])) "kernel/traps.c":62:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 11 10 12 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [2 str+0 S4 A32])) "kernel/traps.c":62:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 12 11 13 2 (set (reg/f:SI 127)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x783c7c9931b0 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":62:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x783c7c9931b0 *.LC0>)
        (nil)))
(insn 13 12 14 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 127)) "kernel/traps.c":62:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 127)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 14 13 15 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/traps.c":62:5 75 {*movsi_internal}
     (nil))
(call_insn 15 14 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x783c7c93b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":62:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":62:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 17 16 18 2 (set (reg/f:SI 128)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])) "kernel/traps.c":64:43 75 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:SI 84 [ _2 ])
                (plus:SI (reg/f:SI 128)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":64:43 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 128)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 19 18 20 2 (set (reg:SI 85 [ _3 ])
        (mem:SI (reg/f:SI 84 [ _2 ]) [1 *_2+0 S4 A32])) "kernel/traps.c":63:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
        (nil)))
(insn 20 19 21 2 (set (reg/f:SI 129)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])) "kernel/traps.c":64:35 75 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg/f:SI 86 [ _4 ])
                (plus:SI (reg/f:SI 129)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":64:35 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 129)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 22 21 23 2 (set (reg:SI 87 [ _5 ])
        (mem:SI (reg/f:SI 86 [ _4 ]) [1 *_4+0 S4 A32])) "kernel/traps.c":63:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ _4 ])
        (nil)))
(insn 23 22 24 2 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])) "kernel/traps.c":64:27 75 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg/f:SI 88 [ _6 ])
                (plus:SI (reg/f:SI 130)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":64:27 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 130)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 25 24 26 2 (set (reg:SI 89 [ _7 ])
        (mem:SI (reg/f:SI 88 [ _6 ]) [1 *_6+0 S4 A32])) "kernel/traps.c":63:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88 [ _6 ])
        (nil)))
(insn 26 25 27 2 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])) "kernel/traps.c":63:5 75 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 90 [ _8 ])
        (mem:SI (reg/f:SI 131) [1 *esp_42+0 S4 A32])) "kernel/traps.c":63:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 131)
        (nil)))
(insn 28 27 29 2 (set (reg/f:SI 132)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])) "kernel/traps.c":64:11 75 {*movsi_internal}
     (nil))
(insn 29 28 30 2 (parallel [
            (set (reg/f:SI 91 [ _9 ])
                (plus:SI (reg/f:SI 132)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":64:11 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 132)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 30 29 31 2 (set (reg:SI 92 [ _10 ])
        (mem:SI (reg/f:SI 91 [ _9 ]) [1 *_9+0 S4 A32])) "kernel/traps.c":63:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ _9 ])
        (nil)))
(insn 31 30 32 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":63:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 32 31 33 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 85 [ _3 ])) "kernel/traps.c":63:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 33 32 34 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 87 [ _5 ])) "kernel/traps.c":63:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 34 33 35 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 89 [ _7 ])) "kernel/traps.c":63:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
            (nil))))
(insn 35 34 36 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 90 [ _8 ])) "kernel/traps.c":63:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
            (nil))))
(insn 36 35 37 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 92 [ _10 ])) "kernel/traps.c":63:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
            (nil))))
(insn 37 36 38 2 (set (reg/f:SI 133)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x783c7c993240 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":63:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x783c7c993240 *.LC1>)
        (nil)))
(insn 38 37 39 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 133)) "kernel/traps.c":63:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 133)
        (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
            (nil))))
(insn 39 38 40 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/traps.c":63:5 75 {*movsi_internal}
     (nil))
(call_insn 40 39 41 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x783c7c93b900 printk>) [0 printk S1 A8])
            (const_int 32 [0x20]))) "kernel/traps.c":63:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 41 40 43 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":63:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 43 41 42 2 (parallel [
            (set (reg:HI 134 [ __res ])
                (asm_operands:HI ("mov %%fs, %%ax") ("=a") 0 []
                     []
                     [] kernel/traps.c:65))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":65:26 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 42 43 44 2 (set (reg/v:HI 118 [ __res ])
        (reg:HI 134 [ __res ])) "kernel/traps.c":65:26 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 134 [ __res ])
        (nil)))
(insn 44 42 45 2 (set (reg:HI 119 [ _49 ])
        (reg/v:HI 118 [ __res ])) "kernel/traps.c":65:26 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/v:HI 118 [ __res ])
        (nil)))
(insn 45 44 46 2 (set (reg:SI 93 [ _11 ])
        (zero_extend:SI (reg:HI 119 [ _49 ]))) "kernel/traps.c":65:5 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 119 [ _49 ])
        (nil)))
(insn 46 45 47 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":65:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 47 46 48 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 93 [ _11 ])) "kernel/traps.c":65:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 48 47 49 2 (set (reg/f:SI 135)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x783c7c993360 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":65:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x783c7c993360 *.LC2>)
        (nil)))
(insn 49 48 50 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 135)) "kernel/traps.c":65:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 50 49 51 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/traps.c":65:5 75 {*movsi_internal}
     (nil))
(call_insn 51 50 52 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x783c7c93b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":65:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 52 51 54 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":65:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 54 52 55 2 (set (reg:SI 137)
        (const_int 23 [0x17])) "kernel/traps.c":67:9 75 {*movsi_internal}
     (nil))
(insn 55 54 53 2 (parallel [
            (set (reg:SI 136 [ __limit ])
                (asm_operands:SI ("lsll %1, %0
	incl %0") ("=r") 0 [
                        (reg:SI 137)
                    ]
                     [
                        (asm_input:SI ("r") kernel/traps.c:67)
                    ]
                     [] kernel/traps.c:67))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":67:9 -1
     (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 53 55 56 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 __limit+0 S4 A32])
        (reg:SI 136 [ __limit ])) "kernel/traps.c":67:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 136 [ __limit ])
        (nil)))
(insn 56 53 57 2 (set (reg:SI 120 [ _52 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 __limit+0 S4 A32])) "kernel/traps.c":67:9 75 {*movsi_internal}
     (nil))
(insn 57 56 58 2 (set (reg/f:SI 138)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x783c7c919360 current>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":66:37 75 {*movsi_internal}
     (nil))
(insn 58 57 59 2 (set (reg/f:SI 94 [ current.0_12 ])
        (mem/f/c:SI (reg/f:SI 138) [5 current+0 S4 A32])) "kernel/traps.c":66:37 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 138)
        (nil)))
(insn 59 58 60 2 (parallel [
            (set (reg/f:SI 95 [ _13 ])
                (plus:SI (reg/f:SI 94 [ current.0_12 ])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":66:37 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 94 [ current.0_12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 60 59 61 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":66:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 61 60 62 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 95 [ _13 ])) "kernel/traps.c":66:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 95 [ _13 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 62 61 63 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_get_base") [flags 0x3]  <function_decl 0x783c7c917900 _get_base>) [0 _get_base S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":66:5 823 {*call_value}
     (nil)
    (nil))
(insn 63 62 64 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":66:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 64 63 65 2 (set (reg:SI 96 [ _14 ])
        (reg:SI 0 ax)) "kernel/traps.c":66:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 65 64 66 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":66:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 66 65 67 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 120 [ _52 ])) "kernel/traps.c":66:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 120 [ _52 ])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 67 66 68 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 96 [ _14 ])) "kernel/traps.c":66:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 68 67 69 2 (set (reg/f:SI 139)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x783c7c993480 *.LC3>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":66:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x783c7c993480 *.LC3>)
        (nil)))
(insn 69 68 70 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 139)) "kernel/traps.c":66:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 70 69 71 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/traps.c":66:5 75 {*movsi_internal}
     (nil))
(call_insn 71 70 72 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x783c7c93b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":66:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 72 71 73 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":66:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 73 72 74 2 (set (reg/f:SI 140)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])) "kernel/traps.c":68:12 75 {*movsi_internal}
     (nil))
(insn 74 73 75 2 (parallel [
            (set (reg/f:SI 97 [ _15 ])
                (plus:SI (reg/f:SI 140)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":68:12 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 75 74 76 2 (set (reg:SI 98 [ _16 ])
        (mem:SI (reg/f:SI 97 [ _15 ]) [1 *_15+0 S4 A32])) "kernel/traps.c":68:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97 [ _15 ])
        (nil)))
(insn 76 75 77 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ _16 ])
            (const_int 23 [0x17]))) "kernel/traps.c":68:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 98 [ _16 ])
        (nil)))
(jump_insn 77 76 78 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) "kernel/traps.c":68:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 123)
(note 78 77 79 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":69:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 80 79 81 3 (set (reg/f:SI 141)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x783c7c993510 *.LC4>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":69:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x783c7c993510 *.LC4>)
        (nil)))
(insn 81 80 82 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 141)) "kernel/traps.c":69:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 82 81 83 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/traps.c":69:9 75 {*movsi_internal}
     (nil))
(call_insn 83 82 84 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x783c7c93b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":69:9 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 84 83 85 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":69:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 85 84 188 3 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
        (const_int 0 [0])) "kernel/traps.c":70:16 75 {*movsi_internal}
     (nil))
(jump_insn 188 85 189 3 (set (pc)
        (label_ref 109)) "kernel/traps.c":70:9 807 {jump}
     (nil)
 -> 109)
(barrier 189 188 111)
(code_label 111 189 88 4 6 (nil) [1 uses])
(note 88 111 89 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 4 (set (reg:SI 99 [ i.1_17 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "kernel/traps.c":71:27 75 {*movsi_internal}
     (nil))
(insn 90 89 91 4 (parallel [
            (set (reg:SI 100 [ _18 ])
                (ashift:SI (reg:SI 99 [ i.1_17 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":71:27 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 99 [ i.1_17 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 91 90 92 4 (set (reg/f:SI 142)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])) "kernel/traps.c":71:27 75 {*movsi_internal}
     (nil))
(insn 92 91 93 4 (parallel [
            (set (reg/f:SI 101 [ _19 ])
                (plus:SI (reg/f:SI 142)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":71:27 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 142)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 93 92 94 4 (set (reg:SI 102 [ _20 ])
        (mem:SI (reg/f:SI 101 [ _19 ]) [1 *_19+0 S4 A32])) "kernel/traps.c":71:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101 [ _19 ])
        (nil)))
(insn 94 93 95 4 (set (reg:SI 103 [ _21 ])
        (reg:SI 102 [ _20 ])) "kernel/traps.c":71:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102 [ _20 ])
        (nil)))
(insn 95 94 96 4 (parallel [
            (set (reg:SI 104 [ _22 ])
                (plus:SI (reg:SI 100 [ _18 ])
                    (reg:SI 103 [ _21 ])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":71:27 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 103 [ _21 ])
        (expr_list:REG_DEAD (reg:SI 100 [ _18 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 96 95 98 4 (set (reg/f:SI 105 [ _23 ])
        (reg:SI 104 [ _22 ])) "kernel/traps.c":71:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 104 [ _22 ])
        (nil)))
(insn 98 96 194 4 (set (reg:SI 144)
        (const_int 23 [0x17])) "kernel/traps.c":71:27 75 {*movsi_internal}
     (nil))
(insn 194 98 99 4 (set (reg:SI 143 [ __res ])
        (reg:SI 144)) "kernel/traps.c":71:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))
(insn 99 194 97 4 (parallel [
            (set (reg:SI 143 [ __res ])
                (asm_operands:SI ("push %%fs; mov %%ax, %%fs; movl %%fs:%2, %%eax; pop %%fs") ("=a") 0 [
                        (reg:SI 143 [ __res ])
                        (mem:SI (reg/f:SI 105 [ _23 ]) [1 *_23+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("0") kernel/traps.c:71)
                        (asm_input:SI ("m") kernel/traps.c:71)
                    ]
                     [] kernel/traps.c:71))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":71:27 -1
     (expr_list:REG_DEAD (reg/f:SI 105 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 97 99 100 4 (set (reg/v:SI 121 [ __res ])
        (reg:SI 143 [ __res ])) "kernel/traps.c":71:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 143 [ __res ])
        (nil)))
(insn 100 97 101 4 (set (reg:SI 122 [ _59 ])
        (reg/v:SI 121 [ __res ])) "kernel/traps.c":71:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 121 [ __res ])
        (nil)))
(insn 101 100 102 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":71:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 102 101 103 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 122 [ _59 ])) "kernel/traps.c":71:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 122 [ _59 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 103 102 104 4 (set (reg/f:SI 145)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x783c7c993630 *.LC5>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":71:13 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x783c7c993630 *.LC5>)
        (nil)))
(insn 104 103 105 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 145)) "kernel/traps.c":71:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 145)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 105 104 106 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/traps.c":71:13 75 {*movsi_internal}
     (nil))
(call_insn 106 105 107 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x783c7c93b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":71:13 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 107 106 108 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":71:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 108 107 109 4 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":70:29 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 109 108 110 5 5 (nil) [1 uses])
(note 110 109 114 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 114 110 115 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
            (const_int 3 [0x3]))) "kernel/traps.c":70:23 11 {*cmpsi_1}
     (nil))
(jump_insn 115 114 116 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) "kernel/traps.c":70:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 111)
(note 116 115 117 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":72:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 118 117 119 6 (set (reg/f:SI 146)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x783c7c9936c0 *.LC6>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":72:13 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x783c7c9936c0 *.LC6>)
        (nil)))
(insn 119 118 120 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 146)) "kernel/traps.c":72:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 146)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 120 119 121 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/traps.c":72:13 75 {*movsi_internal}
     (nil))
(call_insn 121 120 122 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x783c7c93b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":72:13 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 122 121 123 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":72:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 123 122 124 7 4 (nil) [1 uses])
(note 124 123 126 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 126 124 127 7 (set (reg:SI 148)
        (const_int 0 [0])) "kernel/traps.c":74:5 75 {*movsi_internal}
     (nil))
(insn 127 126 125 7 (parallel [
            (set (reg:SI 147 [ i ])
                (asm_operands:SI ("str %%ax
	subl %2, %%eax
	shrl $4, %%eax") ("=a") 0 [
                        (reg:SI 148)
                        (const_int 32 [0x20])
                    ]
                     [
                        (asm_input:SI ("a") kernel/traps.c:74)
                        (asm_input:SI ("i") kernel/traps.c:74)
                    ]
                     [] kernel/traps.c:74))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":74:5 -1
     (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 125 127 128 7 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
        (reg:SI 147 [ i ])) "kernel/traps.c":74:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 147 [ i ])
        (nil)))
(insn 128 125 129 7 (set (reg:SI 149)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "kernel/traps.c":75:5 75 {*movsi_internal}
     (nil))
(insn 129 128 130 7 (set (reg:SI 106 [ _24 ])
        (zero_extend:SI (subreg:HI (reg:SI 149) 0))) "kernel/traps.c":75:5 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                (const_int 65535 [0xffff]))
            (nil))))
(insn 130 129 131 7 (set (reg/f:SI 150)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x783c7c919360 current>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":75:50 75 {*movsi_internal}
     (nil))
(insn 131 130 132 7 (set (reg/f:SI 107 [ current.2_25 ])
        (mem/f/c:SI (reg/f:SI 150) [5 current+0 S4 A32])) "kernel/traps.c":75:50 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 150)
        (nil)))
(insn 132 131 133 7 (set (reg:SI 108 [ _26 ])
        (mem:SI (plus:SI (reg/f:SI 107 [ current.2_25 ])
                (const_int 556 [0x22c])) [1 current.2_25->pid+0 S4 A32])) "kernel/traps.c":75:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107 [ current.2_25 ])
        (nil)))
(insn 133 132 134 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":75:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 134 133 135 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 106 [ _24 ])) "kernel/traps.c":75:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 106 [ _24 ])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 135 134 136 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 108 [ _26 ])) "kernel/traps.c":75:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 108 [ _26 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 136 135 137 7 (set (reg/f:SI 151)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x783c7c993870 *.LC7>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":75:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x783c7c993870 *.LC7>)
        (nil)))
(insn 137 136 138 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 151)) "kernel/traps.c":75:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 151)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 138 137 139 7 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/traps.c":75:5 75 {*movsi_internal}
     (nil))
(call_insn 139 138 140 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x783c7c93b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":75:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 140 139 141 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":75:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 141 140 190 7 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
        (const_int 0 [0])) "kernel/traps.c":77:12 75 {*movsi_internal}
     (nil))
(jump_insn 190 141 191 7 (set (pc)
        (label_ref 167)) "kernel/traps.c":77:5 807 {jump}
     (nil)
 -> 167)
(barrier 191 190 169)
(code_label 169 191 144 8 8 (nil) [1 uses])
(note 144 169 145 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 8 (set (reg/f:SI 152)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])) "kernel/traps.c":78:32 75 {*movsi_internal}
     (nil))
(insn 146 145 147 8 (parallel [
            (set (reg/f:SI 109 [ _27 ])
                (plus:SI (reg/f:SI 152)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":78:32 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 152)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 147 146 148 8 (set (reg:SI 110 [ _28 ])
        (mem:SI (reg/f:SI 109 [ _27 ]) [1 *_27+0 S4 A32])) "kernel/traps.c":78:32 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109 [ _27 ])
        (nil)))
(insn 148 147 149 8 (set (reg/f:SI 153)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])) "kernel/traps.c":78:32 75 {*movsi_internal}
     (nil))
(insn 149 148 150 8 (set (reg:SI 111 [ _29 ])
        (mem:SI (reg/f:SI 153) [1 *esp_42+0 S4 A32])) "kernel/traps.c":78:32 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 153)
        (nil)))
(insn 150 149 151 8 (set (reg:SI 112 [ _30 ])
        (reg:SI 111 [ _29 ])) "kernel/traps.c":78:32 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111 [ _29 ])
        (nil)))
(insn 151 150 152 8 (set (reg:SI 113 [ i.3_31 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "kernel/traps.c":78:32 75 {*movsi_internal}
     (nil))
(insn 152 151 153 8 (parallel [
            (set (reg:SI 114 [ _32 ])
                (plus:SI (reg:SI 112 [ _30 ])
                    (reg:SI 113 [ i.3_31 ])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":78:32 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 113 [ i.3_31 ])
        (expr_list:REG_DEAD (reg:SI 112 [ _30 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 153 152 155 8 (set (reg/f:SI 115 [ _33 ])
        (reg:SI 114 [ _32 ])) "kernel/traps.c":78:32 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 114 [ _32 ])
        (nil)))
(insn 155 153 154 8 (parallel [
            (set (reg:QI 154 [ __res ])
                (asm_operands:QI ("push %%fs; mov %%ax, %%fs; movb %%fs:%2, %%al; pop %%fs") ("=a") 0 [
                        (reg:SI 110 [ _28 ])
                        (mem:QI (reg/f:SI 115 [ _33 ]) [0 *_33+0 S1 A8])
                    ]
                     [
                        (asm_input:SI ("0") kernel/traps.c:78)
                        (asm_input:QI ("m") kernel/traps.c:78)
                    ]
                     [] kernel/traps.c:78))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":78:32 -1
     (expr_list:REG_DEAD (reg/f:SI 115 [ _33 ])
        (expr_list:REG_DEAD (reg:SI 110 [ _28 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 154 155 156 8 (set (reg/v:QI 123 [ __res ])
        (reg:QI 154 [ __res ])) "kernel/traps.c":78:32 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 154 [ __res ])
        (nil)))
(insn 156 154 157 8 (set (reg:QI 124 [ _68 ])
        (reg/v:QI 123 [ __res ])) "kernel/traps.c":78:32 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v:QI 123 [ __res ])
        (nil)))
(insn 157 156 158 8 (set (reg:SI 116 [ _34 ])
        (sign_extend:SI (reg:QI 124 [ _68 ]))) "kernel/traps.c":78:32 153 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 124 [ _68 ])
        (nil)))
(insn 158 157 159 8 (set (reg:SI 117 [ _35 ])
        (zero_extend:SI (subreg:QI (reg:SI 116 [ _34 ]) 0))) "kernel/traps.c":78:9 143 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 116 [ _34 ])
        (nil)))
(insn 159 158 160 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":78:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 160 159 161 8 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 117 [ _35 ])) "kernel/traps.c":78:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 117 [ _35 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 161 160 162 8 (set (reg/f:SI 155)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x783c7c993990 *.LC8>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":78:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x783c7c993990 *.LC8>)
        (nil)))
(insn 162 161 163 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 155)) "kernel/traps.c":78:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 155)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 163 162 164 8 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/traps.c":78:9 75 {*movsi_internal}
     (nil))
(call_insn 164 163 165 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x783c7c93b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":78:9 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 165 164 166 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":78:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 166 165 167 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":77:26 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 167 166 168 9 7 (nil) [1 uses])
(note 168 167 172 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 172 168 173 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
            (const_int 9 [0x9]))) "kernel/traps.c":77:19 11 {*cmpsi_1}
     (nil))
(jump_insn 173 172 174 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) "kernel/traps.c":77:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 169)
(note 174 173 175 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":81:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 176 175 177 10 (set (reg/f:SI 156)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x783c7c993a20 *.LC9>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":81:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x783c7c993a20 *.LC9>)
        (nil)))
(insn 177 176 178 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 156)) "kernel/traps.c":81:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 156)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 178 177 179 10 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/traps.c":81:5 75 {*movsi_internal}
     (nil))
(call_insn 179 178 180 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x783c7c93b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":81:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 180 179 181 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":81:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 181 180 182 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":82:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 182 181 183 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (const_int 11 [0xb])) "kernel/traps.c":82:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 183 182 184 10 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/traps.c":82:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 184 183 185 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("do_exit") [flags 0x41]  <function_decl 0x783c7c93bc00 do_exit>) [0 do_exit S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":82:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 185 184 192 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":82:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 192 185 193 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 193 192 0 11 (const_int 0 [0]) "kernel/traps.c":83:1 843 {nop}
     (nil))

;; Function do_double_fault (do_double_fault, funcdef_no=2, decl_uid=1396, cgraph_uid=3, symbol_order=2)

scanning new insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 15(l0): point = 0
   Insn 11(l0): point = 3
   Insn 10(l0): point = 5
   Insn 9(l0): point = 7
   Insn 8(l0): point = 9
   Insn 7(l0): point = 11
   Insn 6(l0): point = 13
   Insn 5(l0): point = 15
   Insn 16(l0): point = 17
 a0(r83): [8..9]
 a1(r82): [10..17]
Compressing live ranges: from 20 to 4 - 20%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
  regions=1, blocks=4, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r82  l0     0    0:r83  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_double_fault

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,3u} r7={6d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={4d} r18={1d} r19={1d,3u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} 
;;    total ref usage 109{86d,23u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":87:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 error_code+0 S4 A32])) "kernel/traps.c":87:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 esp+0 S4 A32])) "kernel/traps.c":87:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 83)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x783c7c993b40 *.LC10>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":87:2 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x783c7c993b40 *.LC10>)
            (nil))))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 83)) "kernel/traps.c":87:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x783c7c93ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":87:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":87:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 0 3 (const_int 0 [0]) "kernel/traps.c":88:1 843 {nop}
     (nil))

;; Function do_general_protection (do_general_protection, funcdef_no=3, decl_uid=1400, cgraph_uid=4, symbol_order=3)

scanning new insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 15(l0): point = 0
   Insn 11(l0): point = 3
   Insn 10(l0): point = 5
   Insn 9(l0): point = 7
   Insn 8(l0): point = 9
   Insn 7(l0): point = 11
   Insn 6(l0): point = 13
   Insn 5(l0): point = 15
   Insn 16(l0): point = 17
 a0(r83): [8..9]
 a1(r82): [10..17]
Compressing live ranges: from 20 to 4 - 20%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
  regions=1, blocks=4, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r82  l0     0    0:r83  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_general_protection

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,3u} r7={6d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={4d} r18={1d} r19={1d,3u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} 
;;    total ref usage 109{86d,23u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":92:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 error_code+0 S4 A32])) "kernel/traps.c":92:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 esp+0 S4 A32])) "kernel/traps.c":92:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 83)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0x783c7c993bd0 *.LC11>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":92:2 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0x783c7c993bd0 *.LC11>)
            (nil))))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 83)) "kernel/traps.c":92:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x783c7c93ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":92:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":92:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 0 3 (const_int 0 [0]) "kernel/traps.c":93:1 843 {nop}
     (nil))

;; Function do_divide_error (do_divide_error, funcdef_no=4, decl_uid=1404, cgraph_uid=5, symbol_order=4)

scanning new insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 15(l0): point = 0
   Insn 11(l0): point = 3
   Insn 10(l0): point = 5
   Insn 9(l0): point = 7
   Insn 8(l0): point = 9
   Insn 7(l0): point = 11
   Insn 6(l0): point = 13
   Insn 5(l0): point = 15
   Insn 16(l0): point = 17
 a0(r83): [8..9]
 a1(r82): [10..17]
Compressing live ranges: from 20 to 4 - 20%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
  regions=1, blocks=4, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r82  l0     0    0:r83  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_divide_error

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,3u} r7={6d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={4d} r18={1d} r19={1d,3u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} 
;;    total ref usage 109{86d,23u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":97:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 error_code+0 S4 A32])) "kernel/traps.c":97:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 esp+0 S4 A32])) "kernel/traps.c":97:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 83)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC12") [flags 0x2]  <var_decl 0x783c7c993c60 *.LC12>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":97:2 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC12") [flags 0x2]  <var_decl 0x783c7c993c60 *.LC12>)
            (nil))))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 83)) "kernel/traps.c":97:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x783c7c93ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":97:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":97:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 0 3 (const_int 0 [0]) "kernel/traps.c":98:1 843 {nop}
     (nil))

;; Function do_int3 (do_int3, funcdef_no=5, decl_uid=1418, cgraph_uid=6, symbol_order=5)

scanning new insn with uid = 60.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:8000 DREG:8000 CREG:8000 BREG:8000 SIREG:8000 DIREG:8000 AD_REGS:8000 CLOBBERED_REGS:8000 Q_REGS:8000 NON_Q_REGS:8000 TLS_GOTBASE_REGS:8000 GENERAL_REGS:8000 MEM:54000
  a1(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a10(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r89,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:19000
  a15(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 58(l0): point = 0
   Insn 54(l0): point = 3
   Insn 53(l0): point = 5
   Insn 52(l0): point = 7
   Insn 51(l0): point = 9
   Insn 50(l0): point = 11
   Insn 49(l0): point = 13
   Insn 48(l0): point = 15
   Insn 47(l0): point = 17
   Insn 46(l0): point = 19
   Insn 45(l0): point = 21
   Insn 44(l0): point = 23
   Insn 43(l0): point = 25
   Insn 42(l0): point = 27
   Insn 41(l0): point = 29
   Insn 40(l0): point = 31
   Insn 39(l0): point = 33
   Insn 38(l0): point = 35
   Insn 37(l0): point = 37
   Insn 36(l0): point = 39
   Insn 35(l0): point = 41
   Insn 34(l0): point = 43
   Insn 33(l0): point = 45
   Insn 32(l0): point = 47
   Insn 31(l0): point = 49
   Insn 30(l0): point = 51
   Insn 29(l0): point = 53
   Insn 28(l0): point = 55
   Insn 27(l0): point = 57
   Insn 26(l0): point = 59
   Insn 25(l0): point = 61
   Insn 24(l0): point = 63
   Insn 23(l0): point = 65
   Insn 22(l0): point = 67
   Insn 21(l0): point = 69
   Insn 20(l0): point = 71
   Insn 19(l0): point = 73
   Insn 18(l0): point = 75
   Insn 17(l0): point = 77
   Insn 16(l0): point = 79
   Insn 15(l0): point = 81
   Insn 14(l0): point = 83
   Insn 13(l0): point = 85
   Insn 12(l0): point = 87
   Insn 11(l0): point = 89
   Insn 10(l0): point = 91
   Insn 9(l0): point = 93
   Insn 8(l0): point = 95
   Insn 5(l0): point = 97
   Insn 7(l0): point = 99
   Insn 59(l0): point = 101
   Insn 6(l0): point = 103
   Insn 60(l0): point = 105
 a0(r82): [8..105]
 a1(r97): [10..11]
 a2(r88): [14..19]
 a3(r87): [16..23]
 a4(r85): [18..29]
 a5(r96): [20..21]
 a6(r86): [24..25]
 a7(r95): [26..27]
 a8(r84): [30..31]
 a9(r94): [32..33]
 a10(r93): [42..43]
 a11(r92): [62..63]
 a12(r83): [72..75]
 a13(r91): [84..85]
 a14(r89): [98..101]
 a15(r90): [102..103]
Compressing live ranges: from 108 to 26 - 24%
Ranges after the compression:
 a0(r82): [0..25]
 a1(r97): [0..1]
 a2(r88): [2..3]
 a3(r87): [2..5]
 a4(r85): [2..9]
 a5(r96): [4..5]
 a6(r86): [6..7]
 a7(r95): [8..9]
 a8(r84): [10..11]
 a9(r94): [12..13]
 a10(r93): [14..15]
 a11(r92): [16..17]
 a12(r83): [18..19]
 a13(r91): [20..21]
 a14(r89): [22..23]
 a15(r90): [24..25]
  pref0:a14(r89)<-hr0@2000
  pref1:a0(r82)<-hr3@1500
  regions=1, blocks=4, points=26
    allocnos=16 (big 0), copies=0, conflicts=0, ranges=16
Disposition:
    0:r82  l0     3   12:r83  l0     0    8:r84  l0     0    4:r85  l0     2
    6:r86  l0     0    3:r87  l0     1    2:r88  l0     0   14:r89  l0     0
   15:r90  l0     0   13:r91  l0     0   11:r92  l0     0   10:r93  l0     0
    9:r94  l0     0    7:r95  l0     0    5:r96  l0     0    1:r97  l0     0
+++Costs: overall 5000, reg 5000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_int3

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d} r1={5d} r2={5d} r3={4d,4u} r6={1d,3u} r7={27d,40u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,16u,2e} r17={15d} r18={4d} r19={1d,5u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d,8u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={2d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} 
;;    total ref usage 435{341d,92u,2e} in 53{49 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 60 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 60 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 60 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 59 2 (set (reg:SI 90)
        (const_int 0 [0])) "kernel/traps.c":107:2 75 {*movsi_internal}
     (nil))
(insn 59 6 7 2 (set (reg:SI 89 [ tr ])
        (reg:SI 90)) "kernel/traps.c":107:2 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90)
        (nil)))
(insn 7 59 5 2 (parallel [
            (set (reg:SI 89 [ tr ])
                (asm_operands:SI ("str %%ax") ("=a") 0 [
                        (reg:SI 89 [ tr ])
                    ]
                     [
                        (asm_input:SI ("0") kernel/traps.c:107)
                    ]
                     [] kernel/traps.c:107))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":107:2 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 5 7 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 tr+0 S4 A32])
        (reg:SI 89 [ tr ])) "kernel/traps.c":107:2 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ tr ])
        (nil)))
(insn 8 5 9 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":108:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 9 8 10 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 32 [0x20])) [1 edx+0 S4 A32])) "kernel/traps.c":108:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 10 9 11 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 36 [0x24])) [1 ecx+0 S4 A32])) "kernel/traps.c":108:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 11 10 12 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 40 [0x28])) [1 ebx+0 S4 A32])) "kernel/traps.c":108:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 12 11 13 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 44 [0x2c])) [1 eax+0 S4 A32])) "kernel/traps.c":108:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 13 12 14 2 (set (reg/f:SI 91)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC13") [flags 0x2]  <var_decl 0x783c7c993d80 *.LC13>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":108:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC13") [flags 0x2]  <var_decl 0x783c7c993d80 *.LC13>)
        (nil)))
(insn 14 13 15 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 91)) "kernel/traps.c":108:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
            (nil))))
(insn 15 14 16 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/traps.c":108:2 75 {*movsi_internal}
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x783c7c93b900 printk>) [0 printk S1 A8])
            (const_int 32 [0x20]))) "kernel/traps.c":108:2 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 17 16 18 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":108:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 18 17 19 2 (set (reg:SI 83 [ esp.4_1 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [4 esp+0 S4 A32])) "kernel/traps.c":110:2 75 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":110:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 20 19 21 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 83 [ esp.4_1 ])) "kernel/traps.c":110:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 83 [ esp.4_1 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 21 20 22 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 20 [0x14])) [1 ebp+0 S4 A32])) "kernel/traps.c":110:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 22 21 23 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 28 [0x1c])) [1 edi+0 S4 A32])) "kernel/traps.c":110:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 23 22 24 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 24 [0x18])) [1 esi+0 S4 A32])) "kernel/traps.c":110:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 24 23 25 2 (set (reg/f:SI 92)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC14") [flags 0x2]  <var_decl 0x783c7c993e10 *.LC14>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":110:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC14") [flags 0x2]  <var_decl 0x783c7c993e10 *.LC14>)
        (nil)))
(insn 25 24 26 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 92)) "kernel/traps.c":110:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
            (nil))))
(insn 26 25 27 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/traps.c":110:2 75 {*movsi_internal}
     (nil))
(call_insn 27 26 28 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x783c7c93b900 printk>) [0 printk S1 A8])
            (const_int 32 [0x20]))) "kernel/traps.c":110:2 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 28 27 29 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":110:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 29 28 30 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":112:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 30 29 31 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 tr+0 S4 A32])) "kernel/traps.c":112:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 31 30 32 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 fs+0 S4 A32])) "kernel/traps.c":112:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 32 31 33 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [1 es+0 S4 A32])) "kernel/traps.c":112:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 33 32 34 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 16 [0x10])) [1 ds+0 S4 A32])) "kernel/traps.c":112:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 34 33 35 2 (set (reg/f:SI 93)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC15") [flags 0x2]  <var_decl 0x783c7c993ea0 *.LC15>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":112:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC15") [flags 0x2]  <var_decl 0x783c7c993ea0 *.LC15>)
        (nil)))
(insn 35 34 36 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 93)) "kernel/traps.c":112:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
            (nil))))
(insn 36 35 37 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/traps.c":112:2 75 {*movsi_internal}
     (nil))
(call_insn 37 36 38 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x783c7c93b900 printk>) [0 printk S1 A8])
            (const_int 32 [0x20]))) "kernel/traps.c":112:2 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 38 37 39 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":112:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 39 38 40 2 (set (reg/f:SI 94)
        (mem/f/c:SI (reg/f:SI 16 argp) [4 esp+0 S4 A32])) "kernel/traps.c":113:68 75 {*movsi_internal}
     (nil))
(insn 40 39 41 2 (parallel [
            (set (reg/f:SI 84 [ _2 ])
                (plus:SI (reg/f:SI 94)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":113:68 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [4 esp+0 S4 A32])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 41 40 42 2 (set (reg:SI 85 [ _3 ])
        (mem:SI (reg/f:SI 84 [ _2 ]) [1 *_2+0 S4 A32])) "kernel/traps.c":113:2 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
        (nil)))
(insn 42 41 43 2 (set (reg/f:SI 95)
        (mem/f/c:SI (reg/f:SI 16 argp) [4 esp+0 S4 A32])) "kernel/traps.c":113:60 75 {*movsi_internal}
     (nil))
(insn 43 42 44 2 (parallel [
            (set (reg/f:SI 86 [ _4 ])
                (plus:SI (reg/f:SI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":113:60 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [4 esp+0 S4 A32])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 44 43 45 2 (set (reg:SI 87 [ _5 ])
        (mem:SI (reg/f:SI 86 [ _4 ]) [1 *_4+0 S4 A32])) "kernel/traps.c":113:2 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ _4 ])
        (nil)))
(insn 45 44 46 2 (set (reg/f:SI 96)
        (mem/f/c:SI (reg/f:SI 16 argp) [4 esp+0 S4 A32])) "kernel/traps.c":113:2 75 {*movsi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:SI 88 [ _6 ])
        (mem:SI (reg/f:SI 96) [1 *esp_14(D)+0 S4 A32])) "kernel/traps.c":113:2 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96)
        (nil)))
(insn 47 46 48 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 85 [ _3 ])) "kernel/traps.c":113:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 48 47 49 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 87 [ _5 ])) "kernel/traps.c":113:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 49 48 50 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 88 [ _6 ])) "kernel/traps.c":113:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 50 49 51 2 (set (reg/f:SI 97)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC16") [flags 0x2]  <var_decl 0x783c7c993f30 *.LC16>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":113:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC16") [flags 0x2]  <var_decl 0x783c7c993f30 *.LC16>)
        (nil)))
(insn 51 50 52 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 97)) "kernel/traps.c":113:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 97)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 52 51 53 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/traps.c":113:2 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 53 52 54 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x783c7c93b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":113:2 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 54 53 57 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":113:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 57 54 58 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 0 3 (const_int 0 [0]) "kernel/traps.c":114:1 843 {nop}
     (nil))

;; Function do_nmi (do_nmi, funcdef_no=6, decl_uid=1423, cgraph_uid=7, symbol_order=6)

scanning new insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 15(l0): point = 0
   Insn 11(l0): point = 3
   Insn 10(l0): point = 5
   Insn 9(l0): point = 7
   Insn 8(l0): point = 9
   Insn 7(l0): point = 11
   Insn 6(l0): point = 13
   Insn 5(l0): point = 15
   Insn 16(l0): point = 17
 a0(r83): [8..9]
 a1(r82): [10..17]
Compressing live ranges: from 20 to 4 - 20%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
  regions=1, blocks=4, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r82  l0     0    0:r83  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_nmi

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,3u} r7={6d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={4d} r18={1d} r19={1d,3u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} 
;;    total ref usage 109{86d,23u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":118:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 error_code+0 S4 A32])) "kernel/traps.c":118:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 esp+0 S4 A32])) "kernel/traps.c":118:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 83)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC17") [flags 0x2]  <var_decl 0x783c7c993120 *.LC17>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":118:2 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC17") [flags 0x2]  <var_decl 0x783c7c993120 *.LC17>)
            (nil))))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 83)) "kernel/traps.c":118:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x783c7c93ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":118:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":118:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 0 3 (const_int 0 [0]) "kernel/traps.c":119:1 843 {nop}
     (nil))

;; Function do_debug (do_debug, funcdef_no=7, decl_uid=1427, cgraph_uid=8, symbol_order=7)

scanning new insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 15(l0): point = 0
   Insn 11(l0): point = 3
   Insn 10(l0): point = 5
   Insn 9(l0): point = 7
   Insn 8(l0): point = 9
   Insn 7(l0): point = 11
   Insn 6(l0): point = 13
   Insn 5(l0): point = 15
   Insn 16(l0): point = 17
 a0(r83): [8..9]
 a1(r82): [10..17]
Compressing live ranges: from 20 to 4 - 20%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
  regions=1, blocks=4, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r82  l0     0    0:r83  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_debug

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,3u} r7={6d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={4d} r18={1d} r19={1d,3u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} 
;;    total ref usage 109{86d,23u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":123:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 error_code+0 S4 A32])) "kernel/traps.c":123:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 esp+0 S4 A32])) "kernel/traps.c":123:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 83)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC18") [flags 0x2]  <var_decl 0x783c7c9937e0 *.LC18>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":123:2 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC18") [flags 0x2]  <var_decl 0x783c7c9937e0 *.LC18>)
            (nil))))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 83)) "kernel/traps.c":123:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x783c7c93ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":123:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":123:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 0 3 (const_int 0 [0]) "kernel/traps.c":124:1 843 {nop}
     (nil))

;; Function do_overflow (do_overflow, funcdef_no=8, decl_uid=1431, cgraph_uid=9, symbol_order=8)

scanning new insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 15(l0): point = 0
   Insn 11(l0): point = 3
   Insn 10(l0): point = 5
   Insn 9(l0): point = 7
   Insn 8(l0): point = 9
   Insn 7(l0): point = 11
   Insn 6(l0): point = 13
   Insn 5(l0): point = 15
   Insn 16(l0): point = 17
 a0(r83): [8..9]
 a1(r82): [10..17]
Compressing live ranges: from 20 to 4 - 20%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
  regions=1, blocks=4, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r82  l0     0    0:r83  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_overflow

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,3u} r7={6d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={4d} r18={1d} r19={1d,3u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} 
;;    total ref usage 109{86d,23u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":128:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 error_code+0 S4 A32])) "kernel/traps.c":128:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 esp+0 S4 A32])) "kernel/traps.c":128:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 83)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC19") [flags 0x2]  <var_decl 0x783c7c993ab0 *.LC19>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":128:2 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC19") [flags 0x2]  <var_decl 0x783c7c993ab0 *.LC19>)
            (nil))))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 83)) "kernel/traps.c":128:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x783c7c93ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":128:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":128:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 0 3 (const_int 0 [0]) "kernel/traps.c":129:1 843 {nop}
     (nil))

;; Function do_bounds (do_bounds, funcdef_no=9, decl_uid=1435, cgraph_uid=10, symbol_order=9)

scanning new insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 15(l0): point = 0
   Insn 11(l0): point = 3
   Insn 10(l0): point = 5
   Insn 9(l0): point = 7
   Insn 8(l0): point = 9
   Insn 7(l0): point = 11
   Insn 6(l0): point = 13
   Insn 5(l0): point = 15
   Insn 16(l0): point = 17
 a0(r83): [8..9]
 a1(r82): [10..17]
Compressing live ranges: from 20 to 4 - 20%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
  regions=1, blocks=4, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r82  l0     0    0:r83  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_bounds

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,3u} r7={6d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={4d} r18={1d} r19={1d,3u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} 
;;    total ref usage 109{86d,23u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":133:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 error_code+0 S4 A32])) "kernel/traps.c":133:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 esp+0 S4 A32])) "kernel/traps.c":133:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 83)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC20") [flags 0x2]  <var_decl 0x783c7c9c3000 *.LC20>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":133:2 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC20") [flags 0x2]  <var_decl 0x783c7c9c3000 *.LC20>)
            (nil))))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 83)) "kernel/traps.c":133:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x783c7c93ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":133:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":133:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 0 3 (const_int 0 [0]) "kernel/traps.c":134:1 843 {nop}
     (nil))

;; Function do_invalid_op (do_invalid_op, funcdef_no=10, decl_uid=1439, cgraph_uid=11, symbol_order=10)

scanning new insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 15(l0): point = 0
   Insn 11(l0): point = 3
   Insn 10(l0): point = 5
   Insn 9(l0): point = 7
   Insn 8(l0): point = 9
   Insn 7(l0): point = 11
   Insn 6(l0): point = 13
   Insn 5(l0): point = 15
   Insn 16(l0): point = 17
 a0(r83): [8..9]
 a1(r82): [10..17]
Compressing live ranges: from 20 to 4 - 20%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
  regions=1, blocks=4, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r82  l0     0    0:r83  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_invalid_op

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,3u} r7={6d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={4d} r18={1d} r19={1d,3u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} 
;;    total ref usage 109{86d,23u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":138:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 error_code+0 S4 A32])) "kernel/traps.c":138:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 esp+0 S4 A32])) "kernel/traps.c":138:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 83)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC21") [flags 0x2]  <var_decl 0x783c7c9c3090 *.LC21>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":138:2 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC21") [flags 0x2]  <var_decl 0x783c7c9c3090 *.LC21>)
            (nil))))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 83)) "kernel/traps.c":138:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x783c7c93ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":138:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":138:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 0 3 (const_int 0 [0]) "kernel/traps.c":139:1 843 {nop}
     (nil))

;; Function do_device_not_available (do_device_not_available, funcdef_no=11, decl_uid=1443, cgraph_uid=12, symbol_order=11)

scanning new insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 15(l0): point = 0
   Insn 11(l0): point = 3
   Insn 10(l0): point = 5
   Insn 9(l0): point = 7
   Insn 8(l0): point = 9
   Insn 7(l0): point = 11
   Insn 6(l0): point = 13
   Insn 5(l0): point = 15
   Insn 16(l0): point = 17
 a0(r83): [8..9]
 a1(r82): [10..17]
Compressing live ranges: from 20 to 4 - 20%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
  regions=1, blocks=4, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r82  l0     0    0:r83  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_device_not_available

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,3u} r7={6d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={4d} r18={1d} r19={1d,3u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} 
;;    total ref usage 109{86d,23u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":143:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 error_code+0 S4 A32])) "kernel/traps.c":143:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 esp+0 S4 A32])) "kernel/traps.c":143:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 83)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC22") [flags 0x2]  <var_decl 0x783c7c9c3120 *.LC22>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":143:2 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC22") [flags 0x2]  <var_decl 0x783c7c9c3120 *.LC22>)
            (nil))))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 83)) "kernel/traps.c":143:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x783c7c93ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":143:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":143:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 0 3 (const_int 0 [0]) "kernel/traps.c":144:1 843 {nop}
     (nil))

;; Function do_coprocessor_segment_overrun (do_coprocessor_segment_overrun, funcdef_no=12, decl_uid=1447, cgraph_uid=13, symbol_order=12)

scanning new insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 15(l0): point = 0
   Insn 11(l0): point = 3
   Insn 10(l0): point = 5
   Insn 9(l0): point = 7
   Insn 8(l0): point = 9
   Insn 7(l0): point = 11
   Insn 6(l0): point = 13
   Insn 5(l0): point = 15
   Insn 16(l0): point = 17
 a0(r83): [8..9]
 a1(r82): [10..17]
Compressing live ranges: from 20 to 4 - 20%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
  regions=1, blocks=4, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r82  l0     0    0:r83  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_coprocessor_segment_overrun

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,3u} r7={6d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={4d} r18={1d} r19={1d,3u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} 
;;    total ref usage 109{86d,23u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":148:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 error_code+0 S4 A32])) "kernel/traps.c":148:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 esp+0 S4 A32])) "kernel/traps.c":148:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 83)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC23") [flags 0x2]  <var_decl 0x783c7c9c31b0 *.LC23>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":148:2 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC23") [flags 0x2]  <var_decl 0x783c7c9c31b0 *.LC23>)
            (nil))))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 83)) "kernel/traps.c":148:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x783c7c93ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":148:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":148:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 0 3 (const_int 0 [0]) "kernel/traps.c":149:1 843 {nop}
     (nil))

;; Function do_invalid_TSS (do_invalid_TSS, funcdef_no=13, decl_uid=1451, cgraph_uid=14, symbol_order=13)

scanning new insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 15(l0): point = 0
   Insn 11(l0): point = 3
   Insn 10(l0): point = 5
   Insn 9(l0): point = 7
   Insn 8(l0): point = 9
   Insn 7(l0): point = 11
   Insn 6(l0): point = 13
   Insn 5(l0): point = 15
   Insn 16(l0): point = 17
 a0(r83): [8..9]
 a1(r82): [10..17]
Compressing live ranges: from 20 to 4 - 20%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
  regions=1, blocks=4, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r82  l0     0    0:r83  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_invalid_TSS

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,3u} r7={6d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={4d} r18={1d} r19={1d,3u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} 
;;    total ref usage 109{86d,23u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":153:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 error_code+0 S4 A32])) "kernel/traps.c":153:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 esp+0 S4 A32])) "kernel/traps.c":153:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 83)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC24") [flags 0x2]  <var_decl 0x783c7c9c3240 *.LC24>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":153:2 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC24") [flags 0x2]  <var_decl 0x783c7c9c3240 *.LC24>)
            (nil))))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 83)) "kernel/traps.c":153:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x783c7c93ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":153:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":153:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 0 3 (const_int 0 [0]) "kernel/traps.c":154:1 843 {nop}
     (nil))

;; Function do_segment_not_present (do_segment_not_present, funcdef_no=14, decl_uid=1455, cgraph_uid=15, symbol_order=14)

scanning new insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 15(l0): point = 0
   Insn 11(l0): point = 3
   Insn 10(l0): point = 5
   Insn 9(l0): point = 7
   Insn 8(l0): point = 9
   Insn 7(l0): point = 11
   Insn 6(l0): point = 13
   Insn 5(l0): point = 15
   Insn 16(l0): point = 17
 a0(r83): [8..9]
 a1(r82): [10..17]
Compressing live ranges: from 20 to 4 - 20%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
  regions=1, blocks=4, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r82  l0     0    0:r83  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_segment_not_present

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,3u} r7={6d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={4d} r18={1d} r19={1d,3u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} 
;;    total ref usage 109{86d,23u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":158:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 error_code+0 S4 A32])) "kernel/traps.c":158:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 esp+0 S4 A32])) "kernel/traps.c":158:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 83)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC25") [flags 0x2]  <var_decl 0x783c7c9c32d0 *.LC25>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":158:2 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC25") [flags 0x2]  <var_decl 0x783c7c9c32d0 *.LC25>)
            (nil))))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 83)) "kernel/traps.c":158:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x783c7c93ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":158:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":158:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 0 3 (const_int 0 [0]) "kernel/traps.c":159:1 843 {nop}
     (nil))

;; Function do_stack_segment (do_stack_segment, funcdef_no=15, decl_uid=1459, cgraph_uid=16, symbol_order=15)

scanning new insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 15(l0): point = 0
   Insn 11(l0): point = 3
   Insn 10(l0): point = 5
   Insn 9(l0): point = 7
   Insn 8(l0): point = 9
   Insn 7(l0): point = 11
   Insn 6(l0): point = 13
   Insn 5(l0): point = 15
   Insn 16(l0): point = 17
 a0(r83): [8..9]
 a1(r82): [10..17]
Compressing live ranges: from 20 to 4 - 20%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
  regions=1, blocks=4, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r82  l0     0    0:r83  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_stack_segment

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,3u} r7={6d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={4d} r18={1d} r19={1d,3u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} 
;;    total ref usage 109{86d,23u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":163:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 error_code+0 S4 A32])) "kernel/traps.c":163:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 esp+0 S4 A32])) "kernel/traps.c":163:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 83)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC26") [flags 0x2]  <var_decl 0x783c7c9c3360 *.LC26>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":163:2 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC26") [flags 0x2]  <var_decl 0x783c7c9c3360 *.LC26>)
            (nil))))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 83)) "kernel/traps.c":163:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x783c7c93ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":163:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":163:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 0 3 (const_int 0 [0]) "kernel/traps.c":164:1 843 {nop}
     (nil))

;; Function do_coprocessor_error (do_coprocessor_error, funcdef_no=16, decl_uid=1463, cgraph_uid=17, symbol_order=16)

scanning new insn with uid = 32.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 5 4
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 5 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:24000
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 31(l0): point = 1
   Insn 27(l0): point = 4
   Insn 22(l0): point = 6
   Insn 21(l0): point = 8
   Insn 20(l0): point = 10
   Insn 19(l0): point = 12
   Insn 18(l0): point = 14
   Insn 17(l0): point = 16
   Insn 16(l0): point = 18
   Insn 10(l0): point = 21
   Insn 9(l0): point = 23
   Insn 8(l0): point = 25
   Insn 7(l0): point = 27
   Insn 6(l0): point = 29
   Insn 5(l0): point = 31
   Insn 32(l0): point = 33
 a0(r87): [11..12]
 a1(r82): [13..33]
 a2(r84): [24..25]
 a3(r83): [24..29]
 a4(r86): [26..27]
 a5(r85): [30..31]
Compressing live ranges: from 36 to 8 - 22%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r82): [2..7]
 a2(r84): [2..3]
 a3(r83): [2..5]
 a4(r86): [4..5]
 a5(r85): [6..7]
  regions=1, blocks=6, points=8
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    1:r82  l0     0    3:r83  l0     2    2:r84  l0     1    5:r85  l0     1
    4:r86  l0     1    0:r87  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_coprocessor_error

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,5u} r7={6d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,6u} r17={5d,1u} r18={1d} r19={1d,5u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,3u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 129{91d,38u,0e} in 16{15 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 32 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 32 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 32 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 85)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_task_used_math") [flags 0x40]  <var_decl 0x783c7c919480 last_task_used_math>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":168:26 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 83 [ last_task_used_math.5_1 ])
        (mem/f/c:SI (reg/f:SI 85) [5 last_task_used_math+0 S4 A32])) "kernel/traps.c":168:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85)
        (nil)))
(insn 7 6 8 2 (set (reg/f:SI 86)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x783c7c919360 current>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":168:26 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 84 [ current.6_2 ])
        (mem/f/c:SI (reg/f:SI 86) [5 current+0 S4 A32])) "kernel/traps.c":168:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86)
        (nil)))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 83 [ last_task_used_math.5_1 ])
            (reg/f:SI 84 [ current.6_2 ]))) "kernel/traps.c":168:5 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 84 [ current.6_2 ])
        (expr_list:REG_DEAD (reg/f:SI 83 [ last_task_used_math.5_1 ])
            (nil))))
(jump_insn 10 9 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 30)
            (pc))) "kernel/traps.c":168:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 30)
(note 15 10 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":170:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 17 16 18 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 error_code+0 S4 A32])) "kernel/traps.c":170:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 18 17 19 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 esp+0 S4 A32])) "kernel/traps.c":170:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 19 18 20 3 (set (reg/f:SI 87)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC27") [flags 0x2]  <var_decl 0x783c7c9c33f0 *.LC27>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":170:2 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC27") [flags 0x2]  <var_decl 0x783c7c9c33f0 *.LC27>)
            (nil))))
(insn 20 19 21 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 87)) "kernel/traps.c":170:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 87)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 21 20 22 3 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x783c7c93ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":170:2 812 {*call}
     (nil)
    (nil))
(insn 22 21 27 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":170:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 27 22 28 3 (set (pc)
        (label_ref 25)) 807 {jump}
     (nil)
 -> 25)
(barrier 28 27 30)
(code_label 30 28 29 5 26 (nil) [1 uses])
(note 29 30 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 29 25 5 (const_int 0 [0]) "kernel/traps.c":169:3 843 {nop}
     (nil))
(code_label 25 31 26 4 23 (nil) [1 uses])
(note 26 25 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

;; Function do_reserved (do_reserved, funcdef_no=17, decl_uid=1467, cgraph_uid=18, symbol_order=17)

scanning new insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 15(l0): point = 0
   Insn 11(l0): point = 3
   Insn 10(l0): point = 5
   Insn 9(l0): point = 7
   Insn 8(l0): point = 9
   Insn 7(l0): point = 11
   Insn 6(l0): point = 13
   Insn 5(l0): point = 15
   Insn 16(l0): point = 17
 a0(r83): [8..9]
 a1(r82): [10..17]
Compressing live ranges: from 20 to 4 - 20%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
  regions=1, blocks=4, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r82  l0     0    0:r83  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_reserved

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,3u} r7={6d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={4d} r18={1d} r19={1d,3u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} 
;;    total ref usage 109{86d,23u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":175:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 error_code+0 S4 A32])) "kernel/traps.c":175:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 esp+0 S4 A32])) "kernel/traps.c":175:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 83)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC28") [flags 0x2]  <var_decl 0x783c7c9c3480 *.LC28>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":175:2 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC28") [flags 0x2]  <var_decl 0x783c7c9c3480 *.LC28>)
            (nil))))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 83)) "kernel/traps.c":175:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x783c7c93ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":175:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":175:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 0 3 (const_int 0 [0]) "kernel/traps.c":176:1 843 {nop}
     (nil))

;; Function trap_init (trap_init, funcdef_no=18, decl_uid=1299, cgraph_uid=19, symbol_order=18)

scanning new insn with uid = 207.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 7 count 8 (  1.1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r241: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r241,l0) best AREG, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r239,l0) best DREG, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r236,l0) best DREG, allocno GENERAL_REGS
    r235: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r235,l0) best DREG, allocno GENERAL_REGS
    r234: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r234,l0) best AREG, allocno GENERAL_REGS
    r233: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r233,l0) best DREG, allocno GENERAL_REGS
    r232: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r232,l0) best DREG, allocno GENERAL_REGS
    r231: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r231,l0) best AREG, allocno GENERAL_REGS
    r230: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r230,l0) best AREG, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r228,l0) best DREG, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r225,l0) best AREG, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r223,l0) best DREG, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r214,l0) best AREG, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r212,l0) best DREG, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a51 (r209,l0) best AREG, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a50 (r207,l0) best DREG, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a58 (r204,l0) best AREG, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a57 (r202,l0) best DREG, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a65 (r199,l0) best AREG, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a64 (r197,l0) best DREG, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a72 (r194,l0) best AREG, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a71 (r192,l0) best DREG, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a79 (r189,l0) best AREG, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a78 (r187,l0) best DREG, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a86 (r184,l0) best AREG, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a85 (r182,l0) best DREG, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a93 (r179,l0) best AREG, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a92 (r177,l0) best DREG, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a100 (r174,l0) best AREG, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a99 (r172,l0) best DREG, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a107 (r169,l0) best AREG, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a106 (r167,l0) best DREG, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a114 (r164,l0) best AREG, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a113 (r162,l0) best DREG, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a121 (r159,l0) best AREG, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a120 (r157,l0) best DREG, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a128 (r154,l0) best AREG, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a127 (r152,l0) best DREG, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a135 (r149,l0) best AREG, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a134 (r147,l0) best DREG, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a142 (r144,l0) best AREG, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a141 (r142,l0) best DREG, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a149 (r139,l0) best AREG, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a148 (r137,l0) best DREG, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a156 (r134,l0) best AREG, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a155 (r132,l0) best DREG, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a11 (r129,l0) best Q_REGS, allocno Q_REGS
    r128: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a17 (r128,l0) best Q_REGS, allocno Q_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r125,l0) best AREG, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r123,l0) best AREG, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a154 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r239,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a3(r241,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a4(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:366000
  a6(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r125,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a9(r236,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a10(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a12(r234,l0) costs: AREG:4000 DREG:2000 CREG:2000 BREG:2000 SIREG:4000 DIREG:4000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a13(r235,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a14(r123,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a15(r233,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a16(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a18(r231,l0) costs: AREG:4000 DREG:2000 CREG:2000 BREG:2000 SIREG:4000 DIREG:4000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a19(r232,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a20(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r228,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a23(r230,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a24(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a25(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a28(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a29(r223,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a30(r225,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a31(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a32(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a33(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a34(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a35(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a36(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a37(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a38(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a39(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a40(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a41(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a42(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r212,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a44(r214,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a45(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a46(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a47(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a48(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a49(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r207,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a51(r209,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a52(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a53(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a54(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a55(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a56(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a57(r202,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a58(r204,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a59(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a60(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a61(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a62(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a63(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a64(r197,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a65(r199,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a66(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a67(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a68(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a69(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a70(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a71(r192,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a72(r194,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a73(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a74(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a75(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a76(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a77(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a78(r187,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a79(r189,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a80(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a81(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a82(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a83(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a84(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a85(r182,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a86(r184,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a87(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a88(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a89(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a90(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a91(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a92(r177,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a93(r179,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a94(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a95(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a96(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a97(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a98(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a99(r172,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a100(r174,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a101(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a102(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a103(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a104(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a105(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a106(r167,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a107(r169,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a108(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a109(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a110(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a111(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a112(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a113(r162,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a114(r164,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a115(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a116(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a117(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a118(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a119(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a120(r157,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a121(r159,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a122(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a123(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a124(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a125(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a126(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a127(r152,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a128(r154,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a129(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a130(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a131(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a132(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a133(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a134(r147,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a135(r149,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a136(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a137(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a138(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a139(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a140(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a141(r142,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a142(r144,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a143(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a144(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a145(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a146(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a147(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a148(r137,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a149(r139,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a150(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a151(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a152(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a153(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a154(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a155(r132,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a156(r134,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a157(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a158(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a159(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 206(l0): point = 0
   Insn 200(l0): point = 3
   Insn 199(l0): point = 5
   Insn 198(l0): point = 7
   Insn 197(l0): point = 9
   Insn 196(l0): point = 11
   Insn 195(l0): point = 13
   Insn 194(l0): point = 15
   Insn 193(l0): point = 17
   Insn 192(l0): point = 19
   Insn 191(l0): point = 21
   Insn 190(l0): point = 23
   Insn 189(l0): point = 25
   Insn 188(l0): point = 27
   Insn 185(l0): point = 29
   Insn 187(l0): point = 31
   Insn 186(l0): point = 33
   Insn 184(l0): point = 35
   Insn 183(l0): point = 37
   Insn 182(l0): point = 39
   Insn 181(l0): point = 41
   Insn 180(l0): point = 43
   Insn 177(l0): point = 45
   Insn 179(l0): point = 47
   Insn 178(l0): point = 49
   Insn 176(l0): point = 51
   Insn 175(l0): point = 53
   Insn 174(l0): point = 55
   Insn 173(l0): point = 57
   Insn 172(l0): point = 59
   Insn 171(l0): point = 61
   Insn 170(l0): point = 63
   Insn 169(l0): point = 65
   Insn 160(l0): point = 68
   Insn 159(l0): point = 70
   Insn 158(l0): point = 72
   Insn 157(l0): point = 74
   Insn 156(l0): point = 76
   Insn 155(l0): point = 78
   Insn 154(l0): point = 80
   Insn 153(l0): point = 82
   Insn 152(l0): point = 84
   Insn 151(l0): point = 86
   Insn 150(l0): point = 88
   Insn 149(l0): point = 90
   Insn 148(l0): point = 92
   Insn 147(l0): point = 94
   Insn 146(l0): point = 96
   Insn 145(l0): point = 98
   Insn 167(l0): point = 101
   Insn 166(l0): point = 103
   Insn 203(l0): point = 106
   Insn 141(l0): point = 108
   Insn 140(l0): point = 110
   Insn 139(l0): point = 112
   Insn 138(l0): point = 114
   Insn 137(l0): point = 116
   Insn 136(l0): point = 118
   Insn 135(l0): point = 120
   Insn 134(l0): point = 122
   Insn 133(l0): point = 124
   Insn 132(l0): point = 126
   Insn 131(l0): point = 128
   Insn 130(l0): point = 130
   Insn 129(l0): point = 132
   Insn 128(l0): point = 134
   Insn 127(l0): point = 136
   Insn 126(l0): point = 138
   Insn 125(l0): point = 140
   Insn 124(l0): point = 142
   Insn 123(l0): point = 144
   Insn 122(l0): point = 146
   Insn 121(l0): point = 148
   Insn 120(l0): point = 150
   Insn 119(l0): point = 152
   Insn 118(l0): point = 154
   Insn 117(l0): point = 156
   Insn 116(l0): point = 158
   Insn 115(l0): point = 160
   Insn 114(l0): point = 162
   Insn 113(l0): point = 164
   Insn 112(l0): point = 166
   Insn 111(l0): point = 168
   Insn 110(l0): point = 170
   Insn 109(l0): point = 172
   Insn 108(l0): point = 174
   Insn 107(l0): point = 176
   Insn 106(l0): point = 178
   Insn 105(l0): point = 180
   Insn 104(l0): point = 182
   Insn 103(l0): point = 184
   Insn 102(l0): point = 186
   Insn 101(l0): point = 188
   Insn 100(l0): point = 190
   Insn 99(l0): point = 192
   Insn 98(l0): point = 194
   Insn 97(l0): point = 196
   Insn 96(l0): point = 198
   Insn 95(l0): point = 200
   Insn 94(l0): point = 202
   Insn 93(l0): point = 204
   Insn 92(l0): point = 206
   Insn 91(l0): point = 208
   Insn 90(l0): point = 210
   Insn 89(l0): point = 212
   Insn 88(l0): point = 214
   Insn 87(l0): point = 216
   Insn 86(l0): point = 218
   Insn 85(l0): point = 220
   Insn 84(l0): point = 222
   Insn 83(l0): point = 224
   Insn 82(l0): point = 226
   Insn 81(l0): point = 228
   Insn 80(l0): point = 230
   Insn 79(l0): point = 232
   Insn 78(l0): point = 234
   Insn 77(l0): point = 236
   Insn 76(l0): point = 238
   Insn 75(l0): point = 240
   Insn 74(l0): point = 242
   Insn 73(l0): point = 244
   Insn 72(l0): point = 246
   Insn 71(l0): point = 248
   Insn 70(l0): point = 250
   Insn 69(l0): point = 252
   Insn 68(l0): point = 254
   Insn 67(l0): point = 256
   Insn 66(l0): point = 258
   Insn 65(l0): point = 260
   Insn 64(l0): point = 262
   Insn 63(l0): point = 264
   Insn 62(l0): point = 266
   Insn 61(l0): point = 268
   Insn 60(l0): point = 270
   Insn 59(l0): point = 272
   Insn 58(l0): point = 274
   Insn 57(l0): point = 276
   Insn 56(l0): point = 278
   Insn 55(l0): point = 280
   Insn 54(l0): point = 282
   Insn 53(l0): point = 284
   Insn 52(l0): point = 286
   Insn 51(l0): point = 288
   Insn 50(l0): point = 290
   Insn 49(l0): point = 292
   Insn 48(l0): point = 294
   Insn 47(l0): point = 296
   Insn 46(l0): point = 298
   Insn 45(l0): point = 300
   Insn 44(l0): point = 302
   Insn 43(l0): point = 304
   Insn 42(l0): point = 306
   Insn 41(l0): point = 308
   Insn 40(l0): point = 310
   Insn 39(l0): point = 312
   Insn 38(l0): point = 314
   Insn 37(l0): point = 316
   Insn 36(l0): point = 318
   Insn 35(l0): point = 320
   Insn 34(l0): point = 322
   Insn 33(l0): point = 324
   Insn 32(l0): point = 326
   Insn 31(l0): point = 328
   Insn 30(l0): point = 330
   Insn 29(l0): point = 332
   Insn 28(l0): point = 334
   Insn 27(l0): point = 336
   Insn 26(l0): point = 338
   Insn 25(l0): point = 340
   Insn 24(l0): point = 342
   Insn 23(l0): point = 344
   Insn 22(l0): point = 346
   Insn 21(l0): point = 348
   Insn 20(l0): point = 350
   Insn 19(l0): point = 352
   Insn 18(l0): point = 354
   Insn 17(l0): point = 356
   Insn 16(l0): point = 358
   Insn 15(l0): point = 360
   Insn 14(l0): point = 362
   Insn 13(l0): point = 364
   Insn 12(l0): point = 366
   Insn 11(l0): point = 368
   Insn 10(l0): point = 370
   Insn 9(l0): point = 372
   Insn 8(l0): point = 374
   Insn 7(l0): point = 376
   Insn 6(l0): point = 378
   Insn 5(l0): point = 380
   Insn 207(l0): point = 382
 a0(r126): [4..15]
 a1(r127): [4..11]
 a2(r239): [4..7]
 a3(r241): [4..5]
 a4(r240): [8..9]
 a5(r82): [10..382]
 a6(r238): [12..13]
 a7(r237): [16..17]
 a8(r125): [20..23]
 a9(r236): [20..21]
 a10(r124): [24..25]
 a11(r129): [26..27]
 a12(r234): [30..31]
 a13(r235): [32..33]
 a14(r123): [36..39]
 a15(r233): [36..37]
 a16(r122): [40..41]
 a17(r128): [42..43]
 a18(r231): [46..47]
 a19(r232): [48..49]
 a20(r120): [52..63]
 a21(r121): [52..59]
 a22(r228): [52..55]
 a23(r230): [52..53]
 a24(r229): [56..57]
 a25(r227): [60..61]
 a26(r226): [64..65]
 a27(r117): [71..90]
 a28(r119): [71..78]
 a29(r223): [71..74]
 a30(r225): [71..72]
 a31(r224): [75..76]
 a32(r118): [79..80]
 a33(r221): [81..82]
 a34(r219): [81..86]
 a35(r222): [83..84]
 a36(r220): [87..88]
 a37(r217): [91..92]
 a38(r215): [91..96]
 a39(r218): [93..94]
 a40(r216): [97..98]
 a41(r115): [111..122]
 a42(r116): [111..118]
 a43(r212): [111..114]
 a44(r214): [111..112]
 a45(r213): [115..116]
 a46(r211): [119..120]
 a47(r210): [123..124]
 a48(r113): [127..138]
 a49(r114): [127..134]
 a50(r207): [127..130]
 a51(r209): [127..128]
 a52(r208): [131..132]
 a53(r206): [135..136]
 a54(r205): [139..140]
 a55(r111): [143..154]
 a56(r112): [143..150]
 a57(r202): [143..146]
 a58(r204): [143..144]
 a59(r203): [147..148]
 a60(r201): [151..152]
 a61(r200): [155..156]
 a62(r109): [159..170]
 a63(r110): [159..166]
 a64(r197): [159..162]
 a65(r199): [159..160]
 a66(r198): [163..164]
 a67(r196): [167..168]
 a68(r195): [171..172]
 a69(r107): [175..186]
 a70(r108): [175..182]
 a71(r192): [175..178]
 a72(r194): [175..176]
 a73(r193): [179..180]
 a74(r191): [183..184]
 a75(r190): [187..188]
 a76(r105): [191..202]
 a77(r106): [191..198]
 a78(r187): [191..194]
 a79(r189): [191..192]
 a80(r188): [195..196]
 a81(r186): [199..200]
 a82(r185): [203..204]
 a83(r103): [207..218]
 a84(r104): [207..214]
 a85(r182): [207..210]
 a86(r184): [207..208]
 a87(r183): [211..212]
 a88(r181): [215..216]
 a89(r180): [219..220]
 a90(r101): [223..234]
 a91(r102): [223..230]
 a92(r177): [223..226]
 a93(r179): [223..224]
 a94(r178): [227..228]
 a95(r176): [231..232]
 a96(r175): [235..236]
 a97(r99): [239..250]
 a98(r100): [239..246]
 a99(r172): [239..242]
 a100(r174): [239..240]
 a101(r173): [243..244]
 a102(r171): [247..248]
 a103(r170): [251..252]
 a104(r97): [255..266]
 a105(r98): [255..262]
 a106(r167): [255..258]
 a107(r169): [255..256]
 a108(r168): [259..260]
 a109(r166): [263..264]
 a110(r165): [267..268]
 a111(r95): [271..282]
 a112(r96): [271..278]
 a113(r162): [271..274]
 a114(r164): [271..272]
 a115(r163): [275..276]
 a116(r161): [279..280]
 a117(r160): [283..284]
 a118(r93): [287..298]
 a119(r94): [287..294]
 a120(r157): [287..290]
 a121(r159): [287..288]
 a122(r158): [291..292]
 a123(r156): [295..296]
 a124(r155): [299..300]
 a125(r91): [303..314]
 a126(r92): [303..310]
 a127(r152): [303..306]
 a128(r154): [303..304]
 a129(r153): [307..308]
 a130(r151): [311..312]
 a131(r150): [315..316]
 a132(r89): [319..330]
 a133(r90): [319..326]
 a134(r147): [319..322]
 a135(r149): [319..320]
 a136(r148): [323..324]
 a137(r146): [327..328]
 a138(r145): [331..332]
 a139(r87): [335..346]
 a140(r88): [335..342]
 a141(r142): [335..338]
 a142(r144): [335..336]
 a143(r143): [339..340]
 a144(r141): [343..344]
 a145(r140): [347..348]
 a146(r85): [351..362]
 a147(r86): [351..358]
 a148(r137): [351..354]
 a149(r139): [351..352]
 a150(r138): [355..356]
 a151(r136): [359..360]
 a152(r135): [363..364]
 a153(r83): [367..378]
 a154(r84): [367..374]
 a155(r132): [367..370]
 a156(r134): [367..368]
 a157(r133): [371..372]
 a158(r131): [375..376]
 a159(r130): [379..380]
Compressing live ranges: from 385 to 192 - 49%
Ranges after the compression:
 a0(r126): [0..7]
 a1(r127): [0..5]
 a2(r239): [0..1]
 a3(r241): [0..1]
 a4(r240): [2..3]
 a5(r82): [4..191]
 a6(r238): [6..7]
 a7(r237): [8..9]
 a8(r125): [10..11]
 a9(r236): [10..11]
 a10(r124): [12..13]
 a11(r129): [14..15]
 a12(r234): [16..17]
 a13(r235): [18..19]
 a14(r123): [20..21]
 a15(r233): [20..21]
 a16(r122): [22..23]
 a17(r128): [24..25]
 a18(r231): [26..27]
 a19(r232): [28..29]
 a20(r120): [30..35]
 a21(r121): [30..33]
 a22(r228): [30..31]
 a23(r230): [30..31]
 a24(r229): [32..33]
 a25(r227): [34..35]
 a26(r226): [36..37]
 a27(r117): [38..49]
 a28(r119): [38..41]
 a29(r223): [38..39]
 a30(r225): [38..39]
 a31(r224): [40..41]
 a32(r118): [42..43]
 a33(r221): [44..45]
 a34(r219): [44..47]
 a35(r222): [46..47]
 a36(r220): [48..49]
 a37(r217): [50..51]
 a38(r215): [50..53]
 a39(r218): [52..53]
 a40(r216): [54..55]
 a41(r115): [56..61]
 a42(r116): [56..59]
 a43(r212): [56..57]
 a44(r214): [56..57]
 a45(r213): [58..59]
 a46(r211): [60..61]
 a47(r210): [62..63]
 a48(r113): [64..69]
 a49(r114): [64..67]
 a50(r207): [64..65]
 a51(r209): [64..65]
 a52(r208): [66..67]
 a53(r206): [68..69]
 a54(r205): [70..71]
 a55(r111): [72..77]
 a56(r112): [72..75]
 a57(r202): [72..73]
 a58(r204): [72..73]
 a59(r203): [74..75]
 a60(r201): [76..77]
 a61(r200): [78..79]
 a62(r109): [80..85]
 a63(r110): [80..83]
 a64(r197): [80..81]
 a65(r199): [80..81]
 a66(r198): [82..83]
 a67(r196): [84..85]
 a68(r195): [86..87]
 a69(r107): [88..93]
 a70(r108): [88..91]
 a71(r192): [88..89]
 a72(r194): [88..89]
 a73(r193): [90..91]
 a74(r191): [92..93]
 a75(r190): [94..95]
 a76(r105): [96..101]
 a77(r106): [96..99]
 a78(r187): [96..97]
 a79(r189): [96..97]
 a80(r188): [98..99]
 a81(r186): [100..101]
 a82(r185): [102..103]
 a83(r103): [104..109]
 a84(r104): [104..107]
 a85(r182): [104..105]
 a86(r184): [104..105]
 a87(r183): [106..107]
 a88(r181): [108..109]
 a89(r180): [110..111]
 a90(r101): [112..117]
 a91(r102): [112..115]
 a92(r177): [112..113]
 a93(r179): [112..113]
 a94(r178): [114..115]
 a95(r176): [116..117]
 a96(r175): [118..119]
 a97(r99): [120..125]
 a98(r100): [120..123]
 a99(r172): [120..121]
 a100(r174): [120..121]
 a101(r173): [122..123]
 a102(r171): [124..125]
 a103(r170): [126..127]
 a104(r97): [128..133]
 a105(r98): [128..131]
 a106(r167): [128..129]
 a107(r169): [128..129]
 a108(r168): [130..131]
 a109(r166): [132..133]
 a110(r165): [134..135]
 a111(r95): [136..141]
 a112(r96): [136..139]
 a113(r162): [136..137]
 a114(r164): [136..137]
 a115(r163): [138..139]
 a116(r161): [140..141]
 a117(r160): [142..143]
 a118(r93): [144..149]
 a119(r94): [144..147]
 a120(r157): [144..145]
 a121(r159): [144..145]
 a122(r158): [146..147]
 a123(r156): [148..149]
 a124(r155): [150..151]
 a125(r91): [152..157]
 a126(r92): [152..155]
 a127(r152): [152..153]
 a128(r154): [152..153]
 a129(r153): [154..155]
 a130(r151): [156..157]
 a131(r150): [158..159]
 a132(r89): [160..165]
 a133(r90): [160..163]
 a134(r147): [160..161]
 a135(r149): [160..161]
 a136(r148): [162..163]
 a137(r146): [164..165]
 a138(r145): [166..167]
 a139(r87): [168..173]
 a140(r88): [168..171]
 a141(r142): [168..169]
 a142(r144): [168..169]
 a143(r143): [170..171]
 a144(r141): [172..173]
 a145(r140): [174..175]
 a146(r85): [176..181]
 a147(r86): [176..179]
 a148(r137): [176..177]
 a149(r139): [176..177]
 a150(r138): [178..179]
 a151(r136): [180..181]
 a152(r135): [182..183]
 a153(r83): [184..189]
 a154(r84): [184..187]
 a155(r132): [184..185]
 a156(r134): [184..185]
 a157(r133): [186..187]
 a158(r131): [188..189]
 a159(r130): [190..191]
  pref0:a3(r241)<-hr0@1000
  pref1:a2(r239)<-hr1@1000
  pref2:a9(r236)<-hr1@1000
  pref3:a13(r235)<-hr1@1000
  pref4:a12(r234)<-hr0@2000
  pref5:a15(r233)<-hr1@1000
  pref6:a19(r232)<-hr1@1000
  pref7:a18(r231)<-hr0@2000
  pref8:a23(r230)<-hr0@1000
  pref9:a22(r228)<-hr1@1000
  pref10:a30(r225)<-hr0@1000
  pref11:a29(r223)<-hr1@1000
  pref12:a44(r214)<-hr0@1000
  pref13:a43(r212)<-hr1@1000
  pref14:a51(r209)<-hr0@1000
  pref15:a50(r207)<-hr1@1000
  pref16:a58(r204)<-hr0@1000
  pref17:a57(r202)<-hr1@1000
  pref18:a65(r199)<-hr0@1000
  pref19:a64(r197)<-hr1@1000
  pref20:a72(r194)<-hr0@1000
  pref21:a71(r192)<-hr1@1000
  pref22:a79(r189)<-hr0@1000
  pref23:a78(r187)<-hr1@1000
  pref24:a86(r184)<-hr0@1000
  pref25:a85(r182)<-hr1@1000
  pref26:a93(r179)<-hr0@1000
  pref27:a92(r177)<-hr1@1000
  pref28:a100(r174)<-hr0@1000
  pref29:a99(r172)<-hr1@1000
  pref30:a107(r169)<-hr0@1000
  pref31:a106(r167)<-hr1@1000
  pref32:a114(r164)<-hr0@1000
  pref33:a113(r162)<-hr1@1000
  pref34:a121(r159)<-hr0@1000
  pref35:a120(r157)<-hr1@1000
  pref36:a128(r154)<-hr0@1000
  pref37:a127(r152)<-hr1@1000
  pref38:a135(r149)<-hr0@1000
  pref39:a134(r147)<-hr1@1000
  pref40:a142(r144)<-hr0@1000
  pref41:a141(r142)<-hr1@1000
  pref42:a149(r139)<-hr0@1000
  pref43:a148(r137)<-hr1@1000
  pref44:a156(r134)<-hr0@1000
  pref45:a155(r132)<-hr1@1000
  pref46:a8(r125)<-hr0@1000
  pref47:a14(r123)<-hr0@1000
  regions=1, blocks=7, points=192
    allocnos=160 (big 0), copies=0, conflicts=0, ranges=160
Disposition:
    5:r82  l0     2  153:r83  l0     4  154:r84  l0     3  146:r85  l0     3
  147:r86  l0     4  139:r87  l0     3  140:r88  l0     4  132:r89  l0     3
  133:r90  l0     4  125:r91  l0     3  126:r92  l0     4  118:r93  l0     3
  119:r94  l0     4  111:r95  l0     3  112:r96  l0     4  104:r97  l0     3
  105:r98  l0     4   97:r99  l0     3   98:r100 l0     4   90:r101 l0     3
   91:r102 l0     4   83:r103 l0     3   84:r104 l0     4   76:r105 l0     3
   77:r106 l0     4   69:r107 l0     3   70:r108 l0     4   62:r109 l0     3
   63:r110 l0     4   55:r111 l0     3   56:r112 l0     4   48:r113 l0     3
   49:r114 l0     4   41:r115 l0     3   42:r116 l0     4   27:r117 l0     3
   32:r118 l0     0   28:r119 l0     4   20:r120 l0     3   21:r121 l0     4
   16:r122 l0     0   14:r123 l0     0   10:r124 l0     0    8:r125 l0     0
    0:r126 l0     3    1:r127 l0     4   17:r128 l0     0   11:r129 l0     0
  159:r130 l0     0  158:r131 l0     0  155:r132 l0     1  157:r133 l0     0
  156:r134 l0     0  152:r135 l0     0  151:r136 l0     0  148:r137 l0     1
  150:r138 l0     0  149:r139 l0     0  145:r140 l0     0  144:r141 l0     0
  141:r142 l0     1  143:r143 l0     0  142:r144 l0     0  138:r145 l0     0
  137:r146 l0     0  134:r147 l0     1  136:r148 l0     0  135:r149 l0     0
  131:r150 l0     0  130:r151 l0     0  127:r152 l0     1  129:r153 l0     0
  128:r154 l0     0  124:r155 l0     0  123:r156 l0     0  120:r157 l0     1
  122:r158 l0     0  121:r159 l0     0  117:r160 l0     0  116:r161 l0     0
  113:r162 l0     1  115:r163 l0     0  114:r164 l0     0  110:r165 l0     0
  109:r166 l0     0  106:r167 l0     1  108:r168 l0     0  107:r169 l0     0
  103:r170 l0     0  102:r171 l0     0   99:r172 l0     1  101:r173 l0     0
  100:r174 l0     0   96:r175 l0     0   95:r176 l0     0   92:r177 l0     1
   94:r178 l0     0   93:r179 l0     0   89:r180 l0     0   88:r181 l0     0
   85:r182 l0     1   87:r183 l0     0   86:r184 l0     0   82:r185 l0     0
   81:r186 l0     0   78:r187 l0     1   80:r188 l0     0   79:r189 l0     0
   75:r190 l0     0   74:r191 l0     0   71:r192 l0     1   73:r193 l0     0
   72:r194 l0     0   68:r195 l0     0   67:r196 l0     0   64:r197 l0     1
   66:r198 l0     0   65:r199 l0     0   61:r200 l0     0   60:r201 l0     0
   57:r202 l0     1   59:r203 l0     0   58:r204 l0     0   54:r205 l0     0
   53:r206 l0     0   50:r207 l0     1   52:r208 l0     0   51:r209 l0     0
   47:r210 l0     0   46:r211 l0     0   43:r212 l0     1   45:r213 l0     0
   44:r214 l0     0   38:r215 l0     1   40:r216 l0     0   37:r217 l0     0
   39:r218 l0     0   34:r219 l0     1   36:r220 l0     0   33:r221 l0     0
   35:r222 l0     0   29:r223 l0     1   31:r224 l0     0   30:r225 l0     0
   26:r226 l0     0   25:r227 l0     0   22:r228 l0     1   24:r229 l0     0
   23:r230 l0     0   18:r231 l0     0   19:r232 l0     0   15:r233 l0     1
   12:r234 l0     0   13:r235 l0     0    9:r236 l0     1    7:r237 l0     0
    6:r238 l0     0    2:r239 l0     1    4:r240 l0     0    3:r241 l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


trap_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 17 [flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r6={1d,6u} r7={1d,6u} r16={1d,5u} r17={34d,1u} r19={1d,16u,2e} r82={1d,60u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} 
;;    total ref usage 456{201d,253u,2e} in 190{190 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 207 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 207 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 207 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 130)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":182:5 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 83 [ _1 ])
        (reg:SI 130)) "kernel/traps.c":182:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 130)
        (expr_list:REG_EQUAL (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
            (nil))))
(insn 7 6 8 2 (set (reg:SI 131)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":182:5 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 84 [ _2 ])
        (plus:SI (reg:SI 131)
            (const_int 4 [0x4]))) "kernel/traps.c":182:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 131)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 4 [0x4])))
            (nil))))
(insn 9 8 10 2 (set (reg:SI 133)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("divide_error") [flags 0x41]  <function_decl 0x783c7c93bd00 divide_error>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":182:5 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 132)
        (reg:SI 133)) "kernel/traps.c":182:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 133)
        (expr_list:REG_EQUAL (symbol_ref:SI ("divide_error") [flags 0x41]  <function_decl 0x783c7c93bd00 divide_error>)
            (nil))))
(insn 11 10 12 2 (set (reg:SI 134)
        (const_int 524288 [0x80000])) "kernel/traps.c":182:5 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 83 [ _1 ]) [0 MEM[(char *)_1]+0 S1 A8])
                    (mem:QI (reg/f:SI 84 [ _2 ]) [0 *_2+0 S1 A8])
                    (reg/f:SI 132)
                    (reg:SI 134)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:182)
                    (asm_input:QI ("o") kernel/traps.c:182)
                    (asm_input:QI ("o") kernel/traps.c:182)
                    (asm_input:SI ("d") kernel/traps.c:182)
                    (asm_input:SI ("a") kernel/traps.c:182)
                ]
                 [] kernel/traps.c:182)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":182:5 -1
     (expr_list:REG_DEAD (reg:SI 134)
        (expr_list:REG_DEAD (reg/f:SI 132)
            (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
                (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 13 12 14 2 (set (reg:SI 135)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":183:5 75 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 85 [ _3 ])
        (plus:SI (reg:SI 135)
            (const_int 8 [0x8]))) "kernel/traps.c":183:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 135)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 8 [0x8])))
            (nil))))
(insn 15 14 16 2 (set (reg:SI 136)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":183:5 75 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 86 [ _4 ])
        (plus:SI (reg:SI 136)
            (const_int 12 [0xc]))) "kernel/traps.c":183:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 12 [0xc])))
            (nil))))
(insn 17 16 18 2 (set (reg:SI 138)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("debug") [flags 0x41]  <function_decl 0x783c7c93be00 debug>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":183:5 75 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg/f:SI 137)
        (reg:SI 138)) "kernel/traps.c":183:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_EQUAL (symbol_ref:SI ("debug") [flags 0x41]  <function_decl 0x783c7c93be00 debug>)
            (nil))))
(insn 19 18 20 2 (set (reg:SI 139)
        (const_int 524288 [0x80000])) "kernel/traps.c":183:5 75 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 85 [ _3 ]) [0 MEM[(char *)_3]+0 S1 A8])
                    (mem:QI (reg/f:SI 86 [ _4 ]) [0 *_4+0 S1 A8])
                    (reg/f:SI 137)
                    (reg:SI 139)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:183)
                    (asm_input:QI ("o") kernel/traps.c:183)
                    (asm_input:QI ("o") kernel/traps.c:183)
                    (asm_input:SI ("d") kernel/traps.c:183)
                    (asm_input:SI ("a") kernel/traps.c:183)
                ]
                 [] kernel/traps.c:183)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":183:5 -1
     (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_DEAD (reg/f:SI 137)
            (expr_list:REG_DEAD (reg/f:SI 86 [ _4 ])
                (expr_list:REG_DEAD (reg/f:SI 85 [ _3 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 21 20 22 2 (set (reg:SI 140)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":184:5 75 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (reg/f:SI 87 [ _5 ])
        (plus:SI (reg:SI 140)
            (const_int 16 [0x10]))) "kernel/traps.c":184:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 23 22 24 2 (set (reg:SI 141)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":184:5 75 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg/f:SI 88 [ _6 ])
        (plus:SI (reg:SI 141)
            (const_int 20 [0x14]))) "kernel/traps.c":184:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 20 [0x14])))
            (nil))))
(insn 25 24 26 2 (set (reg:SI 143)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("nmi") [flags 0x41]  <function_decl 0x783c7c93bf00 nmi>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":184:5 75 {*movsi_internal}
     (nil))
(insn 26 25 27 2 (set (reg/f:SI 142)
        (reg:SI 143)) "kernel/traps.c":184:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_EQUAL (symbol_ref:SI ("nmi") [flags 0x41]  <function_decl 0x783c7c93bf00 nmi>)
            (nil))))
(insn 27 26 28 2 (set (reg:SI 144)
        (const_int 524288 [0x80000])) "kernel/traps.c":184:5 75 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 87 [ _5 ]) [0 MEM[(char *)_5]+0 S1 A8])
                    (mem:QI (reg/f:SI 88 [ _6 ]) [0 *_6+0 S1 A8])
                    (reg/f:SI 142)
                    (reg:SI 144)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:184)
                    (asm_input:QI ("o") kernel/traps.c:184)
                    (asm_input:QI ("o") kernel/traps.c:184)
                    (asm_input:SI ("d") kernel/traps.c:184)
                    (asm_input:SI ("a") kernel/traps.c:184)
                ]
                 [] kernel/traps.c:184)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":184:5 -1
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg/f:SI 142)
            (expr_list:REG_DEAD (reg/f:SI 88 [ _6 ])
                (expr_list:REG_DEAD (reg/f:SI 87 [ _5 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 29 28 30 2 (set (reg:SI 145)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":185:5 75 {*movsi_internal}
     (nil))
(insn 30 29 31 2 (set (reg/f:SI 89 [ _7 ])
        (plus:SI (reg:SI 145)
            (const_int 24 [0x18]))) "kernel/traps.c":185:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 24 [0x18])))
            (nil))))
(insn 31 30 32 2 (set (reg:SI 146)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":185:5 75 {*movsi_internal}
     (nil))
(insn 32 31 33 2 (set (reg/f:SI 90 [ _8 ])
        (plus:SI (reg:SI 146)
            (const_int 28 [0x1c]))) "kernel/traps.c":185:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 28 [0x1c])))
            (nil))))
(insn 33 32 34 2 (set (reg:SI 148)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("int3") [flags 0x41]  <function_decl 0x783c7c93ba00 int3>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":185:5 75 {*movsi_internal}
     (nil))
(insn 34 33 35 2 (set (reg/f:SI 147)
        (reg:SI 148)) "kernel/traps.c":185:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_EQUAL (symbol_ref:SI ("int3") [flags 0x41]  <function_decl 0x783c7c93ba00 int3>)
            (nil))))
(insn 35 34 36 2 (set (reg:SI 149)
        (const_int 524288 [0x80000])) "kernel/traps.c":185:5 75 {*movsi_internal}
     (nil))
(insn 36 35 37 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -4352 [0xffffffffffffef00])
                    (mem:QI (reg/f:SI 89 [ _7 ]) [0 MEM[(char *)_7]+0 S1 A8])
                    (mem:QI (reg/f:SI 90 [ _8 ]) [0 *_8+0 S1 A8])
                    (reg/f:SI 147)
                    (reg:SI 149)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:185)
                    (asm_input:QI ("o") kernel/traps.c:185)
                    (asm_input:QI ("o") kernel/traps.c:185)
                    (asm_input:SI ("d") kernel/traps.c:185)
                    (asm_input:SI ("a") kernel/traps.c:185)
                ]
                 [] kernel/traps.c:185)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":185:5 -1
     (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_DEAD (reg/f:SI 147)
            (expr_list:REG_DEAD (reg/f:SI 90 [ _8 ])
                (expr_list:REG_DEAD (reg/f:SI 89 [ _7 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 37 36 38 2 (set (reg:SI 150)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":186:5 75 {*movsi_internal}
     (nil))
(insn 38 37 39 2 (set (reg/f:SI 91 [ _9 ])
        (plus:SI (reg:SI 150)
            (const_int 32 [0x20]))) "kernel/traps.c":186:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 32 [0x20])))
            (nil))))
(insn 39 38 40 2 (set (reg:SI 151)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":186:5 75 {*movsi_internal}
     (nil))
(insn 40 39 41 2 (set (reg/f:SI 92 [ _10 ])
        (plus:SI (reg:SI 151)
            (const_int 36 [0x24]))) "kernel/traps.c":186:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 36 [0x24])))
            (nil))))
(insn 41 40 42 2 (set (reg:SI 153)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("overflow") [flags 0x41]  <function_decl 0x783c7c93bb00 overflow>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":186:5 75 {*movsi_internal}
     (nil))
(insn 42 41 43 2 (set (reg/f:SI 152)
        (reg:SI 153)) "kernel/traps.c":186:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_EQUAL (symbol_ref:SI ("overflow") [flags 0x41]  <function_decl 0x783c7c93bb00 overflow>)
            (nil))))
(insn 43 42 44 2 (set (reg:SI 154)
        (const_int 524288 [0x80000])) "kernel/traps.c":186:5 75 {*movsi_internal}
     (nil))
(insn 44 43 45 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -4352 [0xffffffffffffef00])
                    (mem:QI (reg/f:SI 91 [ _9 ]) [0 MEM[(char *)_9]+0 S1 A8])
                    (mem:QI (reg/f:SI 92 [ _10 ]) [0 *_10+0 S1 A8])
                    (reg/f:SI 152)
                    (reg:SI 154)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:186)
                    (asm_input:QI ("o") kernel/traps.c:186)
                    (asm_input:QI ("o") kernel/traps.c:186)
                    (asm_input:SI ("d") kernel/traps.c:186)
                    (asm_input:SI ("a") kernel/traps.c:186)
                ]
                 [] kernel/traps.c:186)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":186:5 -1
     (expr_list:REG_DEAD (reg:SI 154)
        (expr_list:REG_DEAD (reg/f:SI 152)
            (expr_list:REG_DEAD (reg/f:SI 92 [ _10 ])
                (expr_list:REG_DEAD (reg/f:SI 91 [ _9 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 45 44 46 2 (set (reg:SI 155)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":187:5 75 {*movsi_internal}
     (nil))
(insn 46 45 47 2 (set (reg/f:SI 93 [ _11 ])
        (plus:SI (reg:SI 155)
            (const_int 40 [0x28]))) "kernel/traps.c":187:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 40 [0x28])))
            (nil))))
(insn 47 46 48 2 (set (reg:SI 156)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":187:5 75 {*movsi_internal}
     (nil))
(insn 48 47 49 2 (set (reg/f:SI 94 [ _12 ])
        (plus:SI (reg:SI 156)
            (const_int 44 [0x2c]))) "kernel/traps.c":187:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 156)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 44 [0x2c])))
            (nil))))
(insn 49 48 50 2 (set (reg:SI 158)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bounds") [flags 0x41]  <function_decl 0x783c7c93e000 bounds>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":187:5 75 {*movsi_internal}
     (nil))
(insn 50 49 51 2 (set (reg/f:SI 157)
        (reg:SI 158)) "kernel/traps.c":187:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_EQUAL (symbol_ref:SI ("bounds") [flags 0x41]  <function_decl 0x783c7c93e000 bounds>)
            (nil))))
(insn 51 50 52 2 (set (reg:SI 159)
        (const_int 524288 [0x80000])) "kernel/traps.c":187:5 75 {*movsi_internal}
     (nil))
(insn 52 51 53 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -4352 [0xffffffffffffef00])
                    (mem:QI (reg/f:SI 93 [ _11 ]) [0 MEM[(char *)_11]+0 S1 A8])
                    (mem:QI (reg/f:SI 94 [ _12 ]) [0 *_12+0 S1 A8])
                    (reg/f:SI 157)
                    (reg:SI 159)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:187)
                    (asm_input:QI ("o") kernel/traps.c:187)
                    (asm_input:QI ("o") kernel/traps.c:187)
                    (asm_input:SI ("d") kernel/traps.c:187)
                    (asm_input:SI ("a") kernel/traps.c:187)
                ]
                 [] kernel/traps.c:187)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":187:5 -1
     (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_DEAD (reg/f:SI 157)
            (expr_list:REG_DEAD (reg/f:SI 94 [ _12 ])
                (expr_list:REG_DEAD (reg/f:SI 93 [ _11 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 53 52 54 2 (set (reg:SI 160)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":188:5 75 {*movsi_internal}
     (nil))
(insn 54 53 55 2 (set (reg/f:SI 95 [ _13 ])
        (plus:SI (reg:SI 160)
            (const_int 48 [0x30]))) "kernel/traps.c":188:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 48 [0x30])))
            (nil))))
(insn 55 54 56 2 (set (reg:SI 161)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":188:5 75 {*movsi_internal}
     (nil))
(insn 56 55 57 2 (set (reg/f:SI 96 [ _14 ])
        (plus:SI (reg:SI 161)
            (const_int 52 [0x34]))) "kernel/traps.c":188:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 161)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 52 [0x34])))
            (nil))))
(insn 57 56 58 2 (set (reg:SI 163)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("invalid_op") [flags 0x41]  <function_decl 0x783c7c93e100 invalid_op>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":188:5 75 {*movsi_internal}
     (nil))
(insn 58 57 59 2 (set (reg/f:SI 162)
        (reg:SI 163)) "kernel/traps.c":188:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_EQUAL (symbol_ref:SI ("invalid_op") [flags 0x41]  <function_decl 0x783c7c93e100 invalid_op>)
            (nil))))
(insn 59 58 60 2 (set (reg:SI 164)
        (const_int 524288 [0x80000])) "kernel/traps.c":188:5 75 {*movsi_internal}
     (nil))
(insn 60 59 61 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 95 [ _13 ]) [0 MEM[(char *)_13]+0 S1 A8])
                    (mem:QI (reg/f:SI 96 [ _14 ]) [0 *_14+0 S1 A8])
                    (reg/f:SI 162)
                    (reg:SI 164)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:188)
                    (asm_input:QI ("o") kernel/traps.c:188)
                    (asm_input:QI ("o") kernel/traps.c:188)
                    (asm_input:SI ("d") kernel/traps.c:188)
                    (asm_input:SI ("a") kernel/traps.c:188)
                ]
                 [] kernel/traps.c:188)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":188:5 -1
     (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_DEAD (reg/f:SI 162)
            (expr_list:REG_DEAD (reg/f:SI 96 [ _14 ])
                (expr_list:REG_DEAD (reg/f:SI 95 [ _13 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 61 60 62 2 (set (reg:SI 165)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":189:5 75 {*movsi_internal}
     (nil))
(insn 62 61 63 2 (set (reg/f:SI 97 [ _15 ])
        (plus:SI (reg:SI 165)
            (const_int 56 [0x38]))) "kernel/traps.c":189:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 56 [0x38])))
            (nil))))
(insn 63 62 64 2 (set (reg:SI 166)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":189:5 75 {*movsi_internal}
     (nil))
(insn 64 63 65 2 (set (reg/f:SI 98 [ _16 ])
        (plus:SI (reg:SI 166)
            (const_int 60 [0x3c]))) "kernel/traps.c":189:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 60 [0x3c])))
            (nil))))
(insn 65 64 66 2 (set (reg:SI 168)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("device_not_available") [flags 0x41]  <function_decl 0x783c7c93e200 device_not_available>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":189:5 75 {*movsi_internal}
     (nil))
(insn 66 65 67 2 (set (reg/f:SI 167)
        (reg:SI 168)) "kernel/traps.c":189:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_EQUAL (symbol_ref:SI ("device_not_available") [flags 0x41]  <function_decl 0x783c7c93e200 device_not_available>)
            (nil))))
(insn 67 66 68 2 (set (reg:SI 169)
        (const_int 524288 [0x80000])) "kernel/traps.c":189:5 75 {*movsi_internal}
     (nil))
(insn 68 67 69 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 97 [ _15 ]) [0 MEM[(char *)_15]+0 S1 A8])
                    (mem:QI (reg/f:SI 98 [ _16 ]) [0 *_16+0 S1 A8])
                    (reg/f:SI 167)
                    (reg:SI 169)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:189)
                    (asm_input:QI ("o") kernel/traps.c:189)
                    (asm_input:QI ("o") kernel/traps.c:189)
                    (asm_input:SI ("d") kernel/traps.c:189)
                    (asm_input:SI ("a") kernel/traps.c:189)
                ]
                 [] kernel/traps.c:189)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":189:5 -1
     (expr_list:REG_DEAD (reg:SI 169)
        (expr_list:REG_DEAD (reg/f:SI 167)
            (expr_list:REG_DEAD (reg/f:SI 98 [ _16 ])
                (expr_list:REG_DEAD (reg/f:SI 97 [ _15 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 69 68 70 2 (set (reg:SI 170)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":190:5 75 {*movsi_internal}
     (nil))
(insn 70 69 71 2 (set (reg/f:SI 99 [ _17 ])
        (plus:SI (reg:SI 170)
            (const_int 64 [0x40]))) "kernel/traps.c":190:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 64 [0x40])))
            (nil))))
(insn 71 70 72 2 (set (reg:SI 171)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":190:5 75 {*movsi_internal}
     (nil))
(insn 72 71 73 2 (set (reg/f:SI 100 [ _18 ])
        (plus:SI (reg:SI 171)
            (const_int 68 [0x44]))) "kernel/traps.c":190:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 68 [0x44])))
            (nil))))
(insn 73 72 74 2 (set (reg:SI 173)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("double_fault") [flags 0x41]  <function_decl 0x783c7c93e300 double_fault>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":190:5 75 {*movsi_internal}
     (nil))
(insn 74 73 75 2 (set (reg/f:SI 172)
        (reg:SI 173)) "kernel/traps.c":190:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_EQUAL (symbol_ref:SI ("double_fault") [flags 0x41]  <function_decl 0x783c7c93e300 double_fault>)
            (nil))))
(insn 75 74 76 2 (set (reg:SI 174)
        (const_int 524288 [0x80000])) "kernel/traps.c":190:5 75 {*movsi_internal}
     (nil))
(insn 76 75 77 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 99 [ _17 ]) [0 MEM[(char *)_17]+0 S1 A8])
                    (mem:QI (reg/f:SI 100 [ _18 ]) [0 *_18+0 S1 A8])
                    (reg/f:SI 172)
                    (reg:SI 174)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:190)
                    (asm_input:QI ("o") kernel/traps.c:190)
                    (asm_input:QI ("o") kernel/traps.c:190)
                    (asm_input:SI ("d") kernel/traps.c:190)
                    (asm_input:SI ("a") kernel/traps.c:190)
                ]
                 [] kernel/traps.c:190)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":190:5 -1
     (expr_list:REG_DEAD (reg:SI 174)
        (expr_list:REG_DEAD (reg/f:SI 172)
            (expr_list:REG_DEAD (reg/f:SI 100 [ _18 ])
                (expr_list:REG_DEAD (reg/f:SI 99 [ _17 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 77 76 78 2 (set (reg:SI 175)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":191:5 75 {*movsi_internal}
     (nil))
(insn 78 77 79 2 (set (reg/f:SI 101 [ _19 ])
        (plus:SI (reg:SI 175)
            (const_int 72 [0x48]))) "kernel/traps.c":191:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 175)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 72 [0x48])))
            (nil))))
(insn 79 78 80 2 (set (reg:SI 176)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":191:5 75 {*movsi_internal}
     (nil))
(insn 80 79 81 2 (set (reg/f:SI 102 [ _20 ])
        (plus:SI (reg:SI 176)
            (const_int 76 [0x4c]))) "kernel/traps.c":191:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 176)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 76 [0x4c])))
            (nil))))
(insn 81 80 82 2 (set (reg:SI 178)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("coprocessor_segment_overrun") [flags 0x41]  <function_decl 0x783c7c93e400 coprocessor_segment_overrun>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":191:5 75 {*movsi_internal}
     (nil))
(insn 82 81 83 2 (set (reg/f:SI 177)
        (reg:SI 178)) "kernel/traps.c":191:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_EQUAL (symbol_ref:SI ("coprocessor_segment_overrun") [flags 0x41]  <function_decl 0x783c7c93e400 coprocessor_segment_overrun>)
            (nil))))
(insn 83 82 84 2 (set (reg:SI 179)
        (const_int 524288 [0x80000])) "kernel/traps.c":191:5 75 {*movsi_internal}
     (nil))
(insn 84 83 85 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 101 [ _19 ]) [0 MEM[(char *)_19]+0 S1 A8])
                    (mem:QI (reg/f:SI 102 [ _20 ]) [0 *_20+0 S1 A8])
                    (reg/f:SI 177)
                    (reg:SI 179)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:191)
                    (asm_input:QI ("o") kernel/traps.c:191)
                    (asm_input:QI ("o") kernel/traps.c:191)
                    (asm_input:SI ("d") kernel/traps.c:191)
                    (asm_input:SI ("a") kernel/traps.c:191)
                ]
                 [] kernel/traps.c:191)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":191:5 -1
     (expr_list:REG_DEAD (reg:SI 179)
        (expr_list:REG_DEAD (reg/f:SI 177)
            (expr_list:REG_DEAD (reg/f:SI 102 [ _20 ])
                (expr_list:REG_DEAD (reg/f:SI 101 [ _19 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 85 84 86 2 (set (reg:SI 180)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":192:5 75 {*movsi_internal}
     (nil))
(insn 86 85 87 2 (set (reg/f:SI 103 [ _21 ])
        (plus:SI (reg:SI 180)
            (const_int 80 [0x50]))) "kernel/traps.c":192:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 80 [0x50])))
            (nil))))
(insn 87 86 88 2 (set (reg:SI 181)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":192:5 75 {*movsi_internal}
     (nil))
(insn 88 87 89 2 (set (reg/f:SI 104 [ _22 ])
        (plus:SI (reg:SI 181)
            (const_int 84 [0x54]))) "kernel/traps.c":192:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 181)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 84 [0x54])))
            (nil))))
(insn 89 88 90 2 (set (reg:SI 183)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("invalid_TSS") [flags 0x41]  <function_decl 0x783c7c93e500 invalid_TSS>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":192:5 75 {*movsi_internal}
     (nil))
(insn 90 89 91 2 (set (reg/f:SI 182)
        (reg:SI 183)) "kernel/traps.c":192:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 183)
        (expr_list:REG_EQUAL (symbol_ref:SI ("invalid_TSS") [flags 0x41]  <function_decl 0x783c7c93e500 invalid_TSS>)
            (nil))))
(insn 91 90 92 2 (set (reg:SI 184)
        (const_int 524288 [0x80000])) "kernel/traps.c":192:5 75 {*movsi_internal}
     (nil))
(insn 92 91 93 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 103 [ _21 ]) [0 MEM[(char *)_21]+0 S1 A8])
                    (mem:QI (reg/f:SI 104 [ _22 ]) [0 *_22+0 S1 A8])
                    (reg/f:SI 182)
                    (reg:SI 184)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:192)
                    (asm_input:QI ("o") kernel/traps.c:192)
                    (asm_input:QI ("o") kernel/traps.c:192)
                    (asm_input:SI ("d") kernel/traps.c:192)
                    (asm_input:SI ("a") kernel/traps.c:192)
                ]
                 [] kernel/traps.c:192)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":192:5 -1
     (expr_list:REG_DEAD (reg:SI 184)
        (expr_list:REG_DEAD (reg/f:SI 182)
            (expr_list:REG_DEAD (reg/f:SI 104 [ _22 ])
                (expr_list:REG_DEAD (reg/f:SI 103 [ _21 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 93 92 94 2 (set (reg:SI 185)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":193:5 75 {*movsi_internal}
     (nil))
(insn 94 93 95 2 (set (reg/f:SI 105 [ _23 ])
        (plus:SI (reg:SI 185)
            (const_int 88 [0x58]))) "kernel/traps.c":193:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 185)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 88 [0x58])))
            (nil))))
(insn 95 94 96 2 (set (reg:SI 186)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":193:5 75 {*movsi_internal}
     (nil))
(insn 96 95 97 2 (set (reg/f:SI 106 [ _24 ])
        (plus:SI (reg:SI 186)
            (const_int 92 [0x5c]))) "kernel/traps.c":193:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 186)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 92 [0x5c])))
            (nil))))
(insn 97 96 98 2 (set (reg:SI 188)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("segment_not_present") [flags 0x41]  <function_decl 0x783c7c93e600 segment_not_present>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":193:5 75 {*movsi_internal}
     (nil))
(insn 98 97 99 2 (set (reg/f:SI 187)
        (reg:SI 188)) "kernel/traps.c":193:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 188)
        (expr_list:REG_EQUAL (symbol_ref:SI ("segment_not_present") [flags 0x41]  <function_decl 0x783c7c93e600 segment_not_present>)
            (nil))))
(insn 99 98 100 2 (set (reg:SI 189)
        (const_int 524288 [0x80000])) "kernel/traps.c":193:5 75 {*movsi_internal}
     (nil))
(insn 100 99 101 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 105 [ _23 ]) [0 MEM[(char *)_23]+0 S1 A8])
                    (mem:QI (reg/f:SI 106 [ _24 ]) [0 *_24+0 S1 A8])
                    (reg/f:SI 187)
                    (reg:SI 189)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:193)
                    (asm_input:QI ("o") kernel/traps.c:193)
                    (asm_input:QI ("o") kernel/traps.c:193)
                    (asm_input:SI ("d") kernel/traps.c:193)
                    (asm_input:SI ("a") kernel/traps.c:193)
                ]
                 [] kernel/traps.c:193)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":193:5 -1
     (expr_list:REG_DEAD (reg:SI 189)
        (expr_list:REG_DEAD (reg/f:SI 187)
            (expr_list:REG_DEAD (reg/f:SI 106 [ _24 ])
                (expr_list:REG_DEAD (reg/f:SI 105 [ _23 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 101 100 102 2 (set (reg:SI 190)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":194:5 75 {*movsi_internal}
     (nil))
(insn 102 101 103 2 (set (reg/f:SI 107 [ _25 ])
        (plus:SI (reg:SI 190)
            (const_int 96 [0x60]))) "kernel/traps.c":194:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 190)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 96 [0x60])))
            (nil))))
(insn 103 102 104 2 (set (reg:SI 191)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":194:5 75 {*movsi_internal}
     (nil))
(insn 104 103 105 2 (set (reg/f:SI 108 [ _26 ])
        (plus:SI (reg:SI 191)
            (const_int 100 [0x64]))) "kernel/traps.c":194:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 191)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 100 [0x64])))
            (nil))))
(insn 105 104 106 2 (set (reg:SI 193)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("stack_segment") [flags 0x41]  <function_decl 0x783c7c93e700 stack_segment>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":194:5 75 {*movsi_internal}
     (nil))
(insn 106 105 107 2 (set (reg/f:SI 192)
        (reg:SI 193)) "kernel/traps.c":194:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_EQUAL (symbol_ref:SI ("stack_segment") [flags 0x41]  <function_decl 0x783c7c93e700 stack_segment>)
            (nil))))
(insn 107 106 108 2 (set (reg:SI 194)
        (const_int 524288 [0x80000])) "kernel/traps.c":194:5 75 {*movsi_internal}
     (nil))
(insn 108 107 109 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 107 [ _25 ]) [0 MEM[(char *)_25]+0 S1 A8])
                    (mem:QI (reg/f:SI 108 [ _26 ]) [0 *_26+0 S1 A8])
                    (reg/f:SI 192)
                    (reg:SI 194)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:194)
                    (asm_input:QI ("o") kernel/traps.c:194)
                    (asm_input:QI ("o") kernel/traps.c:194)
                    (asm_input:SI ("d") kernel/traps.c:194)
                    (asm_input:SI ("a") kernel/traps.c:194)
                ]
                 [] kernel/traps.c:194)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":194:5 -1
     (expr_list:REG_DEAD (reg:SI 194)
        (expr_list:REG_DEAD (reg/f:SI 192)
            (expr_list:REG_DEAD (reg/f:SI 108 [ _26 ])
                (expr_list:REG_DEAD (reg/f:SI 107 [ _25 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 109 108 110 2 (set (reg:SI 195)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":195:5 75 {*movsi_internal}
     (nil))
(insn 110 109 111 2 (set (reg/f:SI 109 [ _27 ])
        (plus:SI (reg:SI 195)
            (const_int 104 [0x68]))) "kernel/traps.c":195:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 195)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 104 [0x68])))
            (nil))))
(insn 111 110 112 2 (set (reg:SI 196)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":195:5 75 {*movsi_internal}
     (nil))
(insn 112 111 113 2 (set (reg/f:SI 110 [ _28 ])
        (plus:SI (reg:SI 196)
            (const_int 108 [0x6c]))) "kernel/traps.c":195:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 196)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 108 [0x6c])))
            (nil))))
(insn 113 112 114 2 (set (reg:SI 198)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("general_protection") [flags 0x41]  <function_decl 0x783c7c93e800 general_protection>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":195:5 75 {*movsi_internal}
     (nil))
(insn 114 113 115 2 (set (reg/f:SI 197)
        (reg:SI 198)) "kernel/traps.c":195:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 198)
        (expr_list:REG_EQUAL (symbol_ref:SI ("general_protection") [flags 0x41]  <function_decl 0x783c7c93e800 general_protection>)
            (nil))))
(insn 115 114 116 2 (set (reg:SI 199)
        (const_int 524288 [0x80000])) "kernel/traps.c":195:5 75 {*movsi_internal}
     (nil))
(insn 116 115 117 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 109 [ _27 ]) [0 MEM[(char *)_27]+0 S1 A8])
                    (mem:QI (reg/f:SI 110 [ _28 ]) [0 *_28+0 S1 A8])
                    (reg/f:SI 197)
                    (reg:SI 199)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:195)
                    (asm_input:QI ("o") kernel/traps.c:195)
                    (asm_input:QI ("o") kernel/traps.c:195)
                    (asm_input:SI ("d") kernel/traps.c:195)
                    (asm_input:SI ("a") kernel/traps.c:195)
                ]
                 [] kernel/traps.c:195)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":195:5 -1
     (expr_list:REG_DEAD (reg:SI 199)
        (expr_list:REG_DEAD (reg/f:SI 197)
            (expr_list:REG_DEAD (reg/f:SI 110 [ _28 ])
                (expr_list:REG_DEAD (reg/f:SI 109 [ _27 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 117 116 118 2 (set (reg:SI 200)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":196:5 75 {*movsi_internal}
     (nil))
(insn 118 117 119 2 (set (reg/f:SI 111 [ _29 ])
        (plus:SI (reg:SI 200)
            (const_int 112 [0x70]))) "kernel/traps.c":196:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 200)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 112 [0x70])))
            (nil))))
(insn 119 118 120 2 (set (reg:SI 201)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":196:5 75 {*movsi_internal}
     (nil))
(insn 120 119 121 2 (set (reg/f:SI 112 [ _30 ])
        (plus:SI (reg:SI 201)
            (const_int 116 [0x74]))) "kernel/traps.c":196:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 201)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 116 [0x74])))
            (nil))))
(insn 121 120 122 2 (set (reg:SI 203)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("page_fault") [flags 0x41]  <function_decl 0x783c7c93e900 page_fault>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":196:5 75 {*movsi_internal}
     (nil))
(insn 122 121 123 2 (set (reg/f:SI 202)
        (reg:SI 203)) "kernel/traps.c":196:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 203)
        (expr_list:REG_EQUAL (symbol_ref:SI ("page_fault") [flags 0x41]  <function_decl 0x783c7c93e900 page_fault>)
            (nil))))
(insn 123 122 124 2 (set (reg:SI 204)
        (const_int 524288 [0x80000])) "kernel/traps.c":196:5 75 {*movsi_internal}
     (nil))
(insn 124 123 125 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 111 [ _29 ]) [0 MEM[(char *)_29]+0 S1 A8])
                    (mem:QI (reg/f:SI 112 [ _30 ]) [0 *_30+0 S1 A8])
                    (reg/f:SI 202)
                    (reg:SI 204)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:196)
                    (asm_input:QI ("o") kernel/traps.c:196)
                    (asm_input:QI ("o") kernel/traps.c:196)
                    (asm_input:SI ("d") kernel/traps.c:196)
                    (asm_input:SI ("a") kernel/traps.c:196)
                ]
                 [] kernel/traps.c:196)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":196:5 -1
     (expr_list:REG_DEAD (reg:SI 204)
        (expr_list:REG_DEAD (reg/f:SI 202)
            (expr_list:REG_DEAD (reg/f:SI 112 [ _30 ])
                (expr_list:REG_DEAD (reg/f:SI 111 [ _29 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 125 124 126 2 (set (reg:SI 205)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":197:5 75 {*movsi_internal}
     (nil))
(insn 126 125 127 2 (set (reg/f:SI 113 [ _31 ])
        (plus:SI (reg:SI 205)
            (const_int 120 [0x78]))) "kernel/traps.c":197:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 205)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 120 [0x78])))
            (nil))))
(insn 127 126 128 2 (set (reg:SI 206)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":197:5 75 {*movsi_internal}
     (nil))
(insn 128 127 129 2 (set (reg/f:SI 114 [ _32 ])
        (plus:SI (reg:SI 206)
            (const_int 124 [0x7c]))) "kernel/traps.c":197:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 206)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 124 [0x7c])))
            (nil))))
(insn 129 128 130 2 (set (reg:SI 208)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("reserved") [flags 0x41]  <function_decl 0x783c7c93eb00 reserved>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":197:5 75 {*movsi_internal}
     (nil))
(insn 130 129 131 2 (set (reg/f:SI 207)
        (reg:SI 208)) "kernel/traps.c":197:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 208)
        (expr_list:REG_EQUAL (symbol_ref:SI ("reserved") [flags 0x41]  <function_decl 0x783c7c93eb00 reserved>)
            (nil))))
(insn 131 130 132 2 (set (reg:SI 209)
        (const_int 524288 [0x80000])) "kernel/traps.c":197:5 75 {*movsi_internal}
     (nil))
(insn 132 131 133 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 113 [ _31 ]) [0 MEM[(char *)_31]+0 S1 A8])
                    (mem:QI (reg/f:SI 114 [ _32 ]) [0 *_32+0 S1 A8])
                    (reg/f:SI 207)
                    (reg:SI 209)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:197)
                    (asm_input:QI ("o") kernel/traps.c:197)
                    (asm_input:QI ("o") kernel/traps.c:197)
                    (asm_input:SI ("d") kernel/traps.c:197)
                    (asm_input:SI ("a") kernel/traps.c:197)
                ]
                 [] kernel/traps.c:197)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":197:5 -1
     (expr_list:REG_DEAD (reg:SI 209)
        (expr_list:REG_DEAD (reg/f:SI 207)
            (expr_list:REG_DEAD (reg/f:SI 114 [ _32 ])
                (expr_list:REG_DEAD (reg/f:SI 113 [ _31 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 133 132 134 2 (set (reg:SI 210)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":198:5 75 {*movsi_internal}
     (nil))
(insn 134 133 135 2 (set (reg/f:SI 115 [ _33 ])
        (plus:SI (reg:SI 210)
            (const_int 128 [0x80]))) "kernel/traps.c":198:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 210)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 128 [0x80])))
            (nil))))
(insn 135 134 136 2 (set (reg:SI 211)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":198:5 75 {*movsi_internal}
     (nil))
(insn 136 135 137 2 (set (reg/f:SI 116 [ _34 ])
        (plus:SI (reg:SI 211)
            (const_int 132 [0x84]))) "kernel/traps.c":198:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 211)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 132 [0x84])))
            (nil))))
(insn 137 136 138 2 (set (reg:SI 213)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("coprocessor_error") [flags 0x41]  <function_decl 0x783c7c93ea00 coprocessor_error>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":198:5 75 {*movsi_internal}
     (nil))
(insn 138 137 139 2 (set (reg/f:SI 212)
        (reg:SI 213)) "kernel/traps.c":198:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 213)
        (expr_list:REG_EQUAL (symbol_ref:SI ("coprocessor_error") [flags 0x41]  <function_decl 0x783c7c93ea00 coprocessor_error>)
            (nil))))
(insn 139 138 140 2 (set (reg:SI 214)
        (const_int 524288 [0x80000])) "kernel/traps.c":198:5 75 {*movsi_internal}
     (nil))
(insn 140 139 141 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 115 [ _33 ]) [0 MEM[(char *)_33]+0 S1 A8])
                    (mem:QI (reg/f:SI 116 [ _34 ]) [0 *_34+0 S1 A8])
                    (reg/f:SI 212)
                    (reg:SI 214)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:198)
                    (asm_input:QI ("o") kernel/traps.c:198)
                    (asm_input:QI ("o") kernel/traps.c:198)
                    (asm_input:SI ("d") kernel/traps.c:198)
                    (asm_input:SI ("a") kernel/traps.c:198)
                ]
                 [] kernel/traps.c:198)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":198:5 -1
     (expr_list:REG_DEAD (reg:SI 214)
        (expr_list:REG_DEAD (reg/f:SI 212)
            (expr_list:REG_DEAD (reg/f:SI 116 [ _34 ])
                (expr_list:REG_DEAD (reg/f:SI 115 [ _33 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 141 140 203 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
        (const_int 17 [0x11])) "kernel/traps.c":200:12 75 {*movsi_internal}
     (nil))
(jump_insn 203 141 204 2 (set (pc)
        (label_ref 161)) "kernel/traps.c":200:5 807 {jump}
     (nil)
 -> 161)
(barrier 204 203 163)
(code_label 163 204 144 3 30 (nil) [1 uses])
(note 144 163 145 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 3 (set (reg:SI 216)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "kernel/traps.c":201:9 75 {*movsi_internal}
     (nil))
(insn 146 145 147 3 (parallel [
            (set (reg:SI 215)
                (ashift:SI (reg:SI 216)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":201:9 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 216)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 147 146 148 3 (set (reg:SI 218)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":201:9 75 {*movsi_internal}
     (nil))
(insn 148 147 149 3 (set (reg:SI 217)
        (reg:SI 218)) "kernel/traps.c":201:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 218)
        (expr_list:REG_EQUAL (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
            (nil))))
(insn 149 148 150 3 (parallel [
            (set (reg/f:SI 117 [ _35 ])
                (plus:SI (reg:SI 215)
                    (reg:SI 217)))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":201:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 217)
        (expr_list:REG_DEAD (reg:SI 215)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 150 149 151 3 (set (reg:SI 220)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "kernel/traps.c":201:9 75 {*movsi_internal}
     (nil))
(insn 151 150 152 3 (parallel [
            (set (reg:SI 219)
                (ashift:SI (reg:SI 220)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":201:9 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 220)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 152 151 153 3 (set (reg:SI 222)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":201:9 75 {*movsi_internal}
     (nil))
(insn 153 152 154 3 (set (reg:SI 221)
        (reg:SI 222)) "kernel/traps.c":201:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 222)
        (expr_list:REG_EQUAL (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
            (nil))))
(insn 154 153 155 3 (parallel [
            (set (reg/f:SI 118 [ _36 ])
                (plus:SI (reg:SI 219)
                    (reg:SI 221)))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":201:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 221)
        (expr_list:REG_DEAD (reg:SI 219)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 155 154 156 3 (parallel [
            (set (reg/f:SI 119 [ _37 ])
                (plus:SI (reg/f:SI 118 [ _36 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":201:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 118 [ _36 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 156 155 157 3 (set (reg:SI 224)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("reserved") [flags 0x41]  <function_decl 0x783c7c93eb00 reserved>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":201:9 75 {*movsi_internal}
     (nil))
(insn 157 156 158 3 (set (reg/f:SI 223)
        (reg:SI 224)) "kernel/traps.c":201:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 224)
        (expr_list:REG_EQUAL (symbol_ref:SI ("reserved") [flags 0x41]  <function_decl 0x783c7c93eb00 reserved>)
            (nil))))
(insn 158 157 159 3 (set (reg:SI 225)
        (const_int 524288 [0x80000])) "kernel/traps.c":201:9 75 {*movsi_internal}
     (nil))
(insn 159 158 160 3 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 117 [ _35 ]) [0 MEM[(char *)_35]+0 S1 A8])
                    (mem:QI (reg/f:SI 119 [ _37 ]) [0 *_37+0 S1 A8])
                    (reg/f:SI 223)
                    (reg:SI 225)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:201)
                    (asm_input:QI ("o") kernel/traps.c:201)
                    (asm_input:QI ("o") kernel/traps.c:201)
                    (asm_input:SI ("d") kernel/traps.c:201)
                    (asm_input:SI ("a") kernel/traps.c:201)
                ]
                 [] kernel/traps.c:201)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":201:9 -1
     (expr_list:REG_DEAD (reg:SI 225)
        (expr_list:REG_DEAD (reg/f:SI 223)
            (expr_list:REG_DEAD (reg/f:SI 119 [ _37 ])
                (expr_list:REG_DEAD (reg/f:SI 117 [ _35 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 160 159 161 3 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":200:27 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 161 160 162 4 29 (nil) [1 uses])
(note 162 161 166 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 166 162 167 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
            (const_int 47 [0x2f]))) "kernel/traps.c":200:20 11 {*cmpsi_1}
     (nil))
(jump_insn 167 166 168 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) "kernel/traps.c":200:20 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 163)
(note 168 167 169 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 5 (set (reg:SI 226)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":203:5 75 {*movsi_internal}
     (nil))
(insn 170 169 171 5 (set (reg/f:SI 120 [ _38 ])
        (plus:SI (reg:SI 226)
            (const_int 360 [0x168]))) "kernel/traps.c":203:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 226)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 360 [0x168])))
            (nil))))
(insn 171 170 172 5 (set (reg:SI 227)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":203:5 75 {*movsi_internal}
     (nil))
(insn 172 171 173 5 (set (reg/f:SI 121 [ _39 ])
        (plus:SI (reg:SI 227)
            (const_int 364 [0x16c]))) "kernel/traps.c":203:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 227)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 364 [0x16c])))
            (nil))))
(insn 173 172 174 5 (set (reg:SI 229)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("irq13") [flags 0x41]  <function_decl 0x783c7c93ed00 irq13>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":203:5 75 {*movsi_internal}
     (nil))
(insn 174 173 175 5 (set (reg/f:SI 228)
        (reg:SI 229)) "kernel/traps.c":203:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 229)
        (expr_list:REG_EQUAL (symbol_ref:SI ("irq13") [flags 0x41]  <function_decl 0x783c7c93ed00 irq13>)
            (nil))))
(insn 175 174 176 5 (set (reg:SI 230)
        (const_int 524288 [0x80000])) "kernel/traps.c":203:5 75 {*movsi_internal}
     (nil))
(insn 176 175 178 5 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 120 [ _38 ]) [0 MEM[(char *)_38]+0 S1 A8])
                    (mem:QI (reg/f:SI 121 [ _39 ]) [0 *_39+0 S1 A8])
                    (reg/f:SI 228)
                    (reg:SI 230)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:203)
                    (asm_input:QI ("o") kernel/traps.c:203)
                    (asm_input:QI ("o") kernel/traps.c:203)
                    (asm_input:SI ("d") kernel/traps.c:203)
                    (asm_input:SI ("a") kernel/traps.c:203)
                ]
                 [] kernel/traps.c:203)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":203:5 -1
     (expr_list:REG_DEAD (reg:SI 230)
        (expr_list:REG_DEAD (reg/f:SI 228)
            (expr_list:REG_DEAD (reg/f:SI 121 [ _39 ])
                (expr_list:REG_DEAD (reg/f:SI 120 [ _38 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 178 176 179 5 (set (reg:SI 232)
        (const_int 33 [0x21])) "kernel/traps.c":204:5 75 {*movsi_internal}
     (nil))
(insn 179 178 177 5 (parallel [
            (set (reg:QI 231 [ _v ])
                (asm_operands/v:QI ("inb %%dx, %%al
	jmp 1f
1:	jmp 1f
1:") ("=a") 0 [
                        (reg:SI 232)
                    ]
                     [
                        (asm_input:SI ("d") kernel/traps.c:204)
                    ]
                     [] kernel/traps.c:204))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":204:5 -1
     (expr_list:REG_DEAD (reg:SI 232)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 177 179 180 5 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -5 [0xfffffffffffffffb])) [0 _v+0 S1 A8])
        (reg:QI 231 [ _v ])) "kernel/traps.c":204:5 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 231 [ _v ])
        (nil)))
(insn 180 177 181 5 (set (reg:QI 128 [ _50 ])
        (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -5 [0xfffffffffffffffb])) [0 _v+0 S1 A8])) "kernel/traps.c":204:5 77 {*movqi_internal}
     (nil))
(insn 181 180 182 5 (set (reg:SI 122 [ _40 ])
        (zero_extend:SI (reg:QI 128 [ _50 ]))) "kernel/traps.c":204:5 143 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 128 [ _50 ])
        (nil)))
(insn 182 181 183 5 (parallel [
            (set (reg:SI 123 [ _41 ])
                (and:SI (reg:SI 122 [ _40 ])
                    (const_int 251 [0xfb])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":204:5 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 122 [ _40 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 183 182 184 5 (set (reg:SI 233)
        (const_int 33 [0x21])) "kernel/traps.c":204:5 75 {*movsi_internal}
     (nil))
(insn 184 183 186 5 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 123 [ _41 ])
                    (reg:SI 233)
                ]
                 [
                    (asm_input:SI ("a") kernel/traps.c:204)
                    (asm_input:SI ("d") kernel/traps.c:204)
                ]
                 [] kernel/traps.c:204)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":204:5 -1
     (expr_list:REG_DEAD (reg:SI 233)
        (expr_list:REG_DEAD (reg:SI 123 [ _41 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 186 184 187 5 (set (reg:SI 235)
        (const_int 161 [0xa1])) "kernel/traps.c":205:5 75 {*movsi_internal}
     (nil))
(insn 187 186 185 5 (parallel [
            (set (reg:QI 234 [ _v ])
                (asm_operands/v:QI ("inb %%dx, %%al
	jmp 1f
1:	jmp 1f
1:") ("=a") 0 [
                        (reg:SI 235)
                    ]
                     [
                        (asm_input:SI ("d") kernel/traps.c:205)
                    ]
                     [] kernel/traps.c:205))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":205:5 -1
     (expr_list:REG_DEAD (reg:SI 235)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 185 187 188 5 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -6 [0xfffffffffffffffa])) [0 _v+0 S1 A16])
        (reg:QI 234 [ _v ])) "kernel/traps.c":205:5 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 234 [ _v ])
        (nil)))
(insn 188 185 189 5 (set (reg:QI 129 [ _52 ])
        (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -6 [0xfffffffffffffffa])) [0 _v+0 S1 A16])) "kernel/traps.c":205:5 77 {*movqi_internal}
     (nil))
(insn 189 188 190 5 (set (reg:SI 124 [ _42 ])
        (zero_extend:SI (reg:QI 129 [ _52 ]))) "kernel/traps.c":205:5 143 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 129 [ _52 ])
        (nil)))
(insn 190 189 191 5 (parallel [
            (set (reg:SI 125 [ _43 ])
                (and:SI (reg:SI 124 [ _42 ])
                    (const_int 223 [0xdf])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":205:5 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 124 [ _42 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 191 190 192 5 (set (reg:SI 236)
        (const_int 161 [0xa1])) "kernel/traps.c":205:5 75 {*movsi_internal}
     (nil))
(insn 192 191 193 5 (parallel [
            (asm_operands/v ("outb %%al, %%dx") ("") 0 [
                    (reg:SI 125 [ _43 ])
                    (reg:SI 236)
                ]
                 [
                    (asm_input:SI ("a") kernel/traps.c:205)
                    (asm_input:SI ("d") kernel/traps.c:205)
                ]
                 [] kernel/traps.c:205)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":205:5 -1
     (expr_list:REG_DEAD (reg:SI 236)
        (expr_list:REG_DEAD (reg:SI 125 [ _43 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 193 192 194 5 (set (reg:SI 237)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":206:5 75 {*movsi_internal}
     (nil))
(insn 194 193 195 5 (set (reg/f:SI 126 [ _44 ])
        (plus:SI (reg:SI 237)
            (const_int 312 [0x138]))) "kernel/traps.c":206:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 237)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 312 [0x138])))
            (nil))))
(insn 195 194 196 5 (set (reg:SI 238)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":206:5 75 {*movsi_internal}
     (nil))
(insn 196 195 197 5 (set (reg/f:SI 127 [ _45 ])
        (plus:SI (reg:SI 238)
            (const_int 316 [0x13c]))) "kernel/traps.c":206:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 238)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x783c7e2d4e10 idt>)
                    (const_int 316 [0x13c])))
            (nil))))
(insn 197 196 198 5 (set (reg:SI 240)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("parallel_interrupt") [flags 0x41]  <function_decl 0x783c7c93ec00 parallel_interrupt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":206:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 198 197 199 5 (set (reg/f:SI 239)
        (reg:SI 240)) "kernel/traps.c":206:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 240)
        (expr_list:REG_EQUAL (symbol_ref:SI ("parallel_interrupt") [flags 0x41]  <function_decl 0x783c7c93ec00 parallel_interrupt>)
            (nil))))
(insn 199 198 200 5 (set (reg:SI 241)
        (const_int 524288 [0x80000])) "kernel/traps.c":206:5 75 {*movsi_internal}
     (nil))
(insn 200 199 205 5 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 126 [ _44 ]) [0 MEM[(char *)_44]+0 S1 A8])
                    (mem:QI (reg/f:SI 127 [ _45 ]) [0 *_45+0 S1 A8])
                    (reg/f:SI 239)
                    (reg:SI 241)
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:206)
                    (asm_input:QI ("o") kernel/traps.c:206)
                    (asm_input:QI ("o") kernel/traps.c:206)
                    (asm_input:SI ("d") kernel/traps.c:206)
                    (asm_input:SI ("a") kernel/traps.c:206)
                ]
                 [] kernel/traps.c:206)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":206:5 -1
     (expr_list:REG_DEAD (reg:SI 241)
        (expr_list:REG_DEAD (reg/f:SI 239)
            (expr_list:REG_DEAD (reg/f:SI 127 [ _45 ])
                (expr_list:REG_DEAD (reg/f:SI 126 [ _44 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(note 205 200 206 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 0 6 (const_int 0 [0]) "kernel/traps.c":207:1 843 {nop}
     (nil))
