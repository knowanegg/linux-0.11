
;; Function kernel_mktime (kernel_mktime, funcdef_no=0, decl_uid=1008, cgraph_uid=1, symbol_order=1)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 22:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 27:  (0) r  (1) rm  (2) e {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 29:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 31:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (2) rm  (3) 0 {*movsicc_noc}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 38:  (0) r  (1) rm  (2) e {*mulsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 39
	 Choosing alt 0 in insn 39:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 44:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 53:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 55:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 59:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 64:  (0) =rm  (1) %0  (2) re {*addsi_1}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 65:  (0) r  (1) rm  (2) e {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 66:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 69:  (0) r  (1) rm  (2) e {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 70:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 73:  (0) =r  (1) %rm  (2) K {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 74:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 77:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5 6 7
EBB 8

********** Pseudo live ranges #1: **********

  BB 8
   Insn 86: point = 0, n_alt = -1
   Insn 85: point = 0, n_alt = -2
   Insn 81: point = 1, n_alt = -2
   Insn 78: point = 3, n_alt = 0
   Insn 77: point = 4, n_alt = 0
   Insn 76: point = 5, n_alt = 0
   Insn 75: point = 7, n_alt = 0
   Insn 74: point = 8, n_alt = 0
   Insn 73: point = 9, n_alt = 0
   Insn 72: point = 11, n_alt = 0
   Insn 71: point = 13, n_alt = 0
   Insn 70: point = 14, n_alt = 0
   Insn 69: point = 15, n_alt = 1
   Insn 68: point = 17, n_alt = 0
   Insn 67: point = 19, n_alt = 0
   Insn 66: point = 20, n_alt = 0
   Insn 65: point = 21, n_alt = 1
   Insn 64: point = 23, n_alt = 0
   Insn 63: point = 25, n_alt = 0
   Insn 62: point = 27, n_alt = 0
  BB 7
   Insn 59: point = 28, n_alt = 0
  BB 6
   Insn 57: point = 28, n_alt = -1
   Insn 56: point = 28, n_alt = 0
   Insn 55: point = 29, n_alt = 0
   Insn 54: point = 31, n_alt = -2
   Insn 53: point = 33, n_alt = 0
   Insn 52: point = 35, n_alt = 0
  BB 5
   Insn 50: point = 36, n_alt = -1
   Insn 49: point = 36, n_alt = 0
   Insn 46: point = 37, n_alt = 0
   Insn 45: point = 39, n_alt = 0
   Insn 44: point = 40, n_alt = 0
   Insn 43: point = 41, n_alt = 0
   Insn 42: point = 43, n_alt = 0
   Insn 41: point = 45, n_alt = 0
   Insn 40: point = 46, n_alt = 1
   Insn 39: point = 47, n_alt = 0
   Insn 38: point = 49, n_alt = 1
   Insn 37: point = 51, n_alt = -2
   Insn 36: point = 53, n_alt = 0
   Insn 35: point = 55, n_alt = 0
   Insn 34: point = 57, n_alt = 0
   Insn 31: point = 57, n_alt = 3
   Insn 30: point = 58, n_alt = -2
   Insn 29: point = 60, n_alt = 0
   Insn 28: point = 62, n_alt = 0
   Insn 27: point = 63, n_alt = 1
   Insn 26: point = 65, n_alt = 0
  BB 3
   Insn 88: point = 67, n_alt = -1
   Insn 15: point = 67, n_alt = 1
   Insn 14: point = 68, n_alt = 0
   Insn 13: point = 70, n_alt = 0
   Insn 12: point = 72, n_alt = 0
  BB 4
   Insn 23: point = 74, n_alt = 1
   Insn 22: point = 75, n_alt = 0
   Insn 21: point = 77, n_alt = 0
   Insn 20: point = 79, n_alt = 0
  BB 2
   Insn 10: point = 81, n_alt = -1
   Insn 9: point = 81, n_alt = 0
   Insn 6: point = 82, n_alt = 0
   Insn 5: point = 84, n_alt = 0
   Insn 90: point = 85, n_alt = 0
 r82: [42..85]
 r83: [81..82]
 r84: [69..70]
 r85: [76..77]
 r86: [48..63]
 r87: [59..60]
 r88: [50..51]
 r89: [48..49]
 r90: [42..43]
 r91: [40..41]
 r92: [36..37]
 r93: [32..33]
 r94: [30..31]
 r95: [28..29]
 r96: [24..25]
 r97: [22..23]
 r98: [20..21]
 r99: [16..17]
 r100: [14..15]
 r101: [10..11]
 r102: [8..9]
 r103: [4..5]
 r104: [2..3]
 r105: [0..1]
 r106: [83..84]
 r107: [71..72]
 r108: [67..68]
 r109: [78..79]
 r110: [74..75]
 r111: [64..65]
 r112: [61..62]
 r113: [54..58]
 r114: [56..57]
 r115: [52..53]
 r116: [46..47]
 r117: [44..45]
 r118: [38..39]
 r119: [34..35]
 r120: [26..27]
 r121: [18..19]
 r122: [12..13]
 r123: [6..7]
Compressing live ranges: from 86 to 78 - 90%
Ranges after the compression:
 r82: [42..77]
 r83: [74..75]
 r84: [64..65]
 r85: [70..71]
 r86: [48..59]
 r87: [56..57]
 r88: [50..51]
 r89: [48..49]
 r90: [42..43]
 r91: [40..41]
 r92: [36..37]
 r93: [32..33]
 r94: [30..31]
 r95: [28..29]
 r96: [24..25]
 r97: [22..23]
 r98: [20..21]
 r99: [16..17]
 r100: [14..15]
 r101: [10..11]
 r102: [8..9]
 r103: [4..5]
 r104: [2..3]
 r105: [0..1]
 r106: [76..77]
 r107: [66..67]
 r108: [62..63]
 r109: [72..73]
 r110: [68..69]
 r111: [60..61]
 r112: [58..59]
 r113: [54..55]
 r114: [54..55]
 r115: [52..53]
 r116: [46..47]
 r117: [44..45]
 r118: [38..39]
 r119: [34..35]
 r120: [26..27]
 r121: [18..19]
 r122: [12..13]
 r123: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=24)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
changing reg in insn 90
changing reg in insn 43
changing reg in insn 6
changing reg in insn 9
changing reg in insn 13
changing reg in insn 14
changing reg in insn 21
changing reg in insn 22
changing reg in insn 27
changing reg in insn 29
changing reg in insn 30
changing reg in insn 37
changing reg in insn 38
changing reg in insn 38
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 44
changing reg in insn 46
changing reg in insn 49
changing reg in insn 53
changing reg in insn 54
changing reg in insn 54
changing reg in insn 55
changing reg in insn 55
changing reg in insn 56
changing reg in insn 63
changing reg in insn 64
changing reg in insn 64
changing reg in insn 65
changing reg in insn 65
changing reg in insn 66
changing reg in insn 68
changing reg in insn 69
changing reg in insn 69
changing reg in insn 70
changing reg in insn 72
changing reg in insn 73
changing reg in insn 73
changing reg in insn 74
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 81
changing reg in insn 81
changing reg in insn 85
changing reg in insn 5
changing reg in insn 6
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 35
changing reg in insn 30
changing reg in insn 36
changing reg in insn 35
changing reg in insn 34
changing reg in insn 31
changing reg in insn 31
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
changing reg in insn 45
changing reg in insn 46
changing reg in insn 52
changing reg in insn 53
changing reg in insn 62
changing reg in insn 63
changing reg in insn 67
changing reg in insn 68
changing reg in insn 71
changing reg in insn 72
changing reg in insn 75
changing reg in insn 76
deleting insn with uid = 30.
deleting insn with uid = 37.
deleting insn with uid = 54.
deleting insn with uid = 81.
deleting insn with uid = 85.
starting the processing of deferred insns
ending the processing of deferred insns


kernel_mktime

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;;  ref usage 	r0={37d,39u} r1={2d,1u} r2={2d,1u} r3={1d,1u} r7={1d,36u} r17={25d,4u} r19={2e} 
;;    total ref usage 152{68d,82u,2e} in 57{57 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 90 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 90 3 2 2 (parallel [
            (set (reg:SI 1 dx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 90 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [106])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [3 tm+0 S4 A32])) "kernel/mktime.c":32:8 75 {*movsi_internal}
     (nil))
(insn 6 5 9 2 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (mem:SI (plus:SI (reg/f:SI 0 ax [106])
                (const_int 20 [0x14])) [1 tm_25(D)->tm_year+0 S4 A32])) "kernel/mktime.c":32:8 75 {*movsi_internal}
     (nil))
(insn 9 6 10 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:83 _1 ] [83])
            (const_int 69 [0x45]))) "kernel/mktime.c":32:5 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "kernel/mktime.c":32:5 806 {*jcc}
     (nil)
 -> 18)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg/f:SI 0 ax [107])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [3 tm+0 S4 A32])) "kernel/mktime.c":33:12 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (mem:SI (plus:SI (reg/f:SI 0 ax [107])
                (const_int 20 [0x14])) [1 tm_25(D)->tm_year+0 S4 A32])) "kernel/mktime.c":33:12 75 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (parallel [
            (set (reg:SI 0 ax [108])
                (plus:SI (reg:SI 0 ax [orig:84 _2 ] [84])
                    (const_int -70 [0xffffffffffffffba])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":33:8 209 {*addsi_1}
     (nil))
(insn 15 14 88 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 year+0 S4 A32])
        (reg:SI 0 ax [108])) "kernel/mktime.c":33:8 75 {*movsi_internal}
     (nil))
(jump_insn 88 15 89 3 (set (pc)
        (label_ref 24)) 807 {jump}
     (nil)
 -> 24)
(barrier 89 88 18)
(code_label 18 89 19 4 2 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 0 ax [109])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [3 tm+0 S4 A32])) "kernel/mktime.c":35:12 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:SI 0 ax [orig:85 _3 ] [85])
        (mem:SI (plus:SI (reg/f:SI 0 ax [109])
                (const_int 20 [0x14])) [1 tm_25(D)->tm_year+0 S4 A32])) "kernel/mktime.c":35:12 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:SI 0 ax [110])
                (plus:SI (reg:SI 0 ax [orig:85 _3 ] [85])
                    (const_int 30 [0x1e])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":35:8 209 {*addsi_1}
     (nil))
(insn 23 22 24 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 year+0 S4 A32])
        (reg:SI 0 ax [110])) "kernel/mktime.c":35:8 75 {*movsi_internal}
     (nil))
(code_label 24 23 25 5 3 (nil) [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:SI 0 ax [111])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 year+0 S4 A32])) "kernel/mktime.c":37:13 75 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (parallel [
            (set (reg:SI 3 bx [orig:86 _4 ] [86])
                (mult:SI (reg:SI 0 ax [111])
                    (const_int 31536000 [0x1e13380])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":37:13 408 {*mulsi3_1}
     (nil))
(insn 28 27 29 5 (set (reg:SI 0 ax [112])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 year+0 S4 A32])) "kernel/mktime.c":37:35 75 {*movsi_internal}
     (nil))
(insn 29 28 31 5 (parallel [
            (set (reg:SI 0 ax [orig:87 _5 ] [87])
                (plus:SI (reg:SI 0 ax [112])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":37:35 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 year+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 31 29 34 5 (parallel [
            (set (reg:SI 2 cx [114])
                (plus:SI (reg:SI 0 ax [113])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":37:40 209 {*addsi_1}
     (nil))
(insn 34 31 35 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [113])
            (const_int 0 [0]))) "kernel/mktime.c":37:40 7 {*cmpsi_ccno_1}
     (nil))
(insn 35 34 36 5 (set (reg:SI 0 ax [113])
        (if_then_else:SI (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 2 cx [114])
            (reg:SI 0 ax [113]))) "kernel/mktime.c":37:40 1100 {*movsicc_noc}
     (nil))
(insn 36 35 38 5 (parallel [
            (set (reg:SI 0 ax [115])
                (ashiftrt:SI (reg:SI 0 ax [113])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":37:40 702 {*ashrsi3_1}
     (nil))
(insn 38 36 39 5 (parallel [
            (set (reg:SI 0 ax [orig:89 _7 ] [89])
                (mult:SI (reg:SI 0 ax [orig:88 _6 ] [88])
                    (const_int 86400 [0x15180])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":37:26 408 {*mulsi3_1}
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg:SI 0 ax [116])
                (plus:SI (reg:SI 0 ax [orig:89 _7 ] [89])
                    (reg:SI 3 bx [orig:86 _4 ] [86])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":37:6 209 {*addsi_1}
     (nil))
(insn 40 39 41 5 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 res+0 S4 A32])
        (reg:SI 0 ax [116])) "kernel/mktime.c":37:6 75 {*movsi_internal}
     (nil))
(insn 41 40 42 5 (set (reg/f:SI 0 ax [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [3 tm+0 S4 A32])) "kernel/mktime.c":38:17 75 {*movsi_internal}
     (nil))
(insn 42 41 43 5 (set (reg:SI 0 ax [orig:90 _8 ] [90])
        (mem:SI (plus:SI (reg/f:SI 0 ax [117])
                (const_int 16 [0x10])) [1 tm_25(D)->tm_mon+0 S4 A32])) "kernel/mktime.c":38:17 75 {*movsi_internal}
     (nil))
(insn 43 42 44 5 (set (reg:SI 0 ax [orig:91 _9 ] [91])
        (mem:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [orig:90 _8 ] [90])
                        (const_int 4 [0x4]))
                    (reg:SI 1 dx [82]))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("month") [flags 0x2]  <var_decl 0x7fc558772cf0 month>)
                        ] UNSPEC_GOTOFF))) [1 month[_8]+0 S4 A32])) "kernel/mktime.c":38:14 75 {*movsi_internal}
     (nil))
(insn 44 43 45 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [2 res+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [2 res+0 S4 A32])
                    (reg:SI 0 ax [orig:91 _9 ] [91])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":38:6 209 {*addsi_1}
     (nil))
(insn 45 44 46 5 (set (reg/f:SI 0 ax [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [3 tm+0 S4 A32])) "kernel/mktime.c":40:8 75 {*movsi_internal}
     (nil))
(insn 46 45 49 5 (set (reg:SI 0 ax [orig:92 _10 ] [92])
        (mem:SI (plus:SI (reg/f:SI 0 ax [118])
                (const_int 16 [0x10])) [1 tm_25(D)->tm_mon+0 S4 A32])) "kernel/mktime.c":40:8 75 {*movsi_internal}
     (nil))
(insn 49 46 50 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:92 _10 ] [92])
            (const_int 1 [0x1]))) "kernel/mktime.c":40:5 11 {*cmpsi_1}
     (nil))
(jump_insn 50 49 51 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "kernel/mktime.c":40:5 806 {*jcc}
     (nil)
 -> 60)
(note 51 50 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 6 (set (reg:SI 0 ax [119])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 year+0 S4 A32])) "kernel/mktime.c":40:31 75 {*movsi_internal}
     (nil))
(insn 53 52 55 6 (parallel [
            (set (reg:SI 0 ax [orig:93 _11 ] [93])
                (plus:SI (reg:SI 0 ax [119])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":40:31 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 year+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 55 53 56 6 (parallel [
            (set (reg:SI 0 ax [orig:95 _13 ] [95])
                (and:SI (reg:SI 0 ax [orig:94 _12 ] [94])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":40:21 490 {*andsi_1}
     (nil))
(insn 56 55 57 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:95 _13 ] [95])
            (const_int 0 [0]))) "kernel/mktime.c":40:21 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 57 56 58 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "kernel/mktime.c":40:21 806 {*jcc}
     (nil)
 -> 60)
(note 58 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [2 res+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [2 res+0 S4 A32])
                    (const_int -86400 [0xfffffffffffeae80])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":41:7 209 {*addsi_1}
     (nil))
(code_label 60 59 61 8 4 (nil) [2 uses])
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 8 (set (reg/f:SI 0 ax [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [3 tm+0 S4 A32])) "kernel/mktime.c":43:18 75 {*movsi_internal}
     (nil))
(insn 63 62 64 8 (set (reg:SI 0 ax [orig:96 _14 ] [96])
        (mem:SI (plus:SI (reg/f:SI 0 ax [120])
                (const_int 12 [0xc])) [1 tm_25(D)->tm_mday+0 S4 A32])) "kernel/mktime.c":43:18 75 {*movsi_internal}
     (nil))
(insn 64 63 65 8 (parallel [
            (set (reg:SI 0 ax [orig:97 _15 ] [97])
                (plus:SI (reg:SI 0 ax [orig:96 _14 ] [96])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":43:28 209 {*addsi_1}
     (nil))
(insn 65 64 66 8 (parallel [
            (set (reg:SI 0 ax [orig:98 _16 ] [98])
                (mult:SI (reg:SI 0 ax [orig:97 _15 ] [97])
                    (const_int 86400 [0x15180])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":43:13 408 {*mulsi3_1}
     (nil))
(insn 66 65 67 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [2 res+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [2 res+0 S4 A32])
                    (reg:SI 0 ax [orig:98 _16 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":43:6 209 {*addsi_1}
     (nil))
(insn 67 66 68 8 (set (reg/f:SI 0 ax [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [3 tm+0 S4 A32])) "kernel/mktime.c":44:18 75 {*movsi_internal}
     (nil))
(insn 68 67 69 8 (set (reg:SI 0 ax [orig:99 _17 ] [99])
        (mem:SI (plus:SI (reg/f:SI 0 ax [121])
                (const_int 8 [0x8])) [1 tm_25(D)->tm_hour+0 S4 A32])) "kernel/mktime.c":44:18 75 {*movsi_internal}
     (nil))
(insn 69 68 70 8 (parallel [
            (set (reg:SI 0 ax [orig:100 _18 ] [100])
                (mult:SI (reg:SI 0 ax [orig:99 _17 ] [99])
                    (const_int 3600 [0xe10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":44:14 408 {*mulsi3_1}
     (nil))
(insn 70 69 71 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [2 res+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [2 res+0 S4 A32])
                    (reg:SI 0 ax [orig:100 _18 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":44:6 209 {*addsi_1}
     (nil))
(insn 71 70 72 8 (set (reg/f:SI 0 ax [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [3 tm+0 S4 A32])) "kernel/mktime.c":45:20 75 {*movsi_internal}
     (nil))
(insn 72 71 73 8 (set (reg:SI 0 ax [orig:101 _19 ] [101])
        (mem:SI (plus:SI (reg/f:SI 0 ax [122])
                (const_int 4 [0x4])) [1 tm_25(D)->tm_min+0 S4 A32])) "kernel/mktime.c":45:20 75 {*movsi_internal}
     (nil))
(insn 73 72 74 8 (parallel [
            (set (reg:SI 0 ax [orig:102 _20 ] [102])
                (mult:SI (reg:SI 0 ax [orig:101 _19 ] [101])
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":45:16 408 {*mulsi3_1}
     (nil))
(insn 74 73 75 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [2 res+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [2 res+0 S4 A32])
                    (reg:SI 0 ax [orig:102 _20 ] [102])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":45:6 209 {*addsi_1}
     (nil))
(insn 75 74 76 8 (set (reg/f:SI 0 ax [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [3 tm+0 S4 A32])) "kernel/mktime.c":46:11 75 {*movsi_internal}
     (nil))
(insn 76 75 77 8 (set (reg:SI 0 ax [orig:103 _21 ] [103])
        (mem:SI (reg/f:SI 0 ax [123]) [1 tm_25(D)->tm_sec+0 S4 A32])) "kernel/mktime.c":46:11 75 {*movsi_internal}
     (nil))
(insn 77 76 78 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [2 res+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [2 res+0 S4 A32])
                    (reg:SI 0 ax [orig:103 _21 ] [103])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/mktime.c":46:6 209 {*addsi_1}
     (nil))
(insn 78 77 86 8 (set (reg:SI 0 ax [orig:104 _35 ] [104])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 res+0 S4 A32])) "kernel/mktime.c":48:9 75 {*movsi_internal}
     (nil))
(insn 86 78 91 8 (use (reg/i:SI 0 ax)) "kernel/mktime.c":49:1 -1
     (nil))
(note 91 86 0 NOTE_INSN_DELETED)
