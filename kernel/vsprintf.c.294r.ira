
;; Function skip_atoi (skip_atoi, funcdef_no=0, decl_uid=1034, cgraph_uid=1, symbol_order=0)

scanning new insn with uid = 58.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 7 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3 5
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a2 (r92,l0) best Q_REGS, allocno Q_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a5 (r90,l0) best Q_REGS, allocno Q_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a12 (r86,l0) best Q_REGS, allocno Q_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a3(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a10(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a11(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a12(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a13(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a14(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:28000
  a18(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a19(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 54(l0): point = 0
   Insn 53(l0): point = 2
   Insn 49(l0): point = 4
   Insn 46(l0): point = 6
   Insn 25(l0): point = 9
   Insn 24(l0): point = 11
   Insn 23(l0): point = 13
   Insn 22(l0): point = 15
   Insn 21(l0): point = 17
   Insn 20(l0): point = 19
   Insn 19(l0): point = 21
   Insn 18(l0): point = 23
   Insn 17(l0): point = 25
   Insn 16(l0): point = 27
   Insn 15(l0): point = 29
   Insn 14(l0): point = 31
   Insn 13(l0): point = 33
   Insn 12(l0): point = 35
   Insn 11(l0): point = 37
   Insn 10(l0): point = 39
   Insn 9(l0): point = 41
   Insn 43(l0): point = 44
   Insn 42(l0): point = 46
   Insn 38(l0): point = 48
   Insn 37(l0): point = 50
   Insn 36(l0): point = 52
   Insn 34(l0): point = 55
   Insn 33(l0): point = 57
   Insn 30(l0): point = 59
   Insn 29(l0): point = 61
   Insn 28(l0): point = 63
   Insn 56(l0): point = 66
   Insn 5(l0): point = 68
   Insn 58(l0): point = 70
 a0(r94): [3..4]
 a1(r93): [5..6]
 a2(r92): [47..48]
 a3(r91): [49..50]
 a4(r102): [51..52]
 a5(r90): [58..59]
 a6(r89): [60..61]
 a7(r101): [62..63]
 a8(r100): [10..11]
 a9(r88): [12..13]
 a10(r87): [14..15]
 a11(r83): [14..29]
 a12(r86): [16..17]
 a13(r84): [18..25]
 a14(r99): [20..21]
 a15(r85): [20..23]
 a16(r98): [26..27]
 a17(r96): [34..39] [30..31]
 a18(r97): [32..33]
 a19(r95): [36..41]
 a20(r82): [70..70]
Compressing live ranges: from 73 to 35 - 47%
Ranges after the compression:
 a0(r94): [0..1]
 a1(r93): [2..3]
 a2(r92): [22..23]
 a3(r91): [24..25]
 a4(r102): [26..27]
 a5(r90): [28..29]
 a6(r89): [30..31]
 a7(r101): [32..33]
 a8(r100): [4..5]
 a9(r88): [6..7]
 a10(r87): [8..9]
 a11(r83): [8..15]
 a12(r86): [10..11]
 a13(r84): [12..13]
 a14(r99): [12..13]
 a15(r85): [12..13]
 a16(r98): [14..15]
 a17(r96): [20..21] [16..17]
 a18(r97): [18..19]
 a19(r95): [20..21]
 a20(r82): [34..34]
  pref0:a0(r94)<-hr0@1500
  regions=1, blocks=7, points=35
    allocnos=21 (big 0), copies=0, conflicts=0, ranges=22
Disposition:
   20:r82  l0     0   11:r83  l0     3   13:r84  l0     0   15:r85  l0     2
   12:r86  l0     0   10:r87  l0     0    9:r88  l0     0    6:r89  l0     0
    5:r90  l0     0    3:r91  l0     0    2:r92  l0     0    1:r93  l0     0
    0:r94  l0     0   19:r95  l0     1   17:r96  l0     0   18:r97  l0     0
   16:r98  l0     0   14:r99  l0     1    8:r100 l0     0    7:r101 l0     0
    4:r102 l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


skip_atoi

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,6u} r7={1d,6u} r16={1d,9u} r17={9d,2u} r19={1d,10u} r82={1d} r83={1d,1u} r84={1d,2u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,2u,1e} r96={4d,4u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} 
;;    total ref usage 102{41d,60u,1e} in 34{34 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 58 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 58 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 58 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 56 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (const_int 0 [0])) "kernel/vsprintf.c":14:6 75 {*movsi_internal}
     (nil))
(jump_insn 56 5 57 2 (set (pc)
        (label_ref 26)) "kernel/vsprintf.c":16:8 807 {jump}
     (nil)
 -> 26)
(barrier 57 56 39)
(code_label 39 57 8 3 4 (nil) [1 uses])
(note 8 39 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:SI 95)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "kernel/vsprintf.c":17:9 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (set (reg:SI 96)
        (reg:SI 95)) "kernel/vsprintf.c":17:9 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (parallel [
            (set (reg:SI 96)
                (ashift:SI (reg:SI 96)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":17:9 655 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 3 (parallel [
            (set (reg:SI 96)
                (plus:SI (reg:SI 96)
                    (reg:SI 95)))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":17:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:SI (reg:SI 95)
                    (const_int 5 [0x5]))
                (nil)))))
(insn 13 12 14 3 (parallel [
            (set (reg:SI 97)
                (ashift:SI (reg:SI 96)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":17:9 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 96)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 14 13 15 3 (set (reg:SI 96)
        (reg:SI 97)) "kernel/vsprintf.c":17:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97)
        (nil)))
(insn 15 14 16 3 (set (reg:SI 83 [ _1 ])
        (reg:SI 96)) "kernel/vsprintf.c":17:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96)
        (nil)))
(insn 16 15 17 3 (set (reg/f:SI 98)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 s+0 S4 A32])) "kernel/vsprintf.c":17:19 75 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (reg/f:SI 84 [ _2 ])
        (mem/f:SI (reg/f:SI 98) [1 *s_16(D)+0 S4 A32])) "kernel/vsprintf.c":17:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 98)
        (nil)))
(insn 18 17 19 3 (parallel [
            (set (reg/f:SI 85 [ _4 ])
                (plus:SI (reg/f:SI 84 [ _2 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":17:22 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 20 3 (set (reg/f:SI 99)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 s+0 S4 A32])) "kernel/vsprintf.c":17:22 75 {*movsi_internal}
     (nil))
(insn 20 19 21 3 (set (mem/f:SI (reg/f:SI 99) [1 *s_16(D)+0 S4 A32])
        (reg/f:SI 85 [ _4 ])) "kernel/vsprintf.c":17:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99)
        (expr_list:REG_DEAD (reg/f:SI 85 [ _4 ])
            (nil))))
(insn 21 20 22 3 (set (reg:QI 86 [ _5 ])
        (mem:QI (reg/f:SI 84 [ _2 ]) [0 *_3+0 S1 A8])) "kernel/vsprintf.c":17:16 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
        (nil)))
(insn 22 21 23 3 (set (reg:SI 87 [ _6 ])
        (sign_extend:SI (reg:QI 86 [ _5 ]))) "kernel/vsprintf.c":17:16 153 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 86 [ _5 ])
        (nil)))
(insn 23 22 24 3 (parallel [
            (set (reg:SI 88 [ _7 ])
                (plus:SI (reg:SI 83 [ _1 ])
                    (reg:SI 87 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":17:14 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _6 ])
        (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 24 23 25 3 (parallel [
            (set (reg:SI 100)
                (plus:SI (reg:SI 88 [ _7 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":17:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 25 24 26 3 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 100)) "kernel/vsprintf.c":17:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100)
        (nil)))
(code_label 26 25 27 4 2 (nil) [1 uses])
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg/f:SI 101)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 s+0 S4 A32])) "kernel/vsprintf.c":16:9 75 {*movsi_internal}
     (nil))
(insn 29 28 30 4 (set (reg/f:SI 89 [ _8 ])
        (mem/f:SI (reg/f:SI 101) [1 *s_16(D)+0 S4 A32])) "kernel/vsprintf.c":16:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(insn 30 29 33 4 (set (reg:QI 90 [ _9 ])
        (mem:QI (reg/f:SI 89 [ _8 ]) [0 *_8+0 S1 A8])) "kernel/vsprintf.c":16:9 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89 [ _8 ])
        (nil)))
(insn 33 30 34 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 90 [ _9 ])
            (const_int 47 [0x2f]))) "kernel/vsprintf.c":16:9 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 90 [ _9 ])
        (nil)))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "kernel/vsprintf.c":16:9 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 44)
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (reg/f:SI 102)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 s+0 S4 A32])) "kernel/vsprintf.c":16:9 75 {*movsi_internal}
     (nil))
(insn 37 36 38 5 (set (reg/f:SI 91 [ _10 ])
        (mem/f:SI (reg/f:SI 102) [1 *s_16(D)+0 S4 A32])) "kernel/vsprintf.c":16:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (nil)))
(insn 38 37 42 5 (set (reg:QI 92 [ _11 ])
        (mem:QI (reg/f:SI 91 [ _10 ]) [0 *_10+0 S1 A8])) "kernel/vsprintf.c":16:9 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ _10 ])
        (nil)))
(insn 42 38 43 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 92 [ _11 ])
            (const_int 57 [0x39]))) "kernel/vsprintf.c":16:9 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 92 [ _11 ])
        (nil)))
(jump_insn 43 42 44 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "kernel/vsprintf.c":16:9 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 39)
(code_label 44 43 45 6 3 (nil) [1 uses])
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 49 6 (set (reg:SI 93 [ _19 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "kernel/vsprintf.c":18:9 75 {*movsi_internal}
     (nil))
(insn 49 46 53 6 (set (reg:SI 94 [ <retval> ])
        (reg:SI 93 [ _19 ])) "kernel/vsprintf.c":18:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ _19 ])
        (nil)))
(insn 53 49 54 6 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) "kernel/vsprintf.c":19:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94 [ <retval> ])
        (nil)))
(insn 54 53 0 6 (use (reg/i:SI 0 ax)) "kernel/vsprintf.c":19:1 -1
     (nil))

;; Function number (number, funcdef_no=1, decl_uid=1046, cgraph_uid=2, symbol_order=1)

scanning new insn with uid = 348.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 59 n_edges 84 count 59 (    1)
;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
;;
;; Loop 6
;;  header 56, latch 55
;;  depth 1, outer 0
;;  nodes: 56 55
;;
;; Loop 5
;;  header 53, latch 52
;;  depth 1, outer 0
;;  nodes: 53 52
;;
;; Loop 4
;;  header 50, latch 49
;;  depth 1, outer 0
;;  nodes: 50 49
;;
;; Loop 3
;;  header 47, latch 46
;;  depth 1, outer 0
;;  nodes: 47 46
;;
;; Loop 2
;;  header 36, latch 35
;;  depth 1, outer 0
;;  nodes: 36 35
;;
;; Loop 1
;;  header 30, latch 29
;;  depth 1, outer 0
;;  nodes: 30 29
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 9 }
;; 8 succs { 58 }
;; 9 succs { 10 11 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 13 15 }
;; 13 succs { 14 15 }
;; 14 succs { 19 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 22 26 }
;; 22 succs { 23 24 }
;; 23 succs { 26 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 27 28 }
;; 27 succs { 31 }
;; 28 succs { 30 }
;; 29 succs { 30 }
;; 30 succs { 29 31 }
;; 31 succs { 32 33 }
;; 32 succs { 33 }
;; 33 succs { 34 37 }
;; 34 succs { 36 }
;; 35 succs { 36 }
;; 36 succs { 35 37 }
;; 37 succs { 38 39 }
;; 38 succs { 39 }
;; 39 succs { 40 44 }
;; 40 succs { 41 42 }
;; 41 succs { 44 }
;; 42 succs { 43 44 }
;; 43 succs { 44 }
;; 44 succs { 45 48 }
;; 45 succs { 47 }
;; 46 succs { 47 }
;; 47 succs { 46 48 }
;; 48 succs { 50 }
;; 49 succs { 50 }
;; 50 succs { 49 51 }
;; 51 succs { 53 }
;; 52 succs { 53 }
;; 53 succs { 52 54 }
;; 54 succs { 56 }
;; 55 succs { 56 }
;; 56 succs { 55 57 }
;; 57 succs { 58 }
;; 58 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a21 (r153,l0) best Q_REGS, allocno Q_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a37 (r145,l0) best Q_REGS, allocno Q_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a55 (r132,l0) best DREG, allocno GENERAL_REGS
    r131: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a56 (r131,l0) best AREG, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r120,l0) best AREG, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a64 (r118,l0) best Q_REGS, allocno Q_REGS
    r117: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a72 (r117,l0) best Q_REGS, allocno Q_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a9 (r112,l0) best Q_REGS, allocno Q_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a26 (r105,l0) best Q_REGS, allocno Q_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a49 (r95,l0) best Q_REGS, allocno Q_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r120,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a3(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a5(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a7(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a9(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a10(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a12(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a13(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a15(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a17(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a19(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a21(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a22(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a25(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a26(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a27(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a28(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a30(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a31(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a33(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a35(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a36(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a37(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a38(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a40(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a41(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a42(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a44(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a45(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a46(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a47(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a48(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a49(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a50(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a51(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a52(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a53(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a54(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a55(r132,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:19000
  a56(r131,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:19000
  a57(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a58(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a59(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a60(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a61(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a62(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a63(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a64(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a65(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a66(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a67(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a68(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a69(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a70(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a71(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a72(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:8000
  a73(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a74(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a75(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a76(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a77(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a78(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a79(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a80(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a81(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 318(l0): point = 0
   Insn 317(l0): point = 2
   Insn 313(l0): point = 4
   Insn 308(l0): point = 7
   Insn 296(l0): point = 10
   Insn 295(l0): point = 12
   Insn 294(l0): point = 14
   Insn 293(l0): point = 16
   Insn 306(l0): point = 19
   Insn 305(l0): point = 21
   Insn 301(l0): point = 23
   Insn 300(l0): point = 25
   Insn 299(l0): point = 27
   Insn 344(l0): point = 30
   Insn 278(l0): point = 33
   Insn 277(l0): point = 35
   Insn 276(l0): point = 37
   Insn 275(l0): point = 39
   Insn 274(l0): point = 41
   Insn 273(l0): point = 43
   Insn 272(l0): point = 45
   Insn 271(l0): point = 47
   Insn 288(l0): point = 50
   Insn 287(l0): point = 52
   Insn 283(l0): point = 54
   Insn 282(l0): point = 56
   Insn 281(l0): point = 58
   Insn 342(l0): point = 61
   Insn 258(l0): point = 64
   Insn 257(l0): point = 66
   Insn 256(l0): point = 68
   Insn 255(l0): point = 70
   Insn 266(l0): point = 73
   Insn 265(l0): point = 75
   Insn 263(l0): point = 77
   Insn 262(l0): point = 79
   Insn 261(l0): point = 81
   Insn 340(l0): point = 84
   Insn 239(l0): point = 87
   Insn 238(l0): point = 89
   Insn 237(l0): point = 91
   Insn 236(l0): point = 93
   Insn 235(l0): point = 95
   Insn 249(l0): point = 98
   Insn 248(l0): point = 100
   Insn 244(l0): point = 102
   Insn 243(l0): point = 104
   Insn 242(l0): point = 106
   Insn 338(l0): point = 109
   Insn 230(l0): point = 112
   Insn 229(l0): point = 114
   Insn 228(l0): point = 116
   Insn 227(l0): point = 118
   Insn 224(l0): point = 121
   Insn 223(l0): point = 123
   Insn 222(l0): point = 125
   Insn 221(l0): point = 127
   Insn 220(l0): point = 129
   Insn 219(l0): point = 131
   Insn 218(l0): point = 133
   Insn 217(l0): point = 135
   Insn 216(l0): point = 137
   Insn 215(l0): point = 139
   Insn 214(l0): point = 141
   Insn 212(l0): point = 144
   Insn 211(l0): point = 146
   Insn 336(l0): point = 149
   Insn 206(l0): point = 151
   Insn 205(l0): point = 153
   Insn 204(l0): point = 155
   Insn 203(l0): point = 157
   Insn 201(l0): point = 160
   Insn 200(l0): point = 162
   Insn 198(l0): point = 165
   Insn 197(l0): point = 167
   Insn 196(l0): point = 169
   Insn 195(l0): point = 171
   Insn 192(l0): point = 174
   Insn 191(l0): point = 176
   Insn 190(l0): point = 178
   Insn 189(l0): point = 180
   Insn 188(l0): point = 182
   Insn 186(l0): point = 185
   Insn 185(l0): point = 187
   Insn 172(l0): point = 190
   Insn 171(l0): point = 192
   Insn 170(l0): point = 194
   Insn 169(l0): point = 196
   Insn 182(l0): point = 199
   Insn 181(l0): point = 201
   Insn 177(l0): point = 203
   Insn 176(l0): point = 205
   Insn 175(l0): point = 207
   Insn 334(l0): point = 210
   Insn 164(l0): point = 213
   Insn 163(l0): point = 215
   Insn 162(l0): point = 217
   Insn 161(l0): point = 219
   Insn 160(l0): point = 221
   Insn 159(l0): point = 223
   Insn 156(l0): point = 226
   Insn 155(l0): point = 228
   Insn 153(l0): point = 231
   Insn 152(l0): point = 233
   Insn 151(l0): point = 235
   Insn 143(l0): point = 238
   Insn 142(l0): point = 240
   Insn 141(l0): point = 242
   Insn 140(l0): point = 244
   Insn 139(l0): point = 246
   Insn 138(l0): point = 248
   Insn 137(l0): point = 250
   Insn 136(l0): point = 252
   Insn 135(l0): point = 254
   Insn 130(l0): point = 256
   Insn 129(l0): point = 258
   Insn 134(l0): point = 260
   Insn 347(l0): point = 262
   Insn 346(l0): point = 264
   Insn 133(l0): point = 266
   Insn 132(l0): point = 268
   Insn 131(l0): point = 270
   Insn 148(l0): point = 273
   Insn 147(l0): point = 275
   Insn 332(l0): point = 278
   Insn 330(l0): point = 281
   Insn 121(l0): point = 283
   Insn 120(l0): point = 285
   Insn 119(l0): point = 287
   Insn 118(l0): point = 289
   Insn 116(l0): point = 292
   Insn 115(l0): point = 294
   Insn 114(l0): point = 296
   Insn 111(l0): point = 299
   Insn 109(l0): point = 302
   Insn 108(l0): point = 304
   Insn 328(l0): point = 307
   Insn 103(l0): point = 309
   Insn 101(l0): point = 312
   Insn 100(l0): point = 314
   Insn 98(l0): point = 317
   Insn 97(l0): point = 319
   Insn 96(l0): point = 321
   Insn 95(l0): point = 323
   Insn 92(l0): point = 326
   Insn 90(l0): point = 329
   Insn 89(l0): point = 331
   Insn 86(l0): point = 334
   Insn 83(l0): point = 337
   Insn 326(l0): point = 340
   Insn 78(l0): point = 342
   Insn 77(l0): point = 344
   Insn 76(l0): point = 346
   Insn 75(l0): point = 348
   Insn 73(l0): point = 351
   Insn 72(l0): point = 353
   Insn 71(l0): point = 355
   Insn 70(l0): point = 357
   Insn 324(l0): point = 360
   Insn 65(l0): point = 362
   Insn 64(l0): point = 364
   Insn 62(l0): point = 367
   Insn 61(l0): point = 369
   Insn 57(l0): point = 372
   Insn 56(l0): point = 374
   Insn 55(l0): point = 376
   Insn 54(l0): point = 378
   Insn 53(l0): point = 380
   Insn 50(l0): point = 383
   Insn 322(l0): point = 386
   Insn 45(l0): point = 388
   Insn 43(l0): point = 391
   Insn 42(l0): point = 393
   Insn 41(l0): point = 395
   Insn 40(l0): point = 397
   Insn 320(l0): point = 400
   Insn 35(l0): point = 402
   Insn 32(l0): point = 405
   Insn 31(l0): point = 407
   Insn 27(l0): point = 410
   Insn 26(l0): point = 412
   Insn 21(l0): point = 415
   Insn 19(l0): point = 418
   Insn 18(l0): point = 420
   Insn 17(l0): point = 422
   Insn 16(l0): point = 424
   Insn 13(l0): point = 427
   Insn 12(l0): point = 429
   Insn 10(l0): point = 432
   Insn 9(l0): point = 434
   Insn 8(l0): point = 436
   Insn 7(l0): point = 438
   Insn 6(l0): point = 440
   Insn 5(l0): point = 442
   Insn 348(l0): point = 444
 a0(r120): [3..4]
 a1(r116): [400..402] [5..7]
 a2(r115): [22..27]
 a3(r163): [24..25]
 a4(r114): [11..16]
 a5(r162): [13..14]
 a6(r113): [53..58]
 a7(r161): [55..56]
 a8(r111): [34..47]
 a9(r112): [34..35]
 a10(r159): [36..37]
 a11(r160): [38..39]
 a12(r158): [38..41]
 a13(r157): [44..45]
 a14(r110): [76..81]
 a15(r156): [78..79]
 a16(r109): [65..70]
 a17(r155): [67..68]
 a18(r108): [101..106]
 a19(r154): [103..104]
 a20(r107): [88..95]
 a21(r153): [88..89]
 a22(r152): [92..93]
 a23(r106): [115..116]
 a24(r151): [117..118]
 a25(r104): [122..129]
 a26(r105): [122..123]
 a27(r103): [124..131]
 a28(r150): [126..127]
 a29(r149): [132..133]
 a30(r102): [136..141]
 a31(r148): [138..139]
 a32(r101): [152..157]
 a33(r147): [154..155]
 a34(r100): [168..169]
 a35(r146): [170..171]
 a36(r99): [175..182]
 a37(r145): [175..176]
 a38(r144): [179..180]
 a39(r98): [202..207]
 a40(r143): [204..205]
 a41(r97): [191..196]
 a42(r142): [193..194]
 a43(r96): [216..217]
 a44(r141): [218..219]
 a45(r140): [222..223]
 a46(r139): [227..228]
 a47(r138): [234..235]
 a48(r94): [239..246]
 a49(r95): [239..240]
 a50(r93): [241..248]
 a51(r137): [243..244]
 a52(r136): [249..250]
 a53(r92): [249..252]
 a54(r119): [253..254]
 a55(r132): [257..262]
 a56(r131): [259..264]
 a57(r135): [261..266]
 a58(r134): [263..268]
 a59(r133): [265..270]
 a60(r91): [284..289]
 a61(r130): [286..287]
 a62(r90): [320..321]
 a63(r129): [322..323]
 a64(r118): [340..342] [335..337]
 a65(r89): [343..344]
 a66(r88): [345..346]
 a67(r128): [347..348]
 a68(r87): [354..355]
 a69(r127): [356..357]
 a70(r86): [375..376]
 a71(r126): [377..378]
 a72(r117): [386..388] [381..383]
 a73(r85): [394..395]
 a74(r125): [396..397]
 a75(r84): [421..422]
 a76(r124): [423..424]
 a77(r123): [428..429]
 a78(r82): [430..444]
 a79(r83): [435..436]
 a80(r122): [437..438]
 a81(r121): [441..442]
Compressing live ranges: from 447 to 124 - 27%
Ranges after the compression:
 a0(r120): [0..1]
 a1(r116): [110..111] [2..3]
 a2(r115): [6..7]
 a3(r163): [6..7]
 a4(r114): [4..5]
 a5(r162): [4..5]
 a6(r113): [16..17]
 a7(r161): [16..17]
 a8(r111): [8..15]
 a9(r112): [8..9]
 a10(r159): [10..11]
 a11(r160): [12..13]
 a12(r158): [12..13]
 a13(r157): [14..15]
 a14(r110): [20..21]
 a15(r156): [20..21]
 a16(r109): [18..19]
 a17(r155): [18..19]
 a18(r108): [26..27]
 a19(r154): [26..27]
 a20(r107): [22..25]
 a21(r153): [22..23]
 a22(r152): [24..25]
 a23(r106): [28..29]
 a24(r151): [30..31]
 a25(r104): [32..35]
 a26(r105): [32..33]
 a27(r103): [34..35]
 a28(r150): [34..35]
 a29(r149): [36..37]
 a30(r102): [38..39]
 a31(r148): [38..39]
 a32(r101): [40..41]
 a33(r147): [40..41]
 a34(r100): [42..43]
 a35(r146): [44..45]
 a36(r99): [46..49]
 a37(r145): [46..47]
 a38(r144): [48..49]
 a39(r98): [52..53]
 a40(r143): [52..53]
 a41(r97): [50..51]
 a42(r142): [50..51]
 a43(r96): [54..55]
 a44(r141): [56..57]
 a45(r140): [58..59]
 a46(r139): [60..61]
 a47(r138): [62..63]
 a48(r94): [64..67]
 a49(r95): [64..65]
 a50(r93): [66..67]
 a51(r137): [66..67]
 a52(r136): [68..69]
 a53(r92): [68..69]
 a54(r119): [70..71]
 a55(r132): [72..73]
 a56(r131): [72..75]
 a57(r135): [72..77]
 a58(r134): [74..77]
 a59(r133): [76..77]
 a60(r91): [78..79]
 a61(r130): [78..79]
 a62(r90): [80..81]
 a63(r129): [82..83]
 a64(r118): [84..87]
 a65(r89): [88..89]
 a66(r88): [90..91]
 a67(r128): [92..93]
 a68(r87): [94..95]
 a69(r127): [96..97]
 a70(r86): [98..99]
 a71(r126): [100..101]
 a72(r117): [102..105]
 a73(r85): [106..107]
 a74(r125): [108..109]
 a75(r84): [112..113]
 a76(r124): [114..115]
 a77(r123): [116..117]
 a78(r82): [118..123]
 a79(r83): [118..119]
 a80(r122): [120..121]
 a81(r121): [122..123]
  pref0:a55(r132)<-hr1@2000
  pref1:a56(r131)<-hr0@2000
  pref2:a0(r120)<-hr0@1500
  regions=1, blocks=59, points=124
    allocnos=82 (big 0), copies=0, conflicts=0, ranges=83
Disposition:
   78:r82  l0     0   79:r83  l0     1   75:r84  l0     0   73:r85  l0     0
   70:r86  l0     0   68:r87  l0     0   66:r88  l0     0   65:r89  l0     0
   62:r90  l0     0   60:r91  l0     0   53:r92  l0     1   50:r93  l0     2
   48:r94  l0     0   49:r95  l0     1   43:r96  l0     0   41:r97  l0     0
   39:r98  l0     0   36:r99  l0     0   34:r100 l0     0   32:r101 l0     0
   30:r102 l0     0   27:r103 l0     2   25:r104 l0     0   26:r105 l0     1
   23:r106 l0     0   20:r107 l0     0   18:r108 l0     0   16:r109 l0     0
   14:r110 l0     0    8:r111 l0     0    9:r112 l0     1    6:r113 l0     0
    4:r114 l0     0    2:r115 l0     0    1:r116 l0     0   72:r117 l0     0
   64:r118 l0     0   54:r119 l0     0    0:r120 l0     0   81:r121 l0     1
   80:r122 l0     1   77:r123 l0     0   76:r124 l0     0   74:r125 l0     0
   71:r126 l0     0   69:r127 l0     0   67:r128 l0     0   63:r129 l0     0
   61:r130 l0     1   56:r131 l0     0   55:r132 l0     1   59:r133 l0     0
   58:r134 l0     1   57:r135 l0     2   52:r136 l0     0   51:r137 l0     1
   47:r138 l0     0   46:r139 l0     0   45:r140 l0     0   44:r141 l0     0
   42:r142 l0     1   40:r143 l0     1   38:r144 l0     1   37:r145 l0     1
   35:r146 l0     0   33:r147 l0     1   31:r148 l0     1   29:r149 l0     0
   28:r150 l0     1   24:r151 l0     0   22:r152 l0     1   21:r153 l0     1
   19:r154 l0     1   17:r155 l0     1   15:r156 l0     1   13:r157 l0     1
   12:r158 l0     2   10:r159 l0     1   11:r160 l0     1    7:r161 l0     1
    5:r162 l0     1    3:r163 l0     1
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


number

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,58u} r7={1d,58u} r16={1d,121u,10e} r17={65d,26u} r19={1d,85u,3e} r82={1d,2u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,2u} r92={1d,1u,1e} r93={1d,1u} r94={1d,2u} r95={1d,1u} r96={1d,1u} r97={1d,2u} r98={1d,2u} r99={1d,2u} r100={1d,1u} r101={1d,2u} r102={1d,2u} r103={1d,1u} r104={1d,2u} r105={1d,1u} r106={1d,1u} r107={1d,2u} r108={1d,2u} r109={1d,2u} r110={1d,2u} r111={1d,2u} r112={1d,1u} r113={1d,2u} r114={1d,2u} r115={1d,2u} r116={2d,1u} r117={2d,1u} r118={2d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={2d,2u} r132={2d,2u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u,1e} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} 
;;    total ref usage 626{160d,451u,15e} in 195{195 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 348 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 348 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 348 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 121)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7d98a1d45000 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "kernel/vsprintf.c":38:14 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7d98a1d45000 *.LC0>)
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 digits+0 S4 A32])
        (reg/f:SI 121)) "kernel/vsprintf.c":38:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 7 6 8 2 (set (reg:SI 122)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 20 [0x14])) [2 type+0 S4 A32])) "kernel/vsprintf.c":41:11 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:SI 83 [ _1 ])
                (and:SI (reg:SI 122)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":41:11 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 122)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 20 [0x14])) [2 type+0 S4 A32])
                    (const_int 64 [0x40]))
                (nil)))))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 83 [ _1 ])
            (const_int 0 [0]))) "kernel/vsprintf.c":41:5 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (nil)))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "kernel/vsprintf.c":41:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 14)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg/f:SI 123)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7d98a1d45090 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "kernel/vsprintf.c":42:10 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7d98a1d45090 *.LC1>)
            (nil))))
(insn 13 12 14 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 digits+0 S4 A32])
        (reg/f:SI 123)) "kernel/vsprintf.c":42:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (nil)))
(code_label 14 13 15 4 7 (nil) [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 124)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 20 [0x14])) [2 type+0 S4 A32])) "kernel/vsprintf.c":43:11 75 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg:SI 84 [ _2 ])
                (and:SI (reg:SI 124)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":43:11 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 124)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 20 [0x14])) [2 type+0 S4 A32])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 18 17 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _2 ])
            (const_int 0 [0]))) "kernel/vsprintf.c":43:5 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "kernel/vsprintf.c":43:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 22)
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 20 [0x14])) [2 type+0 S4 A32])
                (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 20 [0x14])) [2 type+0 S4 A32])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":44:8 490 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 22 21 23 6 8 (nil) [1 uses])
(note 23 22 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 23 27 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [2 base+0 S4 A32])
            (const_int 1 [0x1]))) "kernel/vsprintf.c":45:5 11 {*cmpsi_1}
     (nil))
(jump_insn 27 26 28 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "kernel/vsprintf.c":45:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 33)
(note 28 27 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 28 32 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [2 base+0 S4 A32])
            (const_int 36 [0x24]))) "kernel/vsprintf.c":45:15 11 {*cmpsi_1}
     (nil))
(jump_insn 32 31 33 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "kernel/vsprintf.c":45:15 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 38)
(code_label 33 32 34 8 9 (nil) [1 uses])
(note 34 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 320 8 (set (reg/f:SI 116 [ _60 ])
        (const_int 0 [0])) "kernel/vsprintf.c":46:10 75 {*movsi_internal}
     (nil))
(jump_insn 320 35 321 8 (set (pc)
        (label_ref 311)) "kernel/vsprintf.c":46:10 807 {jump}
     (nil)
 -> 311)
(barrier 321 320 38)
(code_label 38 321 39 9 10 (nil) [1 uses])
(note 39 38 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (set (reg:SI 125)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 20 [0x14])) [2 type+0 S4 A32])) "kernel/vsprintf.c":48:12 75 {*movsi_internal}
     (nil))
(insn 41 40 42 9 (parallel [
            (set (reg:SI 85 [ _3 ])
                (and:SI (reg:SI 125)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":48:12 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 125)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 20 [0x14])) [2 type+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 42 41 43 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ _3 ])
            (const_int 0 [0]))) "kernel/vsprintf.c":48:4 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (nil)))
(jump_insn 43 42 44 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "kernel/vsprintf.c":48:4 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 48)
(note 44 43 45 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 322 10 (set (reg:QI 117 [ iftmp.0_61 ])
        (const_int 48 [0x30])) "kernel/vsprintf.c":48:4 77 {*movqi_internal}
     (nil))
(jump_insn 322 45 323 10 (set (pc)
        (label_ref 51)) 807 {jump}
     (nil)
 -> 51)
(barrier 323 322 48)
(code_label 48 323 49 11 12 (nil) [1 uses])
(note 49 48 50 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 11 (set (reg:QI 117 [ iftmp.0_61 ])
        (const_int 32 [0x20])) "kernel/vsprintf.c":48:4 77 {*movqi_internal}
     (nil))
(code_label 51 50 52 12 13 (nil) [1 uses])
(note 52 51 53 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 12 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
        (reg:QI 117 [ iftmp.0_61 ])) "kernel/vsprintf.c":48:4 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 117 [ iftmp.0_61 ])
        (nil)))
(insn 54 53 55 12 (set (reg:SI 126)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 20 [0x14])) [2 type+0 S4 A32])) "kernel/vsprintf.c":49:11 75 {*movsi_internal}
     (nil))
(insn 55 54 56 12 (parallel [
            (set (reg:SI 86 [ _4 ])
                (and:SI (reg:SI 126)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":49:11 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 126)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 20 [0x14])) [2 type+0 S4 A32])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 56 55 57 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 86 [ _4 ])
            (const_int 0 [0]))) "kernel/vsprintf.c":49:5 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(jump_insn 57 56 58 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "kernel/vsprintf.c":49:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 68)
(note 58 57 61 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 61 58 62 13 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [2 num+0 S4 A32])
            (const_int 0 [0]))) "kernel/vsprintf.c":49:18 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 62 61 63 13 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "kernel/vsprintf.c":49:18 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 68)
(note 63 62 64 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 14 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -1 [0xffffffffffffffff])) [0 sign+0 S1 A8])
        (const_int 45 [0x2d])) "kernel/vsprintf.c":50:8 77 {*movqi_internal}
     (nil))
(insn 65 64 324 14 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 4 [0x4])) [2 num+0 S4 A32])
                (neg:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [2 num+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":51:7 575 {*negsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 324 65 325 14 (set (pc)
        (label_ref 87)) "kernel/vsprintf.c":51:7 807 {jump}
     (nil)
 -> 87)
(barrier 325 324 68)
(code_label 68 325 69 15 14 (nil) [2 uses])
(note 69 68 70 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 15 (set (reg:SI 127)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 20 [0x14])) [2 type+0 S4 A32])) "kernel/vsprintf.c":53:16 75 {*movsi_internal}
     (nil))
(insn 71 70 72 15 (parallel [
            (set (reg:SI 87 [ _5 ])
                (and:SI (reg:SI 127)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":53:16 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 127)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 20 [0x14])) [2 type+0 S4 A32])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 72 71 73 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _5 ])
            (const_int 0 [0]))) "kernel/vsprintf.c":53:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (nil)))
(jump_insn 73 72 74 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) "kernel/vsprintf.c":53:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 81)
(note 74 73 75 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 16 (set (reg:SI 128)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 20 [0x14])) [2 type+0 S4 A32])) "kernel/vsprintf.c":53:54 75 {*movsi_internal}
     (nil))
(insn 76 75 77 16 (parallel [
            (set (reg:SI 88 [ _6 ])
                (ashift:SI (reg:SI 128)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":53:54 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 128)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 20 [0x14])) [2 type+0 S4 A32])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 77 76 78 16 (set (reg:QI 89 [ _7 ])
        (subreg:QI (reg:SI 88 [ _6 ]) 0)) "kernel/vsprintf.c":53:54 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (nil)))
(insn 78 77 326 16 (parallel [
            (set (reg:QI 118 [ iftmp.1_62 ])
                (and:QI (reg:QI 89 [ _7 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":53:8 491 {*andqi_1}
     (expr_list:REG_DEAD (reg:QI 89 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 326 78 327 16 (set (pc)
        (label_ref 84)) 807 {jump}
     (nil)
 -> 84)
(barrier 327 326 81)
(code_label 81 327 82 17 16 (nil) [1 uses])
(note 82 81 83 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 17 (set (reg:QI 118 [ iftmp.1_62 ])
        (const_int 43 [0x2b])) "kernel/vsprintf.c":53:8 77 {*movqi_internal}
     (nil))
(code_label 84 83 85 18 17 (nil) [1 uses])
(note 85 84 86 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 18 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -1 [0xffffffffffffffff])) [0 sign+0 S1 A8])
        (reg:QI 118 [ iftmp.1_62 ])) "kernel/vsprintf.c":53:8 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 118 [ iftmp.1_62 ])
        (nil)))
(code_label 87 86 88 19 15 (nil) [1 uses])
(note 88 87 89 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                    (const_int -1 [0xffffffffffffffff])) [0 sign+0 S1 A8])
            (const_int 0 [0]))) "kernel/vsprintf.c":54:5 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 90 89 91 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) "kernel/vsprintf.c":54:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 93)
(note 91 90 92 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 20 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 12 [0xc])) [2 size+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 12 [0xc])) [2 size+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":55:7 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 93 92 94 21 18 (nil) [1 uses])
(note 94 93 95 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 21 (set (reg:SI 129)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 20 [0x14])) [2 type+0 S4 A32])) "kernel/vsprintf.c":56:11 75 {*movsi_internal}
     (nil))
(insn 96 95 97 21 (parallel [
            (set (reg:SI 90 [ _8 ])
                (and:SI (reg:SI 129)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":56:11 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 129)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 20 [0x14])) [2 type+0 S4 A32])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 97 96 98 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ _8 ])
            (const_int 0 [0]))) "kernel/vsprintf.c":56:5 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (nil)))
(jump_insn 98 97 99 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) "kernel/vsprintf.c":56:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 112)
(note 99 98 100 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [2 base+0 S4 A32])
            (const_int 16 [0x10]))) "kernel/vsprintf.c":57:6 11 {*cmpsi_1}
     (nil))
(jump_insn 101 100 102 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) "kernel/vsprintf.c":57:6 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 106)
(note 102 101 103 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 328 23 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 12 [0xc])) [2 size+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 12 [0xc])) [2 size+0 S4 A32])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":58:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 328 103 329 23 (set (pc)
        (label_ref 112)) 807 {jump}
     (nil)
 -> 112)
(barrier 329 328 106)
(code_label 106 329 107 24 20 (nil) [1 uses])
(note 107 106 108 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [2 base+0 S4 A32])
            (const_int 8 [0x8]))) "kernel/vsprintf.c":59:11 11 {*cmpsi_1}
     (nil))
(jump_insn 109 108 110 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) "kernel/vsprintf.c":59:11 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 112)
(note 110 109 111 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 25 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 12 [0xc])) [2 size+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 12 [0xc])) [2 size+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":60:8 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 112 111 113 26 19 (nil) [3 uses])
(note 113 112 114 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 26 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (const_int 0 [0])) "kernel/vsprintf.c":62:4 75 {*movsi_internal}
     (nil))
(insn 115 114 116 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [2 num+0 S4 A32])
            (const_int 0 [0]))) "kernel/vsprintf.c":63:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 116 115 117 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 124)
            (pc))) "kernel/vsprintf.c":63:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 124)
(note 117 116 118 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 27 (set (reg:SI 91 [ i.2_9 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "kernel/vsprintf.c":64:8 75 {*movsi_internal}
     (nil))
(insn 119 118 120 27 (parallel [
            (set (reg:SI 130)
                (plus:SI (reg:SI 91 [ i.2_9 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":64:8 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 120 119 121 27 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (reg:SI 130)) "kernel/vsprintf.c":64:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 130)
        (nil)))
(insn 121 120 330 27 (set (mem:QI (plus:SI (plus:SI (reg/f:SI 19 frame)
                    (reg:SI 91 [ i.2_9 ]))
                (const_int -56 [0xffffffffffffffc8])) [0 tmp[i.2_9]+0 S1 A8])
        (const_int 48 [0x30])) "kernel/vsprintf.c":64:12 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ i.2_9 ])
        (nil)))
(jump_insn 330 121 331 27 (set (pc)
        (label_ref 149)) 807 {jump}
     (nil)
 -> 149)
(barrier 331 330 124)
(code_label 124 331 125 28 21 (nil) [1 uses])
(note 125 124 332 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(jump_insn 332 125 333 28 (set (pc)
        (label_ref 144)) "kernel/vsprintf.c":66:9 807 {jump}
     (nil)
 -> 144)
(barrier 333 332 146)
(code_label 146 333 128 29 24 (nil) [1 uses])
(note 128 146 131 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 131 128 132 29 (set (reg:SI 133)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [2 num+0 S4 A32])) "kernel/vsprintf.c":67:22 75 {*movsi_internal}
     (nil))
(insn 132 131 133 29 (set (reg:SI 134)
        (const_int 0 [0])) "kernel/vsprintf.c":67:22 75 {*movsi_internal}
     (nil))
(insn 133 132 346 29 (set (reg:SI 135)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 base+0 S4 A32])) "kernel/vsprintf.c":67:22 75 {*movsi_internal}
     (nil))
(insn 346 133 347 29 (set (reg:SI 131 [ num ])
        (reg:SI 133)) "kernel/vsprintf.c":67:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(insn 347 346 134 29 (set (reg:SI 132 [ __res ])
        (reg:SI 134)) "kernel/vsprintf.c":67:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 134)
        (nil)))
(insn 134 347 129 29 (parallel [
            (set (reg:SI 131 [ num ])
                (asm_operands:SI ("divl %4") ("=a") 0 [
                        (reg:SI 131 [ num ])
                        (reg:SI 132 [ __res ])
                        (reg:SI 135)
                    ]
                     [
                        (asm_input:SI ("0") kernel/vsprintf.c:67)
                        (asm_input:SI ("1") kernel/vsprintf.c:67)
                        (asm_input:SI ("r") kernel/vsprintf.c:67)
                    ]
                     [] kernel/vsprintf.c:67))
            (set (reg:SI 132 [ __res ])
                (asm_operands:SI ("divl %4") ("=d") 1 [
                        (reg:SI 131 [ num ])
                        (reg:SI 132 [ __res ])
                        (reg:SI 135)
                    ]
                     [
                        (asm_input:SI ("0") kernel/vsprintf.c:67)
                        (asm_input:SI ("1") kernel/vsprintf.c:67)
                        (asm_input:SI ("r") kernel/vsprintf.c:67)
                    ]
                     [] kernel/vsprintf.c:67))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":67:22 -1
     (expr_list:REG_DEAD (reg:SI 135)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 129 134 130 29 (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [2 num+0 S4 A32])
        (reg:SI 131 [ num ])) "kernel/vsprintf.c":67:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 131 [ num ])
        (nil)))
(insn 130 129 135 29 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 __res+0 S4 A32])
        (reg:SI 132 [ __res ])) "kernel/vsprintf.c":67:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 132 [ __res ])
        (nil)))
(insn 135 130 136 29 (set (reg:SI 119 [ _97 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 __res+0 S4 A32])) "kernel/vsprintf.c":67:22 75 {*movsi_internal}
     (nil))
(insn 136 135 137 29 (set (reg:SI 92 [ _10 ])
        (reg:SI 119 [ _97 ])) "kernel/vsprintf.c":67:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 119 [ _97 ])
        (nil)))
(insn 137 136 138 29 (set (reg/f:SI 136)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 digits+0 S4 A32])) "kernel/vsprintf.c":67:21 75 {*movsi_internal}
     (nil))
(insn 138 137 139 29 (parallel [
            (set (reg/f:SI 93 [ _11 ])
                (plus:SI (reg:SI 92 [ _10 ])
                    (reg/f:SI 136)))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":67:21 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 digits+0 S4 A32])
                        (reg:SI 92 [ _10 ]))
                    (nil))))))
(insn 139 138 140 29 (set (reg:SI 94 [ i.3_12 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "kernel/vsprintf.c":67:9 75 {*movsi_internal}
     (nil))
(insn 140 139 141 29 (parallel [
            (set (reg:SI 137)
                (plus:SI (reg:SI 94 [ i.3_12 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":67:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 141 140 142 29 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (reg:SI 137)) "kernel/vsprintf.c":67:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 137)
        (nil)))
(insn 142 141 143 29 (set (reg:QI 95 [ _13 ])
        (mem:QI (reg/f:SI 93 [ _11 ]) [0 *_11+0 S1 A8])) "kernel/vsprintf.c":67:21 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93 [ _11 ])
        (nil)))
(insn 143 142 144 29 (set (mem:QI (plus:SI (plus:SI (reg/f:SI 19 frame)
                    (reg:SI 94 [ i.3_12 ]))
                (const_int -56 [0xffffffffffffffc8])) [0 tmp[i.3_12]+0 S1 A8])
        (reg:QI 95 [ _13 ])) "kernel/vsprintf.c":67:13 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 95 [ _13 ])
        (expr_list:REG_DEAD (reg:SI 94 [ i.3_12 ])
            (nil))))
(code_label 144 143 145 30 23 (nil) [1 uses])
(note 145 144 147 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 147 145 148 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [2 num+0 S4 A32])
            (const_int 0 [0]))) "kernel/vsprintf.c":66:14 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 148 147 149 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) "kernel/vsprintf.c":66:14 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 146)
(code_label 149 148 150 31 22 (nil) [1 uses])
(note 150 149 151 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 31 (set (reg:SI 138)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "kernel/vsprintf.c":68:5 75 {*movsi_internal}
     (nil))
(insn 152 151 153 31 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 138)
            (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 16 [0x10])) [2 precision+0 S4 A32]))) "kernel/vsprintf.c":68:5 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 138)
        (nil)))
(jump_insn 153 152 154 31 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) "kernel/vsprintf.c":68:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 157)
(note 154 153 155 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 32 (set (reg:SI 139)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "kernel/vsprintf.c":69:13 75 {*movsi_internal}
     (nil))
(insn 156 155 157 32 (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 16 [0x10])) [2 precision+0 S4 A32])
        (reg:SI 139)) "kernel/vsprintf.c":69:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 139)
        (nil)))
(code_label 157 156 158 33 25 (nil) [1 uses])
(note 158 157 159 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 33 (set (reg:SI 140)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 16 [0x10])) [2 precision+0 S4 A32])) "kernel/vsprintf.c":70:7 75 {*movsi_internal}
     (nil))
(insn 160 159 161 33 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 12 [0xc])) [2 size+0 S4 A32])
                (minus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 12 [0xc])) [2 size+0 S4 A32])
                    (reg:SI 140)))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":70:7 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 161 160 162 33 (set (reg:SI 141)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 20 [0x14])) [2 type+0 S4 A32])) "kernel/vsprintf.c":71:13 75 {*movsi_internal}
     (nil))
(insn 162 161 163 33 (parallel [
            (set (reg:SI 96 [ _14 ])
                (and:SI (reg:SI 141)
                    (const_int 17 [0x11])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":71:13 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 20 [0x14])) [2 type+0 S4 A32])
                    (const_int 17 [0x11]))
                (nil)))))
(insn 163 162 164 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ _14 ])
            (const_int 0 [0]))) "kernel/vsprintf.c":71:5 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
        (nil)))
(jump_insn 164 163 165 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) "kernel/vsprintf.c":71:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 183)
(note 165 164 334 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(jump_insn 334 165 335 34 (set (pc)
        (label_ref 173)) "kernel/vsprintf.c":72:9 807 {jump}
     (nil)
 -> 173)
(barrier 335 334 178)
(code_label 178 335 168 35 28 (nil) [1 uses])
(note 168 178 169 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 35 (set (reg/f:SI 97 [ str.4_15 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])) "kernel/vsprintf.c":73:8 75 {*movsi_internal}
     (nil))
(insn 170 169 171 35 (parallel [
            (set (reg:SI 142)
                (plus:SI (reg/f:SI 97 [ str.4_15 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":73:8 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 171 170 172 35 (set (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])
        (reg:SI 142)) "kernel/vsprintf.c":73:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 142)
        (nil)))
(insn 172 171 173 35 (set (mem:QI (reg/f:SI 97 [ str.4_15 ]) [0 *str.4_15+0 S1 A8])
        (const_int 32 [0x20])) "kernel/vsprintf.c":73:11 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97 [ str.4_15 ])
        (nil)))
(code_label 173 172 174 36 27 (nil) [1 uses])
(note 174 173 175 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 36 (set (reg:SI 98 [ size.5_16 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [2 size+0 S4 A32])) "kernel/vsprintf.c":72:14 75 {*movsi_internal}
     (nil))
(insn 176 175 177 36 (parallel [
            (set (reg:SI 143)
                (plus:SI (reg:SI 98 [ size.5_16 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":72:14 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 177 176 181 36 (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [2 size+0 S4 A32])
        (reg:SI 143)) "kernel/vsprintf.c":72:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 143)
        (nil)))
(insn 181 177 182 36 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 98 [ size.5_16 ])
            (const_int 0 [0]))) "kernel/vsprintf.c":72:17 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 98 [ size.5_16 ])
        (nil)))
(jump_insn 182 181 183 36 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "kernel/vsprintf.c":72:17 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 178)
(code_label 183 182 184 37 26 (nil) [1 uses])
(note 184 183 185 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                    (const_int -1 [0xffffffffffffffff])) [0 sign+0 S1 A8])
            (const_int 0 [0]))) "kernel/vsprintf.c":74:5 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 186 185 187 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 193)
            (pc))) "kernel/vsprintf.c":74:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 193)
(note 187 186 188 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 38 (set (reg/f:SI 99 [ str.6_17 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])) "kernel/vsprintf.c":75:7 75 {*movsi_internal}
     (nil))
(insn 189 188 190 38 (parallel [
            (set (reg:SI 144)
                (plus:SI (reg/f:SI 99 [ str.6_17 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":75:7 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 190 189 191 38 (set (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])
        (reg:SI 144)) "kernel/vsprintf.c":75:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))
(insn 191 190 192 38 (set (reg:QI 145)
        (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -1 [0xffffffffffffffff])) [0 sign+0 S1 A8])) "kernel/vsprintf.c":75:10 77 {*movqi_internal}
     (nil))
(insn 192 191 193 38 (set (mem:QI (reg/f:SI 99 [ str.6_17 ]) [0 *str.6_17+0 S1 A8])
        (reg:QI 145)) "kernel/vsprintf.c":75:10 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 145)
        (expr_list:REG_DEAD (reg/f:SI 99 [ str.6_17 ])
            (nil))))
(code_label 193 192 194 39 29 (nil) [1 uses])
(note 194 193 195 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 39 (set (reg:SI 146)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 20 [0x14])) [2 type+0 S4 A32])) "kernel/vsprintf.c":76:11 75 {*movsi_internal}
     (nil))
(insn 196 195 197 39 (parallel [
            (set (reg:SI 100 [ _18 ])
                (and:SI (reg:SI 146)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":76:11 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 20 [0x14])) [2 type+0 S4 A32])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 197 196 198 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ _18 ])
            (const_int 0 [0]))) "kernel/vsprintf.c":76:5 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 100 [ _18 ])
        (nil)))
(jump_insn 198 197 199 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 225)
            (pc))) "kernel/vsprintf.c":76:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 225)
(note 199 198 200 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [2 base+0 S4 A32])
            (const_int 8 [0x8]))) "kernel/vsprintf.c":77:6 11 {*cmpsi_1}
     (nil))
(jump_insn 201 200 202 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) "kernel/vsprintf.c":77:6 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 209)
(note 202 201 203 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 204 41 (set (reg/f:SI 101 [ str.7_19 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])) "kernel/vsprintf.c":78:8 75 {*movsi_internal}
     (nil))
(insn 204 203 205 41 (parallel [
            (set (reg:SI 147)
                (plus:SI (reg/f:SI 101 [ str.7_19 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":78:8 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 205 204 206 41 (set (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])
        (reg:SI 147)) "kernel/vsprintf.c":78:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 147)
        (nil)))
(insn 206 205 336 41 (set (mem:QI (reg/f:SI 101 [ str.7_19 ]) [0 *str.7_19+0 S1 A8])
        (const_int 48 [0x30])) "kernel/vsprintf.c":78:11 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101 [ str.7_19 ])
        (nil)))
(jump_insn 336 206 337 41 (set (pc)
        (label_ref 225)) 807 {jump}
     (nil)
 -> 225)
(barrier 337 336 209)
(code_label 209 337 210 42 31 (nil) [1 uses])
(note 210 209 211 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [2 base+0 S4 A32])
            (const_int 16 [0x10]))) "kernel/vsprintf.c":79:11 11 {*cmpsi_1}
     (nil))
(jump_insn 212 211 213 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 225)
            (pc))) "kernel/vsprintf.c":79:11 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 225)
(note 213 212 214 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 43 (set (reg/f:SI 102 [ str.8_20 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])) "kernel/vsprintf.c":80:8 75 {*movsi_internal}
     (nil))
(insn 215 214 216 43 (parallel [
            (set (reg:SI 148)
                (plus:SI (reg/f:SI 102 [ str.8_20 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":80:8 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 216 215 217 43 (set (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])
        (reg:SI 148)) "kernel/vsprintf.c":80:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 148)
        (nil)))
(insn 217 216 218 43 (set (mem:QI (reg/f:SI 102 [ str.8_20 ]) [0 *str.8_20+0 S1 A8])
        (const_int 48 [0x30])) "kernel/vsprintf.c":80:11 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102 [ str.8_20 ])
        (nil)))
(insn 218 217 219 43 (set (reg/f:SI 149)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 digits+0 S4 A32])) "kernel/vsprintf.c":81:19 75 {*movsi_internal}
     (nil))
(insn 219 218 220 43 (parallel [
            (set (reg/f:SI 103 [ _21 ])
                (plus:SI (reg/f:SI 149)
                    (const_int 33 [0x21])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":81:19 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 149)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 digits+0 S4 A32])
                    (const_int 33 [0x21]))
                (nil)))))
(insn 220 219 221 43 (set (reg/f:SI 104 [ str.9_22 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])) "kernel/vsprintf.c":81:8 75 {*movsi_internal}
     (nil))
(insn 221 220 222 43 (parallel [
            (set (reg:SI 150)
                (plus:SI (reg/f:SI 104 [ str.9_22 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":81:8 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 222 221 223 43 (set (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])
        (reg:SI 150)) "kernel/vsprintf.c":81:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 150)
        (nil)))
(insn 223 222 224 43 (set (reg:QI 105 [ _23 ])
        (mem:QI (reg/f:SI 103 [ _21 ]) [0 *_21+0 S1 A8])) "kernel/vsprintf.c":81:19 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103 [ _21 ])
        (nil)))
(insn 224 223 225 43 (set (mem:QI (reg/f:SI 104 [ str.9_22 ]) [0 *str.9_22+0 S1 A8])
        (reg:QI 105 [ _23 ])) "kernel/vsprintf.c":81:11 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 105 [ _23 ])
        (expr_list:REG_DEAD (reg/f:SI 104 [ str.9_22 ])
            (nil))))
(code_label 225 224 226 44 30 (nil) [3 uses])
(note 226 225 227 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 44 (set (reg:SI 151)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 20 [0x14])) [2 type+0 S4 A32])) "kernel/vsprintf.c":84:13 75 {*movsi_internal}
     (nil))
(insn 228 227 229 44 (parallel [
            (set (reg:SI 106 [ _24 ])
                (and:SI (reg:SI 151)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":84:13 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 20 [0x14])) [2 type+0 S4 A32])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 229 228 230 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 106 [ _24 ])
            (const_int 0 [0]))) "kernel/vsprintf.c":84:5 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 106 [ _24 ])
        (nil)))
(jump_insn 230 229 231 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 250)
            (pc))) "kernel/vsprintf.c":84:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 250)
(note 231 230 338 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(jump_insn 338 231 339 45 (set (pc)
        (label_ref 240)) "kernel/vsprintf.c":85:9 807 {jump}
     (nil)
 -> 240)
(barrier 339 338 245)
(code_label 245 339 234 46 34 (nil) [1 uses])
(note 234 245 235 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 46 (set (reg/f:SI 107 [ str.10_25 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])) "kernel/vsprintf.c":86:8 75 {*movsi_internal}
     (nil))
(insn 236 235 237 46 (parallel [
            (set (reg:SI 152)
                (plus:SI (reg/f:SI 107 [ str.10_25 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":86:8 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 237 236 238 46 (set (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])
        (reg:SI 152)) "kernel/vsprintf.c":86:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 152)
        (nil)))
(insn 238 237 239 46 (set (reg:QI 153)
        (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])) "kernel/vsprintf.c":86:11 77 {*movqi_internal}
     (nil))
(insn 239 238 240 46 (set (mem:QI (reg/f:SI 107 [ str.10_25 ]) [0 *str.10_25+0 S1 A8])
        (reg:QI 153)) "kernel/vsprintf.c":86:11 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 153)
        (expr_list:REG_DEAD (reg/f:SI 107 [ str.10_25 ])
            (nil))))
(code_label 240 239 241 47 33 (nil) [1 uses])
(note 241 240 242 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 47 (set (reg:SI 108 [ size.11_26 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [2 size+0 S4 A32])) "kernel/vsprintf.c":85:14 75 {*movsi_internal}
     (nil))
(insn 243 242 244 47 (parallel [
            (set (reg:SI 154)
                (plus:SI (reg:SI 108 [ size.11_26 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":85:14 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 244 243 248 47 (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [2 size+0 S4 A32])
        (reg:SI 154)) "kernel/vsprintf.c":85:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 154)
        (nil)))
(insn 248 244 249 47 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 108 [ size.11_26 ])
            (const_int 0 [0]))) "kernel/vsprintf.c":85:17 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 108 [ size.11_26 ])
        (nil)))
(jump_insn 249 248 250 47 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) "kernel/vsprintf.c":85:17 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 245)
(code_label 250 249 251 48 32 (nil) [1 uses])
(note 251 250 340 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(jump_insn 340 251 341 48 (set (pc)
        (label_ref 259)) "kernel/vsprintf.c":87:8 807 {jump}
     (nil)
 -> 259)
(barrier 341 340 264)
(code_label 264 341 254 49 36 (nil) [1 uses])
(note 254 264 255 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 49 (set (reg/f:SI 109 [ str.12_27 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])) "kernel/vsprintf.c":88:7 75 {*movsi_internal}
     (nil))
(insn 256 255 257 49 (parallel [
            (set (reg:SI 155)
                (plus:SI (reg/f:SI 109 [ str.12_27 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":88:7 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 257 256 258 49 (set (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])
        (reg:SI 155)) "kernel/vsprintf.c":88:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 155)
        (nil)))
(insn 258 257 259 49 (set (mem:QI (reg/f:SI 109 [ str.12_27 ]) [0 *str.12_27+0 S1 A8])
        (const_int 48 [0x30])) "kernel/vsprintf.c":88:10 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109 [ str.12_27 ])
        (nil)))
(code_label 259 258 260 50 35 (nil) [1 uses])
(note 260 259 261 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 261 260 262 50 (set (reg:SI 110 [ precision.13_28 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 16 [0x10])) [2 precision+0 S4 A32])) "kernel/vsprintf.c":87:22 75 {*movsi_internal}
     (nil))
(insn 262 261 263 50 (parallel [
            (set (reg:SI 156)
                (plus:SI (reg:SI 110 [ precision.13_28 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":87:22 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 263 262 265 50 (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 16 [0x10])) [2 precision+0 S4 A32])
        (reg:SI 156)) "kernel/vsprintf.c":87:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 156)
        (nil)))
(insn 265 263 266 50 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
            (reg:SI 110 [ precision.13_28 ]))) "kernel/vsprintf.c":87:11 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 110 [ precision.13_28 ])
        (nil)))
(jump_insn 266 265 267 50 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) "kernel/vsprintf.c":87:11 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 264)
(note 267 266 342 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(jump_insn 342 267 343 51 (set (pc)
        (label_ref 279)) "kernel/vsprintf.c":89:8 807 {jump}
     (nil)
 -> 279)
(barrier 343 342 284)
(code_label 284 343 270 52 38 (nil) [1 uses])
(note 270 284 271 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 271 270 272 52 (set (reg/f:SI 111 [ str.14_29 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])) "kernel/vsprintf.c":90:7 75 {*movsi_internal}
     (nil))
(insn 272 271 273 52 (parallel [
            (set (reg:SI 157)
                (plus:SI (reg/f:SI 111 [ str.14_29 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":90:7 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 273 272 274 52 (set (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])
        (reg:SI 157)) "kernel/vsprintf.c":90:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 157)
        (nil)))
(insn 274 273 275 52 (parallel [
            (set (reg:SI 158)
                (plus:SI (reg/f:SI 19 frame)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":90:15 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 275 274 276 52 (set (reg:SI 160)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "kernel/vsprintf.c":90:15 75 {*movsi_internal}
     (nil))
(insn 276 275 277 52 (parallel [
            (set (reg/f:SI 159)
                (plus:SI (reg:SI 158)
                    (reg:SI 160)))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":90:15 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_DEAD (reg:SI 158)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 158)
                        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32]))
                    (nil))))))
(insn 277 276 278 52 (set (reg:QI 112 [ _30 ])
        (mem:QI (reg/f:SI 159) [0 tmp[i_121]+0 S1 A8])) "kernel/vsprintf.c":90:15 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 159)
        (nil)))
(insn 278 277 279 52 (set (mem:QI (reg/f:SI 111 [ str.14_29 ]) [0 *str.14_29+0 S1 A8])
        (reg:QI 112 [ _30 ])) "kernel/vsprintf.c":90:10 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 112 [ _30 ])
        (expr_list:REG_DEAD (reg/f:SI 111 [ str.14_29 ])
            (nil))))
(code_label 279 278 280 53 37 (nil) [1 uses])
(note 280 279 281 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 281 280 282 53 (set (reg:SI 113 [ i.15_31 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "kernel/vsprintf.c":89:10 75 {*movsi_internal}
     (nil))
(insn 282 281 283 53 (parallel [
            (set (reg:SI 161)
                (plus:SI (reg:SI 113 [ i.15_31 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":89:10 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 283 282 287 53 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (reg:SI 161)) "kernel/vsprintf.c":89:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 161)
        (nil)))
(insn 287 283 288 53 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 113 [ i.15_31 ])
            (const_int 0 [0]))) "kernel/vsprintf.c":89:13 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 113 [ i.15_31 ])
        (nil)))
(jump_insn 288 287 289 53 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) "kernel/vsprintf.c":89:13 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 284)
(note 289 288 344 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(jump_insn 344 289 345 54 (set (pc)
        (label_ref 297)) "kernel/vsprintf.c":91:8 807 {jump}
     (nil)
 -> 297)
(barrier 345 344 302)
(code_label 302 345 292 55 40 (nil) [1 uses])
(note 292 302 293 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 55 (set (reg/f:SI 114 [ str.16_32 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])) "kernel/vsprintf.c":92:7 75 {*movsi_internal}
     (nil))
(insn 294 293 295 55 (parallel [
            (set (reg:SI 162)
                (plus:SI (reg/f:SI 114 [ str.16_32 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":92:7 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 295 294 296 55 (set (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])
        (reg:SI 162)) "kernel/vsprintf.c":92:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 162)
        (nil)))
(insn 296 295 297 55 (set (mem:QI (reg/f:SI 114 [ str.16_32 ]) [0 *str.16_32+0 S1 A8])
        (const_int 32 [0x20])) "kernel/vsprintf.c":92:10 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114 [ str.16_32 ])
        (nil)))
(code_label 297 296 298 56 39 (nil) [1 uses])
(note 298 297 299 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 300 56 (set (reg:SI 115 [ size.17_33 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [2 size+0 S4 A32])) "kernel/vsprintf.c":91:13 75 {*movsi_internal}
     (nil))
(insn 300 299 301 56 (parallel [
            (set (reg:SI 163)
                (plus:SI (reg:SI 115 [ size.17_33 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":91:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 301 300 305 56 (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [2 size+0 S4 A32])
        (reg:SI 163)) "kernel/vsprintf.c":91:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 163)
        (nil)))
(insn 305 301 306 56 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 115 [ size.17_33 ])
            (const_int 0 [0]))) "kernel/vsprintf.c":91:16 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 115 [ size.17_33 ])
        (nil)))
(jump_insn 306 305 307 56 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) "kernel/vsprintf.c":91:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 302)
(note 307 306 308 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 311 57 (set (reg/f:SI 116 [ _60 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [1 str+0 S4 A32])) "kernel/vsprintf.c":93:9 75 {*movsi_internal}
     (nil))
(code_label 311 308 312 58 41 (nil) [1 uses])
(note 312 311 313 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 313 312 317 58 (set (reg/f:SI 120 [ <retval> ])
        (reg/f:SI 116 [ _60 ])) "kernel/vsprintf.c":94:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116 [ _60 ])
        (nil)))
(insn 317 313 318 58 (set (reg/i:SI 0 ax)
        (reg/f:SI 120 [ <retval> ])) "kernel/vsprintf.c":94:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120 [ <retval> ])
        (nil)))
(insn 318 317 0 58 (use (reg/i:SI 0 ax)) "kernel/vsprintf.c":94:1 -1
     (nil))

;; Function vsprintf (vsprintf, funcdef_no=2, decl_uid=1076, cgraph_uid=3, symbol_order=2)

scanning new insn with uid = 564.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 74 n_edges 115 count 131 (  1.8)
;; 8 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 73 70 71 72
;;
;; Loop 1
;;  header 71, latch 70
;;  depth 1, outer 0
;;  nodes: 71 70 64 4 40 55 56 59 61 63 73 69 68 67 65 66 32 31 29 30 27 28 19 25 26 24 23 22 21 20 18 16 17 15 14 13 7 6 5 11 8 9 10 12 3 62 60 57 58 54 53 52 51 50 49 45 48 47 46 44 43 42 41 39 38 37 33 36 35 34
;;
;; Loop 7
;;  header 39, latch 38
;;  depth 2, outer 1
;;  nodes: 39 38
;;
;; Loop 6
;;  header 36, latch 35
;;  depth 2, outer 1
;;  nodes: 36 35
;;
;; Loop 5
;;  header 54, latch 53
;;  depth 2, outer 1
;;  nodes: 54 53
;;
;; Loop 4
;;  header 51, latch 50
;;  depth 2, outer 1
;;  nodes: 51 50
;;
;; Loop 3
;;  header 48, latch 47
;;  depth 2, outer 1
;;  nodes: 48 47
;;
;; Loop 2
;;  header 6, multiple latches: 11 8 9 10 12
;;  depth 2, outer 1
;;  nodes: 6 11 8 9 10 12 7
;; 2 succs { 71 }
;; 3 succs { 4 5 }
;; 4 succs { 70 }
;; 5 succs { 6 }
;; 6 succs { 13 7 }
;; 7 succs { 13 10 11 9 8 12 }
;; 8 succs { 6 }
;; 9 succs { 6 }
;; 10 succs { 6 }
;; 11 succs { 6 }
;; 12 succs { 6 }
;; 13 succs { 14 16 }
;; 14 succs { 15 16 }
;; 15 succs { 19 }
;; 16 succs { 17 19 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 27 }
;; 20 succs { 21 23 }
;; 21 succs { 22 23 }
;; 22 succs { 25 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 30 28 }
;; 28 succs { 30 29 }
;; 29 succs { 30 31 }
;; 30 succs { 31 }
;; 31 succs { 65 32 }
;; 32 succs { 65 61 33 62 64 56 57 41 63 60 }
;; 33 succs { 34 37 }
;; 34 succs { 36 }
;; 35 succs { 36 }
;; 36 succs { 35 37 }
;; 37 succs { 39 }
;; 38 succs { 39 }
;; 39 succs { 38 40 }
;; 40 succs { 70 }
;; 41 succs { 42 43 }
;; 42 succs { 45 }
;; 43 succs { 44 45 }
;; 44 succs { 45 }
;; 45 succs { 46 49 }
;; 46 succs { 48 }
;; 47 succs { 48 }
;; 48 succs { 47 49 }
;; 49 succs { 51 }
;; 50 succs { 51 }
;; 51 succs { 50 52 }
;; 52 succs { 54 }
;; 53 succs { 54 }
;; 54 succs { 53 55 }
;; 55 succs { 70 }
;; 56 succs { 70 }
;; 57 succs { 58 59 }
;; 58 succs { 59 }
;; 59 succs { 70 }
;; 60 succs { 61 }
;; 61 succs { 70 }
;; 62 succs { 63 }
;; 63 succs { 70 }
;; 64 succs { 70 }
;; 65 succs { 66 67 }
;; 66 succs { 67 }
;; 67 succs { 68 69 }
;; 68 succs { 73 }
;; 69 succs { 73 }
;; 73 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 3 72 }
;; 72 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r208,l0) best AREG, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r206,l0) best AREG, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r204,l0) best AREG, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r202,l0) best AREG, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a65 (r189,l0) best AREG, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a99 (r175,l0) best AREG, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a113 (r171,l0) best AREG, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r163,l0) best AREG, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a4 (r161,l0) best Q_REGS, allocno Q_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a12 (r155,l0) best Q_REGS, allocno Q_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a15 (r152,l0) best Q_REGS, allocno Q_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a19 (r149,l0) best Q_REGS, allocno Q_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a52 (r132,l0) best Q_REGS, allocno Q_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a71 (r125,l0) best Q_REGS, allocno Q_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a85 (r118,l0) best Q_REGS, allocno Q_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a89 (r114,l0) best Q_REGS, allocno Q_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a91 (r112,l0) best Q_REGS, allocno Q_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a93 (r110,l0) best Q_REGS, allocno Q_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a97 (r108,l0) best Q_REGS, allocno Q_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a101 (r106,l0) best Q_REGS, allocno Q_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a103 (r104,l0) best Q_REGS, allocno Q_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a107 (r100,l0) best Q_REGS, allocno Q_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a111 (r98,l0) best Q_REGS, allocno Q_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a115 (r96,l0) best Q_REGS, allocno Q_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a117 (r94,l0) best Q_REGS, allocno Q_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a124 (r91,l0) best Q_REGS, allocno Q_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a129 (r87,l0) best Q_REGS, allocno Q_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a132 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r163,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a5(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:26000
  a7(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a10(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a12(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a13(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a16(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a18(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a20(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r208,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a27(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a28(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a29(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a30(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a31(r206,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a32(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a33(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a34(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a35(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a36(r204,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a37(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a38(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a39(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a40(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a41(r202,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a42(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a43(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a44(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a45(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a46(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a47(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a48(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a49(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a51(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a52(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a53(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a54(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a55(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a56(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a57(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a58(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a59(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a60(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a61(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a62(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a63(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a64(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a65(r189,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a66(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a67(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a68(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a69(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a70(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a71(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a72(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a73(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a74(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a75(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a76(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a77(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a78(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a79(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a80(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a81(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:9000
  a82(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a83(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:15000
  a84(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a85(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a86(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a87(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a88(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a89(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a90(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a91(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a92(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a93(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a94(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a95(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a96(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a97(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a98(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a99(r175,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a100(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a101(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a102(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a103(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a104(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a105(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a106(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a107(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a108(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a109(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a110(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a111(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a112(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a113(r171,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a114(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a115(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a116(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a117(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a118(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a119(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a120(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:9000
  a121(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a122(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:15000
  a123(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a124(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a125(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a126(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a127(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a128(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a129(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a130(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a131(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a132(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a133(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a134(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 509(l0): point = 0
   Insn 508(l0): point = 2
   Insn 504(l0): point = 4
   Insn 501(l0): point = 6
   Insn 500(l0): point = 8
   Insn 499(l0): point = 10
   Insn 498(l0): point = 12
   Insn 13(l0): point = 15
   Insn 12(l0): point = 17
   Insn 11(l0): point = 19
   Insn 10(l0): point = 21
   Insn 496(l0): point = 24
   Insn 495(l0): point = 26
   Insn 493(l0): point = 28
   Insn 492(l0): point = 30
   Insn 489(l0): point = 33
   Insn 488(l0): point = 35
   Insn 487(l0): point = 37
   Insn 557(l0): point = 40
   Insn 449(l0): point = 42
   Insn 448(l0): point = 44
   Insn 447(l0): point = 46
   Insn 446(l0): point = 48
   Insn 445(l0): point = 50
   Insn 444(l0): point = 52
   Insn 443(l0): point = 54
   Insn 442(l0): point = 56
   Insn 515(l0): point = 59
   Insn 20(l0): point = 61
   Insn 19(l0): point = 63
   Insn 18(l0): point = 65
   Insn 17(l0): point = 67
   Insn 16(l0): point = 69
   Insn 15(l0): point = 71
   Insn 536(l0): point = 74
   Insn 251(l0): point = 77
   Insn 250(l0): point = 79
   Insn 246(l0): point = 81
   Insn 243(l0): point = 84
   Insn 242(l0): point = 86
   Insn 241(l0): point = 88
   Insn 240(l0): point = 90
   Insn 533(l0): point = 93
   Insn 236(l0): point = 95
   Insn 235(l0): point = 97
   Insn 234(l0): point = 99
   Insn 233(l0): point = 101
   Insn 232(l0): point = 103
   Insn 231(l0): point = 105
   Insn 230(l0): point = 107
   Insn 229(l0): point = 109
   Insn 228(l0): point = 111
   Insn 209(l0): point = 114
   Insn 208(l0): point = 116
   Insn 207(l0): point = 118
   Insn 206(l0): point = 120
   Insn 225(l0): point = 123
   Insn 224(l0): point = 125
   Insn 220(l0): point = 127
   Insn 217(l0): point = 130
   Insn 216(l0): point = 132
   Insn 215(l0): point = 134
   Insn 214(l0): point = 136
   Insn 531(l0): point = 139
   Insn 547(l0): point = 142
   Insn 343(l0): point = 145
   Insn 342(l0): point = 147
   Insn 340(l0): point = 149
   Insn 339(l0): point = 151
   Insn 338(l0): point = 153
   Insn 335(l0): point = 156
   Insn 334(l0): point = 158
   Insn 333(l0): point = 160
   Insn 332(l0): point = 162
   Insn 544(l0): point = 165
   Insn 327(l0): point = 168
   Insn 326(l0): point = 170
   Insn 325(l0): point = 172
   Insn 321(l0): point = 175
   Insn 320(l0): point = 177
   Insn 319(l0): point = 179
   Insn 318(l0): point = 181
   Insn 317(l0): point = 183
   Insn 316(l0): point = 185
   Insn 315(l0): point = 187
   Insn 314(l0): point = 189
   Insn 313(l0): point = 191
   Insn 542(l0): point = 194
   Insn 309(l0): point = 196
   Insn 290(l0): point = 199
   Insn 289(l0): point = 201
   Insn 288(l0): point = 203
   Insn 287(l0): point = 205
   Insn 284(l0): point = 208
   Insn 283(l0): point = 210
   Insn 281(l0): point = 213
   Insn 280(l0): point = 215
   Insn 279(l0): point = 217
   Insn 538(l0): point = 220
   Insn 274(l0): point = 222
   Insn 273(l0): point = 224
   Insn 271(l0): point = 227
   Insn 270(l0): point = 229
   Insn 267(l0): point = 231
   Insn 266(l0): point = 233
   Insn 265(l0): point = 235
   Insn 264(l0): point = 237
   Insn 263(l0): point = 239
   Insn 262(l0): point = 241
   Insn 261(l0): point = 243
   Insn 260(l0): point = 245
   Insn 259(l0): point = 247
   Insn 258(l0): point = 249
   Insn 257(l0): point = 251
   Insn 306(l0): point = 254
   Insn 305(l0): point = 256
   Insn 303(l0): point = 258
   Insn 302(l0): point = 260
   Insn 301(l0): point = 262
   Insn 298(l0): point = 265
   Insn 297(l0): point = 267
   Insn 296(l0): point = 269
   Insn 295(l0): point = 271
   Insn 540(l0): point = 274
   Insn 549(l0): point = 277
   Insn 364(l0): point = 279
   Insn 363(l0): point = 281
   Insn 362(l0): point = 283
   Insn 361(l0): point = 285
   Insn 360(l0): point = 287
   Insn 359(l0): point = 289
   Insn 358(l0): point = 291
   Insn 357(l0): point = 293
   Insn 356(l0): point = 295
   Insn 355(l0): point = 297
   Insn 354(l0): point = 299
   Insn 353(l0): point = 301
   Insn 352(l0): point = 303
   Insn 351(l0): point = 305
   Insn 350(l0): point = 307
   Insn 349(l0): point = 309
   Insn 551(l0): point = 312
   Insn 391(l0): point = 314
   Insn 390(l0): point = 316
   Insn 389(l0): point = 318
   Insn 388(l0): point = 320
   Insn 387(l0): point = 322
   Insn 386(l0): point = 324
   Insn 385(l0): point = 326
   Insn 384(l0): point = 328
   Insn 383(l0): point = 330
   Insn 382(l0): point = 332
   Insn 381(l0): point = 334
   Insn 380(l0): point = 336
   Insn 379(l0): point = 338
   Insn 378(l0): point = 340
   Insn 377(l0): point = 342
   Insn 376(l0): point = 344
   Insn 370(l0): point = 347
   Insn 369(l0): point = 349
   Insn 373(l0): point = 352
   Insn 372(l0): point = 354
   Insn 553(l0): point = 357
   Insn 414(l0): point = 359
   Insn 413(l0): point = 361
   Insn 412(l0): point = 363
   Insn 411(l0): point = 365
   Insn 410(l0): point = 367
   Insn 409(l0): point = 369
   Insn 408(l0): point = 371
   Insn 407(l0): point = 373
   Insn 406(l0): point = 375
   Insn 405(l0): point = 377
   Insn 404(l0): point = 379
   Insn 403(l0): point = 381
   Insn 402(l0): point = 383
   Insn 401(l0): point = 385
   Insn 400(l0): point = 387
   Insn 399(l0): point = 389
   Insn 396(l0): point = 392
   Insn 555(l0): point = 395
   Insn 437(l0): point = 397
   Insn 436(l0): point = 399
   Insn 435(l0): point = 401
   Insn 434(l0): point = 403
   Insn 433(l0): point = 405
   Insn 432(l0): point = 407
   Insn 431(l0): point = 409
   Insn 430(l0): point = 411
   Insn 429(l0): point = 413
   Insn 428(l0): point = 415
   Insn 427(l0): point = 417
   Insn 426(l0): point = 419
   Insn 425(l0): point = 421
   Insn 424(l0): point = 423
   Insn 423(l0): point = 425
   Insn 422(l0): point = 427
   Insn 419(l0): point = 430
   Insn 562(l0): point = 433
   Insn 482(l0): point = 436
   Insn 481(l0): point = 438
   Insn 480(l0): point = 440
   Insn 559(l0): point = 443
   Insn 475(l0): point = 445
   Insn 474(l0): point = 447
   Insn 473(l0): point = 449
   Insn 472(l0): point = 451
   Insn 471(l0): point = 453
   Insn 470(l0): point = 455
   Insn 468(l0): point = 458
   Insn 467(l0): point = 460
   Insn 466(l0): point = 462
   Insn 465(l0): point = 464
   Insn 457(l0): point = 467
   Insn 456(l0): point = 469
   Insn 455(l0): point = 471
   Insn 454(l0): point = 473
   Insn 200(l0): point = 476
   Insn 199(l0): point = 478
   Insn 198(l0): point = 480
   Insn 197(l0): point = 482
   Insn 196(l0): point = 485
   Insn 195(l0): point = 487
   Insn 192(l0): point = 489
   Insn 191(l0): point = 491
   Insn 190(l0): point = 493
   Insn 189(l0): point = 495
   Insn 181(l0): point = 498
   Insn 180(l0): point = 500
   Insn 179(l0): point = 502
   Insn 178(l0): point = 504
   Insn 186(l0): point = 507
   Insn 185(l0): point = 509
   Insn 184(l0): point = 511
   Insn 171(l0): point = 514
   Insn 170(l0): point = 516
   Insn 169(l0): point = 518
   Insn 168(l0): point = 520
   Insn 120(l0): point = 523
   Insn 119(l0): point = 525
   Insn 118(l0): point = 527
   Insn 117(l0): point = 529
   Insn 116(l0): point = 531
   Insn 113(l0): point = 534
   Insn 112(l0): point = 536
   Insn 101(l0): point = 539
   Insn 100(l0): point = 541
   Insn 99(l0): point = 543
   Insn 98(l0): point = 545
   Insn 110(l0): point = 548
   Insn 109(l0): point = 550
   Insn 106(l0): point = 552
   Insn 105(l0): point = 554
   Insn 104(l0): point = 556
   Insn 103(l0): point = 558
   Insn 527(l0): point = 561
   Insn 93(l0): point = 563
   Insn 92(l0): point = 565
   Insn 91(l0): point = 567
   Insn 90(l0): point = 569
   Insn 89(l0): point = 571
   Insn 88(l0): point = 573
   Insn 86(l0): point = 576
   Insn 85(l0): point = 578
   Insn 82(l0): point = 580
   Insn 81(l0): point = 582
   Insn 79(l0): point = 585
   Insn 78(l0): point = 587
   Insn 75(l0): point = 589
   Insn 74(l0): point = 591
   Insn 73(l0): point = 593
   Insn 42(l0): point = 596
   Insn 41(l0): point = 598
   Insn 40(l0): point = 600
   Insn 39(l0): point = 602
   Insn 38(l0): point = 605
   Insn 37(l0): point = 607
   Insn 34(l0): point = 609
   Insn 33(l0): point = 611
   Insn 32(l0): point = 613
   Insn 31(l0): point = 615
   Insn 30(l0): point = 617
   Insn 29(l0): point = 619
   Insn 28(l0): point = 621
   Insn 25(l0): point = 624
   Insn 523(l0): point = 627
   Insn 63(l0): point = 629
   Insn 517(l0): point = 632
   Insn 48(l0): point = 634
   Insn 519(l0): point = 637
   Insn 53(l0): point = 639
   Insn 521(l0): point = 642
   Insn 58(l0): point = 644
   Insn 525(l0): point = 647
   Insn 68(l0): point = 649
   Insn 163(l0): point = 652
   Insn 162(l0): point = 654
   Insn 157(l0): point = 657
   Insn 156(l0): point = 659
   Insn 155(l0): point = 661
   Insn 154(l0): point = 663
   Insn 152(l0): point = 666
   Insn 151(l0): point = 668
   Insn 150(l0): point = 670
   Insn 149(l0): point = 672
   Insn 529(l0): point = 675
   Insn 144(l0): point = 677
   Insn 143(l0): point = 679
   Insn 142(l0): point = 681
   Insn 141(l0): point = 683
   Insn 140(l0): point = 685
   Insn 139(l0): point = 687
   Insn 137(l0): point = 690
   Insn 136(l0): point = 692
   Insn 133(l0): point = 694
   Insn 132(l0): point = 696
   Insn 130(l0): point = 699
   Insn 129(l0): point = 701
   Insn 126(l0): point = 703
   Insn 125(l0): point = 705
   Insn 124(l0): point = 707
   Insn 123(l0): point = 709
   Insn 122(l0): point = 711
   Insn 165(l0): point = 714
   Insn 176(l0): point = 717
   Insn 175(l0): point = 719
   Insn 174(l0): point = 721
   Insn 173(l0): point = 723
   Insn 462(l0): point = 726
   Insn 461(l0): point = 728
   Insn 460(l0): point = 730
   Insn 459(l0): point = 732
   Insn 513(l0): point = 735
   Insn 6(l0): point = 737
   Insn 5(l0): point = 739
   Insn 564(l0): point = 741
 a0(r163): [3..4]
 a1(r162): [5..6]
 a2(r216): [7..8]
 a3(r215): [11..12]
 a4(r161): [27..28]
 a5(r160): [29..30]
 a6(r82): [15..741]
 a7(r159): [34..35]
 a8(r158): [36..37]
 a9(r157): [437..438]
 a10(r156): [439..440]
 a11(r154): [446..453]
 a12(r155): [446..447]
 a13(r153): [448..455]
 a14(r214): [450..451]
 a15(r152): [461..462]
 a16(r151): [463..464]
 a17(r150): [727..732]
 a18(r213): [729..730]
 a19(r149): [470..471]
 a20(r148): [472..473]
 a21(r212): [43..44]
 a22(r147): [43..46]
 a23(r211): [47..48]
 a24(r210): [51..52]
 a25(r209): [53..54]
 a26(r208): [398..399]
 a27(r146): [408..419]
 a28(r145): [420..421]
 a29(r144): [422..423]
 a30(r207): [424..425]
 a31(r206): [360..361]
 a32(r143): [370..381]
 a33(r142): [382..383]
 a34(r141): [384..385]
 a35(r205): [386..387]
 a36(r204): [315..316]
 a37(r140): [325..336]
 a38(r139): [337..338]
 a39(r138): [339..340]
 a40(r203): [341..342]
 a41(r202): [280..281]
 a42(r137): [290..301]
 a43(r136): [302..303]
 a44(r135): [304..305]
 a45(r201): [306..307]
 a46(r134): [148..153]
 a47(r200): [150..151]
 a48(r133): [157..162]
 a49(r199): [159..160]
 a50(r198): [171..172]
 a51(r131): [178..185]
 a52(r132): [178..179]
 a53(r130): [180..191]
 a54(r197): [182..183]
 a55(r196): [188..189]
 a56(r129): [257..262]
 a57(r195): [259..260]
 a58(r128): [266..271]
 a59(r194): [268..269]
 a60(r127): [202..203]
 a61(r193): [204..205]
 a62(r192): [209..210]
 a63(r191): [216..217]
 a64(r190): [223..224]
 a65(r189): [232..233]
 a66(r188): [246..247]
 a67(r187): [248..249]
 a68(r126): [85..90]
 a69(r186): [87..88]
 a70(r124): [96..103]
 a71(r125): [96..97]
 a72(r123): [98..105]
 a73(r185): [100..101]
 a74(r122): [106..107]
 a75(r184): [108..109]
 a76(r121): [131..136]
 a77(r183): [133..134]
 a78(r120): [117..118]
 a79(r182): [119..120]
 a80(r181): [477..478]
 a81(r180): [479..480]
 a82(r179): [481..482]
 a83(r178): [483..489]
 a84(r119): [490..491]
 a85(r118): [492..493]
 a86(r117): [494..495]
 a87(r116): [508..509]
 a88(r115): [510..511]
 a89(r114): [501..502]
 a90(r113): [503..504]
 a91(r112): [720..721]
 a92(r111): [722..723]
 a93(r110): [517..518]
 a94(r109): [519..520]
 a95(r177): [658..659]
 a96(r176): [660..661]
 a97(r108): [669..670]
 a98(r107): [671..672]
 a99(r175): [678..679]
 a100(r174): [686..687]
 a101(r106): [693..694]
 a102(r105): [695..696]
 a103(r104): [702..703]
 a104(r103): [704..705]
 a105(r102): [708..709]
 a106(r101): [710..711]
 a107(r100): [526..527]
 a108(r99): [528..529]
 a109(r173): [553..554]
 a110(r172): [555..556]
 a111(r98): [542..543]
 a112(r97): [544..545]
 a113(r171): [564..565]
 a114(r170): [572..573]
 a115(r96): [579..580]
 a116(r95): [581..582]
 a117(r94): [588..589]
 a118(r93): [590..591]
 a119(r169): [597..598]
 a120(r168): [599..600]
 a121(r167): [601..602]
 a122(r166): [603..609]
 a123(r92): [610..611]
 a124(r91): [612..613]
 a125(r90): [614..615]
 a126(r89): [618..619]
 a127(r88): [620..621]
 a128(r86): [62..69]
 a129(r87): [62..63]
 a130(r85): [64..71]
 a131(r165): [66..67]
 a132(r84): [18..19]
 a133(r83): [20..21]
 a134(r164): [738..739]
Compressing live ranges: from 744 to 236 - 31%
Ranges after the compression:
 a0(r163): [0..1]
 a1(r162): [2..3]
 a2(r216): [4..5]
 a3(r215): [6..7]
 a4(r161): [12..13]
 a5(r160): [14..15]
 a6(r82): [8..235]
 a7(r159): [16..17]
 a8(r158): [18..19]
 a9(r157): [120..121]
 a10(r156): [122..123]
 a11(r154): [124..127]
 a12(r155): [124..125]
 a13(r153): [126..127]
 a14(r214): [126..127]
 a15(r152): [128..129]
 a16(r151): [130..131]
 a17(r150): [232..233]
 a18(r213): [232..233]
 a19(r149): [132..133]
 a20(r148): [134..135]
 a21(r212): [20..21]
 a22(r147): [20..21]
 a23(r211): [22..23]
 a24(r210): [24..25]
 a25(r209): [26..27]
 a26(r208): [110..111]
 a27(r146): [112..113]
 a28(r145): [114..115]
 a29(r144): [116..117]
 a30(r207): [118..119]
 a31(r206): [100..101]
 a32(r143): [102..103]
 a33(r142): [104..105]
 a34(r141): [106..107]
 a35(r205): [108..109]
 a36(r204): [90..91]
 a37(r140): [92..93]
 a38(r139): [94..95]
 a39(r138): [96..97]
 a40(r203): [98..99]
 a41(r202): [80..81]
 a42(r137): [82..83]
 a43(r136): [84..85]
 a44(r135): [86..87]
 a45(r201): [88..89]
 a46(r134): [48..49]
 a47(r200): [48..49]
 a48(r133): [50..51]
 a49(r199): [50..51]
 a50(r198): [52..53]
 a51(r131): [54..57]
 a52(r132): [54..55]
 a53(r130): [56..59]
 a54(r197): [56..57]
 a55(r196): [58..59]
 a56(r129): [76..77]
 a57(r195): [76..77]
 a58(r128): [78..79]
 a59(r194): [78..79]
 a60(r127): [60..61]
 a61(r193): [62..63]
 a62(r192): [64..65]
 a63(r191): [66..67]
 a64(r190): [68..69]
 a65(r189): [70..71]
 a66(r188): [72..73]
 a67(r187): [74..75]
 a68(r126): [32..33]
 a69(r186): [32..33]
 a70(r124): [34..37]
 a71(r125): [34..35]
 a72(r123): [36..37]
 a73(r185): [36..37]
 a74(r122): [38..39]
 a75(r184): [40..41]
 a76(r121): [46..47]
 a77(r183): [46..47]
 a78(r120): [42..43]
 a79(r182): [44..45]
 a80(r181): [136..137]
 a81(r180): [138..139]
 a82(r179): [140..141]
 a83(r178): [142..143]
 a84(r119): [144..145]
 a85(r118): [146..147]
 a86(r117): [148..149]
 a87(r116): [154..155]
 a88(r115): [156..157]
 a89(r114): [150..151]
 a90(r113): [152..153]
 a91(r112): [228..229]
 a92(r111): [230..231]
 a93(r110): [158..159]
 a94(r109): [160..161]
 a95(r177): [204..205]
 a96(r176): [206..207]
 a97(r108): [208..209]
 a98(r107): [210..211]
 a99(r175): [212..213]
 a100(r174): [214..215]
 a101(r106): [216..217]
 a102(r105): [218..219]
 a103(r104): [220..221]
 a104(r103): [222..223]
 a105(r102): [224..225]
 a106(r101): [226..227]
 a107(r100): [162..163]
 a108(r99): [164..165]
 a109(r173): [170..171]
 a110(r172): [172..173]
 a111(r98): [166..167]
 a112(r97): [168..169]
 a113(r171): [174..175]
 a114(r170): [176..177]
 a115(r96): [178..179]
 a116(r95): [180..181]
 a117(r94): [182..183]
 a118(r93): [184..185]
 a119(r169): [186..187]
 a120(r168): [188..189]
 a121(r167): [190..191]
 a122(r166): [192..193]
 a123(r92): [194..195]
 a124(r91): [196..197]
 a125(r90): [198..199]
 a126(r89): [200..201]
 a127(r88): [202..203]
 a128(r86): [28..31]
 a129(r87): [28..29]
 a130(r85): [30..31]
 a131(r165): [30..31]
 a132(r84): [8..9]
 a133(r83): [10..11]
 a134(r164): [234..235]
  pref0:a26(r208)<-hr0@1500
  pref1:a31(r206)<-hr0@1500
  pref2:a36(r204)<-hr0@1500
  pref3:a41(r202)<-hr0@1500
  pref4:a65(r189)<-hr0@1500
  pref5:a99(r175)<-hr0@1500
  pref6:a113(r171)<-hr0@1500
  pref7:a0(r163)<-hr0@1500
  regions=1, blocks=74, points=236
    allocnos=135 (big 0), copies=0, conflicts=0, ranges=135
Disposition:
    6:r82  l0     3  133:r83  l0     0  132:r84  l0     0  130:r85  l0     1
  128:r86  l0     0  129:r87  l0     1  127:r88  l0     0  126:r89  l0     0
  125:r90  l0     0  124:r91  l0     0  123:r92  l0     0  118:r93  l0     0
  117:r94  l0     0  116:r95  l0     0  115:r96  l0     0  112:r97  l0     0
  111:r98  l0     0  108:r99  l0     0  107:r100 l0     0  106:r101 l0     0
  105:r102 l0     0  104:r103 l0     0  103:r104 l0     0  102:r105 l0     0
  101:r106 l0     0   98:r107 l0     0   97:r108 l0     0   94:r109 l0     0
   93:r110 l0     0   92:r111 l0     0   91:r112 l0     0   90:r113 l0     0
   89:r114 l0     0   88:r115 l0     0   87:r116 l0     0   86:r117 l0     0
   85:r118 l0     0   84:r119 l0     0   78:r120 l0     0   76:r121 l0     0
   74:r122 l0     0   72:r123 l0     2   70:r124 l0     0   71:r125 l0     1
   68:r126 l0     0   60:r127 l0     0   58:r128 l0     0   56:r129 l0     0
   53:r130 l0     1   51:r131 l0     0   52:r132 l0     1   48:r133 l0     0
   46:r134 l0     0   44:r135 l0     0   43:r136 l0     0   42:r137 l0     0
   39:r138 l0     0   38:r139 l0     0   37:r140 l0     0   34:r141 l0     0
   33:r142 l0     0   32:r143 l0     0   29:r144 l0     0   28:r145 l0     0
   27:r146 l0     0   22:r147 l0     1   20:r148 l0     0   19:r149 l0     0
   17:r150 l0     0   16:r151 l0     0   15:r152 l0     0   13:r153 l0     1
   11:r154 l0     0   12:r155 l0     1   10:r156 l0     0    9:r157 l0     0
    8:r158 l0     0    7:r159 l0     0    5:r160 l0     0    4:r161 l0     0
    1:r162 l0     0    0:r163 l0     0  134:r164 l0     0  131:r165 l0     2
  122:r166 l0     0  121:r167 l0     0  120:r168 l0     0  119:r169 l0     0
  114:r170 l0     0  113:r171 l0     0  110:r172 l0     0  109:r173 l0     0
  100:r174 l0     0   99:r175 l0     0   96:r176 l0     0   95:r177 l0     0
   83:r178 l0     0   82:r179 l0     0   81:r180 l0     0   80:r181 l0     0
   79:r182 l0     0   77:r183 l0     1   75:r184 l0     0   73:r185 l0     1
   69:r186 l0     1   67:r187 l0     0   66:r188 l0     0   65:r189 l0     0
   64:r190 l0     0   63:r191 l0     0   62:r192 l0     0   61:r193 l0     0
   59:r194 l0     1   57:r195 l0     1   55:r196 l0     0   54:r197 l0     2
   50:r198 l0     0   49:r199 l0     1   47:r200 l0     1   45:r201 l0     0
   41:r202 l0     0   40:r203 l0     0   36:r204 l0     0   35:r205 l0     0
   31:r206 l0     0   30:r207 l0     0   26:r208 l0     0   25:r209 l0     0
   24:r210 l0     0   23:r211 l0     0   21:r212 l0     0   18:r213 l0     1
   14:r214 l0     2    3:r215 l0     0    2:r216 l0     0
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


vsprintf

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,9u} r1={8d} r2={8d} r3={1d,1u} r6={1d,73u} r7={40d,131u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,132u,7e} r17={104d,28u} r18={7d} r19={1d,180u,4e} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r82={1d,5u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,2u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,2u} r122={1d,1u} r123={1d,1u} r124={1d,2u} r125={1d,1u} r126={1d,2u} r127={1d,1u} r128={1d,2u} r129={1d,2u} r130={1d,2u} r131={1d,2u} r132={1d,1u} r133={1d,2u} r134={1d,2u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,2u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,2u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,2u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,2u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} 
;;    total ref usage 1481{763d,707u,11e} in 336{329 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 564 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 564 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 564 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 164)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 buf+0 S4 A32])) "kernel/vsprintf.c":109:14 75 {*movsi_internal}
     (nil))
(insn 6 5 513 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])
        (reg/f:SI 164)) "kernel/vsprintf.c":109:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 164)
        (nil)))
(jump_insn 513 6 514 2 (set (pc)
        (label_ref 490)) "kernel/vsprintf.c":109:5 807 {jump}
     (nil)
 -> 490)
(barrier 514 513 494)
(code_label 494 514 9 3 90 (nil) [1 uses])
(note 9 494 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 83 [ fmt.18_1 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":110:13 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:QI 84 [ _2 ])
        (mem:QI (reg/f:SI 83 [ fmt.18_1 ]) [0 *fmt.18_1+0 S1 A8])) "kernel/vsprintf.c":110:13 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ fmt.18_1 ])
        (nil)))
(insn 12 11 13 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _2 ])
            (const_int 37 [0x25]))) "kernel/vsprintf.c":110:12 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 84 [ _2 ])
        (nil)))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "kernel/vsprintf.c":110:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 23)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:SI 85 [ fmt.19_3 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":111:22 75 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (reg/f:SI 86 [ str.20_4 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])) "kernel/vsprintf.c":111:17 75 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg:SI 165)
                (plus:SI (reg/f:SI 86 [ str.20_4 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":111:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 18 17 19 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])
        (reg:SI 165)) "kernel/vsprintf.c":111:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 165)
        (nil)))
(insn 19 18 20 4 (set (reg:QI 87 [ _5 ])
        (mem:QI (reg/f:SI 85 [ fmt.19_3 ]) [0 *fmt.19_3+0 S1 A8])) "kernel/vsprintf.c":111:22 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ fmt.19_3 ])
        (nil)))
(insn 20 19 515 4 (set (mem:QI (reg/f:SI 86 [ str.20_4 ]) [0 *str.20_4+0 S1 A8])
        (reg:QI 87 [ _5 ])) "kernel/vsprintf.c":111:20 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 87 [ _5 ])
        (expr_list:REG_DEAD (reg/f:SI 86 [ str.20_4 ])
            (nil))))
(jump_insn 515 20 516 4 (set (pc)
        (label_ref 485)) "kernel/vsprintf.c":112:13 807 {jump}
     (nil)
 -> 485)
(barrier 516 515 23)
(code_label 23 516 24 5 44 (nil) [1 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
        (const_int 0 [0])) "kernel/vsprintf.c":116:15 75 {*movsi_internal}
     (nil))
(code_label 26 25 27 6 46 ("repeat") [5 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg/f:SI 88 [ fmt.21_6 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":118:9 75 {*movsi_internal}
     (nil))
(insn 29 28 30 6 (parallel [
            (set (reg/f:SI 89 [ _7 ])
                (plus:SI (reg/f:SI 88 [ fmt.21_6 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":118:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 88 [ fmt.21_6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 30 29 31 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])
        (reg/f:SI 89 [ _7 ])) "kernel/vsprintf.c":118:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89 [ _7 ])
        (nil)))
(insn 31 30 32 6 (set (reg/f:SI 90 [ fmt.22_8 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":119:17 75 {*movsi_internal}
     (nil))
(insn 32 31 33 6 (set (reg:QI 91 [ _9 ])
        (mem:QI (reg/f:SI 90 [ fmt.22_8 ]) [0 *fmt.22_8+0 S1 A8])) "kernel/vsprintf.c":119:17 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90 [ fmt.22_8 ])
        (nil)))
(insn 33 32 34 6 (set (reg:SI 92 [ _10 ])
        (sign_extend:SI (reg:QI 91 [ _9 ]))) "kernel/vsprintf.c":119:17 153 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 91 [ _9 ])
        (nil)))
(insn 34 33 37 6 (parallel [
            (set (reg:SI 166)
                (plus:SI (reg:SI 92 [ _10 ])
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":119:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 34 38 6 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 166)
            (const_int 16 [0x10]))) "kernel/vsprintf.c":119:9 11 {*cmpsi_1}
     (nil))
(jump_insn 38 37 511 6 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) "kernel/vsprintf.c":119:9 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 71)
(note 511 38 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 511 40 7 (parallel [
            (set (reg:SI 167)
                (ashift:SI (reg:SI 166)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":119:9 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 40 39 41 7 (set (reg:SI 168)
        (mem/u/c:SI (plus:SI (plus:SI (reg:SI 167)
                    (reg:SI 82))
                (const:SI (unspec:SI [
                            (label_ref:SI 43)
                        ] UNSPEC_GOTOFF))) [0  S4 A8])) "kernel/vsprintf.c":119:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 167)
        (insn_list:REG_LABEL_OPERAND 43 (nil))))
(insn 41 40 42 7 (parallel [
            (set (reg:SI 169)
                (plus:SI (reg:SI 168)
                    (reg:SI 82)))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":119:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 42 41 43 7 (parallel [
            (set (pc)
                (reg:SI 169))
            (use (label_ref 43))
        ]) "kernel/vsprintf.c":119:9 810 {*tablejump_1}
     (expr_list:REG_DEAD (reg:SI 169)
        (nil))
 -> 43)
(code_label 43 42 44 49 (nil) [2 uses])
(jump_table_data 44 43 45 (addr_diff_vec:SI (label_ref:SI 43)
         [
            (label_ref:SI 56)
            (label_ref:SI 71)
            (label_ref:SI 71)
            (label_ref:SI 61)
            (label_ref:SI 71)
            (label_ref:SI 71)
            (label_ref:SI 71)
            (label_ref:SI 71)
            (label_ref:SI 71)
            (label_ref:SI 71)
            (label_ref:SI 71)
            (label_ref:SI 51)
            (label_ref:SI 71)
            (label_ref:SI 46)
            (label_ref:SI 71)
            (label_ref:SI 71)
            (label_ref:SI 66)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 45 44 46)
(code_label 46 45 47 8 50 (nil) [1 uses])
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 517 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":121:19 520 {*iorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 517 48 518 8 (set (pc)
        (label_ref 26)) "kernel/vsprintf.c":122:13 807 {jump}
     (nil)
 -> 26)
(barrier 518 517 51)
(code_label 51 518 52 9 51 (nil) [1 uses])
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 519 9 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":124:19 520 {*iorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 519 53 520 9 (set (pc)
        (label_ref 26)) "kernel/vsprintf.c":125:13 807 {jump}
     (nil)
 -> 26)
(barrier 520 519 56)
(code_label 56 520 57 10 53 (nil) [1 uses])
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 521 10 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":127:19 520 {*iorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 521 58 522 10 (set (pc)
        (label_ref 26)) "kernel/vsprintf.c":128:13 807 {jump}
     (nil)
 -> 26)
(barrier 522 521 61)
(code_label 61 522 62 11 52 (nil) [1 uses])
(note 62 61 63 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 523 11 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":130:19 520 {*iorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 523 63 524 11 (set (pc)
        (label_ref 26)) "kernel/vsprintf.c":131:13 807 {jump}
     (nil)
 -> 26)
(barrier 524 523 66)
(code_label 66 524 67 12 48 (nil) [1 uses])
(note 67 66 68 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 525 12 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":133:19 520 {*iorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 525 68 526 12 (set (pc)
        (label_ref 26)) "kernel/vsprintf.c":134:13 807 {jump}
     (nil)
 -> 26)
(barrier 526 525 71)
(code_label 71 526 72 13 47 (nil) [13 uses])
(note 72 71 73 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 13 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "kernel/vsprintf.c":137:21 75 {*movsi_internal}
     (nil))
(insn 74 73 75 13 (set (reg/f:SI 93 [ fmt.23_11 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":138:13 75 {*movsi_internal}
     (nil))
(insn 75 74 78 13 (set (reg:QI 94 [ _12 ])
        (mem:QI (reg/f:SI 93 [ fmt.23_11 ]) [0 *fmt.23_11+0 S1 A8])) "kernel/vsprintf.c":138:13 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93 [ fmt.23_11 ])
        (nil)))
(insn 78 75 79 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 94 [ _12 ])
            (const_int 47 [0x2f]))) "kernel/vsprintf.c":138:12 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 94 [ _12 ])
        (nil)))
(jump_insn 79 78 80 13 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "kernel/vsprintf.c":138:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 96)
(note 80 79 81 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 14 (set (reg/f:SI 95 [ fmt.24_13 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":138:13 75 {*movsi_internal}
     (nil))
(insn 82 81 85 14 (set (reg:QI 96 [ _14 ])
        (mem:QI (reg/f:SI 95 [ fmt.24_13 ]) [0 *fmt.24_13+0 S1 A8])) "kernel/vsprintf.c":138:13 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95 [ fmt.24_13 ])
        (nil)))
(insn 85 82 86 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 96 [ _14 ])
            (const_int 57 [0x39]))) "kernel/vsprintf.c":138:13 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 96 [ _14 ])
        (nil)))
(jump_insn 86 85 87 14 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "kernel/vsprintf.c":138:13 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 96)
(note 87 86 88 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 15 (parallel [
            (set (reg:SI 170)
                (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":139:27 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 89 88 90 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 170)) "kernel/vsprintf.c":139:27 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(call_insn 90 89 91 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("skip_atoi") [flags 0x3]  <function_decl 0x7d98a1cf4200 skip_atoi>) [0 skip_atoi S1 A8])
            (const_int 4 [0x4]))) "kernel/vsprintf.c":139:27 823 {*call_value}
     (nil)
    (nil))
(insn 91 90 92 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":139:27 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 92 91 93 15 (set (reg:SI 171)
        (reg:SI 0 ax)) "kernel/vsprintf.c":139:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 93 92 527 15 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])
        (reg:SI 171)) "kernel/vsprintf.c":139:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 171)
        (nil)))
(jump_insn 527 93 528 15 (set (pc)
        (label_ref 114)) "kernel/vsprintf.c":139:25 807 {jump}
     (nil)
 -> 114)
(barrier 528 527 96)
(code_label 96 528 97 16 54 (nil) [2 uses])
(note 97 96 98 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 16 (set (reg/f:SI 97 [ fmt.25_15 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":140:18 75 {*movsi_internal}
     (nil))
(insn 99 98 100 16 (set (reg:QI 98 [ _16 ])
        (mem:QI (reg/f:SI 97 [ fmt.25_15 ]) [0 *fmt.25_15+0 S1 A8])) "kernel/vsprintf.c":140:18 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97 [ fmt.25_15 ])
        (nil)))
(insn 100 99 101 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 98 [ _16 ])
            (const_int 42 [0x2a]))) "kernel/vsprintf.c":140:17 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 98 [ _16 ])
        (nil)))
(jump_insn 101 100 102 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) "kernel/vsprintf.c":140:17 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 114)
(note 102 101 103 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 17 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 8 [0x8])) [1 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [1 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":142:27 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 104 103 105 17 (set (reg/f:SI 172)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 args+0 S4 A32])) "kernel/vsprintf.c":142:25 75 {*movsi_internal}
     (nil))
(insn 105 104 106 17 (set (reg:SI 173)
        (mem:SI (plus:SI (reg/f:SI 172)
                (const_int -4 [0xfffffffffffffffc])) [2 MEM[(int *)args_146 + 4294967292B]+0 S4 A32])) "kernel/vsprintf.c":142:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 172)
        (nil)))
(insn 106 105 109 17 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])
        (reg:SI 173)) "kernel/vsprintf.c":142:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 173)
        (nil)))
(insn 109 106 110 17 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])
            (const_int 0 [0]))) "kernel/vsprintf.c":143:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 110 109 111 17 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) "kernel/vsprintf.c":143:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 114)
(note 111 110 112 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 18 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])
                (neg:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":144:29 575 {*negsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 113 112 114 18 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":145:23 520 {*iorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 114 113 115 19 55 (nil) [3 uses])
(note 115 114 116 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 19 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 precision+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "kernel/vsprintf.c":150:19 75 {*movsi_internal}
     (nil))
(insn 117 116 118 19 (set (reg/f:SI 99 [ fmt.26_17 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":151:13 75 {*movsi_internal}
     (nil))
(insn 118 117 119 19 (set (reg:QI 100 [ _18 ])
        (mem:QI (reg/f:SI 99 [ fmt.26_17 ]) [0 *fmt.26_17+0 S1 A8])) "kernel/vsprintf.c":151:13 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99 [ fmt.26_17 ])
        (nil)))
(insn 119 118 120 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 100 [ _18 ])
            (const_int 46 [0x2e]))) "kernel/vsprintf.c":151:12 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 100 [ _18 ])
        (nil)))
(jump_insn 120 119 121 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 166)
            (pc))) "kernel/vsprintf.c":151:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 166)
(note 121 120 122 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 20 (set (reg/f:SI 101 [ fmt.27_19 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":152:13 75 {*movsi_internal}
     (nil))
(insn 123 122 124 20 (parallel [
            (set (reg/f:SI 102 [ _20 ])
                (plus:SI (reg/f:SI 101 [ fmt.27_19 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":152:13 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 101 [ fmt.27_19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 124 123 125 20 (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])
        (reg/f:SI 102 [ _20 ])) "kernel/vsprintf.c":152:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102 [ _20 ])
        (nil)))
(insn 125 124 126 20 (set (reg/f:SI 103 [ fmt.28_21 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":153:17 75 {*movsi_internal}
     (nil))
(insn 126 125 129 20 (set (reg:QI 104 [ _22 ])
        (mem:QI (reg/f:SI 103 [ fmt.28_21 ]) [0 *fmt.28_21+0 S1 A8])) "kernel/vsprintf.c":153:17 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103 [ fmt.28_21 ])
        (nil)))
(insn 129 126 130 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 104 [ _22 ])
            (const_int 47 [0x2f]))) "kernel/vsprintf.c":153:16 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 104 [ _22 ])
        (nil)))
(jump_insn 130 129 131 20 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) "kernel/vsprintf.c":153:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 147)
(note 131 130 132 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 21 (set (reg/f:SI 105 [ fmt.29_23 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":153:17 75 {*movsi_internal}
     (nil))
(insn 133 132 136 21 (set (reg:QI 106 [ _24 ])
        (mem:QI (reg/f:SI 105 [ fmt.29_23 ]) [0 *fmt.29_23+0 S1 A8])) "kernel/vsprintf.c":153:17 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105 [ fmt.29_23 ])
        (nil)))
(insn 136 133 137 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 106 [ _24 ])
            (const_int 57 [0x39]))) "kernel/vsprintf.c":153:17 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 106 [ _24 ])
        (nil)))
(jump_insn 137 136 138 21 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) "kernel/vsprintf.c":153:17 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 147)
(note 138 137 139 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 22 (parallel [
            (set (reg:SI 174)
                (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":154:29 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 140 139 141 22 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 174)) "kernel/vsprintf.c":154:29 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 174)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(call_insn 141 140 142 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("skip_atoi") [flags 0x3]  <function_decl 0x7d98a1cf4200 skip_atoi>) [0 skip_atoi S1 A8])
            (const_int 4 [0x4]))) "kernel/vsprintf.c":154:29 823 {*call_value}
     (nil)
    (nil))
(insn 142 141 143 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":154:29 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 143 142 144 22 (set (reg:SI 175)
        (reg:SI 0 ax)) "kernel/vsprintf.c":154:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 144 143 529 22 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 precision+0 S4 A32])
        (reg:SI 175)) "kernel/vsprintf.c":154:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 175)
        (nil)))
(jump_insn 529 144 530 22 (set (pc)
        (label_ref 158)) "kernel/vsprintf.c":154:27 807 {jump}
     (nil)
 -> 158)
(barrier 530 529 147)
(code_label 147 530 148 23 57 (nil) [2 uses])
(note 148 147 149 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 23 (set (reg/f:SI 107 [ fmt.30_25 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":155:22 75 {*movsi_internal}
     (nil))
(insn 150 149 151 23 (set (reg:QI 108 [ _26 ])
        (mem:QI (reg/f:SI 107 [ fmt.30_25 ]) [0 *fmt.30_25+0 S1 A8])) "kernel/vsprintf.c":155:22 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107 [ fmt.30_25 ])
        (nil)))
(insn 151 150 152 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 108 [ _26 ])
            (const_int 42 [0x2a]))) "kernel/vsprintf.c":155:21 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 108 [ _26 ])
        (nil)))
(jump_insn 152 151 153 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 158)
            (pc))) "kernel/vsprintf.c":155:21 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 158)
(note 153 152 154 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 155 24 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 8 [0x8])) [1 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [1 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":157:29 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 155 154 156 24 (set (reg/f:SI 176)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 args+0 S4 A32])) "kernel/vsprintf.c":157:27 75 {*movsi_internal}
     (nil))
(insn 156 155 157 24 (set (reg:SI 177)
        (mem:SI (plus:SI (reg/f:SI 176)
                (const_int -4 [0xfffffffffffffffc])) [2 MEM[(int *)args_154 + 4294967292B]+0 S4 A32])) "kernel/vsprintf.c":157:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 176)
        (nil)))
(insn 157 156 158 24 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 precision+0 S4 A32])
        (reg:SI 177)) "kernel/vsprintf.c":157:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 177)
        (nil)))
(code_label 158 157 159 25 58 (nil) [2 uses])
(note 159 158 162 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 162 159 163 25 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 precision+0 S4 A32])
            (const_int 0 [0]))) "kernel/vsprintf.c":159:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 163 162 164 25 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 166)
            (pc))) "kernel/vsprintf.c":159:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 166)
(note 164 163 165 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 26 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 precision+0 S4 A32])
        (const_int 0 [0])) "kernel/vsprintf.c":160:27 75 {*movsi_internal}
     (nil))
(code_label 166 165 167 27 56 (nil) [2 uses])
(note 167 166 168 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 27 (set (reg/f:SI 109 [ fmt.31_27 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":163:13 75 {*movsi_internal}
     (nil))
(insn 169 168 170 27 (set (reg:QI 110 [ _28 ])
        (mem:QI (reg/f:SI 109 [ fmt.31_27 ]) [0 *fmt.31_27+0 S1 A8])) "kernel/vsprintf.c":163:13 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109 [ fmt.31_27 ])
        (nil)))
(insn 170 169 171 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 110 [ _28 ])
            (const_int 104 [0x68]))) "kernel/vsprintf.c":163:12 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 110 [ _28 ])
        (nil)))
(jump_insn 171 170 172 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) "kernel/vsprintf.c":163:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 182)
(note 172 171 173 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 28 (set (reg/f:SI 111 [ fmt.32_29 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":163:28 75 {*movsi_internal}
     (nil))
(insn 174 173 175 28 (set (reg:QI 112 [ _30 ])
        (mem:QI (reg/f:SI 111 [ fmt.32_29 ]) [0 *fmt.32_29+0 S1 A8])) "kernel/vsprintf.c":163:28 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111 [ fmt.32_29 ])
        (nil)))
(insn 175 174 176 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 112 [ _30 ])
            (const_int 108 [0x6c]))) "kernel/vsprintf.c":163:25 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 112 [ _30 ])
        (nil)))
(jump_insn 176 175 177 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) "kernel/vsprintf.c":163:25 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 182)
(note 177 176 178 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 178 177 179 29 (set (reg/f:SI 113 [ fmt.33_31 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":163:43 75 {*movsi_internal}
     (nil))
(insn 179 178 180 29 (set (reg:QI 114 [ _32 ])
        (mem:QI (reg/f:SI 113 [ fmt.33_31 ]) [0 *fmt.33_31+0 S1 A8])) "kernel/vsprintf.c":163:43 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113 [ fmt.33_31 ])
        (nil)))
(insn 180 179 181 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 114 [ _32 ])
            (const_int 76 [0x4c]))) "kernel/vsprintf.c":163:40 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 114 [ _32 ])
        (nil)))
(jump_insn 181 180 182 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) "kernel/vsprintf.c":163:40 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 187)
(code_label 182 181 183 30 59 (nil) [2 uses])
(note 183 182 184 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 30 (set (reg/f:SI 115 [ fmt.34_33 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":164:13 75 {*movsi_internal}
     (nil))
(insn 185 184 186 30 (parallel [
            (set (reg/f:SI 116 [ _34 ])
                (plus:SI (reg/f:SI 115 [ fmt.34_33 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":164:13 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 115 [ fmt.34_33 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 186 185 187 30 (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])
        (reg/f:SI 116 [ _34 ])) "kernel/vsprintf.c":164:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116 [ _34 ])
        (nil)))
(code_label 187 186 188 31 60 (nil) [1 uses])
(note 188 187 189 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 31 (set (reg/f:SI 117 [ fmt.35_35 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":166:17 75 {*movsi_internal}
     (nil))
(insn 190 189 191 31 (set (reg:QI 118 [ _36 ])
        (mem:QI (reg/f:SI 117 [ fmt.35_35 ]) [0 *fmt.35_35+0 S1 A8])) "kernel/vsprintf.c":166:17 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117 [ fmt.35_35 ])
        (nil)))
(insn 191 190 192 31 (set (reg:SI 119 [ _37 ])
        (sign_extend:SI (reg:QI 118 [ _36 ]))) "kernel/vsprintf.c":166:17 153 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 118 [ _36 ])
        (nil)))
(insn 192 191 195 31 (parallel [
            (set (reg:SI 178)
                (plus:SI (reg:SI 119 [ _37 ])
                    (const_int -88 [0xffffffffffffffa8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":166:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 119 [ _37 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 195 192 196 31 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 178)
            (const_int 32 [0x20]))) "kernel/vsprintf.c":166:9 11 {*cmpsi_1}
     (nil))
(jump_insn 196 195 512 31 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 452)
            (pc))) "kernel/vsprintf.c":166:9 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 452)
(note 512 196 197 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 197 512 198 32 (parallel [
            (set (reg:SI 179)
                (ashift:SI (reg:SI 178)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":166:9 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 198 197 199 32 (set (reg:SI 180)
        (mem/u/c:SI (plus:SI (plus:SI (reg:SI 179)
                    (reg:SI 82))
                (const:SI (unspec:SI [
                            (label_ref:SI 201)
                        ] UNSPEC_GOTOFF))) [0  S4 A8])) "kernel/vsprintf.c":166:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 179)
        (insn_list:REG_LABEL_OPERAND 201 (nil))))
(insn 199 198 200 32 (parallel [
            (set (reg:SI 181)
                (plus:SI (reg:SI 180)
                    (reg:SI 82)))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":166:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 200 199 201 32 (parallel [
            (set (pc)
                (reg:SI 181))
            (use (label_ref 201))
        ]) "kernel/vsprintf.c":166:9 810 {*tablejump_1}
     (expr_list:REG_DEAD (reg:SI 181)
        (nil))
 -> 201)
(code_label 201 200 202 63 (nil) [2 uses])
(jump_table_data 202 201 203 (addr_diff_vec:SI (label_ref:SI 201)
         [
            (label_ref:SI 397)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 204)
            (label_ref:SI 417)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 417)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 440)
            (label_ref:SI 347)
            (label_ref:SI 367)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 255)
            (label_ref:SI 452)
            (label_ref:SI 420)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 394)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 203 202 204)
(code_label 204 203 205 33 70 (nil) [1 uses])
(note 205 204 206 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 33 (set (reg:SI 182)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])) "kernel/vsprintf.c":168:25 75 {*movsi_internal}
     (nil))
(insn 207 206 208 33 (parallel [
            (set (reg:SI 120 [ _38 ])
                (and:SI (reg:SI 182)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":168:25 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 208 207 209 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ _38 ])
            (const_int 0 [0]))) "kernel/vsprintf.c":168:16 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 120 [ _38 ])
        (nil)))
(jump_insn 209 208 210 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) "kernel/vsprintf.c":168:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 226)
(note 210 209 531 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(jump_insn 531 210 532 34 (set (pc)
        (label_ref 218)) "kernel/vsprintf.c":169:23 807 {jump}
     (nil)
 -> 218)
(barrier 532 531 221)
(code_label 221 532 213 35 74 (nil) [1 uses])
(note 213 221 214 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 35 (set (reg/f:SI 121 [ str.36_39 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])) "kernel/vsprintf.c":170:25 75 {*movsi_internal}
     (nil))
(insn 215 214 216 35 (parallel [
            (set (reg:SI 183)
                (plus:SI (reg/f:SI 121 [ str.36_39 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":170:25 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 216 215 217 35 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])
        (reg:SI 183)) "kernel/vsprintf.c":170:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 183)
        (nil)))
(insn 217 216 218 35 (set (mem:QI (reg/f:SI 121 [ str.36_39 ]) [0 *str.36_39+0 S1 A8])
        (const_int 32 [0x20])) "kernel/vsprintf.c":170:28 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121 [ str.36_39 ])
        (nil)))
(code_label 218 217 219 36 73 (nil) [1 uses])
(note 219 218 220 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 224 36 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":169:38 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 224 220 225 36 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])
            (const_int 0 [0]))) "kernel/vsprintf.c":169:38 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 225 224 226 36 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 221)
            (pc))) "kernel/vsprintf.c":169:38 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 221)
(code_label 226 225 227 37 72 (nil) [1 uses])
(note 227 226 228 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 37 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 8 [0x8])) [1 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [1 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":171:41 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 229 228 230 37 (set (reg/f:SI 184)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 args+0 S4 A32])) "kernel/vsprintf.c":171:41 75 {*movsi_internal}
     (nil))
(insn 230 229 231 37 (parallel [
            (set (reg/f:SI 122 [ _40 ])
                (plus:SI (reg/f:SI 184)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":171:41 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 184)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [1 args+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc]))
                (nil)))))
(insn 231 230 232 37 (set (reg:SI 123 [ _41 ])
        (mem:SI (reg/f:SI 122 [ _40 ]) [2 MEM[(int *)_40]+0 S4 A32])) "kernel/vsprintf.c":171:41 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 122 [ _40 ])
        (nil)))
(insn 232 231 233 37 (set (reg/f:SI 124 [ str.37_42 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])) "kernel/vsprintf.c":171:21 75 {*movsi_internal}
     (nil))
(insn 233 232 234 37 (parallel [
            (set (reg:SI 185)
                (plus:SI (reg/f:SI 124 [ str.37_42 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":171:21 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 234 233 235 37 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])
        (reg:SI 185)) "kernel/vsprintf.c":171:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 185)
        (nil)))
(insn 235 234 236 37 (set (reg:QI 125 [ _43 ])
        (subreg:QI (reg:SI 123 [ _41 ]) 0)) "kernel/vsprintf.c":171:24 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 123 [ _41 ])
        (nil)))
(insn 236 235 533 37 (set (mem:QI (reg/f:SI 124 [ str.37_42 ]) [0 *str.37_42+0 S1 A8])
        (reg:QI 125 [ _43 ])) "kernel/vsprintf.c":171:24 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 125 [ _43 ])
        (expr_list:REG_DEAD (reg/f:SI 124 [ str.37_42 ])
            (nil))))
(jump_insn 533 236 534 37 (set (pc)
        (label_ref 244)) "kernel/vsprintf.c":172:23 807 {jump}
     (nil)
 -> 244)
(barrier 534 533 247)
(code_label 247 534 239 38 76 (nil) [1 uses])
(note 239 247 240 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 240 239 241 38 (set (reg/f:SI 126 [ str.38_44 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])) "kernel/vsprintf.c":173:25 75 {*movsi_internal}
     (nil))
(insn 241 240 242 38 (parallel [
            (set (reg:SI 186)
                (plus:SI (reg/f:SI 126 [ str.38_44 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":173:25 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 242 241 243 38 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])
        (reg:SI 186)) "kernel/vsprintf.c":173:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 186)
        (nil)))
(insn 243 242 244 38 (set (mem:QI (reg/f:SI 126 [ str.38_44 ]) [0 *str.38_44+0 S1 A8])
        (const_int 32 [0x20])) "kernel/vsprintf.c":173:28 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 126 [ str.38_44 ])
        (nil)))
(code_label 244 243 245 39 75 (nil) [1 uses])
(note 245 244 246 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 250 39 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":172:38 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 250 246 251 39 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])
            (const_int 0 [0]))) "kernel/vsprintf.c":172:38 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 251 250 535 39 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 247)
            (pc))) "kernel/vsprintf.c":172:38 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 247)
(note 535 251 536 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(jump_insn 536 535 537 40 (set (pc)
        (label_ref 485)) "kernel/vsprintf.c":174:17 807 {jump}
     (nil)
 -> 485)
(barrier 537 536 255)
(code_label 255 537 256 41 65 (nil) [1 uses])
(note 256 255 257 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 257 256 258 41 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 8 [0x8])) [1 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [1 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":177:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 258 257 259 41 (set (reg/f:SI 187)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 args+0 S4 A32])) "kernel/vsprintf.c":177:15 75 {*movsi_internal}
     (nil))
(insn 259 258 260 41 (set (reg/f:SI 188)
        (mem/f:SI (plus:SI (reg/f:SI 187)
                (const_int -4 [0xfffffffffffffffc])) [1 MEM[(char * *)args_159 + 4294967292B]+0 S4 A32])) "kernel/vsprintf.c":177:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 187)
        (nil)))
(insn 260 259 261 41 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 s+0 S4 A32])
        (reg/f:SI 188)) "kernel/vsprintf.c":177:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 188)
        (nil)))
(insn 261 260 262 41 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":178:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 262 261 263 41 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 s+0 S4 A32])) "kernel/vsprintf.c":178:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 263 262 264 41 (set (reg:SI 3 bx)
        (reg:SI 82)) "kernel/vsprintf.c":178:19 75 {*movsi_internal}
     (nil))
(call_insn 264 263 265 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strlen") [flags 0x41]  <function_decl 0x7d98a1cd2f00 strlen>) [0 strlen S1 A8])
            (const_int 16 [0x10]))) "kernel/vsprintf.c":178:19 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 265 264 266 41 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":178:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 266 265 267 41 (set (reg:SI 189)
        (reg:SI 0 ax)) "kernel/vsprintf.c":178:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 267 266 270 41 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 len+0 S4 A32])
        (reg:SI 189)) "kernel/vsprintf.c":178:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 189)
        (nil)))
(insn 270 267 271 41 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 precision+0 S4 A32])
            (const_int 0 [0]))) "kernel/vsprintf.c":179:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 271 270 272 41 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 277)
            (pc))) "kernel/vsprintf.c":179:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 277)
(note 272 271 273 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 274 42 (set (reg:SI 190)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 len+0 S4 A32])) "kernel/vsprintf.c":180:27 75 {*movsi_internal}
     (nil))
(insn 274 273 538 42 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 precision+0 S4 A32])
        (reg:SI 190)) "kernel/vsprintf.c":180:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 190)
        (nil)))
(jump_insn 538 274 539 42 (set (pc)
        (label_ref 285)) 807 {jump}
     (nil)
 -> 285)
(barrier 539 538 277)
(code_label 277 539 278 43 77 (nil) [1 uses])
(note 278 277 279 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 280 43 (set (reg:SI 191)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 len+0 S4 A32])) "kernel/vsprintf.c":181:21 75 {*movsi_internal}
     (nil))
(insn 280 279 281 43 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 191)
            (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 precision+0 S4 A32]))) "kernel/vsprintf.c":181:21 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 191)
        (nil)))
(jump_insn 281 280 282 43 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) "kernel/vsprintf.c":181:21 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 285)
(note 282 281 283 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 44 (set (reg:SI 192)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 precision+0 S4 A32])) "kernel/vsprintf.c":182:21 75 {*movsi_internal}
     (nil))
(insn 284 283 285 44 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 len+0 S4 A32])
        (reg:SI 192)) "kernel/vsprintf.c":182:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 192)
        (nil)))
(code_label 285 284 286 45 78 (nil) [2 uses])
(note 286 285 287 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 45 (set (reg:SI 193)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])) "kernel/vsprintf.c":184:25 75 {*movsi_internal}
     (nil))
(insn 288 287 289 45 (parallel [
            (set (reg:SI 127 [ _45 ])
                (and:SI (reg:SI 193)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":184:25 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 289 288 290 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 127 [ _45 ])
            (const_int 0 [0]))) "kernel/vsprintf.c":184:16 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 127 [ _45 ])
        (nil)))
(jump_insn 290 289 291 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 307)
            (pc))) "kernel/vsprintf.c":184:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 307)
(note 291 290 540 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(jump_insn 540 291 541 46 (set (pc)
        (label_ref 299)) "kernel/vsprintf.c":185:23 807 {jump}
     (nil)
 -> 299)
(barrier 541 540 304)
(code_label 304 541 294 47 81 (nil) [1 uses])
(note 294 304 295 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 47 (set (reg/f:SI 128 [ str.39_46 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])) "kernel/vsprintf.c":186:25 75 {*movsi_internal}
     (nil))
(insn 296 295 297 47 (parallel [
            (set (reg:SI 194)
                (plus:SI (reg/f:SI 128 [ str.39_46 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":186:25 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 297 296 298 47 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])
        (reg:SI 194)) "kernel/vsprintf.c":186:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 194)
        (nil)))
(insn 298 297 299 47 (set (mem:QI (reg/f:SI 128 [ str.39_46 ]) [0 *str.39_46+0 S1 A8])
        (const_int 32 [0x20])) "kernel/vsprintf.c":186:28 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 128 [ str.39_46 ])
        (nil)))
(code_label 299 298 300 48 80 (nil) [1 uses])
(note 300 299 301 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 301 300 302 48 (set (reg:SI 129 [ field_width.40_47 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])) "kernel/vsprintf.c":185:41 75 {*movsi_internal}
     (nil))
(insn 302 301 303 48 (parallel [
            (set (reg:SI 195)
                (plus:SI (reg:SI 129 [ field_width.40_47 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":185:41 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 303 302 305 48 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])
        (reg:SI 195)) "kernel/vsprintf.c":185:41 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 195)
        (nil)))
(insn 305 303 306 48 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [2 len+0 S4 A32])
            (reg:SI 129 [ field_width.40_47 ]))) "kernel/vsprintf.c":185:28 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 129 [ field_width.40_47 ])
        (nil)))
(jump_insn 306 305 307 48 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 304)
            (pc))) "kernel/vsprintf.c":185:28 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 304)
(code_label 307 306 308 49 79 (nil) [1 uses])
(note 308 307 309 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 542 49 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 i+0 S4 A32])
        (const_int 0 [0])) "kernel/vsprintf.c":187:24 75 {*movsi_internal}
     (nil))
(jump_insn 542 309 543 49 (set (pc)
        (label_ref 322)) "kernel/vsprintf.c":187:17 807 {jump}
     (nil)
 -> 322)
(barrier 543 542 324)
(code_label 324 543 312 50 83 (nil) [1 uses])
(note 312 324 313 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 313 312 314 50 (set (reg/f:SI 130 [ s.41_48 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 s+0 S4 A32])) "kernel/vsprintf.c":188:31 75 {*movsi_internal}
     (nil))
(insn 314 313 315 50 (parallel [
            (set (reg:SI 196)
                (plus:SI (reg/f:SI 130 [ s.41_48 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":188:31 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 315 314 316 50 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 s+0 S4 A32])
        (reg:SI 196)) "kernel/vsprintf.c":188:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 196)
        (nil)))
(insn 316 315 317 50 (set (reg/f:SI 131 [ str.42_49 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])) "kernel/vsprintf.c":188:24 75 {*movsi_internal}
     (nil))
(insn 317 316 318 50 (parallel [
            (set (reg:SI 197)
                (plus:SI (reg/f:SI 131 [ str.42_49 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":188:24 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 318 317 319 50 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])
        (reg:SI 197)) "kernel/vsprintf.c":188:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 197)
        (nil)))
(insn 319 318 320 50 (set (reg:QI 132 [ _50 ])
        (mem:QI (reg/f:SI 130 [ s.41_48 ]) [0 *s.41_48+0 S1 A8])) "kernel/vsprintf.c":188:29 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 130 [ s.41_48 ])
        (nil)))
(insn 320 319 321 50 (set (mem:QI (reg/f:SI 131 [ str.42_49 ]) [0 *str.42_49+0 S1 A8])
        (reg:QI 132 [ _50 ])) "kernel/vsprintf.c":188:27 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 132 [ _50 ])
        (expr_list:REG_DEAD (reg/f:SI 131 [ str.42_49 ])
            (nil))))
(insn 321 320 322 50 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":187:39 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 322 321 323 51 82 (nil) [1 uses])
(note 323 322 325 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 325 323 326 51 (set (reg:SI 198)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 i+0 S4 A32])) "kernel/vsprintf.c":187:31 75 {*movsi_internal}
     (nil))
(insn 326 325 327 51 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 198)
            (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [2 len+0 S4 A32]))) "kernel/vsprintf.c":187:31 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 198)
        (nil)))
(jump_insn 327 326 328 51 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 324)
            (pc))) "kernel/vsprintf.c":187:31 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 324)
(note 328 327 544 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(jump_insn 544 328 545 52 (set (pc)
        (label_ref 336)) "kernel/vsprintf.c":189:23 807 {jump}
     (nil)
 -> 336)
(barrier 545 544 341)
(code_label 341 545 331 53 85 (nil) [1 uses])
(note 331 341 332 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 332 331 333 53 (set (reg/f:SI 133 [ str.43_51 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])) "kernel/vsprintf.c":190:24 75 {*movsi_internal}
     (nil))
(insn 333 332 334 53 (parallel [
            (set (reg:SI 199)
                (plus:SI (reg/f:SI 133 [ str.43_51 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":190:24 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 334 333 335 53 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])
        (reg:SI 199)) "kernel/vsprintf.c":190:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 199)
        (nil)))
(insn 335 334 336 53 (set (mem:QI (reg/f:SI 133 [ str.43_51 ]) [0 *str.43_51+0 S1 A8])
        (const_int 32 [0x20])) "kernel/vsprintf.c":190:27 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 133 [ str.43_51 ])
        (nil)))
(code_label 336 335 337 54 84 (nil) [1 uses])
(note 337 336 338 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 54 (set (reg:SI 134 [ field_width.44_52 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])) "kernel/vsprintf.c":189:41 75 {*movsi_internal}
     (nil))
(insn 339 338 340 54 (parallel [
            (set (reg:SI 200)
                (plus:SI (reg:SI 134 [ field_width.44_52 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":189:41 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 340 339 342 54 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])
        (reg:SI 200)) "kernel/vsprintf.c":189:41 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 200)
        (nil)))
(insn 342 340 343 54 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [2 len+0 S4 A32])
            (reg:SI 134 [ field_width.44_52 ]))) "kernel/vsprintf.c":189:28 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 134 [ field_width.44_52 ])
        (nil)))
(jump_insn 343 342 546 54 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 341)
            (pc))) "kernel/vsprintf.c":189:28 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 341)
(note 546 343 547 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(jump_insn 547 546 548 55 (set (pc)
        (label_ref 485)) "kernel/vsprintf.c":191:17 807 {jump}
     (nil)
 -> 485)
(barrier 548 547 347)
(code_label 347 548 348 56 67 (nil) [1 uses])
(note 348 347 349 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 350 56 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 8 [0x8])) [1 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [1 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":194:31 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 350 349 351 56 (set (reg/f:SI 201)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 args+0 S4 A32])) "kernel/vsprintf.c":194:31 75 {*movsi_internal}
     (nil))
(insn 351 350 352 56 (parallel [
            (set (reg/f:SI 135 [ _53 ])
                (plus:SI (reg/f:SI 201)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":194:31 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 201)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [1 args+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc]))
                (nil)))))
(insn 352 351 353 56 (set (reg:SI 136 [ _54 ])
        (mem:SI (reg/f:SI 135 [ _53 ]) [3 MEM[(long unsigned int *)_53]+0 S4 A32])) "kernel/vsprintf.c":194:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 135 [ _53 ])
        (nil)))
(insn 353 352 354 56 (set (reg:SI 137 [ _55 ])
        (reg:SI 136 [ _54 ])) "kernel/vsprintf.c":194:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 136 [ _54 ])
        (nil)))
(insn 354 353 355 56 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":194:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 355 354 356 56 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])) "kernel/vsprintf.c":194:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 356 355 357 56 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 precision+0 S4 A32])) "kernel/vsprintf.c":194:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 357 356 358 56 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])) "kernel/vsprintf.c":194:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 358 357 359 56 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (const_int 8 [0x8])) "kernel/vsprintf.c":194:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 359 358 360 56 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 137 [ _55 ])) "kernel/vsprintf.c":194:19 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 137 [ _55 ])
        (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
            (nil))))
(insn 360 359 361 56 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])) "kernel/vsprintf.c":194:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 361 360 362 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("number") [flags 0x3]  <function_decl 0x7d98a1cf4400 number>) [0 number S1 A8])
            (const_int 32 [0x20]))) "kernel/vsprintf.c":194:19 823 {*call_value}
     (nil)
    (nil))
(insn 362 361 363 56 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":194:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 363 362 364 56 (set (reg:SI 202)
        (reg:SI 0 ax)) "kernel/vsprintf.c":194:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 364 363 549 56 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])
        (reg:SI 202)) "kernel/vsprintf.c":194:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 202)
        (nil)))
(jump_insn 549 364 550 56 (set (pc)
        (label_ref 485)) "kernel/vsprintf.c":196:13 807 {jump}
     (nil)
 -> 485)
(barrier 550 549 367)
(code_label 367 550 368 57 66 (nil) [1 uses])
(note 368 367 369 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 369 368 370 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) "kernel/vsprintf.c":199:16 11 {*cmpsi_1}
     (nil))
(jump_insn 370 369 371 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 374)
            (pc))) "kernel/vsprintf.c":199:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 374)
(note 371 370 372 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 372 371 373 58 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])
        (const_int 8 [0x8])) "kernel/vsprintf.c":200:29 75 {*movsi_internal}
     (nil))
(insn 373 372 374 58 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":201:23 520 {*iorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 374 373 375 59 86 (nil) [1 uses])
(note 375 374 376 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 376 375 377 59 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 8 [0x8])) [1 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [1 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":204:38 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 377 376 378 59 (set (reg/f:SI 203)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 args+0 S4 A32])) "kernel/vsprintf.c":204:38 75 {*movsi_internal}
     (nil))
(insn 378 377 379 59 (parallel [
            (set (reg/f:SI 138 [ _56 ])
                (plus:SI (reg/f:SI 203)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":204:38 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 203)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [1 args+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc]))
                (nil)))))
(insn 379 378 380 59 (set (reg/f:SI 139 [ _57 ])
        (mem/f:SI (reg/f:SI 138 [ _56 ]) [4 MEM[(void * *)_56]+0 S4 A32])) "kernel/vsprintf.c":204:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 138 [ _56 ])
        (nil)))
(insn 380 379 381 59 (set (reg:SI 140 [ _58 ])
        (reg/f:SI 139 [ _57 ])) "kernel/vsprintf.c":203:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 139 [ _57 ])
        (nil)))
(insn 381 380 382 59 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":203:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 382 381 383 59 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])) "kernel/vsprintf.c":203:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 383 382 384 59 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 precision+0 S4 A32])) "kernel/vsprintf.c":203:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 384 383 385 59 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])) "kernel/vsprintf.c":203:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 385 384 386 59 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (const_int 16 [0x10])) "kernel/vsprintf.c":203:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 386 385 387 59 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 140 [ _58 ])) "kernel/vsprintf.c":203:19 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 140 [ _58 ])
        (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
            (nil))))
(insn 387 386 388 59 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])) "kernel/vsprintf.c":203:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 388 387 389 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("number") [flags 0x3]  <function_decl 0x7d98a1cf4400 number>) [0 number S1 A8])
            (const_int 32 [0x20]))) "kernel/vsprintf.c":203:19 823 {*call_value}
     (nil)
    (nil))
(insn 389 388 390 59 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":203:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 390 389 391 59 (set (reg:SI 204)
        (reg:SI 0 ax)) "kernel/vsprintf.c":203:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 391 390 551 59 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])
        (reg:SI 204)) "kernel/vsprintf.c":203:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 204)
        (nil)))
(jump_insn 551 391 552 59 (set (pc)
        (label_ref 485)) "kernel/vsprintf.c":206:13 807 {jump}
     (nil)
 -> 485)
(barrier 552 551 394)
(code_label 394 552 395 60 62 (nil) [1 uses])
(note 395 394 396 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 396 395 397 60 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":209:19 520 {*iorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 397 396 398 61 71 (nil) [1 uses])
(note 398 397 399 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 399 398 400 61 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 8 [0x8])) [1 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [1 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":211:31 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 400 399 401 61 (set (reg/f:SI 205)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 args+0 S4 A32])) "kernel/vsprintf.c":211:31 75 {*movsi_internal}
     (nil))
(insn 401 400 402 61 (parallel [
            (set (reg/f:SI 141 [ _59 ])
                (plus:SI (reg/f:SI 205)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":211:31 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 205)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [1 args+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc]))
                (nil)))))
(insn 402 401 403 61 (set (reg:SI 142 [ _60 ])
        (mem:SI (reg/f:SI 141 [ _59 ]) [3 MEM[(long unsigned int *)_59]+0 S4 A32])) "kernel/vsprintf.c":211:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 141 [ _59 ])
        (nil)))
(insn 403 402 404 61 (set (reg:SI 143 [ _61 ])
        (reg:SI 142 [ _60 ])) "kernel/vsprintf.c":211:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 142 [ _60 ])
        (nil)))
(insn 404 403 405 61 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":211:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 405 404 406 61 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])) "kernel/vsprintf.c":211:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 406 405 407 61 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 precision+0 S4 A32])) "kernel/vsprintf.c":211:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 407 406 408 61 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])) "kernel/vsprintf.c":211:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 408 407 409 61 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (const_int 16 [0x10])) "kernel/vsprintf.c":211:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 409 408 410 61 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 143 [ _61 ])) "kernel/vsprintf.c":211:19 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 143 [ _61 ])
        (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
            (nil))))
(insn 410 409 411 61 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])) "kernel/vsprintf.c":211:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 411 410 412 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("number") [flags 0x3]  <function_decl 0x7d98a1cf4400 number>) [0 number S1 A8])
            (const_int 32 [0x20]))) "kernel/vsprintf.c":211:19 823 {*call_value}
     (nil)
    (nil))
(insn 412 411 413 61 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":211:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 413 412 414 61 (set (reg:SI 206)
        (reg:SI 0 ax)) "kernel/vsprintf.c":211:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 414 413 553 61 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])
        (reg:SI 206)) "kernel/vsprintf.c":211:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 206)
        (nil)))
(jump_insn 553 414 554 61 (set (pc)
        (label_ref 485)) "kernel/vsprintf.c":213:13 807 {jump}
     (nil)
 -> 485)
(barrier 554 553 417)
(code_label 417 554 418 62 69 (nil) [2 uses])
(note 418 417 419 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 419 418 420 62 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":217:19 520 {*iorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 420 419 421 63 64 (nil) [1 uses])
(note 421 420 422 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 422 421 423 63 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 8 [0x8])) [1 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [1 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":219:31 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 423 422 424 63 (set (reg/f:SI 207)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 args+0 S4 A32])) "kernel/vsprintf.c":219:31 75 {*movsi_internal}
     (nil))
(insn 424 423 425 63 (parallel [
            (set (reg/f:SI 144 [ _62 ])
                (plus:SI (reg/f:SI 207)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":219:31 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 207)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [1 args+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc]))
                (nil)))))
(insn 425 424 426 63 (set (reg:SI 145 [ _63 ])
        (mem:SI (reg/f:SI 144 [ _62 ]) [3 MEM[(long unsigned int *)_62]+0 S4 A32])) "kernel/vsprintf.c":219:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 144 [ _62 ])
        (nil)))
(insn 426 425 427 63 (set (reg:SI 146 [ _64 ])
        (reg:SI 145 [ _63 ])) "kernel/vsprintf.c":219:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 145 [ _63 ])
        (nil)))
(insn 427 426 428 63 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":219:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 428 427 429 63 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])) "kernel/vsprintf.c":219:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 429 428 430 63 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 precision+0 S4 A32])) "kernel/vsprintf.c":219:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 430 429 431 63 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 field_width+0 S4 A32])) "kernel/vsprintf.c":219:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 431 430 432 63 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (const_int 10 [0xa])) "kernel/vsprintf.c":219:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 432 431 433 63 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 146 [ _64 ])) "kernel/vsprintf.c":219:19 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 146 [ _64 ])
        (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
            (nil))))
(insn 433 432 434 63 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])) "kernel/vsprintf.c":219:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 434 433 435 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("number") [flags 0x3]  <function_decl 0x7d98a1cf4400 number>) [0 number S1 A8])
            (const_int 32 [0x20]))) "kernel/vsprintf.c":219:19 823 {*call_value}
     (nil)
    (nil))
(insn 435 434 436 63 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":219:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 436 435 437 63 (set (reg:SI 208)
        (reg:SI 0 ax)) "kernel/vsprintf.c":219:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 437 436 555 63 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])
        (reg:SI 208)) "kernel/vsprintf.c":219:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 208)
        (nil)))
(jump_insn 555 437 556 63 (set (pc)
        (label_ref 485)) "kernel/vsprintf.c":221:13 807 {jump}
     (nil)
 -> 485)
(barrier 556 555 440)
(code_label 440 556 441 64 68 (nil) [1 uses])
(note 441 440 442 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 442 441 443 64 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 8 [0x8])) [1 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [1 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":224:18 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 443 442 444 64 (set (reg/f:SI 209)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 args+0 S4 A32])) "kernel/vsprintf.c":224:16 75 {*movsi_internal}
     (nil))
(insn 444 443 445 64 (set (reg/f:SI 210)
        (mem/f:SI (plus:SI (reg/f:SI 209)
                (const_int -4 [0xfffffffffffffffc])) [5 MEM[(int * *)args_184 + 4294967292B]+0 S4 A32])) "kernel/vsprintf.c":224:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 209)
        (nil)))
(insn 445 444 446 64 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [5 ip+0 S4 A32])
        (reg/f:SI 210)) "kernel/vsprintf.c":224:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 210)
        (nil)))
(insn 446 445 447 64 (set (reg/f:SI 211)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])) "kernel/vsprintf.c":225:24 75 {*movsi_internal}
     (nil))
(insn 447 446 448 64 (parallel [
            (set (reg:SI 147 [ _65 ])
                (minus:SI (reg/f:SI 211)
                    (mem/f/c:SI (reg/f:SI 16 argp) [1 buf+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":225:24 282 {*subsi_1}
     (expr_list:REG_DEAD (reg/f:SI 211)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])
                    (mem/f/c:SI (reg/f:SI 16 argp) [1 buf+0 S4 A32]))
                (nil)))))
(insn 448 447 449 64 (set (reg/f:SI 212)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [5 ip+0 S4 A32])) "kernel/vsprintf.c":225:17 75 {*movsi_internal}
     (nil))
(insn 449 448 557 64 (set (mem:SI (reg/f:SI 212) [2 *ip_185+0 S4 A32])
        (reg:SI 147 [ _65 ])) "kernel/vsprintf.c":225:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 212)
        (expr_list:REG_DEAD (reg:SI 147 [ _65 ])
            (nil))))
(jump_insn 557 449 558 64 (set (pc)
        (label_ref 485)) "kernel/vsprintf.c":226:13 807 {jump}
     (nil)
 -> 485)
(barrier 558 557 452)
(code_label 452 558 453 65 61 (nil) [24 uses])
(note 453 452 454 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 454 453 455 65 (set (reg/f:SI 148 [ fmt.45_66 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":229:17 75 {*movsi_internal}
     (nil))
(insn 455 454 456 65 (set (reg:QI 149 [ _67 ])
        (mem:QI (reg/f:SI 148 [ fmt.45_66 ]) [0 *fmt.45_66+0 S1 A8])) "kernel/vsprintf.c":229:17 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 148 [ fmt.45_66 ])
        (nil)))
(insn 456 455 457 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 149 [ _67 ])
            (const_int 37 [0x25]))) "kernel/vsprintf.c":229:16 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 149 [ _67 ])
        (nil)))
(jump_insn 457 456 458 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 463)
            (pc))) "kernel/vsprintf.c":229:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 463)
(note 458 457 459 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 459 458 460 66 (set (reg/f:SI 150 [ str.46_68 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])) "kernel/vsprintf.c":230:21 75 {*movsi_internal}
     (nil))
(insn 460 459 461 66 (parallel [
            (set (reg:SI 213)
                (plus:SI (reg/f:SI 150 [ str.46_68 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":230:21 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 461 460 462 66 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])
        (reg:SI 213)) "kernel/vsprintf.c":230:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 213)
        (nil)))
(insn 462 461 463 66 (set (mem:QI (reg/f:SI 150 [ str.46_68 ]) [0 *str.46_68+0 S1 A8])
        (const_int 37 [0x25])) "kernel/vsprintf.c":230:24 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 150 [ str.46_68 ])
        (nil)))
(code_label 463 462 464 67 87 (nil) [1 uses])
(note 464 463 465 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 465 464 466 67 (set (reg/f:SI 151 [ fmt.47_69 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":231:17 75 {*movsi_internal}
     (nil))
(insn 466 465 467 67 (set (reg:QI 152 [ _70 ])
        (mem:QI (reg/f:SI 151 [ fmt.47_69 ]) [0 *fmt.47_69+0 S1 A8])) "kernel/vsprintf.c":231:17 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 151 [ fmt.47_69 ])
        (nil)))
(insn 467 466 468 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 152 [ _70 ])
            (const_int 0 [0]))) "kernel/vsprintf.c":231:16 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 152 [ _70 ])
        (nil)))
(jump_insn 468 467 469 67 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 478)
            (pc))) "kernel/vsprintf.c":231:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 478)
(note 469 468 470 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 470 469 471 68 (set (reg/f:SI 153 [ fmt.48_71 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":232:26 75 {*movsi_internal}
     (nil))
(insn 471 470 472 68 (set (reg/f:SI 154 [ str.49_72 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])) "kernel/vsprintf.c":232:21 75 {*movsi_internal}
     (nil))
(insn 472 471 473 68 (parallel [
            (set (reg:SI 214)
                (plus:SI (reg/f:SI 154 [ str.49_72 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":232:21 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 473 472 474 68 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])
        (reg:SI 214)) "kernel/vsprintf.c":232:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 214)
        (nil)))
(insn 474 473 475 68 (set (reg:QI 155 [ _73 ])
        (mem:QI (reg/f:SI 153 [ fmt.48_71 ]) [0 *fmt.48_71+0 S1 A8])) "kernel/vsprintf.c":232:26 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 153 [ fmt.48_71 ])
        (nil)))
(insn 475 474 559 68 (set (mem:QI (reg/f:SI 154 [ str.49_72 ]) [0 *str.49_72+0 S1 A8])
        (reg:QI 155 [ _73 ])) "kernel/vsprintf.c":232:24 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 155 [ _73 ])
        (expr_list:REG_DEAD (reg/f:SI 154 [ str.49_72 ])
            (nil))))
(jump_insn 559 475 560 68 (set (pc)
        (label_ref:SI 563)) "kernel/vsprintf.c":235:13 807 {jump}
     (nil)
 -> 563)
(barrier 560 559 478)
(code_label 478 560 479 69 88 (nil) [1 uses])
(note 479 478 480 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 480 479 481 69 (set (reg/f:SI 156 [ fmt.50_74 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":234:17 75 {*movsi_internal}
     (nil))
(insn 481 480 482 69 (parallel [
            (set (reg/f:SI 157 [ _75 ])
                (plus:SI (reg/f:SI 156 [ fmt.50_74 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":234:17 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 156 [ fmt.50_74 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 482 481 563 69 (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])
        (reg/f:SI 157 [ _75 ])) "kernel/vsprintf.c":234:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 157 [ _75 ])
        (nil)))
(code_label 563 482 561 73 92 (nil) [1 uses])
(note 561 563 562 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 562 561 485 73 (const_int 0 [0]) "kernel/vsprintf.c":235:13 843 {nop}
     (nil))
(code_label 485 562 486 70 45 (nil) [8 uses])
(note 486 485 487 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 487 486 488 70 (set (reg/f:SI 158 [ fmt.51_76 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":109:27 75 {*movsi_internal}
     (nil))
(insn 488 487 489 70 (parallel [
            (set (reg/f:SI 159 [ _77 ])
                (plus:SI (reg/f:SI 158 [ fmt.51_76 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":109:27 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 158 [ fmt.51_76 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 489 488 490 70 (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])
        (reg/f:SI 159 [ _77 ])) "kernel/vsprintf.c":109:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 159 [ _77 ])
        (nil)))
(code_label 490 489 491 71 43 (nil) [1 uses])
(note 491 490 492 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 71 (set (reg/f:SI 160 [ fmt.52_78 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":109:21 75 {*movsi_internal}
     (nil))
(insn 493 492 495 71 (set (reg:QI 161 [ _79 ])
        (mem:QI (reg/f:SI 160 [ fmt.52_78 ]) [0 *fmt.52_78+0 S1 A8])) "kernel/vsprintf.c":109:21 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 160 [ fmt.52_78 ])
        (nil)))
(insn 495 493 496 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 161 [ _79 ])
            (const_int 0 [0]))) "kernel/vsprintf.c":109:21 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 161 [ _79 ])
        (nil)))
(jump_insn 496 495 497 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 494)
            (pc))) "kernel/vsprintf.c":109:21 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 494)
(note 497 496 498 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 498 497 499 72 (set (reg/f:SI 215)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])) "kernel/vsprintf.c":238:10 75 {*movsi_internal}
     (nil))
(insn 499 498 500 72 (set (mem:QI (reg/f:SI 215) [0 *str_97+0 S1 A8])
        (const_int 0 [0])) "kernel/vsprintf.c":238:10 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 215)
        (nil)))
(insn 500 499 501 72 (set (reg/f:SI 216)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])) "kernel/vsprintf.c":239:16 75 {*movsi_internal}
     (nil))
(insn 501 500 504 72 (parallel [
            (set (reg:SI 162 [ _135 ])
                (minus:SI (reg/f:SI 216)
                    (mem/f/c:SI (reg/f:SI 16 argp) [1 buf+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":239:16 282 {*subsi_1}
     (expr_list:REG_DEAD (reg/f:SI 216)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])
                    (mem/f/c:SI (reg/f:SI 16 argp) [1 buf+0 S4 A32]))
                (nil)))))
(insn 504 501 508 72 (set (reg:SI 163 [ <retval> ])
        (reg:SI 162 [ _135 ])) "kernel/vsprintf.c":239:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 162 [ _135 ])
        (nil)))
(insn 508 504 509 72 (set (reg/i:SI 0 ax)
        (reg:SI 163 [ <retval> ])) "kernel/vsprintf.c":240:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 163 [ <retval> ])
        (nil)))
(insn 509 508 0 72 (use (reg/i:SI 0 ax)) "kernel/vsprintf.c":240:1 -1
     (nil))
