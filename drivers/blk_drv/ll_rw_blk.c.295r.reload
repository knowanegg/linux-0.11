
;; Function IN_ORDER (IN_ORDER, funcdef_no=1, decl_uid=1347, cgraph_uid=2, symbol_order=1)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5 6 7
EBB 8
EBB 9
EBB 10

********** Pseudo live ranges #1: **********

  BB 10
   Insn 62: point = 0, n_alt = -1
   Insn 61: point = 0, n_alt = -2
   Insn 57: point = 1, n_alt = -2
  BB 8
   Insn 64: point = 4, n_alt = -1
   Insn 49: point = 4, n_alt = 0
  BB 9
   Insn 54: point = 5, n_alt = 0
  BB 7
   Insn 46: point = 6, n_alt = -1
   Insn 45: point = 6, n_alt = 0
   Insn 44: point = 7, n_alt = 0
   Insn 43: point = 9, n_alt = 0
   Insn 42: point = 10, n_alt = 0
   Insn 41: point = 12, n_alt = 0
  BB 6
   Insn 39: point = 13, n_alt = -1
   Insn 38: point = 13, n_alt = 0
   Insn 37: point = 14, n_alt = 0
   Insn 36: point = 16, n_alt = 0
   Insn 35: point = 17, n_alt = 0
   Insn 34: point = 19, n_alt = 0
  BB 5
   Insn 32: point = 20, n_alt = -1
   Insn 31: point = 20, n_alt = 0
   Insn 30: point = 21, n_alt = 0
   Insn 29: point = 23, n_alt = 0
   Insn 28: point = 24, n_alt = 0
   Insn 27: point = 26, n_alt = 0
  BB 4
   Insn 24: point = 27, n_alt = -1
   Insn 23: point = 27, n_alt = 0
   Insn 22: point = 28, n_alt = 0
   Insn 21: point = 30, n_alt = 0
   Insn 20: point = 31, n_alt = 0
   Insn 19: point = 33, n_alt = 0
  BB 3
   Insn 17: point = 34, n_alt = -1
   Insn 16: point = 34, n_alt = 0
   Insn 15: point = 35, n_alt = 0
   Insn 14: point = 37, n_alt = 0
   Insn 13: point = 38, n_alt = 0
   Insn 12: point = 40, n_alt = 0
  BB 2
   Insn 10: point = 41, n_alt = -1
   Insn 9: point = 41, n_alt = 0
   Insn 8: point = 42, n_alt = 0
   Insn 7: point = 44, n_alt = 0
   Insn 6: point = 45, n_alt = 0
   Insn 5: point = 47, n_alt = 0
   Insn 66: point = 48, n_alt = 0
 r82: [48..48]
 r83: [41..45]
 r84: [41..42]
 r85: [34..38]
 r86: [34..35]
 r87: [27..31]
 r88: [27..28]
 r89: [20..24]
 r90: [20..21]
 r91: [13..17]
 r92: [13..14]
 r93: [6..10]
 r94: [6..7]
 r95: [2..5]
 r96: [0..1]
 r97: [46..47]
 r98: [43..44]
 r99: [39..40]
 r100: [36..37]
 r101: [32..33]
 r102: [29..30]
 r103: [25..26]
 r104: [22..23]
 r105: [18..19]
 r106: [15..16]
 r107: [11..12]
 r108: [8..9]
Compressing live ranges: from 49 to 41 - 83%
Ranges after the compression:
 r82: [40..40]
 r83: [34..37]
 r84: [34..35]
 r85: [28..31]
 r86: [28..29]
 r87: [22..25]
 r88: [22..23]
 r89: [16..19]
 r90: [16..17]
 r91: [10..13]
 r92: [10..11]
 r93: [4..7]
 r94: [4..5]
 r95: [2..3]
 r96: [0..1]
 r97: [38..39]
 r98: [36..37]
 r99: [32..33]
 r100: [30..31]
 r101: [26..27]
 r102: [24..25]
 r103: [20..21]
 r104: [18..19]
 r105: [14..15]
 r106: [12..13]
 r107: [8..9]
 r108: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 66
changing reg in insn 6
changing reg in insn 9
changing reg in insn 8
changing reg in insn 9
changing reg in insn 13
changing reg in insn 16
changing reg in insn 15
changing reg in insn 16
changing reg in insn 20
changing reg in insn 23
changing reg in insn 22
changing reg in insn 23
changing reg in insn 28
changing reg in insn 31
changing reg in insn 30
changing reg in insn 31
changing reg in insn 35
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 42
changing reg in insn 45
changing reg in insn 44
changing reg in insn 45
changing reg in insn 54
changing reg in insn 49
changing reg in insn 57
changing reg in insn 57
changing reg in insn 61
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
deleting insn with uid = 57.
deleting insn with uid = 61.
starting the processing of deferred insns
ending the processing of deferred insns


IN_ORDER

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 17 [flags]
;;  ref usage 	r0={22d,20u} r1={7d,6u} r2={1d} r7={1d,22u} r17={7d,6u} 
;;    total ref usage 92{38d,54u,0e} in 41{41 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 66 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 66 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 66 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [97])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [7 s1+0 S4 A32])) "include/linux/blk.h":48:8 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 1 dx [orig:83 _1 ] [83])
        (mem:SI (plus:SI (reg/f:SI 0 ax [97])
                (const_int 4 [0x4])) [2 s1_15(D)->cmd+0 S4 A32])) "include/linux/blk.h":48:8 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 0 ax [98])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [7 s2+0 S4 A32])) "include/linux/blk.h":48:18 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (mem:SI (plus:SI (reg/f:SI 0 ax [98])
                (const_int 4 [0x4])) [2 s2_16(D)->cmd+0 S4 A32])) "include/linux/blk.h":48:18 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:83 _1 ] [83])
            (reg:SI 0 ax [orig:84 _2 ] [84]))) "include/linux/blk.h":48:5 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "include/linux/blk.h":48:5 806 {*jcc}
     (nil)
 -> 47)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg/f:SI 0 ax [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [7 s1+0 S4 A32])) "include/linux/blk.h":48:30 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:SI 1 dx [orig:85 _3 ] [85])
        (mem:SI (plus:SI (reg/f:SI 0 ax [99])
                (const_int 4 [0x4])) [2 s1_15(D)->cmd+0 S4 A32])) "include/linux/blk.h":48:30 75 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg/f:SI 0 ax [100])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [7 s2+0 S4 A32])) "include/linux/blk.h":48:41 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:SI 0 ax [orig:86 _4 ] [86])
        (mem:SI (plus:SI (reg/f:SI 0 ax [100])
                (const_int 4 [0x4])) [2 s2_16(D)->cmd+0 S4 A32])) "include/linux/blk.h":48:41 75 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:85 _3 ] [85])
            (reg:SI 0 ax [orig:86 _4 ] [86]))) "include/linux/blk.h":48:24 11 {*cmpsi_1}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "include/linux/blk.h":48:24 806 {*jcc}
     (nil)
 -> 25)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:SI 0 ax [101])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [7 s1+0 S4 A32])) "include/linux/blk.h":48:52 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:SI 1 dx [orig:87 _5 ] [87])
        (mem:SI (reg/f:SI 0 ax [101]) [2 s1_15(D)->dev+0 S4 A32])) "include/linux/blk.h":48:52 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg/f:SI 0 ax [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [7 s2+0 S4 A32])) "include/linux/blk.h":48:62 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:SI 0 ax [orig:88 _6 ] [88])
        (mem:SI (reg/f:SI 0 ax [102]) [2 s2_16(D)->dev+0 S4 A32])) "include/linux/blk.h":48:62 75 {*movsi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:87 _5 ] [87])
            (reg:SI 0 ax [orig:88 _6 ] [88]))) "include/linux/blk.h":48:47 11 {*cmpsi_1}
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "include/linux/blk.h":48:47 806 {*jcc}
     (nil)
 -> 47)
(code_label 25 24 26 5 3 (nil) [1 uses])
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg/f:SI 0 ax [103])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [7 s1+0 S4 A32])) "include/linux/blk.h":49:9 75 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (set (reg:SI 1 dx [orig:89 _7 ] [89])
        (mem:SI (plus:SI (reg/f:SI 0 ax [103])
                (const_int 4 [0x4])) [2 s1_15(D)->cmd+0 S4 A32])) "include/linux/blk.h":49:9 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg/f:SI 0 ax [104])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [7 s2+0 S4 A32])) "include/linux/blk.h":49:20 75 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:SI 0 ax [orig:90 _8 ] [90])
        (mem:SI (plus:SI (reg/f:SI 0 ax [104])
                (const_int 4 [0x4])) [2 s2_16(D)->cmd+0 S4 A32])) "include/linux/blk.h":49:20 75 {*movsi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:89 _7 ] [89])
            (reg:SI 0 ax [orig:90 _8 ] [90]))) "include/linux/blk.h":49:3 11 {*cmpsi_1}
     (nil))
(jump_insn 32 31 33 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) "include/linux/blk.h":49:3 806 {*jcc}
     (nil)
 -> 52)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg/f:SI 0 ax [105])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [7 s1+0 S4 A32])) "include/linux/blk.h":49:31 75 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (set (reg:SI 1 dx [orig:91 _9 ] [91])
        (mem:SI (reg/f:SI 0 ax [105]) [2 s1_15(D)->dev+0 S4 A32])) "include/linux/blk.h":49:31 75 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg/f:SI 0 ax [106])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [7 s2+0 S4 A32])) "include/linux/blk.h":49:42 75 {*movsi_internal}
     (nil))
(insn 37 36 38 6 (set (reg:SI 0 ax [orig:92 _10 ] [92])
        (mem:SI (reg/f:SI 0 ax [106]) [2 s2_16(D)->dev+0 S4 A32])) "include/linux/blk.h":49:42 75 {*movsi_internal}
     (nil))
(insn 38 37 39 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:91 _9 ] [91])
            (reg:SI 0 ax [orig:92 _10 ] [92]))) "include/linux/blk.h":49:26 11 {*cmpsi_1}
     (nil))
(jump_insn 39 38 40 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) "include/linux/blk.h":49:26 806 {*jcc}
     (nil)
 -> 52)
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg/f:SI 0 ax [107])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [7 s1+0 S4 A32])) "include/linux/blk.h":50:9 75 {*movsi_internal}
     (nil))
(insn 42 41 43 7 (set (reg:SI 1 dx [orig:93 _11 ] [93])
        (mem:SI (plus:SI (reg/f:SI 0 ax [107])
                (const_int 12 [0xc])) [3 s1_15(D)->sector+0 S4 A32])) "include/linux/blk.h":50:9 75 {*movsi_internal}
     (nil))
(insn 43 42 44 7 (set (reg/f:SI 0 ax [108])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [7 s2+0 S4 A32])) "include/linux/blk.h":50:22 75 {*movsi_internal}
     (nil))
(insn 44 43 45 7 (set (reg:SI 0 ax [orig:94 _12 ] [94])
        (mem:SI (plus:SI (reg/f:SI 0 ax [108])
                (const_int 12 [0xc])) [3 s2_16(D)->sector+0 S4 A32])) "include/linux/blk.h":50:22 75 {*movsi_internal}
     (nil))
(insn 45 44 46 7 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:93 _11 ] [93])
            (reg:SI 0 ax [orig:94 _12 ] [94]))) "include/linux/blk.h":50:4 11 {*cmpsi_1}
     (nil))
(jump_insn 46 45 47 7 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) "include/linux/blk.h":50:4 806 {*jcc}
     (nil)
 -> 52)
(code_label 47 46 48 8 2 (nil) [2 uses])
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 64 8 (set (reg:SI 0 ax [orig:95 _13 ] [95])
        (const_int 1 [0x1])) "include/linux/blk.h":51:10 75 {*movsi_internal}
     (nil))
(jump_insn 64 49 65 8 (set (pc)
        (label_ref 55)) "include/linux/blk.h":51:10 807 {jump}
     (nil)
 -> 55)
(barrier 65 64 52)
(code_label 52 65 53 9 4 (nil) [3 uses])
(note 53 52 54 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 9 (set (reg:SI 0 ax [orig:95 _13 ] [95])
        (const_int 0 [0])) "include/linux/blk.h":53:9 75 {*movsi_internal}
     (nil))
(code_label 55 54 56 10 5 (nil) [1 uses])
(note 56 55 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 62 56 67 10 (use (reg/i:SI 0 ax)) "include/linux/blk.h":54:1 -1
     (nil))
(note 67 62 0 NOTE_INSN_DELETED)

;; Function lock_buffer (lock_buffer, funcdef_no=5, decl_uid=1366, cgraph_uid=6, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 19:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 25:  (0) m  (1) qn {*movqi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5 6

********** Pseudo live ranges #1: **********

  BB 6
   Insn 32: point = 0, n_alt = -1
  BB 5
   Insn 26: point = 0, n_alt = -1
   Insn 25: point = 0, n_alt = 8
   Insn 24: point = 1, n_alt = 0
  BB 4
   Insn 22: point = 2, n_alt = -1
   Insn 21: point = 2, n_alt = 0
   Insn 19: point = 3, n_alt = 4
   Insn 18: point = 5, n_alt = 0
  BB 2
   Insn 29: point = 7, n_alt = -1
   Insn 5: point = 7, n_alt = -1
   Insn 33: point = 7, n_alt = 0
  BB 3
   Insn 15: point = 8, n_alt = 0
   Insn 14: point = 8, n_alt = 0
   Insn 13: point = 8, n_alt = -2
   Insn 12: point = 8, n_alt = 0
   Insn 11: point = 9, n_alt = 0
   Insn 10: point = 9, n_alt = 0
   Insn 9: point = 11, n_alt = 0
 r82: [2..12]
 r83: [8..9]
 r84: [2..3]
 r85: [10..11]
 r86: [4..5]
 r87: [0..1]
Compressing live ranges: from 13 to 10 - 76%
Ranges after the compression:
 r82: [2..9]
 r83: [6..7]
 r84: [2..3]
 r85: [8..9]
 r86: [4..5]
 r87: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 33
changing reg in insn 13
changing reg in insn 10
changing reg in insn 12
changing reg in insn 19
changing reg in insn 21
changing reg in insn 9
changing reg in insn 10
changing reg in insn 18
changing reg in insn 19
changing reg in insn 24
changing reg in insn 25
deleting insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.


lock_buffer

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,5u} r1={2d} r2={2d} r3={1d,1u} r7={4d,15u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1e} r17={8d,1u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 112{89d,22u,1e} in 17{16 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 33 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 33 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 29 2 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] drivers/blk_drv/ll_rw_blk.c:45)
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":45:5 -1
     (nil))
(jump_insn 29 5 30 2 (set (pc)
        (label_ref 16)) "drivers/blk_drv/ll_rw_blk.c":46:11 807 {jump}
     (nil)
 -> 16)
(barrier 30 29 20)
(code_label 20 30 8 3 8 (nil) [1 uses])
(note 8 20 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:SI 0 ax [85])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [6 bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":47:9 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (parallel [
            (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
                (plus:SI (reg/f:SI 0 ax [85])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":47:9 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [6 bh+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))
(insn 11 10 12 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":47:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 12 11 14 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [12  S4 A32])
        (reg/f:SI 0 ax [orig:83 _1 ] [83])) "drivers/blk_drv/ll_rw_blk.c":47:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 14 12 15 3 (call (mem:QI (symbol_ref:SI ("sleep_on") [flags 0x41]  <function_decl 0x7251b2b15b00 sleep_on>) [0 sleep_on S1 A8])
        (const_int 16 [0x10])) "drivers/blk_drv/ll_rw_blk.c":47:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":47:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 16 15 17 4 7 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 0 ax [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [6 bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":46:14 75 {*movsi_internal}
     (nil))
(insn 19 18 21 4 (set (reg:QI 0 ax [orig:84 _2 ] [84])
        (mem:QI (plus:SI (reg/f:SI 0 ax [86])
                (const_int 13 [0xd])) [0 bh_5(D)->b_lock+0 S1 A8])) "drivers/blk_drv/ll_rw_blk.c":46:14 77 {*movqi_internal}
     (nil))
(insn 21 19 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "drivers/blk_drv/ll_rw_blk.c":46:12 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":46:12 806 {*jcc}
     (nil)
 -> 20)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 0 ax [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [6 bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":48:16 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (mem:QI (plus:SI (reg/f:SI 0 ax [87])
                (const_int 13 [0xd])) [0 bh_5(D)->b_lock+0 S1 A8])
        (const_int 1 [0x1])) "drivers/blk_drv/ll_rw_blk.c":48:16 77 {*movqi_internal}
     (nil))
(insn 26 25 31 5 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] drivers/blk_drv/ll_rw_blk.c:49)
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":49:5 -1
     (nil))
(note 31 26 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 34 6 (const_int 0 [0]) "drivers/blk_drv/ll_rw_blk.c":50:1 843 {nop}
     (nil))
(note 34 32 0 NOTE_INSN_DELETED)

;; Function unlock_buffer (unlock_buffer, funcdef_no=6, decl_uid=1372, cgraph_uid=7, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 6:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 19:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 21:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 22:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 26:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 30: point = 0, n_alt = -1
  BB 4
   Insn 26: point = 0, n_alt = 0
   Insn 25: point = 0, n_alt = 0
   Insn 24: point = 0, n_alt = -2
   Insn 23: point = 1, n_alt = 0
   Insn 22: point = 2, n_alt = 0
   Insn 21: point = 2, n_alt = 0
   Insn 20: point = 4, n_alt = 0
   Insn 19: point = 5, n_alt = 8
   Insn 18: point = 6, n_alt = 0
  BB 3
   Insn 15: point = 8, n_alt = 0
   Insn 14: point = 8, n_alt = 0
   Insn 13: point = 8, n_alt = -2
   Insn 12: point = 8, n_alt = 0
   Insn 11: point = 9, n_alt = 0
   Insn 10: point = 10, n_alt = 0
  BB 2
   Insn 8: point = 11, n_alt = -1
   Insn 7: point = 11, n_alt = 0
   Insn 6: point = 12, n_alt = 4
   Insn 5: point = 14, n_alt = 0
   Insn 31: point = 15, n_alt = 0
 r82: [0..15]
 r83: [11..12]
 r84: [1..2]
 r85: [13..14]
 r86: [8..9]
 r87: [5..6]
 r88: [3..4]
Compressing live ranges: from 16 to 12 - 75%
Ranges after the compression:
 r82: [0..11]
 r83: [8..9]
 r84: [0..1]
 r85: [10..11]
 r86: [6..7]
 r87: [4..5]
 r88: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 31
changing reg in insn 24
changing reg in insn 13
changing reg in insn 11
changing reg in insn 6
changing reg in insn 7
changing reg in insn 21
changing reg in insn 23
changing reg in insn 5
changing reg in insn 6
changing reg in insn 11
changing reg in insn 12
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
deleting insn with uid = 13.
deleting insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns


unlock_buffer

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,6u} r1={3d} r2={3d} r3={1d,3u} r7={7d,20u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1e} r17={9d,1u} r18={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 193{162d,30u,1e} in 19{17 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 31 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 31 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [85])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [6 bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":54:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:QI 0 ax [orig:83 _1 ] [83])
        (mem:QI (plus:SI (reg/f:SI 0 ax [85])
                (const_int 13 [0xd])) [0 bh_5(D)->b_lock+0 S1 A8])) "drivers/blk_drv/ll_rw_blk.c":54:9 77 {*movqi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "drivers/blk_drv/ll_rw_blk.c":54:5 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":54:5 806 {*jcc}
     (nil)
 -> 16)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":55:3 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 11 10 12 3 (set (reg/f:SI 0 ax [86])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7251b2b57a20 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "drivers/blk_drv/ll_rw_blk.c":55:3 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7251b2b57a20 *.LC0>)
        (nil)))
(insn 12 11 14 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg/f:SI 0 ax [86])) "drivers/blk_drv/ll_rw_blk.c":55:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 14 12 15 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7251b2b38900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "drivers/blk_drv/ll_rw_blk.c":55:3 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":55:3 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 16 15 17 4 10 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 0 ax [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [6 bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":57:13 75 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (mem:QI (plus:SI (reg/f:SI 0 ax [87])
                (const_int 13 [0xd])) [0 bh_5(D)->b_lock+0 S1 A8])
        (const_int 0 [0])) "drivers/blk_drv/ll_rw_blk.c":57:13 77 {*movqi_internal}
     (nil))
(insn 20 19 21 4 (set (reg/f:SI 0 ax [88])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [6 bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":58:2 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg/f:SI 0 ax [orig:84 _2 ] [84])
                (plus:SI (reg/f:SI 0 ax [88])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":58:2 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [6 bh+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))
(insn 22 21 23 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":58:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 23 22 25 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [12  S4 A32])
        (reg/f:SI 0 ax [orig:84 _2 ] [84])) "drivers/blk_drv/ll_rw_blk.c":58:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 25 23 26 4 (call (mem:QI (symbol_ref:SI ("wake_up") [flags 0x41]  <function_decl 0x7251b2b15f00 wake_up>) [0 wake_up S1 A8])
        (const_int 16 [0x10])) "drivers/blk_drv/ll_rw_blk.c":58:2 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 26 25 29 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":58:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 29 26 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 32 5 (const_int 0 [0]) "drivers/blk_drv/ll_rw_blk.c":59:1 843 {nop}
     (nil))
(note 32 30 0 NOTE_INSN_DELETED)

;; Function add_request (add_request, funcdef_no=7, decl_uid=1376, cgraph_uid=8, symbol_order=10)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 15:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 38:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 42:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 49:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 53:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 61:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 65:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 92:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7 8
EBB 9
EBB 10
EBB 11 14
EBB 15
EBB 12
EBB 13

********** Pseudo live ranges #1: **********

  BB 13
  BB 5
   Insn 98: point = 0, n_alt = -1
   Insn 30: point = 0, n_alt = 0
   Insn 29: point = 1, n_alt = 0
   Insn 28: point = 3, n_alt = 0
   Insn 27: point = 4, n_alt = -1
   Insn 26: point = 4, n_alt = 1
   Insn 25: point = 5, n_alt = 0
   Insn 24: point = 6, n_alt = 0
  BB 12
   Insn 93: point = 7, n_alt = -1
   Insn 92: point = 7, n_alt = 1
   Insn 91: point = 8, n_alt = 0
   Insn 90: point = 9, n_alt = 0
   Insn 89: point = 10, n_alt = 1
   Insn 88: point = 11, n_alt = 0
   Insn 87: point = 12, n_alt = 0
   Insn 86: point = 14, n_alt = 0
  BB 14
   Insn 103: point = 15, n_alt = -1
  BB 15
   Insn 107: point = 15, n_alt = -1
  BB 9
   Insn 68: point = 15, n_alt = -1
   Insn 67: point = 15, n_alt = 0
   Insn 66: point = 16, n_alt = -2
   Insn 65: point = 17, n_alt = 0
   Insn 64: point = 17, n_alt = 0
   Insn 63: point = 17, n_alt = 0
   Insn 62: point = 17, n_alt = 0
   Insn 61: point = 18, n_alt = 0
   Insn 60: point = 18, n_alt = 0
   Insn 59: point = 20, n_alt = 0
  BB 7
   Insn 45: point = 21, n_alt = -1
   Insn 44: point = 21, n_alt = 0
   Insn 43: point = 22, n_alt = -2
   Insn 42: point = 23, n_alt = 0
   Insn 41: point = 23, n_alt = 0
   Insn 40: point = 23, n_alt = 0
   Insn 39: point = 23, n_alt = 0
   Insn 38: point = 23, n_alt = 0
  BB 11
   Insn 83: point = 23, n_alt = -1
   Insn 82: point = 23, n_alt = 0
   Insn 80: point = 24, n_alt = 0
   Insn 79: point = 26, n_alt = 0
  BB 6
   Insn 100: point = 27, n_alt = -1
  BB 4
   Insn 22: point = 27, n_alt = -1
   Insn 21: point = 27, n_alt = 1
   Insn 20: point = 27, n_alt = 1
   Insn 19: point = 28, n_alt = 0
   Insn 18: point = 30, n_alt = 0
  BB 3
   Insn 15: point = 31, n_alt = 8
   Insn 14: point = 32, n_alt = 0
   Insn 13: point = 34, n_alt = 0
  BB 2
   Insn 11: point = 35, n_alt = -1
   Insn 10: point = 35, n_alt = 0
   Insn 9: point = 36, n_alt = 0
   Insn 8: point = 38, n_alt = 0
   Insn 7: point = 39, n_alt = -1
   Insn 6: point = 39, n_alt = 1
   Insn 5: point = 40, n_alt = 0
   Insn 108: point = 41, n_alt = 0
  BB 10
   Insn 76: point = 42, n_alt = 1
   Insn 75: point = 43, n_alt = 0
   Insn 74: point = 45, n_alt = 0
  BB 8
   Insn 56: point = 46, n_alt = -1
   Insn 55: point = 46, n_alt = 0
   Insn 54: point = 47, n_alt = -2
   Insn 53: point = 48, n_alt = 0
   Insn 52: point = 48, n_alt = 0
   Insn 51: point = 48, n_alt = 0
   Insn 50: point = 48, n_alt = 0
   Insn 49: point = 49, n_alt = 0
   Insn 48: point = 49, n_alt = 0
   Insn 47: point = 51, n_alt = 0
 r82: [41..41]
 r83: [35..36]
 r84: [31..32]
 r85: [0..1]
 r86: [21..22]
 r87: [48..49]
 r88: [46..47]
 r89: [17..18]
 r90: [15..16]
 r91: [23..24]
 r92: [10..12]
 r93: [39..40]
 r94: [37..38]
 r95: [33..34]
 r96: [29..30]
 r97: [27..28]
 r98: [4..6]
 r99: [4..5]
 r100: [2..3]
 r101: [50..51]
 r102: [19..20]
 r103: [44..45]
 r104: [42..43]
 r105: [25..26]
 r106: [13..14]
 r107: [10..11]
 r108: [7..9]
 r109: [7..8]
Compressing live ranges: from 52 to 49 - 94%
Ranges after the compression:
 r82: [38..38]
 r83: [32..33]
 r84: [28..29]
 r85: [0..1]
 r86: [18..19]
 r87: [45..46]
 r88: [43..44]
 r89: [14..15]
 r90: [12..13]
 r91: [20..21]
 r92: [8..9]
 r93: [36..37]
 r94: [34..35]
 r95: [30..31]
 r96: [26..27]
 r97: [24..25]
 r98: [4..5]
 r99: [4..5]
 r100: [2..3]
 r101: [47..48]
 r102: [16..17]
 r103: [41..42]
 r104: [39..40]
 r105: [22..23]
 r106: [10..11]
 r107: [8..9]
 r108: [6..7]
 r109: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 108
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 15
changing reg in insn 29
changing reg in insn 30
changing reg in insn 43
changing reg in insn 44
changing reg in insn 48
changing reg in insn 50
changing reg in insn 54
changing reg in insn 55
changing reg in insn 60
changing reg in insn 62
changing reg in insn 66
changing reg in insn 67
changing reg in insn 80
changing reg in insn 82
changing reg in insn 87
changing reg in insn 89
changing reg in insn 5
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 13
changing reg in insn 14
changing reg in insn 18
changing reg in insn 19
changing reg in insn 19
changing reg in insn 20
changing reg in insn 24
changing reg in insn 26
changing reg in insn 25
changing reg in insn 26
changing reg in insn 28
changing reg in insn 29
changing reg in insn 47
changing reg in insn 48
changing reg in insn 59
changing reg in insn 60
changing reg in insn 74
changing reg in insn 75
changing reg in insn 75
changing reg in insn 76
changing reg in insn 79
changing reg in insn 80
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 92
changing reg in insn 91
changing reg in insn 92
deleting insn with uid = 43.
deleting insn with uid = 54.
deleting insn with uid = 66.
starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 30.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 64.


add_request

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 7 [sp] 17 [flags]
;;  ref usage 	r0={27d,24u} r1={8d,3u} r2={5d} r7={13d,59u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={20d,6u} r18={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 425{333d,92u,0e} in 67{63 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 108 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 108 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 108 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [93])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":70:15 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [93])
                (const_int 32 [0x20])) [7 req_19(D)->next+0 S4 A32])
        (const_int 0 [0])) "drivers/blk_drv/ll_rw_blk.c":70:15 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] drivers/blk_drv/ll_rw_blk.c:71)
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":71:5 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 0 ax [94])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":73:12 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [94])
                (const_int 28 [0x1c])) [6 req_19(D)->bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":73:12 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "drivers/blk_drv/ll_rw_blk.c":73:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":73:8 806 {*jcc}
     (nil)
 -> 16)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:SI 0 ax [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":74:5 75 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg/f:SI 0 ax [orig:84 _2 ] [84])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [95])
                (const_int 28 [0x1c])) [6 req_19(D)->bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":74:5 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (mem:QI (plus:SI (reg/f:SI 0 ax [orig:84 _2 ] [84])
                (const_int 11 [0xb])) [0 _2->b_dirt+0 S1 A8])
        (const_int 0 [0])) "drivers/blk_drv/ll_rw_blk.c":74:18 77 {*movqi_internal}
     (nil))
(code_label 16 15 17 4 12 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 0 ax [96])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [13 dev+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":75:15 75 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg/f:SI 0 ax [97])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [96])
                (const_int 4 [0x4])) [7 dev_22(D)->current_request+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":75:15 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 tmp+0 S4 A32])
        (reg/f:SI 0 ax [97])) "drivers/blk_drv/ll_rw_blk.c":75:15 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [7 tmp+0 S4 A32])
            (const_int 0 [0]))) "drivers/blk_drv/ll_rw_blk.c":75:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":75:8 806 {*jcc}
     (nil)
 -> 33)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 0 ax [98])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [13 dev+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":76:30 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg/f:SI 1 dx [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":76:30 75 {*movsi_internal}
     (nil))
(insn 26 25 27 5 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [98])
                (const_int 4 [0x4])) [7 dev_22(D)->current_request+0 S4 A32])
        (reg/f:SI 1 dx [99])) "drivers/blk_drv/ll_rw_blk.c":76:30 75 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] drivers/blk_drv/ll_rw_blk.c:77)
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":77:9 -1
     (nil))
(insn 28 27 29 5 (set (reg/f:SI 0 ax [100])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [13 dev+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":78:13 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg/f:SI 0 ax [orig:85 _3 ] [85])
        (mem/f:SI (reg/f:SI 0 ax [100]) [9 dev_22(D)->request_fn+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":78:13 75 {*movsi_internal}
     (nil))
(call_insn 30 29 98 5 (call (mem:QI (reg/f:SI 0 ax [orig:85 _3 ] [85]) [0 *_3 S1 A8])
        (const_int 0 [0])) "drivers/blk_drv/ll_rw_blk.c":78:13 812 {*call}
     (nil)
    (nil))
(jump_insn 98 30 99 5 (set (pc)
        (label_ref 96)) "drivers/blk_drv/ll_rw_blk.c":79:9 807 {jump}
     (nil)
 -> 96)
(barrier 99 98 33)
(code_label 33 99 34 6 13 (nil) [1 uses])
(note 34 33 100 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 100 34 101 6 (set (pc)
        (label_ref 77)) "drivers/blk_drv/ll_rw_blk.c":81:5 807 {jump}
     (nil)
 -> 77)
(barrier 101 100 81)
(code_label 81 101 37 7 19 (nil) [1 uses])
(note 37 81 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":82:14 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 39 38 40 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":82:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 40 39 41 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [7 tmp+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":82:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 41 40 42 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IN_ORDER") [flags 0x3]  <function_decl 0x7251b2b38c00 IN_ORDER>) [0 IN_ORDER S1 A8])
            (const_int 16 [0x10]))) "drivers/blk_drv/ll_rw_blk.c":82:14 823 {*call_value}
     (nil)
    (nil))
(insn 42 41 44 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":82:14 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 44 42 45 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:86 _4 ] [86])
            (const_int 0 [0]))) "drivers/blk_drv/ll_rw_blk.c":82:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 45 44 46 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":82:12 806 {*jcc}
     (nil)
 -> 57)
(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 8 (set (reg/f:SI 0 ax [101])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 tmp+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":83:14 75 {*movsi_internal}
     (nil))
(insn 48 47 49 8 (set (reg/f:SI 0 ax [orig:87 _5 ] [87])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [101])
                (const_int 32 [0x20])) [7 tmp_11->next+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":83:14 75 {*movsi_internal}
     (nil))
(insn 49 48 50 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":83:14 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 50 49 51 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 0 ax [orig:87 _5 ] [87])) "drivers/blk_drv/ll_rw_blk.c":83:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 51 50 52 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [7 tmp+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":83:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 52 51 53 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IN_ORDER") [flags 0x3]  <function_decl 0x7251b2b38c00 IN_ORDER>) [0 IN_ORDER S1 A8])
            (const_int 16 [0x10]))) "drivers/blk_drv/ll_rw_blk.c":83:14 823 {*call_value}
     (nil)
    (nil))
(insn 53 52 55 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":83:14 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 55 53 56 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:88 _6 ] [88])
            (const_int 0 [0]))) "drivers/blk_drv/ll_rw_blk.c":82:33 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 56 55 57 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":82:33 806 {*jcc}
     (nil)
 -> 72)
(code_label 57 56 58 9 16 (nil) [1 uses])
(note 58 57 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 9 (set (reg/f:SI 0 ax [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 tmp+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":84:14 75 {*movsi_internal}
     (nil))
(insn 60 59 61 9 (set (reg/f:SI 0 ax [orig:89 _7 ] [89])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [102])
                (const_int 32 [0x20])) [7 tmp_11->next+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":84:14 75 {*movsi_internal}
     (nil))
(insn 61 60 62 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":84:14 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 62 61 63 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 0 ax [orig:89 _7 ] [89])) "drivers/blk_drv/ll_rw_blk.c":84:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 63 62 64 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":84:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 64 63 65 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IN_ORDER") [flags 0x3]  <function_decl 0x7251b2b38c00 IN_ORDER>) [0 IN_ORDER S1 A8])
            (const_int 16 [0x10]))) "drivers/blk_drv/ll_rw_blk.c":84:14 823 {*call_value}
     (nil)
    (nil))
(insn 65 64 67 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":84:14 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 67 65 68 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:90 _8 ] [90])
            (const_int 0 [0]))) "drivers/blk_drv/ll_rw_blk.c":83:40 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 68 67 72 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 106)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":83:40 806 {*jcc}
     (nil)
 -> 106)
(code_label 72 68 73 10 17 (nil) [1 uses])
(note 73 72 74 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 10 (set (reg/f:SI 0 ax [103])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 tmp+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":81:27 75 {*movsi_internal}
     (nil))
(insn 75 74 76 10 (set (reg/f:SI 0 ax [104])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [103])
                (const_int 32 [0x20])) [7 tmp_11->next+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":81:27 75 {*movsi_internal}
     (nil))
(insn 76 75 77 10 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 tmp+0 S4 A32])
        (reg/f:SI 0 ax [104])) "drivers/blk_drv/ll_rw_blk.c":81:27 75 {*movsi_internal}
     (nil))
(code_label 77 76 78 11 15 (nil) [1 uses])
(note 78 77 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 11 (set (reg/f:SI 0 ax [105])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 tmp+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":81:15 75 {*movsi_internal}
     (nil))
(insn 80 79 82 11 (set (reg/f:SI 0 ax [orig:91 _9 ] [91])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [105])
                (const_int 32 [0x20])) [7 tmp_11->next+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":81:15 75 {*movsi_internal}
     (nil))
(insn 82 80 83 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:91 _9 ] [91])
            (const_int 0 [0]))) "drivers/blk_drv/ll_rw_blk.c":81:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 83 82 102 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":81:12 806 {*jcc}
     (nil)
 -> 81)
(note 102 83 103 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(jump_insn 103 102 104 14 (set (pc)
        (label_ref 84)) 807 {jump}
     (nil)
 -> 84)
(barrier 104 103 106)
(code_label 106 104 105 15 20 (nil) [1 uses])
(note 105 106 107 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 107 105 84 15 (const_int 0 [0]) "drivers/blk_drv/ll_rw_blk.c":85:13 843 {nop}
     (nil))
(code_label 84 107 85 12 18 (nil) [1 uses])
(note 85 84 86 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 12 (set (reg/f:SI 0 ax [106])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 tmp+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":86:20 75 {*movsi_internal}
     (nil))
(insn 87 86 88 12 (set (reg/f:SI 1 dx [orig:92 _10 ] [92])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [106])
                (const_int 32 [0x20])) [7 tmp_11->next+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":86:20 75 {*movsi_internal}
     (nil))
(insn 88 87 89 12 (set (reg/f:SI 0 ax [107])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":86:15 75 {*movsi_internal}
     (nil))
(insn 89 88 90 12 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [107])
                (const_int 32 [0x20])) [7 req_19(D)->next+0 S4 A32])
        (reg/f:SI 1 dx [orig:92 _10 ] [92])) "drivers/blk_drv/ll_rw_blk.c":86:15 75 {*movsi_internal}
     (nil))
(insn 90 89 91 12 (set (reg/f:SI 0 ax [108])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 tmp+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":87:15 75 {*movsi_internal}
     (nil))
(insn 91 90 92 12 (set (reg/f:SI 1 dx [109])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":87:15 75 {*movsi_internal}
     (nil))
(insn 92 91 93 12 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [108])
                (const_int 32 [0x20])) [7 tmp_11->next+0 S4 A32])
        (reg/f:SI 1 dx [109])) "drivers/blk_drv/ll_rw_blk.c":87:15 75 {*movsi_internal}
     (nil))
(insn 93 92 96 12 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] drivers/blk_drv/ll_rw_blk.c:88)
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":88:5 -1
     (nil))
(code_label 96 93 97 13 11 (nil) [1 uses])
(note 97 96 109 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(note 109 97 0 NOTE_INSN_DELETED)

;; Function make_request (make_request, funcdef_no=8, decl_uid=1386, cgraph_uid=9, symbol_order=11)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 218:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 25:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 50:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 55:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 58:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 61:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 66:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) q {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 71:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 75:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 80:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 83:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 93:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 99:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 116:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 127:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 130:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 133:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 138:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 143:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 150:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 153:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 156:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 158:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 161:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 163:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 165:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 169:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 171:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 173:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 176:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 178:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 180
	 Choosing alt 0 in insn 180:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 181:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 185:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5
EBB 6 7 8 9
EBB 10
EBB 11 12 13
EBB 14 15
EBB 16 17
EBB 18
EBB 33
EBB 19
EBB 20 21
EBB 22
EBB 23
EBB 24
EBB 25 34
EBB 35
EBB 26 27 28
EBB 29
EBB 30
EBB 32
EBB 31

********** Pseudo live ranges #1: **********

  BB 31
  BB 30
   Insn 204: point = 0, n_alt = -1
   Insn 185: point = 0, n_alt = 0
   Insn 184: point = 0, n_alt = 0
   Insn 183: point = 0, n_alt = 0
   Insn 182: point = 1, n_alt = 0
   Insn 181: point = 1, n_alt = 0
   Insn 180: point = 1, n_alt = 0
   Insn 179: point = 3, n_alt = 0
   Insn 178: point = 5, n_alt = 1
   Insn 177: point = 7, n_alt = 0
   Insn 176: point = 8, n_alt = 1
   Insn 175: point = 9, n_alt = 0
   Insn 174: point = 10, n_alt = 0
   Insn 173: point = 11, n_alt = 1
   Insn 172: point = 12, n_alt = 0
   Insn 171: point = 13, n_alt = 1
   Insn 170: point = 14, n_alt = 0
   Insn 169: point = 15, n_alt = 1
   Insn 168: point = 16, n_alt = 0
   Insn 167: point = 17, n_alt = 0
   Insn 166: point = 19, n_alt = 0
   Insn 165: point = 20, n_alt = 1
   Insn 164: point = 21, n_alt = 0
   Insn 163: point = 22, n_alt = 1
   Insn 162: point = 23, n_alt = 0
   Insn 161: point = 24, n_alt = 1
   Insn 160: point = 26, n_alt = 0
   Insn 159: point = 28, n_alt = 0
   Insn 158: point = 29, n_alt = 1
   Insn 157: point = 30, n_alt = 0
   Insn 156: point = 31, n_alt = 1
   Insn 155: point = 32, n_alt = 0
   Insn 154: point = 33, n_alt = 0
   Insn 153: point = 34, n_alt = 1
   Insn 152: point = 35, n_alt = 0
   Insn 151: point = 36, n_alt = 0
   Insn 150: point = 38, n_alt = 2
   Insn 149: point = 40, n_alt = 0
  BB 18
   Insn 194: point = 42, n_alt = -1
   Insn 83: point = 42, n_alt = 0
   Insn 82: point = 42, n_alt = 0
   Insn 81: point = 42, n_alt = 0
   Insn 80: point = 42, n_alt = 0
  BB 32
   Insn 208: point = 42, n_alt = -1
  BB 28
   Insn 200: point = 42, n_alt = -1
   Insn 133: point = 42, n_alt = 0
   Insn 132: point = 42, n_alt = 0
   Insn 131: point = 42, n_alt = 0
   Insn 130: point = 42, n_alt = 0
  BB 27
   Insn 128: point = 42, n_alt = -1
   Insn 127: point = 42, n_alt = 1
  BB 26
   Insn 125: point = 43, n_alt = -1
   Insn 124: point = 43, n_alt = 0
   Insn 123: point = 44, n_alt = 0
  BB 34
   Insn 213: point = 46, n_alt = -1
  BB 35
   Insn 217: point = 47, n_alt = -1
  BB 24
   Insn 110: point = 48, n_alt = -1
   Insn 109: point = 48, n_alt = 0
   Insn 106: point = 49, n_alt = 0
   Insn 105: point = 51, n_alt = 0
  BB 25
   Insn 120: point = 53, n_alt = -1
   Insn 119: point = 53, n_alt = 0
   Insn 118: point = 54, n_alt = 0
   Insn 116: point = 55, n_alt = 0
  BB 23
   Insn 198: point = 56, n_alt = -1
  BB 21
   Insn 196: point = 57, n_alt = -1
   Insn 93: point = 57, n_alt = 1
   Insn 92: point = 58, n_alt = 0
  BB 22
   Insn 99: point = 60, n_alt = 1
   Insn 98: point = 61, n_alt = 0
  BB 20
   Insn 90: point = 63, n_alt = -1
   Insn 89: point = 63, n_alt = 1
  BB 29
   Insn 202: point = 64, n_alt = -1
   Insn 143: point = 64, n_alt = 0
   Insn 142: point = 64, n_alt = 0
   Insn 141: point = 64, n_alt = -2
   Insn 140: point = 64, n_alt = 0
   Insn 139: point = 65, n_alt = 0
   Insn 138: point = 66, n_alt = 0
  BB 19
  BB 33
   Insn 211: point = 68, n_alt = -1
  BB 17
   Insn 77: point = 69, n_alt = -1
   Insn 76: point = 69, n_alt = 0
   Insn 75: point = 70, n_alt = 4
   Insn 74: point = 72, n_alt = 0
  BB 16
   Insn 72: point = 74, n_alt = -1
   Insn 71: point = 74, n_alt = 1
  BB 15
   Insn 68: point = 75, n_alt = -1
   Insn 67: point = 75, n_alt = 0
   Insn 66: point = 76, n_alt = 4
   Insn 65: point = 78, n_alt = 0
  BB 14
   Insn 63: point = 80, n_alt = -1
   Insn 62: point = 80, n_alt = 0
   Insn 61: point = 80, n_alt = 0
   Insn 60: point = 80, n_alt = 0
   Insn 59: point = 80, n_alt = 0
   Insn 58: point = 80, n_alt = 0
  BB 13
   Insn 55: point = 81, n_alt = 0
   Insn 54: point = 81, n_alt = 0
   Insn 53: point = 81, n_alt = -2
   Insn 52: point = 81, n_alt = 0
   Insn 51: point = 82, n_alt = 0
   Insn 50: point = 83, n_alt = 0
  BB 12
   Insn 48: point = 84, n_alt = -1
   Insn 47: point = 84, n_alt = 0
  BB 11
   Insn 45: point = 85, n_alt = -1
   Insn 44: point = 85, n_alt = 1
  BB 9
   Insn 192: point = 86, n_alt = -1
   Insn 36: point = 86, n_alt = 1
  BB 10
   Insn 41: point = 87, n_alt = 1
  BB 8
   Insn 34: point = 88, n_alt = -1
   Insn 33: point = 88, n_alt = 0
  BB 7
   Insn 27: point = 89, n_alt = -1
   Insn 26: point = 89, n_alt = 0
   Insn 25: point = 90, n_alt = 4
   Insn 24: point = 92, n_alt = 0
  BB 6
   Insn 22: point = 94, n_alt = -1
   Insn 21: point = 94, n_alt = 1
   Insn 20: point = 94, n_alt = 1
  BB 4
   Insn 190: point = 96, n_alt = -1
   Insn 12: point = 96, n_alt = 0
  BB 5
   Insn 17: point = 98, n_alt = 0
  BB 3
   Insn 9: point = 100, n_alt = -1
   Insn 8: point = 100, n_alt = 0
  BB 2
   Insn 6: point = 101, n_alt = -1
   Insn 5: point = 101, n_alt = 0
   Insn 218: point = 101, n_alt = 0
 r82: [4..101]
 r83: [89..90]
 r84: [75..76]
 r85: [69..70]
 r86: [48..49]
 r87: [37..38]
 r88: [34..36]
 r89: [25..26]
 r90: [22..24]
 r91: [15..17]
 r92: [6..7]
 r93: [2..5]
 r94: [0..1]
 r95: [98..98] [94..96]
 r96: [91..92]
 r97: [81..82]
 r98: [77..78]
 r99: [71..72]
 r100: [57..58]
 r101: [60..61]
 r102: [50..51]
 r103: [53..54]
 r104: [43..44]
 r105: [64..65]
 r106: [39..40]
 r107: [34..35]
 r108: [31..33]
 r109: [31..32]
 r110: [29..30]
 r111: [27..28]
 r112: [22..23]
 r113: [20..21]
 r114: [18..19]
 r115: [15..16]
 r116: [13..14]
 r117: [11..12]
 r118: [8..10]
 r119: [8..9]
 r120: [2..3]
Compressing live ranges: from 102 to 68 - 66%
Ranges after the compression:
 r82: [4..67]
 r83: [60..61]
 r84: [54..55]
 r85: [50..51]
 r86: [38..39]
 r87: [32..33]
 r88: [30..31]
 r89: [22..23]
 r90: [20..21]
 r91: [14..15]
 r92: [6..7]
 r93: [2..5]
 r94: [0..1]
 r95: [64..66]
 r96: [62..63]
 r97: [58..59]
 r98: [56..57]
 r99: [52..53]
 r100: [44..45]
 r101: [46..47]
 r102: [40..41]
 r103: [42..43]
 r104: [36..37]
 r105: [48..49]
 r106: [34..35]
 r107: [30..31]
 r108: [28..29]
 r109: [28..29]
 r110: [26..27]
 r111: [24..25]
 r112: [20..21]
 r113: [18..19]
 r114: [16..17]
 r115: [14..15]
 r116: [12..13]
 r117: [10..11]
 r118: [8..9]
 r119: [8..9]
 r120: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 218
changing reg in insn 179
changing reg in insn 141
changing reg in insn 139
changing reg in insn 123
changing reg in insn 118
changing reg in insn 98
changing reg in insn 92
changing reg in insn 53
changing reg in insn 51
changing reg in insn 25
changing reg in insn 26
changing reg in insn 66
changing reg in insn 67
changing reg in insn 75
changing reg in insn 76
changing reg in insn 106
changing reg in insn 109
changing reg in insn 150
changing reg in insn 151
changing reg in insn 151
changing reg in insn 153
changing reg in insn 160
changing reg in insn 161
changing reg in insn 161
changing reg in insn 163
changing reg in insn 167
changing reg in insn 169
changing reg in insn 177
changing reg in insn 178
changing reg in insn 178
changing reg in insn 180
changing reg in insn 183
changing reg in insn 17
changing reg in insn 12
changing reg in insn 20
changing reg in insn 24
changing reg in insn 25
changing reg in insn 51
changing reg in insn 52
changing reg in insn 65
changing reg in insn 66
changing reg in insn 74
changing reg in insn 75
changing reg in insn 92
changing reg in insn 93
changing reg in insn 98
changing reg in insn 99
changing reg in insn 105
changing reg in insn 106
changing reg in insn 118
changing reg in insn 119
changing reg in insn 123
changing reg in insn 124
changing reg in insn 139
changing reg in insn 140
changing reg in insn 149
changing reg in insn 150
changing reg in insn 152
changing reg in insn 153
changing reg in insn 154
changing reg in insn 156
changing reg in insn 155
changing reg in insn 156
changing reg in insn 157
changing reg in insn 158
changing reg in insn 159
changing reg in insn 160
changing reg in insn 162
changing reg in insn 163
changing reg in insn 164
changing reg in insn 165
changing reg in insn 166
changing reg in insn 167
changing reg in insn 168
changing reg in insn 169
changing reg in insn 170
changing reg in insn 171
changing reg in insn 172
changing reg in insn 173
changing reg in insn 174
changing reg in insn 176
changing reg in insn 175
changing reg in insn 176
changing reg in insn 179
deleting insn with uid = 53.
deleting insn with uid = 141.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 82.
verify found no changes in insn with uid = 132.
verify found no changes in insn with uid = 142.
verify found no changes in insn with uid = 184.


make_request

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={40d,32u} r1={13d,6u} r2={7d} r3={1d,9u} r7={20d,114u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={39d,16u} r18={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} 
;;    total ref usage 687{510d,177u,0e} in 124{118 regular + 6 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 218 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 218 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 218 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [2 rw+0 S4 A32])
            (const_int 2 [0x2]))) "drivers/blk_drv/ll_rw_blk.c":98:34 11 {*cmpsi_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 10)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":98:34 806 {*jcc}
     (nil)
 -> 10)
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [2 rw+0 S4 A32])
            (const_int 3 [0x3]))) "drivers/blk_drv/ll_rw_blk.c":98:34 11 {*cmpsi_1}
     (nil))
(jump_insn 9 8 10 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":98:34 806 {*jcc}
     (nil)
 -> 15)
(code_label 10 9 11 4 22 (nil) [1 uses])
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 190 4 (set (reg:SI 0 ax [orig:95 iftmp.0_16 ] [95])
        (const_int 1 [0x1])) "drivers/blk_drv/ll_rw_blk.c":98:34 75 {*movsi_internal}
     (nil))
(jump_insn 190 12 191 4 (set (pc)
        (label_ref 18)) "drivers/blk_drv/ll_rw_blk.c":98:34 807 {jump}
     (nil)
 -> 18)
(barrier 191 190 15)
(code_label 15 191 16 5 23 (nil) [1 uses])
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg:SI 0 ax [orig:95 iftmp.0_16 ] [95])
        (const_int 0 [0])) "drivers/blk_drv/ll_rw_blk.c":98:34 75 {*movsi_internal}
     (nil))
(code_label 18 17 19 6 24 (nil) [1 uses])
(note 19 18 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 6 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 rw_ahead+0 S4 A32])
        (reg:SI 0 ax [orig:95 iftmp.0_16 ] [95])) "drivers/blk_drv/ll_rw_blk.c":98:19 75 {*movsi_internal}
     (nil))
(insn 21 20 22 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [2 rw_ahead+0 S4 A32])
            (const_int 0 [0]))) "drivers/blk_drv/ll_rw_blk.c":98:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 22 21 23 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":98:8 806 {*jcc}
     (nil)
 -> 42)
(note 23 22 24 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 7 (set (reg/f:SI 0 ax [96])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [6 bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":99:15 75 {*movsi_internal}
     (nil))
(insn 25 24 26 7 (set (reg:QI 0 ax [orig:83 _1 ] [83])
        (mem:QI (plus:SI (reg/f:SI 0 ax [96])
                (const_int 13 [0xd])) [0 bh_25(D)->b_lock+0 S1 A8])) "drivers/blk_drv/ll_rw_blk.c":99:15 77 {*movqi_internal}
     (nil))
(insn 26 25 27 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "drivers/blk_drv/ll_rw_blk.c":99:12 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 27 26 32 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 207)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":99:12 806 {*jcc}
     (nil)
 -> 207)
(note 32 27 33 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [2 rw+0 S4 A32])
            (const_int 2 [0x2]))) "drivers/blk_drv/ll_rw_blk.c":101:12 11 {*cmpsi_1}
     (nil))
(jump_insn 34 33 35 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":101:12 806 {*jcc}
     (nil)
 -> 39)
(note 35 34 36 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 192 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 rw+0 S4 A32])
        (const_int 0 [0])) "drivers/blk_drv/ll_rw_blk.c":102:16 75 {*movsi_internal}
     (nil))
(jump_insn 192 36 193 9 (set (pc)
        (label_ref 42)) 807 {jump}
     (nil)
 -> 42)
(barrier 193 192 39)
(code_label 39 193 40 10 28 (nil) [1 uses])
(note 40 39 41 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 rw+0 S4 A32])
        (const_int 1 [0x1])) "drivers/blk_drv/ll_rw_blk.c":104:16 75 {*movsi_internal}
     (nil))
(code_label 42 41 43 11 25 (nil) [2 uses])
(note 43 42 44 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [2 rw+0 S4 A32])
            (const_int 0 [0]))) "drivers/blk_drv/ll_rw_blk.c":107:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 45 44 46 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":107:8 806 {*jcc}
     (nil)
 -> 56)
(note 46 45 47 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [2 rw+0 S4 A32])
            (const_int 1 [0x1]))) "drivers/blk_drv/ll_rw_blk.c":107:20 11 {*cmpsi_1}
     (nil))
(jump_insn 48 47 49 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":107:20 806 {*jcc}
     (nil)
 -> 56)
(note 49 48 50 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":108:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 51 50 52 13 (set (reg/f:SI 0 ax [97])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7251b2b57c60 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "drivers/blk_drv/ll_rw_blk.c":108:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7251b2b57c60 *.LC1>)
        (nil)))
(insn 52 51 54 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg/f:SI 0 ax [97])) "drivers/blk_drv/ll_rw_blk.c":108:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 54 52 55 13 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7251b2b38700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "drivers/blk_drv/ll_rw_blk.c":108:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 55 54 56 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":108:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 56 55 57 14 29 (nil) [2 uses])
(note 57 56 58 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":110:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 59 58 60 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [6 bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":110:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 60 59 61 14 (call (mem:QI (symbol_ref:SI ("lock_buffer") [flags 0x3]  <function_decl 0x7251b2b3e200 lock_buffer>) [0 lock_buffer S1 A8])
        (const_int 16 [0x10])) "drivers/blk_drv/ll_rw_blk.c":110:5 812 {*call}
     (nil)
    (nil))
(insn 61 60 62 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":110:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 62 61 63 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [2 rw+0 S4 A32])
            (const_int 1 [0x1]))) "drivers/blk_drv/ll_rw_blk.c":111:8 11 {*cmpsi_1}
     (nil))
(jump_insn 63 62 64 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":111:8 806 {*jcc}
     (nil)
 -> 69)
(note 64 63 65 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 15 (set (reg/f:SI 0 ax [98])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [6 bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":111:28 75 {*movsi_internal}
     (nil))
(insn 66 65 67 15 (set (reg:QI 0 ax [orig:84 _2 ] [84])
        (mem:QI (plus:SI (reg/f:SI 0 ax [98])
                (const_int 11 [0xb])) [0 bh_25(D)->b_dirt+0 S1 A8])) "drivers/blk_drv/ll_rw_blk.c":111:28 77 {*movqi_internal}
     (nil))
(insn 67 66 68 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "drivers/blk_drv/ll_rw_blk.c":111:22 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 68 67 69 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":111:22 806 {*jcc}
     (nil)
 -> 78)
(code_label 69 68 70 16 30 (nil) [1 uses])
(note 70 69 71 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [2 rw+0 S4 A32])
            (const_int 0 [0]))) "drivers/blk_drv/ll_rw_blk.c":111:38 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 72 71 73 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 210)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":111:38 806 {*jcc}
     (nil)
 -> 210)
(note 73 72 74 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 17 (set (reg/f:SI 0 ax [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [6 bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":112:26 75 {*movsi_internal}
     (nil))
(insn 75 74 76 17 (set (reg:QI 0 ax [orig:85 _3 ] [85])
        (mem:QI (plus:SI (reg/f:SI 0 ax [99])
                (const_int 10 [0xa])) [0 bh_25(D)->b_uptodate+0 S1 A16])) "drivers/blk_drv/ll_rw_blk.c":112:26 77 {*movqi_internal}
     (nil))
(insn 76 75 77 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:85 _3 ] [85])
            (const_int 0 [0]))) "drivers/blk_drv/ll_rw_blk.c":112:21 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 77 76 78 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 210)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":112:21 806 {*jcc}
     (nil)
 -> 210)
(code_label 78 77 79 18 31 (nil) [1 uses])
(note 79 78 80 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":113:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 81 80 82 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [6 bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":113:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 82 81 83 18 (call (mem:QI (symbol_ref:SI ("unlock_buffer") [flags 0x3]  <function_decl 0x7251b2b3e400 unlock_buffer>) [0 unlock_buffer S1 A8])
        (const_int 16 [0x10])) "drivers/blk_drv/ll_rw_blk.c":113:9 812 {*call}
     (nil)
    (nil))
(insn 83 82 194 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":113:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 194 83 195 18 (set (pc)
        (label_ref 188)) "drivers/blk_drv/ll_rw_blk.c":114:9 807 {jump}
     (nil)
 -> 188)
(barrier 195 194 210)
(code_label 210 195 209 33 42 (nil) [2 uses])
(note 209 210 211 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 211 209 86 33 (const_int 0 [0]) "drivers/blk_drv/ll_rw_blk.c":117:1 843 {nop}
     (nil))
(code_label 86 211 87 19 32 ("repeat") [0 uses])
(note 87 86 144 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(code_label 144 87 88 20 40 (nil) [1 uses])
(note 88 144 89 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [2 rw+0 S4 A32])
            (const_int 0 [0]))) "drivers/blk_drv/ll_rw_blk.c":122:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 90 89 91 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":122:8 806 {*jcc}
     (nil)
 -> 96)
(note 91 90 92 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 21 (set (reg/f:SI 0 ax [100])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (plus:SI (unspec:SI [
                            (symbol_ref:SI ("request_queue") [flags 0x2]  <var_decl 0x7251b2b2e870 request_queue>)
                        ] UNSPEC_GOTOFF)
                    (const_int 1152 [0x480]))))) "drivers/blk_drv/ll_rw_blk.c":123:13 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("request_queue") [flags 0x2]  <var_decl 0x7251b2b2e870 request_queue>)
                (const_int 1152 [0x480])))
        (nil)))
(insn 93 92 196 21 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 req+0 S4 A32])
        (reg/f:SI 0 ax [100])) "drivers/blk_drv/ll_rw_blk.c":123:13 75 {*movsi_internal}
     (nil))
(jump_insn 196 93 197 21 (set (pc)
        (label_ref 100)) 807 {jump}
     (nil)
 -> 100)
(barrier 197 196 96)
(code_label 96 197 97 22 33 (nil) [1 uses])
(note 97 96 98 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 22 (set (reg/f:SI 0 ax [101])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (plus:SI (unspec:SI [
                            (symbol_ref:SI ("request_queue") [flags 0x2]  <var_decl 0x7251b2b2e870 request_queue>)
                        ] UNSPEC_GOTOFF)
                    (const_int 756 [0x2f4]))))) "drivers/blk_drv/ll_rw_blk.c":125:13 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("request_queue") [flags 0x2]  <var_decl 0x7251b2b2e870 request_queue>)
                (const_int 756 [0x2f4])))
        (nil)))
(insn 99 98 100 22 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 req+0 S4 A32])
        (reg/f:SI 0 ax [101])) "drivers/blk_drv/ll_rw_blk.c":125:13 75 {*movsi_internal}
     (nil))
(code_label 100 99 101 23 34 (nil) [1 uses])
(note 101 100 198 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 198 101 199 23 (set (pc)
        (label_ref 114)) "drivers/blk_drv/ll_rw_blk.c":128:11 807 {jump}
     (nil)
 -> 114)
(barrier 199 198 117)
(code_label 117 199 104 24 37 (nil) [1 uses])
(note 104 117 105 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 24 (set (reg/f:SI 0 ax [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":129:16 75 {*movsi_internal}
     (nil))
(insn 106 105 109 24 (set (reg:SI 0 ax [orig:86 _4 ] [86])
        (mem:SI (reg/f:SI 0 ax [102]) [2 req_32->dev+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":129:16 75 {*movsi_internal}
     (nil))
(insn 109 106 110 24 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:86 _4 ] [86])
            (const_int 0 [0]))) "drivers/blk_drv/ll_rw_blk.c":129:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 110 109 114 24 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 216)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":129:12 806 {*jcc}
     (nil)
 -> 216)
(code_label 114 110 115 25 35 (nil) [1 uses])
(note 115 114 116 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 118 25 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [7 req+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [7 req+0 S4 A32])
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":128:18 209 {*addsi_1}
     (nil))
(insn 118 116 119 25 (set (reg:SI 0 ax [103])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("request_queue") [flags 0x2]  <var_decl 0x7251b2b2e870 request_queue>)
                    ] UNSPEC_GOTOFF)))) "drivers/blk_drv/ll_rw_blk.c":128:18 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("request_queue") [flags 0x2]  <var_decl 0x7251b2b2e870 request_queue>)
        (nil)))
(insn 119 118 120 25 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [7 req+0 S4 A32])
            (reg:SI 0 ax [103]))) "drivers/blk_drv/ll_rw_blk.c":128:18 11 {*cmpsi_1}
     (nil))
(jump_insn 120 119 212 25 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":128:18 806 {*jcc}
     (nil)
 -> 117)
(note 212 120 213 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(jump_insn 213 212 214 34 (set (pc)
        (label_ref 121)) 807 {jump}
     (nil)
 -> 121)
(barrier 214 213 216)
(code_label 216 214 215 35 43 (nil) [1 uses])
(note 215 216 217 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 217 215 121 35 (const_int 0 [0]) "drivers/blk_drv/ll_rw_blk.c":130:13 843 {nop}
     (nil))
(code_label 121 217 122 26 36 (nil) [1 uses])
(note 122 121 123 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 26 (set (reg:SI 0 ax [104])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("request_queue") [flags 0x2]  <var_decl 0x7251b2b2e870 request_queue>)
                    ] UNSPEC_GOTOFF)))) "drivers/blk_drv/ll_rw_blk.c":134:8 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("request_queue") [flags 0x2]  <var_decl 0x7251b2b2e870 request_queue>)
        (nil)))
(insn 124 123 125 26 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [7 req+0 S4 A32])
            (reg:SI 0 ax [104]))) "drivers/blk_drv/ll_rw_blk.c":134:8 11 {*cmpsi_1}
     (nil))
(jump_insn 125 124 126 26 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":134:8 806 {*jcc}
     (nil)
 -> 147)
(note 126 125 127 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [2 rw_ahead+0 S4 A32])
            (const_int 0 [0]))) "drivers/blk_drv/ll_rw_blk.c":135:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 128 127 129 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":135:12 806 {*jcc}
     (nil)
 -> 136)
(note 129 128 130 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":136:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 131 130 132 28 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [6 bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":136:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 132 131 133 28 (call (mem:QI (symbol_ref:SI ("unlock_buffer") [flags 0x3]  <function_decl 0x7251b2b3e400 unlock_buffer>) [0 unlock_buffer S1 A8])
        (const_int 16 [0x10])) "drivers/blk_drv/ll_rw_blk.c":136:13 812 {*call}
     (nil)
    (nil))
(insn 133 132 200 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":136:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 200 133 201 28 (set (pc)
        (label_ref 188)) "drivers/blk_drv/ll_rw_blk.c":137:13 807 {jump}
     (nil)
 -> 188)
(barrier 201 200 136)
(code_label 136 201 137 29 39 (nil) [1 uses])
(note 137 136 138 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 29 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":140:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 139 138 140 29 (set (reg/f:SI 0 ax [105])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("wait_for_request") [flags 0x2]  <var_decl 0x7251b2b2e510 wait_for_request>)
                    ] UNSPEC_GOTOFF)))) "drivers/blk_drv/ll_rw_blk.c":140:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("wait_for_request") [flags 0x2]  <var_decl 0x7251b2b2e510 wait_for_request>)
        (nil)))
(insn 140 139 142 29 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [12  S4 A32])
        (reg/f:SI 0 ax [105])) "drivers/blk_drv/ll_rw_blk.c":140:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 142 140 143 29 (call (mem:QI (symbol_ref:SI ("sleep_on") [flags 0x41]  <function_decl 0x7251b2b15b00 sleep_on>) [0 sleep_on S1 A8])
        (const_int 16 [0x10])) "drivers/blk_drv/ll_rw_blk.c":140:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 143 142 202 29 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":140:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 202 143 203 29 (set (pc)
        (label_ref 144)) "drivers/blk_drv/ll_rw_blk.c":141:9 807 {jump}
     (nil)
 -> 144)
(barrier 203 202 147)
(code_label 147 203 148 30 38 (nil) [1 uses])
(note 148 147 149 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 30 (set (reg/f:SI 0 ax [106])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [6 bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":144:18 75 {*movsi_internal}
     (nil))
(insn 150 149 151 30 (set (reg:HI 0 ax [orig:87 _5 ] [87])
        (mem:HI (plus:SI (reg/f:SI 0 ax [106])
                (const_int 8 [0x8])) [11 bh_25(D)->b_dev+0 S2 A32])) "drivers/blk_drv/ll_rw_blk.c":144:18 76 {*movhi_internal}
     (nil))
(insn 151 150 152 30 (set (reg:SI 1 dx [orig:88 _6 ] [88])
        (zero_extend:SI (reg:HI 0 ax [orig:87 _5 ] [87]))) "drivers/blk_drv/ll_rw_blk.c":144:18 144 {*zero_extendhisi2}
     (nil))
(insn 152 151 153 30 (set (reg/f:SI 0 ax [107])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":144:14 75 {*movsi_internal}
     (nil))
(insn 153 152 154 30 (set (mem:SI (reg/f:SI 0 ax [107]) [2 req_32->dev+0 S4 A32])
        (reg:SI 1 dx [orig:88 _6 ] [88])) "drivers/blk_drv/ll_rw_blk.c":144:14 75 {*movsi_internal}
     (nil))
(insn 154 153 155 30 (set (reg/f:SI 0 ax [108])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":145:14 75 {*movsi_internal}
     (nil))
(insn 155 154 156 30 (set (reg:SI 1 dx [109])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 rw+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":145:14 75 {*movsi_internal}
     (nil))
(insn 156 155 157 30 (set (mem:SI (plus:SI (reg/f:SI 0 ax [108])
                (const_int 4 [0x4])) [2 req_32->cmd+0 S4 A32])
        (reg:SI 1 dx [109])) "drivers/blk_drv/ll_rw_blk.c":145:14 75 {*movsi_internal}
     (nil))
(insn 157 156 158 30 (set (reg/f:SI 0 ax [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":146:17 75 {*movsi_internal}
     (nil))
(insn 158 157 159 30 (set (mem:SI (plus:SI (reg/f:SI 0 ax [110])
                (const_int 8 [0x8])) [2 req_32->errors+0 S4 A32])
        (const_int 0 [0])) "drivers/blk_drv/ll_rw_blk.c":146:17 75 {*movsi_internal}
     (nil))
(insn 159 158 160 30 (set (reg/f:SI 0 ax [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [6 bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":147:21 75 {*movsi_internal}
     (nil))
(insn 160 159 161 30 (set (reg:SI 0 ax [orig:89 _7 ] [89])
        (mem:SI (plus:SI (reg/f:SI 0 ax [111])
                (const_int 4 [0x4])) [3 bh_25(D)->b_blocknr+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":147:21 75 {*movsi_internal}
     (nil))
(insn 161 160 162 30 (parallel [
            (set (reg:SI 1 dx [orig:90 _8 ] [90])
                (ashift:SI (reg:SI 0 ax [orig:89 _7 ] [89])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":147:33 655 {*ashlsi3_1}
     (nil))
(insn 162 161 163 30 (set (reg/f:SI 0 ax [112])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":147:17 75 {*movsi_internal}
     (nil))
(insn 163 162 164 30 (set (mem:SI (plus:SI (reg/f:SI 0 ax [112])
                (const_int 12 [0xc])) [3 req_32->sector+0 S4 A32])
        (reg:SI 1 dx [orig:90 _8 ] [90])) "drivers/blk_drv/ll_rw_blk.c":147:17 75 {*movsi_internal}
     (nil))
(insn 164 163 165 30 (set (reg/f:SI 0 ax [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":148:21 75 {*movsi_internal}
     (nil))
(insn 165 164 166 30 (set (mem:SI (plus:SI (reg/f:SI 0 ax [113])
                (const_int 16 [0x10])) [3 req_32->nr_sectors+0 S4 A32])
        (const_int 2 [0x2])) "drivers/blk_drv/ll_rw_blk.c":148:21 75 {*movsi_internal}
     (nil))
(insn 166 165 167 30 (set (reg/f:SI 0 ax [114])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [6 bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":149:21 75 {*movsi_internal}
     (nil))
(insn 167 166 168 30 (set (reg/f:SI 1 dx [orig:91 _9 ] [91])
        (mem/f:SI (reg/f:SI 0 ax [114]) [4 bh_25(D)->b_data+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":149:21 75 {*movsi_internal}
     (nil))
(insn 168 167 169 30 (set (reg/f:SI 0 ax [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":149:17 75 {*movsi_internal}
     (nil))
(insn 169 168 170 30 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [115])
                (const_int 20 [0x14])) [4 req_32->buffer+0 S4 A32])
        (reg/f:SI 1 dx [orig:91 _9 ] [91])) "drivers/blk_drv/ll_rw_blk.c":149:17 75 {*movsi_internal}
     (nil))
(insn 170 169 171 30 (set (reg/f:SI 0 ax [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":150:18 75 {*movsi_internal}
     (nil))
(insn 171 170 172 30 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [116])
                (const_int 24 [0x18])) [5 req_32->waiting+0 S4 A32])
        (const_int 0 [0])) "drivers/blk_drv/ll_rw_blk.c":150:18 75 {*movsi_internal}
     (nil))
(insn 172 171 173 30 (set (reg/f:SI 0 ax [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":151:15 75 {*movsi_internal}
     (nil))
(insn 173 172 174 30 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [117])
                (const_int 32 [0x20])) [7 req_32->next+0 S4 A32])
        (const_int 0 [0])) "drivers/blk_drv/ll_rw_blk.c":151:15 75 {*movsi_internal}
     (nil))
(insn 174 173 175 30 (set (reg/f:SI 0 ax [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":152:13 75 {*movsi_internal}
     (nil))
(insn 175 174 176 30 (set (reg/f:SI 1 dx [119])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [6 bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":152:13 75 {*movsi_internal}
     (nil))
(insn 176 175 177 30 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [118])
                (const_int 28 [0x1c])) [6 req_32->bh+0 S4 A32])
        (reg/f:SI 1 dx [119])) "drivers/blk_drv/ll_rw_blk.c":152:13 75 {*movsi_internal}
     (nil))
(insn 177 176 178 30 (set (reg:SI 0 ax [orig:92 major.1_10 ] [92])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [2 major+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":153:25 75 {*movsi_internal}
     (nil))
(insn 178 177 179 30 (parallel [
            (set (reg:SI 1 dx [orig:93 _11 ] [93])
                (ashift:SI (reg:SI 0 ax [orig:92 major.1_10 ] [92])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":153:25 655 {*ashlsi3_1}
     (nil))
(insn 179 178 180 30 (set (reg:SI 0 ax [120])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("blk_dev") [flags 0x2]  <var_decl 0x7251b2b2e480 blk_dev>)
                    ] UNSPEC_GOTOFF)))) "drivers/blk_drv/ll_rw_blk.c":153:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("blk_dev") [flags 0x2]  <var_decl 0x7251b2b2e480 blk_dev>)
        (nil)))
(insn 180 179 181 30 (parallel [
            (set (reg/f:SI 0 ax [orig:94 _12 ] [94])
                (plus:SI (reg:SI 0 ax [120])
                    (reg:SI 1 dx [orig:93 _11 ] [93])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":153:5 209 {*addsi_1}
     (nil))
(insn 181 180 182 30 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":153:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 182 181 183 30 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [7 req+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":153:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 183 182 184 30 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg/f:SI 0 ax [orig:94 _12 ] [94])) "drivers/blk_drv/ll_rw_blk.c":153:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 184 183 185 30 (call (mem:QI (symbol_ref:SI ("add_request") [flags 0x3]  <function_decl 0x7251b2b3e600 add_request>) [0 add_request S1 A8])
        (const_int 16 [0x10])) "drivers/blk_drv/ll_rw_blk.c":153:5 812 {*call}
     (nil)
    (nil))
(insn 185 184 204 30 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":153:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 204 185 205 30 (set (pc)
        (label_ref 188)) 807 {jump}
     (nil)
 -> 188)
(barrier 205 204 207)
(code_label 207 205 206 32 41 (nil) [1 uses])
(note 206 207 208 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 208 206 188 32 (const_int 0 [0]) "drivers/blk_drv/ll_rw_blk.c":100:13 843 {nop}
     (nil))
(code_label 188 208 189 31 21 (nil) [3 uses])
(note 189 188 219 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(note 219 189 0 NOTE_INSN_DELETED)

;; Function ll_rw_block (ll_rw_block, funcdef_no=9, decl_uid=1105, cgraph_uid=10, symbol_order=12)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 6:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =rm  (1) 0  (2) cI {*lshrhi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 21:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 26:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 32:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 37:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5
EBB 6

********** Pseudo live ranges #1: **********

  BB 6
  BB 4
   Insn 42: point = 0, n_alt = -1
   Insn 26: point = 0, n_alt = 0
   Insn 25: point = 0, n_alt = 0
   Insn 24: point = 0, n_alt = -2
   Insn 23: point = 1, n_alt = 0
   Insn 22: point = 2, n_alt = 0
   Insn 21: point = 3, n_alt = 0
  BB 5
   Insn 37: point = 4, n_alt = 0
   Insn 36: point = 4, n_alt = 0
   Insn 35: point = 4, n_alt = 0
   Insn 34: point = 5, n_alt = 0
   Insn 33: point = 5, n_alt = 0
   Insn 32: point = 5, n_alt = 0
   Insn 31: point = 5, n_alt = 0
  BB 3
   Insn 18: point = 6, n_alt = -1
   Insn 17: point = 6, n_alt = 0
   Insn 16: point = 7, n_alt = 0
   Insn 15: point = 9, n_alt = 0
  BB 2
   Insn 13: point = 11, n_alt = -1
   Insn 12: point = 11, n_alt = 0
   Insn 9: point = 11, n_alt = 1
   Insn 8: point = 12, n_alt = 0
   Insn 7: point = 14, n_alt = 0
   Insn 6: point = 16, n_alt = 2
   Insn 5: point = 18, n_alt = 0
   Insn 44: point = 19, n_alt = 0
 r82: [6..19] [0..3]
 r83: [15..16]
 r84: [13..14]
 r85: [6..7]
 r86: [4..5]
 r87: [17..18]
 r88: [11..12]
 r89: [8..9]
 r90: [1..2]
Compressing live ranges: from 20 to 16 - 80%
Ranges after the compression:
 r82: [4..15] [0..1]
 r83: [12..13]
 r84: [10..11]
 r85: [4..5]
 r86: [2..3]
 r87: [14..15]
 r88: [8..9]
 r89: [6..7]
 r90: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 44
changing reg in insn 24
changing reg in insn 22
changing reg in insn 16
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 16
changing reg in insn 17
changing reg in insn 31
changing reg in insn 35
changing reg in insn 5
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 15
changing reg in insn 16
changing reg in insn 22
changing reg in insn 23
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 36.


ll_rw_block

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,4u} r1={10d,7u} r2={3d} r3={1d,1u} r7={9d,27u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={10d,2u} r18={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 209{168d,41u,0e} in 26{24 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 44 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 44 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 44 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 1 dx [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [6 bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":160:18 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:HI 1 dx [orig:83 _1 ] [83])
        (mem:HI (plus:SI (reg/f:SI 1 dx [87])
                (const_int 8 [0x8])) [11 bh_7(D)->b_dev+0 S2 A32])) "drivers/blk_drv/ll_rw_blk.c":160:18 76 {*movhi_internal}
     (nil))
(insn 7 6 8 2 (parallel [
            (set (reg:HI 1 dx [orig:84 _2 ] [84])
                (lshiftrt:HI (reg:HI 1 dx [orig:83 _1 ] [83])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":160:18 711 {*lshrhi3_1}
     (nil))
(insn 8 7 9 2 (set (reg:SI 1 dx [88])
        (zero_extend:SI (reg:HI 1 dx [orig:84 _2 ] [84]))) "drivers/blk_drv/ll_rw_blk.c":160:16 144 {*zero_extendhisi2}
     (nil))
(insn 9 8 12 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 major+0 S4 A32])
        (reg:SI 1 dx [88])) "drivers/blk_drv/ll_rw_blk.c":160:16 75 {*movsi_internal}
     (nil))
(insn 12 9 13 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [2 major+0 S4 A32])
            (const_int 6 [0x6]))) "drivers/blk_drv/ll_rw_blk.c":160:8 11 {*cmpsi_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":160:8 806 {*jcc}
     (nil)
 -> 19)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:SI 1 dx [89])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 major+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":161:24 75 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg/f:SI 1 dx [orig:85 _3 ] [85])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [89])
                        (const_int 8 [0x8]))
                    (reg:SI 0 ax [82]))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("blk_dev") [flags 0x2]  <var_decl 0x7251b2b2e480 blk_dev>)
                        ] UNSPEC_GOTOFF))) [9 blk_dev[major_8].request_fn+0 S4 A64])) "drivers/blk_drv/ll_rw_blk.c":161:24 75 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 1 dx [orig:85 _3 ] [85])
            (const_int 0 [0]))) "drivers/blk_drv/ll_rw_blk.c":160:50 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 18 17 19 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":160:50 806 {*jcc}
     (nil)
 -> 29)
(code_label 19 18 20 4 45 (nil) [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":162:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 22 21 23 4 (set (reg/f:SI 1 dx [90])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7251b2b57d80 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "drivers/blk_drv/ll_rw_blk.c":162:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7251b2b57d80 *.LC2>)
        (nil)))
(insn 23 22 24 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg/f:SI 1 dx [90])) "drivers/blk_drv/ll_rw_blk.c":162:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 24 23 25 4 (set (reg:SI 3 bx)
        (reg:SI 0 ax [82])) "drivers/blk_drv/ll_rw_blk.c":162:9 75 {*movsi_internal}
     (nil))
(call_insn 25 24 26 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7251b2b38900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "drivers/blk_drv/ll_rw_blk.c":162:9 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 26 25 42 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":162:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 42 26 43 4 (set (pc)
        (label_ref 40)) "drivers/blk_drv/ll_rw_blk.c":163:9 807 {jump}
     (nil)
 -> 40)
(barrier 43 42 29)
(code_label 29 43 30 5 46 (nil) [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg:SI 0 ax [orig:86 major.2_4 ] [86])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 major+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":166:5 75 {*movsi_internal}
     (nil))
(insn 32 31 33 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":166:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 33 32 34 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [6 bh+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":166:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 34 33 35 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [2 rw+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":166:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 35 34 36 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 0 ax [orig:86 major.2_4 ] [86])) "drivers/blk_drv/ll_rw_blk.c":166:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 36 35 37 5 (call (mem:QI (symbol_ref:SI ("make_request") [flags 0x3]  <function_decl 0x7251b2b3e800 make_request>) [0 make_request S1 A8])
        (const_int 16 [0x10])) "drivers/blk_drv/ll_rw_blk.c":166:5 812 {*call}
     (nil)
    (nil))
(insn 37 36 40 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":166:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 40 37 41 6 44 (nil) [1 uses])
(note 41 40 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 45 41 0 NOTE_INSN_DELETED)

;; Function blk_dev_init (blk_dev_init, funcdef_no=10, decl_uid=1400, cgraph_uid=11, symbol_order=13)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 27:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 29:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) rm  (1) re {*cmpsi_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 6 5 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 45: point = 0, n_alt = -1
  BB 5
  BB 6
   Insn 43: point = 0, n_alt = -1
  BB 4
   Insn 36: point = 0, n_alt = -1
   Insn 35: point = 0, n_alt = 0
  BB 2
   Insn 40: point = 1, n_alt = -1
   Insn 5: point = 1, n_alt = 1
   Insn 46: point = 1, n_alt = 0
  BB 3
   Insn 29: point = 2, n_alt = 0
   Insn 28: point = 2, n_alt = 1
   Insn 27: point = 3, n_alt = 0
   Insn 26: point = 5, n_alt = 0
   Insn 25: point = 7, n_alt = -2
   Insn 24: point = 9, n_alt = 0
   Insn 23: point = 11, n_alt = 0
   Insn 22: point = 13, n_alt = 0
   Insn 21: point = 14, n_alt = -2
   Insn 20: point = 15, n_alt = 0
   Insn 19: point = 16, n_alt = 0
   Insn 18: point = 17, n_alt = 1
   Insn 17: point = 18, n_alt = 0
   Insn 16: point = 20, n_alt = -2
   Insn 15: point = 22, n_alt = -2
   Insn 14: point = 24, n_alt = 0
   Insn 13: point = 26, n_alt = 0
   Insn 12: point = 28, n_alt = 0
   Insn 11: point = 29, n_alt = -2
   Insn 10: point = 30, n_alt = 0
   Insn 9: point = 31, n_alt = 0
 r82: [0..32]
 r83: [27..31]
 r84: [19..30]
 r85: [19..20]
 r86: [25..29] [21..22]
 r87: [23..24]
 r88: [17..18]
 r89: [12..16]
 r90: [6..15]
 r91: [10..14] [6..7]
 r92: [8..9]
 r93: [4..5]
 r94: [2..3]
Compressing live ranges: from 33 to 20 - 60%
Ranges after the compression:
 r82: [0..19]
 r83: [18..19]
 r84: [12..19]
 r85: [12..13]
 r86: [18..19] [14..15]
 r87: [16..17]
 r88: [10..11]
 r89: [8..9]
 r90: [4..9]
 r91: [8..9] [4..5]
 r92: [6..7]
 r93: [2..3]
 r94: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=24)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
changing reg in insn 46
changing reg in insn 20
changing reg in insn 10
changing reg in insn 9
changing reg in insn 13
changing reg in insn 11
changing reg in insn 13
changing reg in insn 10
changing reg in insn 17
changing reg in insn 16
changing reg in insn 17
changing reg in insn 15
changing reg in insn 13
changing reg in insn 12
changing reg in insn 11
changing reg in insn 16
changing reg in insn 14
changing reg in insn 13
changing reg in insn 12
changing reg in insn 14
changing reg in insn 15
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 23
changing reg in insn 21
changing reg in insn 23
changing reg in insn 20
changing reg in insn 26
changing reg in insn 25
changing reg in insn 23
changing reg in insn 22
changing reg in insn 21
changing reg in insn 26
changing reg in insn 24
changing reg in insn 23
changing reg in insn 22
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
deleting insn with uid = 15.
deleting insn with uid = 16.
deleting insn with uid = 25.
starting the processing of deferred insns
ending the processing of deferred insns


blk_dev_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;;  ref usage 	r0={12d,11u} r1={2d,2u} r2={3d,4u,2e} r3={2d,2u} r7={1d,13u} r17={12d,1u} 
;;    total ref usage 67{32d,33u,2e} in 25{25 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 46 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 46 3 2 2 (parallel [
            (set (reg:SI 1 dx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 46 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 40 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 i+0 S4 A32])
        (const_int 0 [0])) "drivers/blk_drv/ll_rw_blk.c":176:12 75 {*movsi_internal}
     (nil))
(jump_insn 40 5 41 2 (set (pc)
        (label_ref 30)) "drivers/blk_drv/ll_rw_blk.c":176:5 807 {jump}
     (nil)
 -> 30)
(barrier 41 40 32)
(code_label 32 41 8 3 50 (nil) [1 uses])
(note 8 32 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:SI 2 cx [83])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 i+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":177:30 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (set (reg:SI 3 bx [84])
        (plus:SI (reg:SI 1 dx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("request_queue") [flags 0x2]  <var_decl 0x7251b2b2e870 request_queue>)
                    ] UNSPEC_GOTOFF)))) "drivers/blk_drv/ll_rw_blk.c":177:30 205 {*leasi}
     (nil))
(insn 11 10 12 3 (set (reg:SI 0 ax [86])
        (reg:SI 2 cx [83])) "drivers/blk_drv/ll_rw_blk.c":177:30 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (parallel [
            (set (reg:SI 0 ax [86])
                (ashift:SI (reg:SI 0 ax [86])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":177:30 655 {*ashlsi3_1}
     (nil))
(insn 13 12 14 3 (parallel [
            (set (reg:SI 0 ax [86])
                (plus:SI (reg:SI 0 ax [86])
                    (reg:SI 2 cx [83])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":177:30 209 {*addsi_1}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 cx [83])
            (const_int 9 [0x9]))
        (nil)))
(insn 14 13 17 3 (parallel [
            (set (reg:SI 0 ax [87])
                (ashift:SI (reg:SI 0 ax [86])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":177:30 655 {*ashlsi3_1}
     (nil))
(insn 17 14 18 3 (parallel [
            (set (reg/f:SI 0 ax [88])
                (plus:SI (reg:SI 0 ax [85])
                    (reg:SI 3 bx [84])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":177:30 209 {*addsi_1}
     (nil))
(insn 18 17 19 3 (set (mem:SI (reg/f:SI 0 ax [88]) [2 request_queue[i_1].dev+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "drivers/blk_drv/ll_rw_blk.c":177:30 75 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:SI 2 cx [89])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 i+0 S4 A32])) "drivers/blk_drv/ll_rw_blk.c":178:31 75 {*movsi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:SI 3 bx [90])
        (plus:SI (reg:SI 1 dx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("request_queue") [flags 0x2]  <var_decl 0x7251b2b2e870 request_queue>)
                    ] UNSPEC_GOTOFF)))) "drivers/blk_drv/ll_rw_blk.c":178:31 205 {*leasi}
     (nil))
(insn 21 20 22 3 (set (reg:SI 0 ax [91])
        (reg:SI 2 cx [89])) "drivers/blk_drv/ll_rw_blk.c":178:31 75 {*movsi_internal}
     (nil))
(insn 22 21 23 3 (parallel [
            (set (reg:SI 0 ax [91])
                (ashift:SI (reg:SI 0 ax [91])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":178:31 655 {*ashlsi3_1}
     (nil))
(insn 23 22 24 3 (parallel [
            (set (reg:SI 0 ax [91])
                (plus:SI (reg:SI 0 ax [91])
                    (reg:SI 2 cx [89])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":178:31 209 {*addsi_1}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 cx [89])
            (const_int 9 [0x9]))
        (nil)))
(insn 24 23 26 3 (parallel [
            (set (reg:SI 0 ax [92])
                (ashift:SI (reg:SI 0 ax [91])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":178:31 655 {*ashlsi3_1}
     (nil))
(insn 26 24 27 3 (parallel [
            (set (reg:SI 0 ax [93])
                (plus:SI (reg:SI 0 ax [91])
                    (reg:SI 3 bx [90])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":178:31 209 {*addsi_1}
     (nil))
(insn 27 26 28 3 (parallel [
            (set (reg/f:SI 0 ax [94])
                (plus:SI (reg:SI 0 ax [93])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":178:31 209 {*addsi_1}
     (nil))
(insn 28 27 29 3 (set (mem/f:SI (reg/f:SI 0 ax [94]) [7 request_queue[i_1].next+0 S4 A32])
        (const_int 0 [0])) "drivers/blk_drv/ll_rw_blk.c":178:31 75 {*movsi_internal}
     (nil))
(insn 29 28 30 3 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/blk_drv/ll_rw_blk.c":176:34 209 {*addsi_1}
     (nil))
(code_label 30 29 31 4 49 (nil) [1 uses])
(note 31 30 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 31 36 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [2 i+0 S4 A32])
            (const_int 31 [0x1f]))) "drivers/blk_drv/ll_rw_blk.c":176:19 11 {*cmpsi_1}
     (nil))
(jump_insn 36 35 42 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "drivers/blk_drv/ll_rw_blk.c":176:19 806 {*jcc}
     (nil)
 -> 32)
(note 42 36 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 37 6 (const_int 0 [0]) "drivers/blk_drv/ll_rw_blk.c":180:1 843 {nop}
     (nil))
(note 37 43 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 44 37 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 47 7 (const_int 0 [0]) "drivers/blk_drv/ll_rw_blk.c":180:1 843 {nop}
     (nil))
(note 47 45 0 NOTE_INSN_DELETED)
