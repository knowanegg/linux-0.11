
;; Function rs_write (rs_write, funcdef_no=0, decl_uid=1028, cgraph_uid=1, symbol_order=0)

scanning new insn with uid = 32.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a5 (r91,l0) best Q_REGS, allocno Q_REGS
    r90: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best DREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a4 (r87,l0) best Q_REGS, allocno Q_REGS
    r86: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r86,l0) best DREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a1(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a3(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:10000
  a5(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a6(r95,l0) costs: AREG:4000 DREG:2000 CREG:2000 BREG:2000 SIREG:4000 DIREG:4000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a7(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a8(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a12(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 31(l0): point = 0
   Insn 27(l0): point = 3
   Insn 24(l0): point = 6
   Insn 23(l0): point = 8
   Insn 22(l0): point = 10
   Insn 21(l0): point = 12
   Insn 20(l0): point = 14
   Insn 19(l0): point = 16
   Insn 18(l0): point = 18
   Insn 16(l0): point = 20
   Insn 17(l0): point = 22
   Insn 15(l0): point = 24
   Insn 14(l0): point = 26
   Insn 13(l0): point = 28
   Insn 11(l0): point = 31
   Insn 10(l0): point = 33
   Insn 9(l0): point = 35
   Insn 8(l0): point = 37
   Insn 7(l0): point = 39
   Insn 6(l0): point = 41
   Insn 5(l0): point = 43
   Insn 32(l0): point = 45
 a0(r88): [7..14]
 a1(r90): [7..8]
 a2(r89): [9..10]
 a3(r96): [11..12]
 a4(r87): [15..16]
 a5(r91): [17..18]
 a6(r95): [21..22]
 a7(r86): [23..24]
 a8(r85): [25..26]
 a9(r94): [27..28]
 a10(r84): [34..35]
 a11(r83): [34..39]
 a12(r93): [36..37]
 a13(r92): [40..41]
 a14(r82): [45..45]
Compressing live ranges: from 48 to 25 - 52%
Ranges after the compression:
 a0(r88): [0..5]
 a1(r90): [0..1]
 a2(r89): [2..3]
 a3(r96): [4..5]
 a4(r87): [6..7]
 a5(r91): [8..9]
 a6(r95): [10..11]
 a7(r86): [12..13]
 a8(r85): [14..15]
 a9(r94): [16..17]
 a10(r84): [18..19]
 a11(r83): [18..21]
 a12(r93): [20..21]
 a13(r92): [22..23]
 a14(r82): [24..24]
  pref0:a6(r95)<-hr0@2000
  pref1:a1(r90)<-hr1@1000
  pref2:a0(r88)<-hr0@1000
  pref3:a7(r86)<-hr1@1000
  regions=1, blocks=6, points=25
    allocnos=15 (big 0), copies=0, conflicts=0, ranges=15
Disposition:
   14:r82  l0     0   11:r83  l0     1   10:r84  l0     0    8:r85  l0     0
    7:r86  l0     0    4:r87  l0     0    0:r88  l0     0    2:r89  l0     1
    1:r90  l0     1    5:r91  l0     0   13:r92  l0     0   12:r93  l0     0
    9:r94  l0     0    6:r95  l0     0    3:r96  l0     1
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


rs_write

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 17 [flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r6={1d,5u} r7={1d,5u} r16={1d,8u} r17={9d,1u} r19={1d,7u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 71{31d,40u,0e} in 22{22 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 32 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 32 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 32 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] drivers/chr_drv/serial.c:16)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":16:5 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 6 5 7 2 (set (reg/f:SI 92)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 tty+0 S4 A32])) "drivers/chr_drv/serial.c":17:10 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 83 [ _1 ])
        (mem:SI (plus:SI (reg/f:SI 92)
                (const_int 1092 [0x444])) [4 tty_10(D)->write_q.head+0 S4 A32])) "drivers/chr_drv/serial.c":17:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 93)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 tty+0 S4 A32])) "drivers/chr_drv/serial.c":17:10 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 84 [ _2 ])
        (mem:SI (plus:SI (reg/f:SI 93)
                (const_int 1096 [0x448])) [4 tty_10(D)->write_q.tail+0 S4 A32])) "drivers/chr_drv/serial.c":17:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (nil)))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 83 [ _1 ])
            (reg:SI 84 [ _2 ]))) "drivers/chr_drv/serial.c":17:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
            (nil))))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "drivers/chr_drv/serial.c":17:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:SI 94)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 tty+0 S4 A32])) "drivers/chr_drv/serial.c":18:9 75 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:SI 85 [ _3 ])
        (mem:SI (plus:SI (reg/f:SI 94)
                (const_int 1088 [0x440])) [4 tty_10(D)->write_q.data+0 S4 A32])) "drivers/chr_drv/serial.c":18:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (nil)))
(insn 15 14 17 3 (parallel [
            (set (reg:SI 86 [ _4 ])
                (plus:SI (reg:SI 85 [ _3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":18:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 17 15 16 3 (parallel [
            (set (reg:QI 95 [ _v ])
                (asm_operands/v:QI ("inb %%dx, %%al
	jmp 1f
1:	jmp 1f
1:") ("=a") 0 [
                        (reg:SI 86 [ _4 ])
                    ]
                     [
                        (asm_input:SI ("d") drivers/chr_drv/serial.c:18)
                    ]
                     [] drivers/chr_drv/serial.c:18))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":18:9 -1
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 16 17 18 3 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -1 [0xffffffffffffffff])) [0 _v+0 S1 A8])
        (reg:QI 95 [ _v ])) "drivers/chr_drv/serial.c":18:9 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 95 [ _v ])
        (nil)))
(insn 18 16 19 3 (set (reg:QI 91 [ _12 ])
        (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -1 [0xffffffffffffffff])) [0 _v+0 S1 A8])) "drivers/chr_drv/serial.c":18:9 77 {*movqi_internal}
     (nil))
(insn 19 18 20 3 (parallel [
            (set (reg:QI 87 [ _5 ])
                (ior:QI (reg:QI 91 [ _12 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":18:9 530 {*iorqi_1}
     (expr_list:REG_DEAD (reg:QI 91 [ _12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 20 19 21 3 (set (reg:SI 88 [ _6 ])
        (zero_extend:SI (reg:QI 87 [ _5 ]))) "drivers/chr_drv/serial.c":18:9 143 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 87 [ _5 ])
        (nil)))
(insn 21 20 22 3 (set (reg/f:SI 96)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 tty+0 S4 A32])) "drivers/chr_drv/serial.c":18:9 75 {*movsi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:SI 89 [ _7 ])
        (mem:SI (plus:SI (reg/f:SI 96)
                (const_int 1088 [0x440])) [4 tty_10(D)->write_q.data+0 S4 A32])) "drivers/chr_drv/serial.c":18:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96)
        (nil)))
(insn 23 22 24 3 (parallel [
            (set (reg:SI 90 [ _8 ])
                (plus:SI (reg:SI 89 [ _7 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":18:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 24 23 25 3 (parallel [
            (asm_operands/v ("outb %%al, %%dx") ("") 0 [
                    (reg:SI 88 [ _6 ])
                    (reg:SI 90 [ _8 ])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/serial.c:18)
                    (asm_input:SI ("d") drivers/chr_drv/serial.c:18)
                ]
                 [] drivers/chr_drv/serial.c:18)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":18:9 -1
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(code_label 25 24 26 4 2 (nil) [1 uses])
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 30 4 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] drivers/chr_drv/serial.c:20)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":20:5 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 30 27 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 0 5 (const_int 0 [0]) "drivers/chr_drv/serial.c":21:1 843 {nop}
     (nil))

;; Function init (init, funcdef_no=1, decl_uid=1055, cgraph_uid=2, symbol_order=1)

scanning new insn with uid = 36.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r102: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r102,l0) best DREG, allocno GENERAL_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r101,l0) best AREG, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r92,l0) best DREG, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best DREG, allocno GENERAL_REGS
    r86: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r86,l0) best DREG, allocno GENERAL_REGS
    r85: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r85,l0) best DREG, allocno GENERAL_REGS
    r84: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r84,l0) best DREG, allocno GENERAL_REGS
    r83: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r83,l0) best DREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r101,l0) costs: AREG:4000 DREG:2000 CREG:2000 BREG:2000 SIREG:4000 DIREG:4000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a1(r102,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a2(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a3(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a4(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a6(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a7(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a9(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a10(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a12(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a13(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a15(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a16(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a17(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a18(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a19(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 35(l0): point = 0
   Insn 28(l0): point = 3
   Insn 30(l0): point = 5
   Insn 29(l0): point = 7
   Insn 27(l0): point = 9
   Insn 26(l0): point = 11
   Insn 25(l0): point = 13
   Insn 24(l0): point = 15
   Insn 23(l0): point = 17
   Insn 22(l0): point = 19
   Insn 21(l0): point = 21
   Insn 20(l0): point = 23
   Insn 19(l0): point = 25
   Insn 18(l0): point = 27
   Insn 17(l0): point = 29
   Insn 16(l0): point = 31
   Insn 15(l0): point = 33
   Insn 14(l0): point = 35
   Insn 13(l0): point = 37
   Insn 12(l0): point = 39
   Insn 11(l0): point = 41
   Insn 10(l0): point = 43
   Insn 9(l0): point = 45
   Insn 8(l0): point = 47
   Insn 7(l0): point = 49
   Insn 6(l0): point = 51
   Insn 5(l0): point = 53
   Insn 36(l0): point = 55
 a0(r101): [4..5]
 a1(r102): [6..7]
 a2(r100): [10..11]
 a3(r87): [10..13]
 a4(r99): [14..15]
 a5(r98): [18..19]
 a6(r86): [18..21]
 a7(r97): [22..23]
 a8(r96): [26..27]
 a9(r85): [26..29]
 a10(r95): [30..31]
 a11(r94): [34..35]
 a12(r84): [34..37]
 a13(r93): [38..39]
 a14(r91): [42..45]
 a15(r92): [42..43]
 a16(r90): [48..49]
 a17(r83): [48..51]
 a18(r89): [52..53]
 a19(r82): [55..55]
Compressing live ranges: from 58 to 27 - 46%
Ranges after the compression:
 a0(r101): [0..1]
 a1(r102): [2..3]
 a2(r100): [4..5]
 a3(r87): [4..5]
 a4(r99): [6..7]
 a5(r98): [8..9]
 a6(r86): [8..9]
 a7(r97): [10..11]
 a8(r96): [12..13]
 a9(r85): [12..13]
 a10(r95): [14..15]
 a11(r94): [16..17]
 a12(r84): [16..17]
 a13(r93): [18..19]
 a14(r91): [20..21]
 a15(r92): [20..21]
 a16(r90): [22..23]
 a17(r83): [22..23]
 a18(r89): [24..25]
 a19(r82): [26..26]
  pref0:a1(r102)<-hr1@1000
  pref1:a0(r101)<-hr0@2000
  pref2:a2(r100)<-hr0@1000
  pref3:a5(r98)<-hr0@1000
  pref4:a8(r96)<-hr0@1000
  pref5:a11(r94)<-hr0@1000
  pref6:a15(r92)<-hr1@1000
  pref7:a14(r91)<-hr0@1000
  pref8:a16(r90)<-hr0@1000
  pref9:a3(r87)<-hr1@1000
  pref10:a6(r86)<-hr1@1000
  pref11:a9(r85)<-hr1@1000
  pref12:a12(r84)<-hr1@1000
  pref13:a17(r83)<-hr1@1000
  regions=1, blocks=4, points=27
    allocnos=20 (big 0), copies=0, conflicts=0, ranges=20
Disposition:
   19:r82  l0     0   17:r83  l0     1   12:r84  l0     1    9:r85  l0     1
    6:r86  l0     1    3:r87  l0     1   18:r89  l0     0   16:r90  l0     0
   14:r91  l0     0   15:r92  l0     1   13:r93  l0     0   11:r94  l0     0
   10:r95  l0     0    8:r96  l0     0    7:r97  l0     0    5:r98  l0     0
    4:r99  l0     0    2:r100 l0     0    0:r101 l0     0    1:r102 l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


init

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 17 [flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r6={1d,3u} r7={1d,3u} r16={1d,9u,5e} r17={13d} r19={1d,4u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} 
;;    total ref usage 83{40d,38u,5e} in 28{28 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 36 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 36 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 36 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 89)
        (mem/c:SI (reg/f:SI 16 argp) [5 port+0 S4 A32])) "drivers/chr_drv/serial.c":26:5 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 83 [ _1 ])
                (plus:SI (reg:SI 89)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":26:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 89)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [5 port+0 S4 A32])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 7 6 8 2 (set (reg:SI 90)
        (const_int 128 [0x80])) "drivers/chr_drv/serial.c":26:5 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 90)
                    (reg:SI 83 [ _1 ])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/serial.c:26)
                    (asm_input:SI ("d") drivers/chr_drv/serial.c:26)
                ]
                 [] drivers/chr_drv/serial.c:26)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":26:5 -1
     (expr_list:REG_DEAD (reg:SI 90)
        (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 9 8 10 2 (set (reg:SI 91)
        (const_int 48 [0x30])) "drivers/chr_drv/serial.c":27:5 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 92)
        (mem/c:SI (reg/f:SI 16 argp) [5 port+0 S4 A32])) "drivers/chr_drv/serial.c":27:5 75 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 91)
                    (reg:SI 92)
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/serial.c:27)
                    (asm_input:SI ("d") drivers/chr_drv/serial.c:27)
                ]
                 [] drivers/chr_drv/serial.c:27)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":27:5 -1
     (expr_list:REG_DEAD (reg:SI 92)
        (expr_list:REG_DEAD (reg:SI 91)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 12 11 13 2 (set (reg:SI 93)
        (mem/c:SI (reg/f:SI 16 argp) [5 port+0 S4 A32])) "drivers/chr_drv/serial.c":28:5 75 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 84 [ _2 ])
                (plus:SI (reg:SI 93)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":28:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 93)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [5 port+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 14 13 15 2 (set (reg:SI 94)
        (const_int 0 [0])) "drivers/chr_drv/serial.c":28:5 75 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 94)
                    (reg:SI 84 [ _2 ])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/serial.c:28)
                    (asm_input:SI ("d") drivers/chr_drv/serial.c:28)
                ]
                 [] drivers/chr_drv/serial.c:28)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":28:5 -1
     (expr_list:REG_DEAD (reg:SI 94)
        (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 16 15 17 2 (set (reg:SI 95)
        (mem/c:SI (reg/f:SI 16 argp) [5 port+0 S4 A32])) "drivers/chr_drv/serial.c":29:5 75 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:SI 85 [ _3 ])
                (plus:SI (reg:SI 95)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":29:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [5 port+0 S4 A32])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 18 17 19 2 (set (reg:SI 96)
        (const_int 3 [0x3])) "drivers/chr_drv/serial.c":29:5 75 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 96)
                    (reg:SI 85 [ _3 ])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/serial.c:29)
                    (asm_input:SI ("d") drivers/chr_drv/serial.c:29)
                ]
                 [] drivers/chr_drv/serial.c:29)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":29:5 -1
     (expr_list:REG_DEAD (reg:SI 96)
        (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 20 19 21 2 (set (reg:SI 97)
        (mem/c:SI (reg/f:SI 16 argp) [5 port+0 S4 A32])) "drivers/chr_drv/serial.c":30:5 75 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg:SI 86 [ _4 ])
                (plus:SI (reg:SI 97)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":30:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 97)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [5 port+0 S4 A32])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 22 21 23 2 (set (reg:SI 98)
        (const_int 11 [0xb])) "drivers/chr_drv/serial.c":30:5 75 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 98)
                    (reg:SI 86 [ _4 ])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/serial.c:30)
                    (asm_input:SI ("d") drivers/chr_drv/serial.c:30)
                ]
                 [] drivers/chr_drv/serial.c:30)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":30:5 -1
     (expr_list:REG_DEAD (reg:SI 98)
        (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 24 23 25 2 (set (reg:SI 99)
        (mem/c:SI (reg/f:SI 16 argp) [5 port+0 S4 A32])) "drivers/chr_drv/serial.c":31:5 75 {*movsi_internal}
     (nil))
(insn 25 24 26 2 (parallel [
            (set (reg:SI 87 [ _5 ])
                (plus:SI (reg:SI 99)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":31:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 99)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [5 port+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 26 25 27 2 (set (reg:SI 100)
        (const_int 13 [0xd])) "drivers/chr_drv/serial.c":31:5 75 {*movsi_internal}
     (nil))
(insn 27 26 29 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 100)
                    (reg:SI 87 [ _5 ])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/serial.c:31)
                    (asm_input:SI ("d") drivers/chr_drv/serial.c:31)
                ]
                 [] drivers/chr_drv/serial.c:31)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":31:5 -1
     (expr_list:REG_DEAD (reg:SI 100)
        (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 29 27 30 2 (set (reg:SI 102)
        (mem/c:SI (reg/f:SI 16 argp) [5 port+0 S4 A32])) "drivers/chr_drv/serial.c":32:11 75 {*movsi_internal}
     (nil))
(insn 30 29 28 2 (parallel [
            (set (reg:QI 101 [ _v ])
                (asm_operands/v:QI ("inb %%dx, %%al") ("=a") 0 [
                        (reg:SI 102)
                    ]
                     [
                        (asm_input:SI ("d") drivers/chr_drv/serial.c:32)
                    ]
                     [] drivers/chr_drv/serial.c:32))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":32:11 -1
     (expr_list:REG_DEAD (reg:SI 102)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 30 34 2 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -1 [0xffffffffffffffff])) [0 _v+0 S1 A8])
        (reg:QI 101 [ _v ])) "drivers/chr_drv/serial.c":32:11 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 101 [ _v ])
        (nil)))
(note 34 28 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 0 3 (const_int 0 [0]) "drivers/chr_drv/serial.c":33:1 843 {nop}
     (nil))

;; Function rs_init (rs_init, funcdef_no=2, decl_uid=1032, cgraph_uid=3, symbol_order=2)

scanning new insn with uid = 45.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r108: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r108,l0) best DREG, allocno GENERAL_REGS
    r107: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r107,l0) best DREG, allocno GENERAL_REGS
    r106: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r106,l0) best AREG, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r103,l0) best AREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r101,l0) best DREG, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r96,l0) best DREG, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a3 (r93,l0) best Q_REGS, allocno Q_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a1(r108,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a3(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a4(r106,l0) costs: AREG:4000 DREG:2000 CREG:2000 BREG:2000 SIREG:4000 DIREG:4000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a5(r107,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a6(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a7(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:54000
  a10(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a11(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a12(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r101,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a16(r103,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a17(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a18(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a23(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a24(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a25(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 44(l0): point = 0
   Insn 40(l0): point = 3
   Insn 39(l0): point = 5
   Insn 38(l0): point = 7
   Insn 37(l0): point = 9
   Insn 36(l0): point = 11
   Insn 33(l0): point = 13
   Insn 35(l0): point = 15
   Insn 34(l0): point = 17
   Insn 32(l0): point = 19
   Insn 31(l0): point = 21
   Insn 30(l0): point = 23
   Insn 29(l0): point = 25
   Insn 28(l0): point = 27
   Insn 27(l0): point = 29
   Insn 26(l0): point = 31
   Insn 25(l0): point = 33
   Insn 24(l0): point = 35
   Insn 23(l0): point = 37
   Insn 22(l0): point = 39
   Insn 21(l0): point = 41
   Insn 20(l0): point = 43
   Insn 19(l0): point = 45
   Insn 18(l0): point = 47
   Insn 17(l0): point = 49
   Insn 16(l0): point = 51
   Insn 15(l0): point = 53
   Insn 14(l0): point = 55
   Insn 13(l0): point = 57
   Insn 12(l0): point = 59
   Insn 11(l0): point = 61
   Insn 10(l0): point = 63
   Insn 9(l0): point = 65
   Insn 8(l0): point = 67
   Insn 7(l0): point = 69
   Insn 6(l0): point = 71
   Insn 5(l0): point = 73
   Insn 45(l0): point = 75
 a0(r92): [4..7]
 a1(r108): [4..5]
 a2(r91): [8..9]
 a3(r93): [10..11]
 a4(r106): [14..15]
 a5(r107): [16..17]
 a6(r90): [24..25]
 a7(r89): [26..27]
 a8(r105): [28..29]
 a9(r82): [30..75]
 a10(r88): [36..37]
 a11(r87): [38..39]
 a12(r104): [40..41]
 a13(r85): [44..55]
 a14(r86): [44..51]
 a15(r101): [44..47]
 a16(r103): [44..45]
 a17(r102): [48..49]
 a18(r100): [52..53]
 a19(r99): [56..57]
 a20(r83): [60..71]
 a21(r84): [60..67]
 a22(r96): [60..63]
 a23(r98): [60..61]
 a24(r97): [64..65]
 a25(r95): [68..69]
 a26(r94): [72..73]
Compressing live ranges: from 78 to 38 - 48%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r108): [0..1]
 a2(r91): [2..3]
 a3(r93): [4..5]
 a4(r106): [6..7]
 a5(r107): [8..9]
 a6(r90): [10..11]
 a7(r89): [12..13]
 a8(r105): [14..15]
 a9(r82): [16..37]
 a10(r88): [16..17]
 a11(r87): [18..19]
 a12(r104): [20..21]
 a13(r85): [22..27]
 a14(r86): [22..25]
 a15(r101): [22..23]
 a16(r103): [22..23]
 a17(r102): [24..25]
 a18(r100): [26..27]
 a19(r99): [28..29]
 a20(r83): [30..35]
 a21(r84): [30..33]
 a22(r96): [30..31]
 a23(r98): [30..31]
 a24(r97): [32..33]
 a25(r95): [34..35]
 a26(r94): [36..37]
  pref0:a1(r108)<-hr1@1000
  pref1:a5(r107)<-hr1@1000
  pref2:a4(r106)<-hr0@2000
  pref3:a16(r103)<-hr0@1000
  pref4:a15(r101)<-hr1@1000
  pref5:a23(r98)<-hr0@1000
  pref6:a22(r96)<-hr1@1000
  pref7:a0(r92)<-hr0@1000
  regions=1, blocks=4, points=38
    allocnos=27 (big 0), copies=0, conflicts=0, ranges=27
Disposition:
    9:r82  l0     3   20:r83  l0     2   21:r84  l0     4   13:r85  l0     2
   14:r86  l0     4   11:r87  l0     0   10:r88  l0     0    7:r89  l0     0
    6:r90  l0     0    2:r91  l0     0    0:r92  l0     0    3:r93  l0     0
   26:r94  l0     0   25:r95  l0     0   22:r96  l0     1   24:r97  l0     0
   23:r98  l0     0   19:r99  l0     0   18:r100 l0     0   15:r101 l0     1
   17:r102 l0     0   16:r103 l0     0   12:r104 l0     0    8:r105 l0     0
    4:r106 l0     0    5:r107 l0     0    1:r108 l0     1
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


rs_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r6={1d,3u} r7={5d,11u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,2u} r17={10d} r18={2d} r19={1d,5u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,8u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} 
;;    total ref usage 239{184d,55u,0e} in 38{36 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 45 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 45 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 45 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 94)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x781069588ea0 idt>)
                        ] UNSPEC_GOT))) [10  S4 A8])) "drivers/chr_drv/serial.c":38:5 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 83 [ _1 ])
        (plus:SI (reg:SI 94)
            (const_int 288 [0x120]))) "drivers/chr_drv/serial.c":38:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 94)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x781069588ea0 idt>)
                    (const_int 288 [0x120])))
            (nil))))
(insn 7 6 8 2 (set (reg:SI 95)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x781069588ea0 idt>)
                        ] UNSPEC_GOT))) [10  S4 A8])) "drivers/chr_drv/serial.c":38:5 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 84 [ _2 ])
        (plus:SI (reg:SI 95)
            (const_int 292 [0x124]))) "drivers/chr_drv/serial.c":38:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x781069588ea0 idt>)
                    (const_int 292 [0x124])))
            (nil))))
(insn 9 8 10 2 (set (reg:SI 97)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("rs1_interrupt") [flags 0x41]  <function_decl 0x781067cd2f00 rs1_interrupt>)
                        ] UNSPEC_GOT))) [10  S4 A8])) "drivers/chr_drv/serial.c":38:5 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 96)
        (reg:SI 97)) "drivers/chr_drv/serial.c":38:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97)
        (expr_list:REG_EQUAL (symbol_ref:SI ("rs1_interrupt") [flags 0x41]  <function_decl 0x781067cd2f00 rs1_interrupt>)
            (nil))))
(insn 11 10 12 2 (set (reg:SI 98)
        (const_int 524288 [0x80000])) "drivers/chr_drv/serial.c":38:5 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -29184 [0xffffffffffff8e00])
                    (mem:QI (reg/f:SI 83 [ _1 ]) [0 MEM[(char *)_1]+0 S1 A8])
                    (mem:QI (reg/f:SI 84 [ _2 ]) [0 *_2+0 S1 A8])
                    (reg/f:SI 96)
                    (reg:SI 98)
                ]
                 [
                    (asm_input:HI ("i") drivers/chr_drv/serial.c:38)
                    (asm_input:QI ("o") drivers/chr_drv/serial.c:38)
                    (asm_input:QI ("o") drivers/chr_drv/serial.c:38)
                    (asm_input:SI ("d") drivers/chr_drv/serial.c:38)
                    (asm_input:SI ("a") drivers/chr_drv/serial.c:38)
                ]
                 [] drivers/chr_drv/serial.c:38)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":38:5 -1
     (expr_list:REG_DEAD (reg:SI 98)
        (expr_list:REG_DEAD (reg/f:SI 96)
            (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
                (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 13 12 14 2 (set (reg:SI 99)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x781069588ea0 idt>)
                        ] UNSPEC_GOT))) [10  S4 A8])) "drivers/chr_drv/serial.c":39:5 75 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 85 [ _3 ])
        (plus:SI (reg:SI 99)
            (const_int 280 [0x118]))) "drivers/chr_drv/serial.c":39:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 99)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x781069588ea0 idt>)
                    (const_int 280 [0x118])))
            (nil))))
(insn 15 14 16 2 (set (reg:SI 100)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x781069588ea0 idt>)
                        ] UNSPEC_GOT))) [10  S4 A8])) "drivers/chr_drv/serial.c":39:5 75 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 86 [ _4 ])
        (plus:SI (reg:SI 100)
            (const_int 284 [0x11c]))) "drivers/chr_drv/serial.c":39:5 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 100)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x781069588ea0 idt>)
                    (const_int 284 [0x11c])))
            (nil))))
(insn 17 16 18 2 (set (reg:SI 102)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("rs2_interrupt") [flags 0x41]  <function_decl 0x781067cd2600 rs2_interrupt>)
                        ] UNSPEC_GOT))) [10  S4 A8])) "drivers/chr_drv/serial.c":39:5 75 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg/f:SI 101)
        (reg:SI 102)) "drivers/chr_drv/serial.c":39:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102)
        (expr_list:REG_EQUAL (symbol_ref:SI ("rs2_interrupt") [flags 0x41]  <function_decl 0x781067cd2600 rs2_interrupt>)
            (nil))))
(insn 19 18 20 2 (set (reg:SI 103)
        (const_int 524288 [0x80000])) "drivers/chr_drv/serial.c":39:5 75 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -29184 [0xffffffffffff8e00])
                    (mem:QI (reg/f:SI 85 [ _3 ]) [0 MEM[(char *)_3]+0 S1 A8])
                    (mem:QI (reg/f:SI 86 [ _4 ]) [0 *_4+0 S1 A8])
                    (reg/f:SI 101)
                    (reg:SI 103)
                ]
                 [
                    (asm_input:HI ("i") drivers/chr_drv/serial.c:39)
                    (asm_input:QI ("o") drivers/chr_drv/serial.c:39)
                    (asm_input:QI ("o") drivers/chr_drv/serial.c:39)
                    (asm_input:SI ("d") drivers/chr_drv/serial.c:39)
                    (asm_input:SI ("a") drivers/chr_drv/serial.c:39)
                ]
                 [] drivers/chr_drv/serial.c:39)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":39:5 -1
     (expr_list:REG_DEAD (reg:SI 103)
        (expr_list:REG_DEAD (reg/f:SI 101)
            (expr_list:REG_DEAD (reg/f:SI 86 [ _4 ])
                (expr_list:REG_DEAD (reg/f:SI 85 [ _3 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 21 20 22 2 (set (reg/f:SI 104)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("tty_table") [flags 0x40]  <var_decl 0x781069588b40 tty_table>)
                        ] UNSPEC_GOT))) [10  S4 A8])) "drivers/chr_drv/serial.c":40:29 75 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:SI 87 [ _5 ])
        (mem:SI (plus:SI (reg/f:SI 104)
                (const_int 3216 [0xc90])) [4 tty_table[1].read_q.data+0 S4 A32])) "drivers/chr_drv/serial.c":40:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (nil)))
(insn 23 22 24 2 (set (reg:SI 88 [ _6 ])
        (reg:SI 87 [ _5 ])) "drivers/chr_drv/serial.c":40:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (nil)))
(insn 24 23 25 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (reg:SI 88 [ _6 ])) "drivers/chr_drv/serial.c":40:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(call_insn 25 24 26 2 (call (mem:QI (symbol_ref:SI ("init") [flags 0x3]  <function_decl 0x781067d0d000 init>) [0 init S1 A8])
        (const_int 4 [0x4])) "drivers/chr_drv/serial.c":40:5 812 {*call}
     (nil)
    (nil))
(insn 26 25 27 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":40:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 27 26 28 2 (set (reg/f:SI 105)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("tty_table") [flags 0x40]  <var_decl 0x781069588b40 tty_table>)
                        ] UNSPEC_GOT))) [10  S4 A8])) "drivers/chr_drv/serial.c":41:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 28 27 29 2 (set (reg:SI 89 [ _7 ])
        (mem:SI (plus:SI (reg/f:SI 105)
                (const_int 6384 [0x18f0])) [4 tty_table[2].read_q.data+0 S4 A32])) "drivers/chr_drv/serial.c":41:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (nil)))
(insn 29 28 30 2 (set (reg:SI 90 [ _8 ])
        (reg:SI 89 [ _7 ])) "drivers/chr_drv/serial.c":41:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (nil)))
(insn 30 29 31 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (reg:SI 90 [ _8 ])) "drivers/chr_drv/serial.c":41:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(call_insn 31 30 32 2 (call (mem:QI (symbol_ref:SI ("init") [flags 0x3]  <function_decl 0x781067d0d000 init>) [0 init S1 A8])
        (const_int 4 [0x4])) "drivers/chr_drv/serial.c":41:5 812 {*call}
     (nil)
    (nil))
(insn 32 31 34 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":41:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 34 32 35 2 (set (reg:SI 107)
        (const_int 33 [0x21])) "drivers/chr_drv/serial.c":42:5 75 {*movsi_internal}
     (nil))
(insn 35 34 33 2 (parallel [
            (set (reg:QI 106 [ _v ])
                (asm_operands/v:QI ("inb %%dx, %%al
	jmp 1f
1:	jmp 1f
1:") ("=a") 0 [
                        (reg:SI 107)
                    ]
                     [
                        (asm_input:SI ("d") drivers/chr_drv/serial.c:42)
                    ]
                     [] drivers/chr_drv/serial.c:42))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":42:5 -1
     (expr_list:REG_DEAD (reg:SI 107)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 33 35 36 2 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -1 [0xffffffffffffffff])) [0 _v+0 S1 A8])
        (reg:QI 106 [ _v ])) "drivers/chr_drv/serial.c":42:5 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 106 [ _v ])
        (nil)))
(insn 36 33 37 2 (set (reg:QI 93 [ _15 ])
        (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -1 [0xffffffffffffffff])) [0 _v+0 S1 A8])) "drivers/chr_drv/serial.c":42:5 77 {*movqi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:SI 91 [ _9 ])
        (zero_extend:SI (reg:QI 93 [ _15 ]))) "drivers/chr_drv/serial.c":42:5 143 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 93 [ _15 ])
        (nil)))
(insn 38 37 39 2 (parallel [
            (set (reg:SI 92 [ _10 ])
                (and:SI (reg:SI 91 [ _9 ])
                    (const_int 231 [0xe7])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":42:5 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 39 38 40 2 (set (reg:SI 108)
        (const_int 33 [0x21])) "drivers/chr_drv/serial.c":42:5 75 {*movsi_internal}
     (nil))
(insn 40 39 43 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx") ("") 0 [
                    (reg:SI 92 [ _10 ])
                    (reg:SI 108)
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/serial.c:42)
                    (asm_input:SI ("d") drivers/chr_drv/serial.c:42)
                ]
                 [] drivers/chr_drv/serial.c:42)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/serial.c":42:5 -1
     (expr_list:REG_DEAD (reg:SI 108)
        (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(note 43 40 44 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 0 3 (const_int 0 [0]) "drivers/chr_drv/serial.c":43:1 843 {nop}
     (nil))
