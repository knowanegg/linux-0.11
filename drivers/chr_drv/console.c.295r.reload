
;; Function set_origin (set_origin, funcdef_no=1, decl_uid=1393, cgraph_uid=2, symbol_order=26)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r {*set_got}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 6:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) a  (1) d
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 14:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) a  (1) d
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 16:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) a  (1) d
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 24:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) a  (1) d
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 30: point = 0, n_alt = -1
  BB 2
   Insn 26: point = 0, n_alt = -1
   Insn 25: point = 0, n_alt = 0
   Insn 24: point = 1, n_alt = 2
   Insn 23: point = 3, n_alt = 0
   Insn 22: point = 5, n_alt = 0
   Insn 21: point = 7, n_alt = 0
   Insn 20: point = 9, n_alt = 0
   Insn 19: point = 10, n_alt = 0
   Insn 18: point = 11, n_alt = 0
   Insn 17: point = 12, n_alt = 0
   Insn 16: point = 13, n_alt = 2
   Insn 15: point = 14, n_alt = 0
   Insn 14: point = 15, n_alt = 2
   Insn 13: point = 16, n_alt = 0
   Insn 12: point = 18, n_alt = 0
   Insn 11: point = 20, n_alt = 0
   Insn 10: point = 22, n_alt = 0
   Insn 9: point = 23, n_alt = 0
   Insn 8: point = 24, n_alt = 0
   Insn 7: point = 25, n_alt = 0
   Insn 6: point = 26, n_alt = 2
   Insn 5: point = 27, n_alt = -1
   Insn 31: point = 27, n_alt = 0
 r82: [2..27]
 r83: [24..26]
 r84: [21..23]
 r85: [21..22]
 r86: [19..20]
 r87: [17..18]
 r88: [14..16]
 r89: [14..15]
 r90: [11..13]
 r91: [8..10]
 r92: [8..9]
 r93: [6..7]
 r94: [4..5]
 r95: [0..3]
 r96: [0..1]
 r97: [24..25]
 r98: [11..12]
Compressing live ranges: from 28 to 22 - 78%
Ranges after the compression:
 r82: [2..21]
 r83: [20..21]
 r84: [18..19]
 r85: [18..19]
 r86: [16..17]
 r87: [14..15]
 r88: [12..13]
 r89: [12..13]
 r90: [10..11]
 r91: [8..9]
 r92: [8..9]
 r93: [6..7]
 r94: [4..5]
 r95: [0..3]
 r96: [0..1]
 r97: [20..21]
 r98: [10..11]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 31
changing reg in insn 24
changing reg in insn 20
changing reg in insn 19
changing reg in insn 16
changing reg in insn 14
changing reg in insn 10
changing reg in insn 9
changing reg in insn 6
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 11
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 15
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 21
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 25
changing reg in insn 24
changing reg in insn 25
changing reg in insn 7
changing reg in insn 8
changing reg in insn 17
changing reg in insn 18
starting the processing of deferred insns
ending the processing of deferred insns


set_origin

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={11d,10u} r1={7d,6u} r2={2d,8u} r7={1d,3u} r17={11d} 
;;    total ref usage 59{32d,27u,0e} in 24{24 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 31 3 2 2 (parallel [
            (set (reg:SI 2 cx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 31 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] drivers/chr_drv/console.c:73)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":73:2 -1
     (nil))
(insn 6 5 7 2 (set (reg:HI 1 dx [orig:83 video_port_reg.121_1 ] [83])
        (mem/c:HI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_port_reg") [flags 0x2]  <var_decl 0x71960af2eb40 video_port_reg>)
                        ] UNSPEC_GOTOFF))) [8 video_port_reg+0 S2 A16])) "drivers/chr_drv/console.c":74:2 76 {*movhi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 0 ax [97])
        (const_int 12 [0xc])) "drivers/chr_drv/console.c":74:2 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 0 ax [97])
                    (reg:HI 1 dx [orig:83 video_port_reg.121_1 ] [83])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/console.c:74)
                    (asm_input:HI ("d") drivers/chr_drv/console.c:74)
                ]
                 [] drivers/chr_drv/console.c:74)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":74:2 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:84 origin.122_2 ] [84])
        (mem/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])) "drivers/chr_drv/console.c":75:2 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 1 dx [orig:85 video_mem_start.123_3 ] [85])
        (mem/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_start") [flags 0x2]  <var_decl 0x71960af2ea20 video_mem_start>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_start+0 S4 A32])) "drivers/chr_drv/console.c":75:2 75 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 0 ax [orig:86 _4 ] [86])
                (minus:SI (reg:SI 0 ax [orig:84 origin.122_2 ] [84])
                    (reg:SI 1 dx [orig:85 video_mem_start.123_3 ] [85])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":75:2 282 {*subsi_1}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 0 ax [orig:87 _5 ] [87])
                (lshiftrt:SI (reg:SI 0 ax [orig:86 _4 ] [86])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":75:2 701 {*lshrsi3_1}
     (nil))
(insn 13 12 14 2 (set (reg:SI 0 ax [orig:88 _6 ] [88])
        (zero_extend:SI (reg:QI 0 ax [orig:87 _5 ] [87]))) "drivers/chr_drv/console.c":75:2 143 {*zero_extendqisi2}
     (nil))
(insn 14 13 15 2 (set (reg:HI 1 dx [orig:89 video_port_val.124_7 ] [89])
        (mem/c:HI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_port_val") [flags 0x2]  <var_decl 0x71960af2ebd0 video_port_val>)
                        ] UNSPEC_GOTOFF))) [8 video_port_val+0 S2 A16])) "drivers/chr_drv/console.c":75:2 76 {*movhi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 0 ax [orig:88 _6 ] [88])
                    (reg:HI 1 dx [orig:89 video_port_val.124_7 ] [89])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/console.c:75)
                    (asm_input:HI ("d") drivers/chr_drv/console.c:75)
                ]
                 [] drivers/chr_drv/console.c:75)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":75:2 -1
     (nil))
(insn 16 15 17 2 (set (reg:HI 1 dx [orig:90 video_port_reg.125_8 ] [90])
        (mem/c:HI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_port_reg") [flags 0x2]  <var_decl 0x71960af2eb40 video_port_reg>)
                        ] UNSPEC_GOTOFF))) [8 video_port_reg+0 S2 A16])) "drivers/chr_drv/console.c":76:2 76 {*movhi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 0 ax [98])
        (const_int 13 [0xd])) "drivers/chr_drv/console.c":76:2 75 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 0 ax [98])
                    (reg:HI 1 dx [orig:90 video_port_reg.125_8 ] [90])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/console.c:76)
                    (asm_input:HI ("d") drivers/chr_drv/console.c:76)
                ]
                 [] drivers/chr_drv/console.c:76)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":76:2 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 0 ax [orig:91 origin.126_9 ] [91])
        (mem/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])) "drivers/chr_drv/console.c":77:2 75 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 1 dx [orig:92 video_mem_start.127_10 ] [92])
        (mem/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_start") [flags 0x2]  <var_decl 0x71960af2ea20 video_mem_start>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_start+0 S4 A32])) "drivers/chr_drv/console.c":77:2 75 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg:SI 0 ax [orig:93 _11 ] [93])
                (minus:SI (reg:SI 0 ax [orig:91 origin.126_9 ] [91])
                    (reg:SI 1 dx [orig:92 video_mem_start.127_10 ] [92])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":77:2 282 {*subsi_1}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:SI 0 ax [orig:94 _12 ] [94])
                (lshiftrt:SI (reg:SI 0 ax [orig:93 _11 ] [93])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":77:2 701 {*lshrsi3_1}
     (nil))
(insn 23 22 24 2 (set (reg:SI 0 ax [orig:95 _13 ] [95])
        (zero_extend:SI (reg:QI 0 ax [orig:94 _12 ] [94]))) "drivers/chr_drv/console.c":77:2 143 {*zero_extendqisi2}
     (nil))
(insn 24 23 25 2 (set (reg:HI 1 dx [orig:96 video_port_val.128_14 ] [96])
        (mem/c:HI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_port_val") [flags 0x2]  <var_decl 0x71960af2ebd0 video_port_val>)
                        ] UNSPEC_GOTOFF))) [8 video_port_val+0 S2 A16])) "drivers/chr_drv/console.c":77:2 76 {*movhi_internal}
     (nil))
(insn 25 24 26 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 0 ax [orig:95 _13 ] [95])
                    (reg:HI 1 dx [orig:96 video_port_val.128_14 ] [96])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/console.c:77)
                    (asm_input:HI ("d") drivers/chr_drv/console.c:77)
                ]
                 [] drivers/chr_drv/console.c:77)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":77:2 -1
     (nil))
(insn 26 25 29 2 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] drivers/chr_drv/console.c:78)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":78:2 -1
     (nil))
(note 29 26 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 32 3 (const_int 0 [0]) "drivers/chr_drv/console.c":79:1 843 {nop}
     (nil))
(note 32 30 0 NOTE_INSN_DELETED)

;; Function lf (lf, funcdef_no=2, decl_uid=1396, cgraph_uid=3, symbol_order=27)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 6:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 12:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 16
	 Choosing alt 0 in insn 16:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) lBwBz {*call}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
  BB 3
   Insn 27: point = 0, n_alt = -1
   Insn 17: point = 0, n_alt = 1
   Insn 16: point = 1, n_alt = 0
   Insn 15: point = 3, n_alt = 0
   Insn 14: point = 4, n_alt = 0
   Insn 13: point = 5, n_alt = 1
   Insn 12: point = 6, n_alt = 0
   Insn 11: point = 8, n_alt = 0
  BB 4
   Insn 22: point = 10, n_alt = 0
  BB 2
   Insn 9: point = 10, n_alt = -1
   Insn 8: point = 10, n_alt = 0
   Insn 7: point = 11, n_alt = 0
   Insn 6: point = 12, n_alt = 3
   Insn 5: point = 14, n_alt = 0
   Insn 29: point = 15, n_alt = 0
 r82: [0..15]
 r83: [13..14]
 r84: [10..12]
 r85: [10..11]
 r86: [7..8]
 r87: [5..6]
 r88: [2..4]
 r89: [2..3]
 r90: [0..1]
Compressing live ranges: from 16 to 12 - 75%
Ranges after the compression:
 r82: [0..11]
 r83: [10..11]
 r84: [8..9]
 r85: [8..9]
 r86: [6..7]
 r87: [4..5]
 r88: [2..3]
 r89: [2..3]
 r90: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 29
changing reg in insn 17
changing reg in insn 15
changing reg in insn 14
changing reg in insn 13
changing reg in insn 11
changing reg in insn 7
changing reg in insn 5
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 8
changing reg in insn 7
changing reg in insn 8
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 22.


lf

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,7u} r1={8d,6u} r2={4d,2u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={6d,1u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 109{87d,22u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 29 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 29 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 29 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 1 dx [orig:83 y.0_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])) "drivers/chr_drv/console.c":83:11 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 2 cx [orig:84 _2 ] [84])
                (plus:SI (reg:SI 1 dx [orig:83 y.0_1 ] [83])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":83:11 209 {*addsi_1}
     (nil))
(insn 7 6 8 2 (set (reg:SI 1 dx [orig:85 bottom.1_3 ] [85])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bottom") [flags 0x2]  <var_decl 0x71960af55000 bottom>)
                        ] UNSPEC_GOTOFF))) [3 bottom+0 S4 A32])) "drivers/chr_drv/console.c":83:15 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [orig:84 _2 ] [84])
            (reg:SI 1 dx [orig:85 bottom.1_3 ] [85]))) "drivers/chr_drv/console.c":83:8 11 {*cmpsi_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "drivers/chr_drv/console.c":83:8 806 {*jcc}
     (nil)
 -> 20)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:SI 1 dx [orig:86 y.2_4 ] [86])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])) "drivers/chr_drv/console.c":84:10 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (parallel [
            (set (reg:SI 1 dx [orig:87 _5 ] [87])
                (plus:SI (reg:SI 1 dx [orig:86 y.2_4 ] [86])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":84:10 209 {*addsi_1}
     (nil))
(insn 13 12 14 3 (set (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])
        (reg:SI 1 dx [orig:87 _5 ] [87])) "drivers/chr_drv/console.c":84:10 75 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:SI 2 cx [orig:88 pos.3_6 ] [88])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":85:13 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:SI 1 dx [orig:89 video_size_row.4_7 ] [89])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":85:13 75 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (parallel [
            (set (reg:SI 1 dx [orig:90 _8 ] [90])
                (plus:SI (reg:SI 1 dx [orig:89 video_size_row.4_7 ] [89])
                    (reg:SI 2 cx [orig:88 pos.3_6 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":85:13 209 {*addsi_1}
     (nil))
(insn 17 16 27 3 (set (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])
        (reg:SI 1 dx [orig:90 _8 ] [90])) "drivers/chr_drv/console.c":85:13 75 {*movsi_internal}
     (nil))
(jump_insn 27 17 28 3 (set (pc)
        (label_ref 25)) "drivers/chr_drv/console.c":86:9 807 {jump}
     (nil)
 -> 25)
(barrier 28 27 20)
(code_label 20 28 21 4 3 (nil) [1 uses])
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 22 21 25 4 (call (mem:QI (symbol_ref:SI ("scrup") [flags 0x3]  <function_decl 0x71960af50600 scrup>) [0 scrup S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":88:5 812 {*call}
     (nil)
    (nil))
(code_label 25 22 26 5 2 (nil) [1 uses])
(note 26 25 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 30 26 0 NOTE_INSN_DELETED)

;; Function cr (cr, funcdef_no=3, decl_uid=1399, cgraph_uid=4, symbol_order=28)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =rm  (1) 0  (2) re {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 14: point = 0, n_alt = -1
  BB 2
   Insn 10: point = 0, n_alt = 1
   Insn 9: point = 1, n_alt = 1
   Insn 8: point = 2, n_alt = 0
   Insn 7: point = 4, n_alt = 0
   Insn 6: point = 6, n_alt = 0
   Insn 5: point = 7, n_alt = 0
   Insn 15: point = 8, n_alt = 0
 r82: [0..8]
 r83: [3..7]
 r84: [5..6]
 r85: [3..4]
 r86: [1..2]
Compressing live ranges: from 9 to 6 - 66%
Ranges after the compression:
 r82: [0..5]
 r83: [2..5]
 r84: [4..5]
 r85: [2..3]
 r86: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 10
changing reg in insn 9
changing reg in insn 6
changing reg in insn 5
changing reg in insn 5
changing reg in insn 8
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns


cr

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={2d,4u} r1={3d,2u} r2={3d,2u} r7={1d,3u} r17={3d} 
;;    total ref usage 23{12d,11u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 1 dx [orig:83 pos.5_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":93:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 2 cx [orig:84 x.6_2 ] [84])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":93:14 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (parallel [
            (set (reg:SI 2 cx [orig:85 _3 ] [85])
                (ashift:SI (reg:SI 2 cx [orig:84 x.6_2 ] [84])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":93:14 655 {*ashlsi3_1}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:SI 1 dx [orig:86 _4 ] [86])
                (minus:SI (reg:SI 1 dx [orig:83 pos.5_1 ] [83])
                    (reg:SI 2 cx [orig:85 _3 ] [85])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":93:9 282 {*subsi_1}
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])
        (reg:SI 1 dx [orig:86 _4 ] [86])) "drivers/chr_drv/console.c":93:9 75 {*movsi_internal}
     (nil))
(insn 10 9 13 2 (set (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])
        (const_int 0 [0])) "drivers/chr_drv/console.c":94:7 75 {*movsi_internal}
     (nil))
(note 13 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 16 3 (const_int 0 [0]) "drivers/chr_drv/console.c":95:1 843 {nop}
     (nil))
(note 16 14 0 NOTE_INSN_DELETED)

;; Function del (del, funcdef_no=4, decl_uid=1402, cgraph_uid=5, symbol_order=29)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 13:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 17:  (0) r  (1) rm {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) m  (1) rn {*movhi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 5
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
  BB 5
   Insn 27: point = 0, n_alt = -1
  BB 3
   Insn 18: point = 0, n_alt = 3
   Insn 17: point = 1, n_alt = 2
   Insn 16: point = 3, n_alt = -2
   Insn 15: point = 5, n_alt = 0
   Insn 14: point = 6, n_alt = 1
   Insn 13: point = 7, n_alt = 0
   Insn 12: point = 9, n_alt = 0
   Insn 11: point = 10, n_alt = 1
   Insn 10: point = 11, n_alt = 0
   Insn 9: point = 13, n_alt = 0
  BB 2
   Insn 7: point = 15, n_alt = -1
   Insn 6: point = 15, n_alt = 0
   Insn 5: point = 16, n_alt = 0
   Insn 28: point = 17, n_alt = 0
 r82: [2..17]
 r83: [15..16]
 r84: [12..13]
 r85: [10..11]
 r86: [8..9]
 r87: [6..7]
 r88: [4..5]
 r89: [0..3]
 r90: [0..1]
Compressing live ranges: from 18 to 16 - 88%
Ranges after the compression:
 r82: [2..15]
 r83: [14..15]
 r84: [12..13]
 r85: [10..11]
 r86: [8..9]
 r87: [6..7]
 r88: [4..5]
 r89: [0..3]
 r90: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 28
changing reg in insn 17
changing reg in insn 15
changing reg in insn 14
changing reg in insn 12
changing reg in insn 11
changing reg in insn 9
changing reg in insn 5
changing reg in insn 5
changing reg in insn 6
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 16
changing reg in insn 18
changing reg in insn 17
changing reg in insn 18
deleting insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns


del

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 17 [flags]
;;  ref usage 	r0={3d,8u} r1={7d,6u} r2={1d} r7={1d,5u} r17={4d,1u} 
;;    total ref usage 36{16d,20u,0e} in 14{14 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 28 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 28 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 1 dx [orig:83 x.7_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":99:6 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:83 x.7_1 ] [83])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":99:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 26)
            (pc))) "drivers/chr_drv/console.c":99:5 806 {*jcc}
     (nil)
 -> 26)
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:SI 1 dx [orig:84 pos.8_2 ] [84])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":100:7 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (parallel [
            (set (reg:SI 1 dx [orig:85 _3 ] [85])
                (plus:SI (reg:SI 1 dx [orig:84 pos.8_2 ] [84])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":100:7 209 {*addsi_1}
     (nil))
(insn 11 10 12 3 (set (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])
        (reg:SI 1 dx [orig:85 _3 ] [85])) "drivers/chr_drv/console.c":100:7 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:SI 1 dx [orig:86 x.9_4 ] [86])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":101:4 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (parallel [
            (set (reg:SI 1 dx [orig:87 _5 ] [87])
                (plus:SI (reg:SI 1 dx [orig:86 x.9_4 ] [86])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":101:4 209 {*addsi_1}
     (nil))
(insn 14 13 15 3 (set (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])
        (reg:SI 1 dx [orig:87 _5 ] [87])) "drivers/chr_drv/console.c":101:4 75 {*movsi_internal}
     (nil))
(insn 15 14 17 3 (set (reg:SI 1 dx [orig:88 pos.10_6 ] [88])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":102:4 75 {*movsi_internal}
     (nil))
(insn 17 15 18 3 (set (reg:HI 0 ax [orig:90 video_erase_char.12_8 ] [90])
        (mem/c:HI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_erase_char") [flags 0x2]  <var_decl 0x71960af2ec60 video_erase_char>)
                        ] UNSPEC_GOTOFF))) [8 video_erase_char+0 S2 A16])) "drivers/chr_drv/console.c":102:26 76 {*movhi_internal}
     (nil))
(insn 18 17 26 3 (set (mem:HI (reg/f:SI 1 dx [orig:89 pos.11_7 ] [89]) [8 *pos.11_7+0 S2 A16])
        (reg:HI 0 ax [orig:90 video_erase_char.12_8 ] [90])) "drivers/chr_drv/console.c":102:26 76 {*movhi_internal}
     (nil))
(code_label 26 18 25 5 8 (nil) [1 uses])
(note 25 26 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 25 21 5 (const_int 0 [0]) "drivers/chr_drv/console.c":104:1 843 {nop}
     (nil))
(code_label 21 27 22 4 6 (nil) [0 uses])
(note 22 21 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 29 22 0 NOTE_INSN_DELETED)

;; Function gotoxy (gotoxy, funcdef_no=5, decl_uid=1406, cgraph_uid=6, symbol_order=30)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 24:  (0) r  (1) 0  (2) mr {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 29
	 Choosing alt 0 in insn 29:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 6
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
  BB 6
   Insn 39: point = 0, n_alt = -1
  BB 4
   Insn 35: point = 0, n_alt = -1
   Insn 30: point = 0, n_alt = 1
   Insn 29: point = 1, n_alt = 0
   Insn 28: point = 3, n_alt = 0
   Insn 27: point = 5, n_alt = 0
   Insn 26: point = 6, n_alt = 0
   Insn 25: point = 8, n_alt = 0
   Insn 24: point = 9, n_alt = 2
   Insn 23: point = 11, n_alt = 0
   Insn 22: point = 12, n_alt = 0
   Insn 21: point = 13, n_alt = 1
   Insn 20: point = 14, n_alt = 0
   Insn 19: point = 15, n_alt = 1
   Insn 18: point = 16, n_alt = 0
  BB 3
   Insn 11: point = 18, n_alt = -1
   Insn 10: point = 18, n_alt = 0
   Insn 9: point = 19, n_alt = 0
  BB 2
   Insn 7: point = 21, n_alt = -1
   Insn 6: point = 21, n_alt = 0
   Insn 5: point = 22, n_alt = 0
   Insn 40: point = 23, n_alt = 0
 r82: [0..23]
 r83: [21..22]
 r84: [18..19]
 r85: [10..12]
 r86: [10..11]
 r87: [7..9]
 r88: [7..8]
 r89: [2..6]
 r90: [4..5]
 r91: [2..3]
 r92: [0..1]
 r93: [15..16]
 r94: [13..14]
Compressing live ranges: from 24 to 18 - 75%
Ranges after the compression:
 r82: [0..17]
 r83: [16..17]
 r84: [14..15]
 r85: [8..9]
 r86: [8..9]
 r87: [6..7]
 r88: [6..7]
 r89: [2..5]
 r90: [4..5]
 r91: [2..3]
 r92: [0..1]
 r93: [12..13]
 r94: [10..11]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 40
changing reg in insn 30
changing reg in insn 27
changing reg in insn 25
changing reg in insn 23
changing reg in insn 22
changing reg in insn 21
changing reg in insn 19
changing reg in insn 9
changing reg in insn 5
changing reg in insn 5
changing reg in insn 6
changing reg in insn 9
changing reg in insn 10
changing reg in insn 22
changing reg in insn 24
changing reg in insn 23
changing reg in insn 24
changing reg in insn 24
changing reg in insn 26
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
starting the processing of deferred insns
ending the processing of deferred insns


gotoxy

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={2d,9u} r1={10d,9u} r2={4d,3u} r7={1d,10u} r17={7d,2u} 
;;    total ref usage 57{24d,33u,0e} in 22{22 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 40 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 40 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 40 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 1 dx [orig:83 video_num_columns.21_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":111:15 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [4 new_x+0 S4 A32])
            (reg:SI 1 dx [orig:83 video_num_columns.21_1 ] [83]))) "drivers/chr_drv/console.c":111:8 11 {*cmpsi_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 38)
            (pc))) "drivers/chr_drv/console.c":111:8 806 {*jcc}
     (nil)
 -> 38)
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:SI 1 dx [orig:84 video_num_lines.22_2 ] [84])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_lines") [flags 0x2]  <var_decl 0x71960af2e900 video_num_lines>)
                        ] UNSPEC_GOTOFF))) [3 video_num_lines+0 S4 A32])) "drivers/chr_drv/console.c":111:44 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [4 new_y+0 S4 A32])
            (reg:SI 1 dx [orig:84 video_num_lines.22_2 ] [84]))) "drivers/chr_drv/console.c":111:35 11 {*cmpsi_1}
     (nil))
(jump_insn 11 10 17 3 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 38)
            (pc))) "drivers/chr_drv/console.c":111:35 806 {*jcc}
     (nil)
 -> 38)
(note 17 11 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:SI 1 dx [93])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [4 new_x+0 S4 A32])) "drivers/chr_drv/console.c":114:7 75 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])
        (reg:SI 1 dx [93])) "drivers/chr_drv/console.c":114:7 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:SI 1 dx [94])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [4 new_y+0 S4 A32])) "drivers/chr_drv/console.c":115:7 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])
        (reg:SI 1 dx [94])) "drivers/chr_drv/console.c":115:7 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:SI 2 cx [orig:85 y.23_3 ] [85])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])) "drivers/chr_drv/console.c":116:22 75 {*movsi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:SI 1 dx [orig:86 video_size_row.24_4 ] [86])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":116:22 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg:SI 2 cx [orig:87 _5 ] [87])
                (mult:SI (reg:SI 2 cx [orig:85 y.23_3 ] [85])
                    (reg:SI 1 dx [orig:86 video_size_row.24_4 ] [86])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":116:22 408 {*mulsi3_1}
     (nil))
(insn 25 24 26 4 (set (reg:SI 1 dx [orig:88 origin.25_6 ] [88])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])) "drivers/chr_drv/console.c":116:18 75 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (parallel [
            (set (reg:SI 2 cx [orig:89 _7 ] [89])
                (plus:SI (reg:SI 2 cx [orig:87 _5 ] [87])
                    (reg:SI 1 dx [orig:88 origin.25_6 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":116:18 209 {*addsi_1}
     (nil))
(insn 27 26 28 4 (set (reg:SI 1 dx [orig:90 x.26_8 ] [90])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":116:44 75 {*movsi_internal}
     (nil))
(insn 28 27 29 4 (parallel [
            (set (reg:SI 1 dx [orig:91 _9 ] [91])
                (ashift:SI (reg:SI 1 dx [orig:90 x.26_8 ] [90])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":116:44 655 {*ashlsi3_1}
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg:SI 1 dx [orig:92 _10 ] [92])
                (plus:SI (reg:SI 1 dx [orig:91 _9 ] [91])
                    (reg:SI 2 cx [orig:89 _7 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":116:39 209 {*addsi_1}
     (nil))
(insn 30 29 35 4 (set (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])
        (reg:SI 1 dx [orig:92 _10 ] [92])) "drivers/chr_drv/console.c":116:9 75 {*movsi_internal}
     (nil))
(jump_insn 35 30 36 4 (set (pc)
        (label_ref 33)) 807 {jump}
     (nil)
 -> 33)
(barrier 36 35 38)
(code_label 38 36 37 6 13 (nil) [2 uses])
(note 37 38 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 37 33 6 (const_int 0 [0]) "drivers/chr_drv/console.c":112:9 843 {nop}
     (nil))
(code_label 33 39 34 5 9 (nil) [1 uses])
(note 34 33 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 41 34 0 NOTE_INSN_DELETED)

;; Function save_cur (save_cur, funcdef_no=6, decl_uid=1409, cgraph_uid=7, symbol_order=31)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 14: point = 0, n_alt = -1
  BB 2
   Insn 10: point = 0, n_alt = 1
   Insn 9: point = 1, n_alt = -2
   Insn 8: point = 3, n_alt = 0
   Insn 7: point = 4, n_alt = 1
   Insn 6: point = 5, n_alt = -2
   Insn 5: point = 7, n_alt = 0
   Insn 15: point = 8, n_alt = 0
 r82: [0..8]
 r83: [6..7]
 r84: [4..5]
 r85: [2..3]
 r86: [0..1]
Compressing live ranges: from 9 to 8 - 88%
Ranges after the compression:
 r82: [0..7]
 r83: [6..7]
 r84: [4..5]
 r85: [2..3]
 r86: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 10
changing reg in insn 8
changing reg in insn 7
changing reg in insn 5
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
deleting insn with uid = 6.
deleting insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns


save_cur

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 17 [flags]
;;  ref usage 	r0={2d,4u} r1={3d,2u} r2={1d} r7={1d,3u} r17={1d} 
;;    total ref usage 17{8d,9u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 7 2 (set (reg:SI 1 dx [orig:83 x.13_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":121:13 75 {*movsi_internal}
     (nil))
(insn 7 5 8 2 (set (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("saved_x") [flags 0x2]  <var_decl 0x71960af55360 saved_x>)
                        ] UNSPEC_GOTOFF))) [4 saved_x+0 S4 A32])
        (reg:SI 1 dx [orig:84 x.14_2 ] [84])) "drivers/chr_drv/console.c":121:13 75 {*movsi_internal}
     (nil))
(insn 8 7 10 2 (set (reg:SI 1 dx [orig:85 y.15_3 ] [85])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])) "drivers/chr_drv/console.c":122:13 75 {*movsi_internal}
     (nil))
(insn 10 8 13 2 (set (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("saved_y") [flags 0x2]  <var_decl 0x71960af553f0 saved_y>)
                        ] UNSPEC_GOTOFF))) [4 saved_y+0 S4 A32])
        (reg:SI 1 dx [orig:86 y.16_4 ] [86])) "drivers/chr_drv/console.c":122:13 75 {*movsi_internal}
     (nil))
(note 13 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 16 3 (const_int 0 [0]) "drivers/chr_drv/console.c":123:1 843 {nop}
     (nil))
(note 16 14 0 NOTE_INSN_DELETED)

;; Function restore_cur (restore_cur, funcdef_no=7, decl_uid=1412, cgraph_uid=8, symbol_order=32)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) lBwBz {*call} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 12:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-8)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 16: point = 0, n_alt = -1
  BB 2
   Insn 12: point = 0, n_alt = 0
   Insn 11: point = 0, n_alt = 0
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 1, n_alt = 0
   Insn 8: point = 2, n_alt = -2
   Insn 7: point = 4, n_alt = 0
   Insn 6: point = 6, n_alt = -2
   Insn 5: point = 8, n_alt = 0
   Insn 17: point = 9, n_alt = 0
 r82: [5..9]
 r83: [7..8]
 r84: [1..6]
 r85: [3..4]
 r86: [0..2]
Compressing live ranges: from 10 to 8 - 80%
Ranges after the compression:
 r82: [4..7]
 r83: [6..7]
 r84: [0..5]
 r85: [2..3]
 r86: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 17
changing reg in insn 7
changing reg in insn 5
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 9
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 10
deleting insn with uid = 6.
deleting insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.


restore_cur

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,3u} r1={3d,1u} r2={2d} r7={4d,8u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={3d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 93{81d,12u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 17 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 17 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 17 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 7 2 (set (reg:SI 1 dx [orig:83 saved_y.17_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("saved_y") [flags 0x2]  <var_decl 0x71960af553f0 saved_y>)
                        ] UNSPEC_GOTOFF))) [4 saved_y+0 S4 A32])) "drivers/chr_drv/console.c":127:5 75 {*movsi_internal}
     (nil))
(insn 7 5 9 2 (set (reg:SI 0 ax [orig:85 saved_x.19_3 ] [85])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("saved_x") [flags 0x2]  <var_decl 0x71960af55360 saved_x>)
                        ] UNSPEC_GOTOFF))) [4 saved_x+0 S4 A32])) "drivers/chr_drv/console.c":127:5 75 {*movsi_internal}
     (nil))
(insn 9 7 10 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg:SI 1 dx [orig:84 saved_y.18_2 ] [84])) "drivers/chr_drv/console.c":127:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 10 9 11 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg:SI 0 ax [orig:86 saved_x.20_4 ] [86])) "drivers/chr_drv/console.c":127:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(call_insn 11 10 12 2 (call (mem:QI (symbol_ref:SI ("gotoxy") [flags 0x3]  <function_decl 0x71960af5a200 gotoxy>) [0 gotoxy S1 A8])
        (const_int 8 [0x8])) "drivers/chr_drv/console.c":127:5 812 {*call}
     (nil)
    (nil))
(insn 12 11 15 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":127:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 15 12 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 18 3 (const_int 0 [0]) "drivers/chr_drv/console.c":128:1 843 {nop}
     (nil))
(note 18 16 0 NOTE_INSN_DELETED)

;; Function set_cursor (set_cursor, funcdef_no=8, decl_uid=1415, cgraph_uid=9, symbol_order=33)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r {*set_got}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 6:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) a  (1) d
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 14:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) a  (1) d
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 16:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) a  (1) d
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 24:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) a  (1) d
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 30: point = 0, n_alt = -1
  BB 2
   Insn 26: point = 0, n_alt = -1
   Insn 25: point = 0, n_alt = 0
   Insn 24: point = 1, n_alt = 2
   Insn 23: point = 3, n_alt = 0
   Insn 22: point = 5, n_alt = 0
   Insn 21: point = 7, n_alt = 0
   Insn 20: point = 9, n_alt = 0
   Insn 19: point = 10, n_alt = 0
   Insn 18: point = 11, n_alt = 0
   Insn 17: point = 12, n_alt = 0
   Insn 16: point = 13, n_alt = 2
   Insn 15: point = 14, n_alt = 0
   Insn 14: point = 15, n_alt = 2
   Insn 13: point = 16, n_alt = 0
   Insn 12: point = 18, n_alt = 0
   Insn 11: point = 20, n_alt = 0
   Insn 10: point = 22, n_alt = 0
   Insn 9: point = 23, n_alt = 0
   Insn 8: point = 24, n_alt = 0
   Insn 7: point = 25, n_alt = 0
   Insn 6: point = 26, n_alt = 2
   Insn 5: point = 27, n_alt = -1
   Insn 31: point = 27, n_alt = 0
 r82: [2..27]
 r83: [24..26]
 r84: [21..23]
 r85: [21..22]
 r86: [19..20]
 r87: [17..18]
 r88: [14..16]
 r89: [14..15]
 r90: [11..13]
 r91: [8..10]
 r92: [8..9]
 r93: [6..7]
 r94: [4..5]
 r95: [0..3]
 r96: [0..1]
 r97: [24..25]
 r98: [11..12]
Compressing live ranges: from 28 to 22 - 78%
Ranges after the compression:
 r82: [2..21]
 r83: [20..21]
 r84: [18..19]
 r85: [18..19]
 r86: [16..17]
 r87: [14..15]
 r88: [12..13]
 r89: [12..13]
 r90: [10..11]
 r91: [8..9]
 r92: [8..9]
 r93: [6..7]
 r94: [4..5]
 r95: [0..3]
 r96: [0..1]
 r97: [20..21]
 r98: [10..11]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 31
changing reg in insn 24
changing reg in insn 20
changing reg in insn 19
changing reg in insn 16
changing reg in insn 14
changing reg in insn 10
changing reg in insn 9
changing reg in insn 6
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 11
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 15
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 21
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 25
changing reg in insn 24
changing reg in insn 25
changing reg in insn 7
changing reg in insn 8
changing reg in insn 17
changing reg in insn 18
starting the processing of deferred insns
ending the processing of deferred insns


set_cursor

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={11d,10u} r1={7d,6u} r2={2d,8u} r7={1d,3u} r17={11d} 
;;    total ref usage 59{32d,27u,0e} in 24{24 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 31 3 2 2 (parallel [
            (set (reg:SI 2 cx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 31 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] drivers/chr_drv/console.c:132)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":132:5 -1
     (nil))
(insn 6 5 7 2 (set (reg:HI 1 dx [orig:83 video_port_reg.217_1 ] [83])
        (mem/c:HI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_port_reg") [flags 0x2]  <var_decl 0x71960af2eb40 video_port_reg>)
                        ] UNSPEC_GOTOFF))) [8 video_port_reg+0 S2 A16])) "drivers/chr_drv/console.c":133:5 76 {*movhi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 0 ax [97])
        (const_int 14 [0xe])) "drivers/chr_drv/console.c":133:5 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 0 ax [97])
                    (reg:HI 1 dx [orig:83 video_port_reg.217_1 ] [83])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/console.c:133)
                    (asm_input:HI ("d") drivers/chr_drv/console.c:133)
                ]
                 [] drivers/chr_drv/console.c:133)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":133:5 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:84 pos.218_2 ] [84])
        (mem/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":134:5 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 1 dx [orig:85 video_mem_start.219_3 ] [85])
        (mem/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_start") [flags 0x2]  <var_decl 0x71960af2ea20 video_mem_start>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_start+0 S4 A32])) "drivers/chr_drv/console.c":134:5 75 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 0 ax [orig:86 _4 ] [86])
                (minus:SI (reg:SI 0 ax [orig:84 pos.218_2 ] [84])
                    (reg:SI 1 dx [orig:85 video_mem_start.219_3 ] [85])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":134:5 282 {*subsi_1}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 0 ax [orig:87 _5 ] [87])
                (lshiftrt:SI (reg:SI 0 ax [orig:86 _4 ] [86])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":134:5 701 {*lshrsi3_1}
     (nil))
(insn 13 12 14 2 (set (reg:SI 0 ax [orig:88 _6 ] [88])
        (zero_extend:SI (reg:QI 0 ax [orig:87 _5 ] [87]))) "drivers/chr_drv/console.c":134:5 143 {*zero_extendqisi2}
     (nil))
(insn 14 13 15 2 (set (reg:HI 1 dx [orig:89 video_port_val.220_7 ] [89])
        (mem/c:HI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_port_val") [flags 0x2]  <var_decl 0x71960af2ebd0 video_port_val>)
                        ] UNSPEC_GOTOFF))) [8 video_port_val+0 S2 A16])) "drivers/chr_drv/console.c":134:5 76 {*movhi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 0 ax [orig:88 _6 ] [88])
                    (reg:HI 1 dx [orig:89 video_port_val.220_7 ] [89])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/console.c:134)
                    (asm_input:HI ("d") drivers/chr_drv/console.c:134)
                ]
                 [] drivers/chr_drv/console.c:134)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":134:5 -1
     (nil))
(insn 16 15 17 2 (set (reg:HI 1 dx [orig:90 video_port_reg.221_8 ] [90])
        (mem/c:HI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_port_reg") [flags 0x2]  <var_decl 0x71960af2eb40 video_port_reg>)
                        ] UNSPEC_GOTOFF))) [8 video_port_reg+0 S2 A16])) "drivers/chr_drv/console.c":135:5 76 {*movhi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 0 ax [98])
        (const_int 15 [0xf])) "drivers/chr_drv/console.c":135:5 75 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 0 ax [98])
                    (reg:HI 1 dx [orig:90 video_port_reg.221_8 ] [90])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/console.c:135)
                    (asm_input:HI ("d") drivers/chr_drv/console.c:135)
                ]
                 [] drivers/chr_drv/console.c:135)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":135:5 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 0 ax [orig:91 pos.222_9 ] [91])
        (mem/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":136:5 75 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 1 dx [orig:92 video_mem_start.223_10 ] [92])
        (mem/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_start") [flags 0x2]  <var_decl 0x71960af2ea20 video_mem_start>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_start+0 S4 A32])) "drivers/chr_drv/console.c":136:5 75 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg:SI 0 ax [orig:93 _11 ] [93])
                (minus:SI (reg:SI 0 ax [orig:91 pos.222_9 ] [91])
                    (reg:SI 1 dx [orig:92 video_mem_start.223_10 ] [92])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":136:5 282 {*subsi_1}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:SI 0 ax [orig:94 _12 ] [94])
                (lshiftrt:SI (reg:SI 0 ax [orig:93 _11 ] [93])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":136:5 701 {*lshrsi3_1}
     (nil))
(insn 23 22 24 2 (set (reg:SI 0 ax [orig:95 _13 ] [95])
        (zero_extend:SI (reg:QI 0 ax [orig:94 _12 ] [94]))) "drivers/chr_drv/console.c":136:5 143 {*zero_extendqisi2}
     (nil))
(insn 24 23 25 2 (set (reg:HI 1 dx [orig:96 video_port_val.224_14 ] [96])
        (mem/c:HI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_port_val") [flags 0x2]  <var_decl 0x71960af2ebd0 video_port_val>)
                        ] UNSPEC_GOTOFF))) [8 video_port_val+0 S2 A16])) "drivers/chr_drv/console.c":136:5 76 {*movhi_internal}
     (nil))
(insn 25 24 26 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 0 ax [orig:95 _13 ] [95])
                    (reg:HI 1 dx [orig:96 video_port_val.224_14 ] [96])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/console.c:136)
                    (asm_input:HI ("d") drivers/chr_drv/console.c:136)
                ]
                 [] drivers/chr_drv/console.c:136)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":136:5 -1
     (nil))
(insn 26 25 29 2 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] drivers/chr_drv/console.c:137)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":137:5 -1
     (nil))
(note 29 26 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 32 3 (const_int 0 [0]) "drivers/chr_drv/console.c":138:1 843 {nop}
     (nil))
(note 32 30 0 NOTE_INSN_DELETED)

;; Function respond (respond, funcdef_no=9, decl_uid=1418, cgraph_uid=10, symbol_order=34)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 14:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 16:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 19:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            alt=2: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 20:  (0) =rm  (1) %0  (2) re {*andsi_1}
      Creating newreg=99 from oldreg=86, assigning class GENERAL_REGS to r99
   20: {r99:SI=r99:SI&0x3ff;clobber flags:CC;}
      REG_DEAD r86:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   48: r99:SI=r86:SI
    Inserting insn reload after:
   49: r87:SI=r99:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 25:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 29:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 35:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 39:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5 6

********** Pseudo live ranges #1: **********

  BB 6
   Insn 45: point = 0, n_alt = -1
  BB 5
   Insn 39: point = 0, n_alt = 0
   Insn 38: point = 0, n_alt = 0
   Insn 37: point = 0, n_alt = -2
   Insn 36: point = 1, n_alt = 0
   Insn 35: point = 1, n_alt = 0
   Insn 34: point = 1, n_alt = -1
  BB 4
   Insn 32: point = 2, n_alt = -1
   Insn 31: point = 2, n_alt = 0
   Insn 29: point = 3, n_alt = 4
   Insn 28: point = 5, n_alt = 0
  BB 2
   Insn 42: point = 7, n_alt = -1
   Insn 7: point = 7, n_alt = -1
   Insn 6: point = 7, n_alt = 1
   Insn 5: point = 8, n_alt = 0
   Insn 46: point = 9, n_alt = 0
  BB 3
   Insn 25: point = 10, n_alt = 0
   Insn 22: point = 10, n_alt = 1
   Insn 21: point = 11, n_alt = 0
   Insn 49: point = 12, n_alt = -2
	Hard reg 2 is preferable by r99 with profit 1000
   Insn 20: point = 14, n_alt = 0
   Insn 48: point = 15, n_alt = -2
	Hard reg 2 is preferable by r99 with profit 1000
	Hard reg 1 is preferable by r99 with profit 1000
   Insn 19: point = 17, n_alt = 0
   Insn 18: point = 19, n_alt = 0
   Insn 17: point = 21, n_alt = 0
   Insn 16: point = 22, n_alt = 8
   Insn 15: point = 23, n_alt = 0
   Insn 14: point = 24, n_alt = 4
   Insn 13: point = 26, n_alt = 0
   Insn 12: point = 27, n_alt = 0
   Insn 11: point = 29, n_alt = 0
 r82: [0..30]
 r83: [22..27]
 r84: [22..24]
 r85: [18..19]
 r86: [16..17]
 r87: [10..12]
 r88: [2..3]
 r90: [7..8]
 r91: [28..29]
 r92: [25..26]
 r93: [22..23]
 r94: [20..21]
 r95: [10..11]
 r97: [4..5]
 r99: [13..15]
Compressing live ranges: from 31 to 22 - 70%
Ranges after the compression:
 r82: [0..21]
 r83: [16..19]
 r84: [16..17]
 r85: [12..13]
 r86: [10..11]
 r87: [6..7]
 r88: [0..1]
 r90: [4..5]
 r91: [20..21]
 r92: [18..19]
 r93: [16..17]
 r94: [14..15]
 r95: [6..7]
 r97: [2..3]
 r99: [8..9]

********** Assignment #1: **********

	 Assigning to 99 (cl=GENERAL_REGS, orig=86, freq=3000, tfirst=99, tfreq=3000)...
	   Assign 2 to reload r99 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 46
changing reg in insn 37
changing reg in insn 5
changing reg in insn 12
changing reg in insn 16
changing reg in insn 14
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 19
changing reg in insn 22
changing reg in insn 29
changing reg in insn 31
changing reg in insn 5
changing reg in insn 6
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 21
changing reg in insn 22
changing reg in insn 28
changing reg in insn 29
deleting insn with uid = 49.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 38.


respond

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={11d,9u} r2={6d,4u} r3={2d,2u} r7={4d,22u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={10d,1u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 141{101d,40u,0e} in 30{29 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 46 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 46 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 46 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 1 dx [90])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x71960afebcf0 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "drivers/chr_drv/console.c":142:8 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x71960afebcf0 *.LC0>)
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 p+0 S4 A32])
        (reg/f:SI 1 dx [90])) "drivers/chr_drv/console.c":142:8 75 {*movsi_internal}
     (nil))
(insn 7 6 42 2 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] drivers/chr_drv/console.c:144)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":144:2 -1
     (nil))
(jump_insn 42 7 43 2 (set (pc)
        (label_ref 26)) "drivers/chr_drv/console.c":146:8 807 {jump}
     (nil)
 -> 26)
(barrier 43 42 30)
(code_label 30 43 10 3 19 (nil) [1 uses])
(note 10 30 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 1 dx [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 tty+0 S4 A32])) "drivers/chr_drv/console.c":147:3 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:SI 1 dx [orig:83 _1 ] [83])
        (mem:SI (plus:SI (reg/f:SI 1 dx [91])
                (const_int 52 [0x34])) [3 tty_11(D)->read_q.head+0 S4 A32])) "drivers/chr_drv/console.c":147:3 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg/f:SI 2 cx [92])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 p+0 S4 A32])) "drivers/chr_drv/console.c":147:3 75 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:QI 3 bx [orig:84 _2 ] [84])
        (mem:QI (reg/f:SI 2 cx [92]) [0 *p_7+0 S1 A8])) "drivers/chr_drv/console.c":147:3 77 {*movqi_internal}
     (nil))
(insn 15 14 16 3 (set (reg/f:SI 2 cx [93])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 tty+0 S4 A32])) "drivers/chr_drv/console.c":147:3 75 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (mem:QI (plus:SI (plus:SI (reg/f:SI 2 cx [93])
                    (reg:SI 1 dx [orig:83 _1 ] [83]))
                (const_int 64 [0x40])) [0 tty_11(D)->read_q.buf[_1]+0 S1 A8])
        (reg:QI 3 bx [orig:84 _2 ] [84])) "drivers/chr_drv/console.c":147:3 77 {*movqi_internal}
     (nil))
(insn 17 16 18 3 (set (reg/f:SI 1 dx [94])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 tty+0 S4 A32])) "drivers/chr_drv/console.c":147:3 75 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:SI 1 dx [orig:85 _3 ] [85])
        (mem:SI (plus:SI (reg/f:SI 1 dx [94])
                (const_int 52 [0x34])) [3 tty_11(D)->read_q.head+0 S4 A32])) "drivers/chr_drv/console.c":147:3 75 {*movsi_internal}
     (nil))
(insn 19 18 48 3 (parallel [
            (set (reg:SI 1 dx [orig:86 _4 ] [86])
                (plus:SI (reg:SI 1 dx [orig:85 _3 ] [85])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":147:3 209 {*addsi_1}
     (nil))
(insn 48 19 20 3 (set (reg:SI 2 cx [orig:86 _4 ] [86])
        (reg:SI 1 dx [orig:86 _4 ] [86])) "drivers/chr_drv/console.c":147:3 75 {*movsi_internal}
     (nil))
(insn 20 48 21 3 (parallel [
            (set (reg:SI 2 cx [orig:86 _4 ] [86])
                (and:SI (reg:SI 2 cx [orig:86 _4 ] [86])
                    (const_int 1023 [0x3ff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":147:3 490 {*andsi_1}
     (nil))
(insn 21 20 22 3 (set (reg/f:SI 1 dx [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 tty+0 S4 A32])) "drivers/chr_drv/console.c":147:3 75 {*movsi_internal}
     (nil))
(insn 22 21 25 3 (set (mem:SI (plus:SI (reg/f:SI 1 dx [95])
                (const_int 52 [0x34])) [3 tty_11(D)->read_q.head+0 S4 A32])
        (reg:SI 2 cx [orig:87 _5 ] [87])) "drivers/chr_drv/console.c":147:3 75 {*movsi_internal}
     (nil))
(insn 25 22 26 3 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [9 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [9 p+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":148:4 209 {*addsi_1}
     (nil))
(code_label 26 25 27 4 18 (nil) [1 uses])
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg/f:SI 1 dx [97])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 p+0 S4 A32])) "drivers/chr_drv/console.c":146:9 75 {*movsi_internal}
     (nil))
(insn 29 28 31 4 (set (reg:QI 1 dx [orig:88 _6 ] [88])
        (mem:QI (reg/f:SI 1 dx [97]) [0 *p_7+0 S1 A8])) "drivers/chr_drv/console.c":146:9 77 {*movqi_internal}
     (nil))
(insn 31 29 32 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1 dx [orig:88 _6 ] [88])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":146:9 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 32 31 33 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "drivers/chr_drv/console.c":146:9 806 {*jcc}
     (nil)
 -> 30)
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] drivers/chr_drv/console.c:150)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":150:2 -1
     (nil))
(insn 35 34 36 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":151:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 36 35 37 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [10 tty+0 S4 A32])) "drivers/chr_drv/console.c":151:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 37 36 38 5 (set (reg:SI 3 bx)
        (reg:SI 0 ax [82])) "drivers/chr_drv/console.c":151:2 75 {*movsi_internal}
     (nil))
(call_insn 38 37 39 5 (call (mem:QI (symbol_ref:SI ("copy_to_cooked") [flags 0x41]  <function_decl 0x71960af38e00 copy_to_cooked>) [0 copy_to_cooked S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":151:2 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 39 38 44 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":151:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 44 39 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 47 6 (const_int 0 [0]) "drivers/chr_drv/console.c":152:1 843 {nop}
     (nil))
(note 47 45 0 NOTE_INSN_DELETED)

;; Function csi_J (csi_J, funcdef_no=10, decl_uid=1426, cgraph_uid=11, symbol_order=35)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 47
	 Choosing alt 2 in insn 47:  (0) r  (1) 0  (2) mr {*mulsi3_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 59:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
            0 Small class reload: reject+=3
            1 Small class reload: reject+=3
          alt=0,overall=18,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 62:  (0) c  (1) D  (2) a
      Creating newreg=101 from oldreg=98, assigning class CREG to r101
      Creating newreg=102 from oldreg=99, assigning class DIREG to r102
   62: {asm_operands;clobber flags:CC;}
      REG_DEAD r99:SI
      REG_DEAD r98:SI
      REG_DEAD r97:HI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   82: r101:SI=r98:SI
   83: r102:SI=r99:SI

	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4 5 6
EBB 7
EBB 8
EBB 9 13
EBB 10
EBB 12
EBB 11

********** Pseudo live ranges #1: **********

  BB 11
  BB 12
   Insn 77: point = 0, n_alt = -1
  BB 6
   Insn 67: point = 0, n_alt = -1
  BB 10
   Insn 73: point = 0, n_alt = -1
   Insn 62: point = 0, n_alt = 0
   Insn 83: point = 1, n_alt = -2
	Hard reg 3 is preferable by r102 with profit 1000
   Insn 82: point = 3, n_alt = -2
	Hard reg 1 is preferable by r101 with profit 1000
   Insn 61: point = 5, n_alt = 0
   Insn 60: point = 6, n_alt = 0
   Insn 59: point = 7, n_alt = 2
  BB 8
   Insn 71: point = 10, n_alt = -1
   Insn 40: point = 10, n_alt = 1
   Insn 39: point = 11, n_alt = 0
   Insn 38: point = 12, n_alt = 1
   Insn 37: point = 13, n_alt = 0
   Insn 36: point = 15, n_alt = 0
   Insn 35: point = 17, n_alt = 0
   Insn 34: point = 18, n_alt = 0
  BB 5
   Insn 17: point = 20, n_alt = -1
   Insn 16: point = 20, n_alt = 0
  BB 7
   Insn 69: point = 21, n_alt = -1
   Insn 29: point = 21, n_alt = 1
   Insn 28: point = 22, n_alt = 0
   Insn 27: point = 23, n_alt = 1
   Insn 26: point = 24, n_alt = 0
   Insn 25: point = 26, n_alt = 0
   Insn 24: point = 28, n_alt = 0
   Insn 23: point = 29, n_alt = 0
  BB 4
   Insn 14: point = 31, n_alt = -1
   Insn 13: point = 31, n_alt = 1
  BB 3
   Insn 11: point = 32, n_alt = -1
   Insn 10: point = 32, n_alt = 0
  BB 13
   Insn 79: point = 33, n_alt = -1
  BB 9
   Insn 50: point = 34, n_alt = 1
   Insn 49: point = 35, n_alt = 0
   Insn 48: point = 36, n_alt = 1
   Insn 47: point = 37, n_alt = 2
   Insn 46: point = 39, n_alt = 0
   Insn 45: point = 40, n_alt = 0
  BB 2
   Insn 6: point = 42, n_alt = -1
   Insn 5: point = 42, n_alt = 0
   Insn 80: point = 42, n_alt = 0
 r82: [8..42]
 r83: [27..29]
 r84: [27..28]
 r85: [25..26]
 r86: [23..24]
 r87: [21..22]
 r88: [16..18]
 r89: [16..17]
 r90: [14..15]
 r91: [12..13]
 r92: [10..11]
 r93: [38..40]
 r94: [38..39]
 r95: [36..37]
 r96: [34..35]
 r97: [0..7]
 r98: [4..6]
 r99: [2..5]
 r101: [0..3]
 r102: [0..1]
Compressing live ranges: from 43 to 28 - 65%
Ranges after the compression:
 r82: [6..27]
 r83: [20..21]
 r84: [20..21]
 r85: [18..19]
 r86: [16..17]
 r87: [14..15]
 r88: [12..13]
 r89: [12..13]
 r90: [10..11]
 r91: [8..9]
 r92: [6..7]
 r93: [26..27]
 r94: [26..27]
 r95: [24..25]
 r96: [22..23]
 r97: [0..5]
 r98: [4..5]
 r99: [2..5]
 r101: [0..3]
 r102: [0..1]

********** Assignment #1: **********

	 Assigning to 101 (cl=CREG, orig=98, freq=2000, tfirst=101, tfreq=2000)...
	   Assign 2 to reload r101 (freq=2000)
	 Assigning to 102 (cl=DIREG, orig=99, freq=2000, tfirst=102, tfreq=2000)...
	   Assign 5 to reload r102 (freq=2000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=28, prev_offset=24)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) rm  (1) re {*cmpsi_1}
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=28, prev_offset=28)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
changing reg in insn 80
changing reg in insn 59
changing reg in insn 49
changing reg in insn 46
changing reg in insn 45
changing reg in insn 39
changing reg in insn 35
changing reg in insn 34
changing reg in insn 28
changing reg in insn 24
changing reg in insn 23
changing reg in insn 23
changing reg in insn 25
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 34
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 37
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 59
changing reg in insn 62
changing reg in insn 60
changing reg in insn 61
starting the processing of deferred insns
ending the processing of deferred insns


csi_J

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 17 [flags]
;;  ref usage 	r0={3d,11u} r1={13d,12u} r2={5d,4u} r3={1d,1u} r5={1d,1u} r7={1d,25u} r17={11d,4u} 
;;    total ref usage 93{35d,58u,0e} in 41{41 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 80 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 80 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 80 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [4 par+0 S4 A32])
            (const_int 2 [0x2]))) "drivers/chr_drv/console.c":159:2 11 {*cmpsi_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "drivers/chr_drv/console.c":159:2 806 {*jcc}
     (nil)
 -> 43)
(note 7 6 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 7 11 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [4 par+0 S4 A32])
            (const_int 2 [0x2]))) "drivers/chr_drv/console.c":159:2 11 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 76)
            (pc))) "drivers/chr_drv/console.c":159:2 806 {*jcc}
     (nil)
 -> 76)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [4 par+0 S4 A32])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":159:2 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 14 13 15 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "drivers/chr_drv/console.c":159:2 806 {*jcc}
     (nil)
 -> 21)
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [4 par+0 S4 A32])
            (const_int 1 [0x1]))) "drivers/chr_drv/console.c":159:2 11 {*cmpsi_1}
     (nil))
(jump_insn 17 16 20 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "drivers/chr_drv/console.c":159:2 806 {*jcc}
     (nil)
 -> 32)
(note 20 17 67 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 67 20 68 6 (set (pc)
        (label_ref:SI 76)) "drivers/chr_drv/console.c":173:3 807 {jump}
     (nil)
 -> 76)
(barrier 68 67 21)
(code_label 21 68 22 7 23 (nil) [1 uses])
(note 22 21 23 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 7 (set (reg:SI 1 dx [orig:83 scr_end.27_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("scr_end") [flags 0x2]  <var_decl 0x71960af2ed80 scr_end>)
                        ] UNSPEC_GOTOFF))) [3 scr_end+0 S4 A32])) "drivers/chr_drv/console.c":161:20 75 {*movsi_internal}
     (nil))
(insn 24 23 25 7 (set (reg:SI 2 cx [orig:84 pos.28_2 ] [84])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":161:20 75 {*movsi_internal}
     (nil))
(insn 25 24 26 7 (parallel [
            (set (reg:SI 1 dx [orig:85 _3 ] [85])
                (minus:SI (reg:SI 1 dx [orig:83 scr_end.27_1 ] [83])
                    (reg:SI 2 cx [orig:84 pos.28_2 ] [84])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":161:20 282 {*subsi_1}
     (nil))
(insn 26 25 27 7 (parallel [
            (set (reg:SI 1 dx [orig:86 _4 ] [86])
                (lshiftrt:SI (reg:SI 1 dx [orig:85 _3 ] [85])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":161:27 701 {*lshrsi3_1}
     (nil))
(insn 27 26 28 7 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 count+0 S4 A32])
        (reg:SI 1 dx [orig:86 _4 ] [86])) "drivers/chr_drv/console.c":161:9 75 {*movsi_internal}
     (nil))
(insn 28 27 29 7 (set (reg:SI 1 dx [orig:87 pos.29_5 ] [87])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":162:9 75 {*movsi_internal}
     (nil))
(insn 29 28 69 7 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 start+0 S4 A32])
        (reg:SI 1 dx [orig:87 pos.29_5 ] [87])) "drivers/chr_drv/console.c":162:9 75 {*movsi_internal}
     (nil))
(jump_insn 69 29 70 7 (set (pc)
        (label_ref 57)) "drivers/chr_drv/console.c":163:3 807 {jump}
     (nil)
 -> 57)
(barrier 70 69 32)
(code_label 32 70 33 8 24 (nil) [1 uses])
(note 33 32 34 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 8 (set (reg:SI 1 dx [orig:88 pos.30_6 ] [88])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":165:16 75 {*movsi_internal}
     (nil))
(insn 35 34 36 8 (set (reg:SI 2 cx [orig:89 origin.31_7 ] [89])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])) "drivers/chr_drv/console.c":165:16 75 {*movsi_internal}
     (nil))
(insn 36 35 37 8 (parallel [
            (set (reg:SI 1 dx [orig:90 _8 ] [90])
                (minus:SI (reg:SI 1 dx [orig:88 pos.30_6 ] [88])
                    (reg:SI 2 cx [orig:89 origin.31_7 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":165:16 282 {*subsi_1}
     (nil))
(insn 37 36 38 8 (parallel [
            (set (reg:SI 1 dx [orig:91 _9 ] [91])
                (lshiftrt:SI (reg:SI 1 dx [orig:90 _8 ] [90])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":165:26 701 {*lshrsi3_1}
     (nil))
(insn 38 37 39 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 count+0 S4 A32])
        (reg:SI 1 dx [orig:91 _9 ] [91])) "drivers/chr_drv/console.c":165:9 75 {*movsi_internal}
     (nil))
(insn 39 38 40 8 (set (reg:SI 1 dx [orig:92 origin.32_10 ] [92])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])) "drivers/chr_drv/console.c":166:9 75 {*movsi_internal}
     (nil))
(insn 40 39 71 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 start+0 S4 A32])
        (reg:SI 1 dx [orig:92 origin.32_10 ] [92])) "drivers/chr_drv/console.c":166:9 75 {*movsi_internal}
     (nil))
(jump_insn 71 40 72 8 (set (pc)
        (label_ref 57)) "drivers/chr_drv/console.c":167:3 807 {jump}
     (nil)
 -> 57)
(barrier 72 71 43)
(code_label 43 72 44 9 21 (nil) [1 uses])
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg:SI 2 cx [orig:93 video_num_columns.33_11 ] [93])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":169:29 75 {*movsi_internal}
     (nil))
(insn 46 45 47 9 (set (reg:SI 1 dx [orig:94 video_num_lines.34_12 ] [94])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_lines") [flags 0x2]  <var_decl 0x71960af2e900 video_num_lines>)
                        ] UNSPEC_GOTOFF))) [3 video_num_lines+0 S4 A32])) "drivers/chr_drv/console.c":169:29 75 {*movsi_internal}
     (nil))
(insn 47 46 48 9 (parallel [
            (set (reg:SI 1 dx [orig:95 _13 ] [95])
                (mult:SI (reg:SI 1 dx [orig:94 video_num_lines.34_12 ] [94])
                    (reg:SI 2 cx [orig:93 video_num_columns.33_11 ] [93])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":169:29 408 {*mulsi3_1}
     (nil))
(insn 48 47 49 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 count+0 S4 A32])
        (reg:SI 1 dx [orig:95 _13 ] [95])) "drivers/chr_drv/console.c":169:9 75 {*movsi_internal}
     (nil))
(insn 49 48 50 9 (set (reg:SI 1 dx [orig:96 origin.35_14 ] [96])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])) "drivers/chr_drv/console.c":170:9 75 {*movsi_internal}
     (nil))
(insn 50 49 78 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 start+0 S4 A32])
        (reg:SI 1 dx [orig:96 origin.35_14 ] [96])) "drivers/chr_drv/console.c":170:9 75 {*movsi_internal}
     (nil))
(note 78 50 79 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 57 13 (const_int 0 [0]) "drivers/chr_drv/console.c":171:3 843 {nop}
     (nil))
(code_label 57 79 58 10 25 (nil) [2 uses])
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 10 (set (reg:HI 0 ax [orig:97 video_erase_char.36_15 ] [97])
        (mem/c:HI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_erase_char") [flags 0x2]  <var_decl 0x71960af2ec60 video_erase_char>)
                        ] UNSPEC_GOTOFF))) [8 video_erase_char+0 S2 A16])) "drivers/chr_drv/console.c":175:2 76 {*movhi_internal}
     (nil))
(insn 60 59 61 10 (set (reg:SI 1 dx [98])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 count+0 S4 A32])) "drivers/chr_drv/console.c":175:2 75 {*movsi_internal}
     (nil))
(insn 61 60 82 10 (set (reg:SI 3 bx [99])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 start+0 S4 A32])) "drivers/chr_drv/console.c":175:2 75 {*movsi_internal}
     (nil))
(insn 82 61 83 10 (set (reg:SI 2 cx [98])
        (reg:SI 1 dx [98])) "drivers/chr_drv/console.c":175:2 75 {*movsi_internal}
     (nil))
(insn 83 82 62 10 (set (reg:SI 5 di [99])
        (reg:SI 3 bx [99])) "drivers/chr_drv/console.c":175:2 75 {*movsi_internal}
     (nil))
(insn 62 83 73 10 (parallel [
            (asm_operands/v ("cld
	rep
	stosw
	") ("") 0 [
                    (reg:SI 2 cx [98])
                    (reg:SI 5 di [99])
                    (reg:HI 0 ax [orig:97 video_erase_char.36_15 ] [97])
                ]
                 [
                    (asm_input:SI ("c") drivers/chr_drv/console.c:175)
                    (asm_input:SI ("D") drivers/chr_drv/console.c:175)
                    (asm_input:HI ("a") drivers/chr_drv/console.c:175)
                ]
                 [] drivers/chr_drv/console.c:175)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":175:2 -1
     (nil))
(jump_insn 73 62 74 10 (set (pc)
        (label_ref 65)) 807 {jump}
     (nil)
 -> 65)
(barrier 74 73 76)
(code_label 76 74 75 12 27 (nil) [2 uses])
(note 75 76 77 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 77 75 65 12 (const_int 0 [0]) "drivers/chr_drv/console.c":173:3 843 {nop}
     (nil))
(code_label 65 77 66 11 20 (nil) [1 uses])
(note 66 65 81 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 81 66 0 NOTE_INSN_DELETED)

;; Function csi_K (csi_K, funcdef_no=11, decl_uid=1436, cgraph_uid=12, symbol_order=36)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =rm  (1) 0  (2) re {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =rm  (1) 0  (2) re {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (2) rm  (3) 0 {*movsicc_noc}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =rm  (1) 0  (2) re {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 70:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
            0 Small class reload: reject+=3
            1 Small class reload: reject+=3
          alt=0,overall=18,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 73:  (0) c  (1) D  (2) a
      Creating newreg=105 from oldreg=102, assigning class CREG to r105
      Creating newreg=106 from oldreg=103, assigning class DIREG to r106
   73: {asm_operands;clobber flags:CC;}
      REG_DEAD r103:SI
      REG_DEAD r102:SI
      REG_DEAD r101:HI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  100: r105:SI=r102:SI
  101: r106:SI=r103:SI

	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4 5 6
EBB 7 8
EBB 9
EBB 10 15
EBB 11
EBB 13
EBB 14
EBB 12

********** Pseudo live ranges #1: **********

  BB 12
  BB 13
   Insn 89: point = 0, n_alt = -1
   Insn 88: point = 0, n_alt = -1
  BB 6
   Insn 78: point = 0, n_alt = -1
  BB 14
   Insn 93: point = 0, n_alt = -1
  BB 11
   Insn 84: point = 0, n_alt = -1
   Insn 73: point = 0, n_alt = 0
   Insn 101: point = 1, n_alt = -2
	Hard reg 3 is preferable by r106 with profit 1000
   Insn 100: point = 3, n_alt = -2
	Hard reg 1 is preferable by r105 with profit 1000
   Insn 72: point = 5, n_alt = 0
   Insn 71: point = 6, n_alt = 0
   Insn 70: point = 7, n_alt = 2
  BB 9
   Insn 82: point = 10, n_alt = -1
   Insn 50: point = 10, n_alt = 1
   Insn 97: point = 11, n_alt = 0
   Insn 96: point = 13, n_alt = 0
   Insn 48: point = 13, n_alt = 0
   Insn 47: point = 14, n_alt = 0
   Insn 46: point = 15, n_alt = 1
   Insn 45: point = 16, n_alt = 0
   Insn 44: point = 18, n_alt = 0
   Insn 43: point = 20, n_alt = 0
   Insn 42: point = 21, n_alt = 0
  BB 5
   Insn 17: point = 23, n_alt = -1
   Insn 16: point = 23, n_alt = 0
  BB 8
   Insn 80: point = 24, n_alt = -1
   Insn 37: point = 24, n_alt = 1
   Insn 36: point = 25, n_alt = 0
   Insn 35: point = 26, n_alt = 1
   Insn 34: point = 27, n_alt = 0
   Insn 33: point = 29, n_alt = 0
   Insn 32: point = 30, n_alt = 0
  BB 7
   Insn 26: point = 32, n_alt = -1
   Insn 25: point = 32, n_alt = 0
   Insn 24: point = 33, n_alt = 0
   Insn 23: point = 34, n_alt = 0
  BB 4
   Insn 14: point = 36, n_alt = -1
   Insn 13: point = 36, n_alt = 1
  BB 3
   Insn 11: point = 37, n_alt = -1
   Insn 10: point = 37, n_alt = 0
  BB 15
   Insn 95: point = 38, n_alt = -1
  BB 10
   Insn 61: point = 39, n_alt = 1
   Insn 60: point = 40, n_alt = 0
   Insn 59: point = 41, n_alt = 1
   Insn 58: point = 42, n_alt = 0
   Insn 57: point = 44, n_alt = 0
   Insn 56: point = 46, n_alt = 0
   Insn 55: point = 47, n_alt = 0
  BB 2
   Insn 6: point = 49, n_alt = -1
   Insn 5: point = 49, n_alt = 0
   Insn 98: point = 49, n_alt = 0
 r82: [8..49]
 r83: [32..34]
 r84: [32..33]
 r85: [28..30]
 r86: [28..29]
 r87: [26..27]
 r88: [24..25]
 r89: [17..21]
 r90: [19..20]
 r91: [17..18]
 r92: [15..16]
 r93: [12..14]
 r94: [12..13]
 r95: [10..11]
 r96: [43..47]
 r97: [45..46]
 r98: [43..44]
 r99: [41..42]
 r100: [39..40]
 r101: [0..7]
 r102: [4..6]
 r103: [2..5]
 r105: [0..3]
 r106: [0..1]
Compressing live ranges: from 50 to 32 - 64%
Ranges after the compression:
 r82: [6..31]
 r83: [22..23]
 r84: [22..23]
 r85: [20..21]
 r86: [20..21]
 r87: [18..19]
 r88: [16..17]
 r89: [12..15]
 r90: [14..15]
 r91: [12..13]
 r92: [10..11]
 r93: [8..9]
 r94: [8..9]
 r95: [6..7]
 r96: [28..31]
 r97: [30..31]
 r98: [28..29]
 r99: [26..27]
 r100: [24..25]
 r101: [0..5]
 r102: [4..5]
 r103: [2..5]
 r105: [0..3]
 r106: [0..1]

********** Assignment #1: **********

	 Assigning to 105 (cl=CREG, orig=102, freq=2000, tfirst=105, tfreq=2000)...
	   Assign 2 to reload r105 (freq=2000)
	 Assigning to 106 (cl=DIREG, orig=103, freq=2000, tfirst=106, tfreq=2000)...
	   Assign 5 to reload r106 (freq=2000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=28, prev_offset=24)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) rm  (1) re {*cmpsi_1}
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=28, prev_offset=28)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
changing reg in insn 98
changing reg in insn 70
changing reg in insn 60
changing reg in insn 56
changing reg in insn 55
changing reg in insn 48
changing reg in insn 47
changing reg in insn 43
changing reg in insn 42
changing reg in insn 36
changing reg in insn 33
changing reg in insn 32
changing reg in insn 24
changing reg in insn 23
changing reg in insn 23
changing reg in insn 25
changing reg in insn 24
changing reg in insn 25
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 42
changing reg in insn 45
changing reg in insn 43
changing reg in insn 44
changing reg in insn 44
changing reg in insn 45
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 97
changing reg in insn 96
changing reg in insn 48
changing reg in insn 97
changing reg in insn 96
changing reg in insn 97
changing reg in insn 50
changing reg in insn 55
changing reg in insn 58
changing reg in insn 56
changing reg in insn 57
changing reg in insn 57
changing reg in insn 58
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 70
changing reg in insn 73
changing reg in insn 71
changing reg in insn 72
starting the processing of deferred insns
ending the processing of deferred insns


csi_K

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 17 [flags]
;;  ref usage 	r0={3d,14u} r1={13d,13u} r2={9d,9u} r3={1d,1u} r5={1d,1u} r7={1d,27u} r17={13d,6u} 
;;    total ref usage 112{41d,71u,0e} in 50{50 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 98 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 98 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 98 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [4 par+0 S4 A32])
            (const_int 2 [0x2]))) "drivers/chr_drv/console.c":186:2 11 {*cmpsi_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "drivers/chr_drv/console.c":186:2 806 {*jcc}
     (nil)
 -> 53)
(note 7 6 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 7 11 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [4 par+0 S4 A32])
            (const_int 2 [0x2]))) "drivers/chr_drv/console.c":186:2 11 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 87)
            (pc))) "drivers/chr_drv/console.c":186:2 806 {*jcc}
     (nil)
 -> 87)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [4 par+0 S4 A32])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":186:2 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 14 13 15 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "drivers/chr_drv/console.c":186:2 806 {*jcc}
     (nil)
 -> 21)
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [4 par+0 S4 A32])
            (const_int 1 [0x1]))) "drivers/chr_drv/console.c":186:2 11 {*cmpsi_1}
     (nil))
(jump_insn 17 16 20 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "drivers/chr_drv/console.c":186:2 806 {*jcc}
     (nil)
 -> 40)
(note 20 17 78 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 78 20 79 6 (set (pc)
        (label_ref:SI 87)) "drivers/chr_drv/console.c":202:3 807 {jump}
     (nil)
 -> 87)
(barrier 79 78 21)
(code_label 21 79 22 7 31 (nil) [1 uses])
(note 22 21 23 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 7 (set (reg:SI 2 cx [orig:83 x.37_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":188:9 75 {*movsi_internal}
     (nil))
(insn 24 23 25 7 (set (reg:SI 1 dx [orig:84 video_num_columns.38_2 ] [84])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":188:9 75 {*movsi_internal}
     (nil))
(insn 25 24 26 7 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [orig:83 x.37_1 ] [83])
            (reg:SI 1 dx [orig:84 video_num_columns.38_2 ] [84]))) "drivers/chr_drv/console.c":188:6 11 {*cmpsi_1}
     (nil))
(jump_insn 26 25 31 7 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 92)
            (pc))) "drivers/chr_drv/console.c":188:6 806 {*jcc}
     (nil)
 -> 92)
(note 31 26 32 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 8 (set (reg:SI 1 dx [orig:85 video_num_columns.39_3 ] [85])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":190:29 75 {*movsi_internal}
     (nil))
(insn 33 32 34 8 (set (reg:SI 2 cx [orig:86 x.40_4 ] [86])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":190:29 75 {*movsi_internal}
     (nil))
(insn 34 33 35 8 (parallel [
            (set (reg:SI 1 dx [orig:87 _5 ] [87])
                (minus:SI (reg:SI 1 dx [orig:85 video_num_columns.39_3 ] [85])
                    (reg:SI 2 cx [orig:86 x.40_4 ] [86])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":190:29 282 {*subsi_1}
     (nil))
(insn 35 34 36 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 count+0 S4 A32])
        (reg:SI 1 dx [orig:87 _5 ] [87])) "drivers/chr_drv/console.c":190:9 75 {*movsi_internal}
     (nil))
(insn 36 35 37 8 (set (reg:SI 1 dx [orig:88 pos.41_6 ] [88])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":191:9 75 {*movsi_internal}
     (nil))
(insn 37 36 80 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 start+0 S4 A32])
        (reg:SI 1 dx [orig:88 pos.41_6 ] [88])) "drivers/chr_drv/console.c":191:9 75 {*movsi_internal}
     (nil))
(jump_insn 80 37 81 8 (set (pc)
        (label_ref 68)) "drivers/chr_drv/console.c":192:3 807 {jump}
     (nil)
 -> 68)
(barrier 81 80 40)
(code_label 40 81 41 9 32 (nil) [1 uses])
(note 41 40 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 9 (set (reg:SI 1 dx [orig:89 pos.42_7 ] [89])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":194:15 75 {*movsi_internal}
     (nil))
(insn 43 42 44 9 (set (reg:SI 2 cx [orig:90 x.43_8 ] [90])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":194:20 75 {*movsi_internal}
     (nil))
(insn 44 43 45 9 (parallel [
            (set (reg:SI 2 cx [orig:91 _9 ] [91])
                (ashift:SI (reg:SI 2 cx [orig:90 x.43_8 ] [90])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":194:20 655 {*ashlsi3_1}
     (nil))
(insn 45 44 46 9 (parallel [
            (set (reg:SI 1 dx [orig:92 _10 ] [92])
                (minus:SI (reg:SI 1 dx [orig:89 pos.42_7 ] [89])
                    (reg:SI 2 cx [orig:91 _9 ] [91])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":194:15 282 {*subsi_1}
     (nil))
(insn 46 45 47 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 start+0 S4 A32])
        (reg:SI 1 dx [orig:92 _10 ] [92])) "drivers/chr_drv/console.c":194:9 75 {*movsi_internal}
     (nil))
(insn 47 46 48 9 (set (reg:SI 2 cx [orig:93 video_num_columns.44_11 ] [93])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":195:39 75 {*movsi_internal}
     (nil))
(insn 48 47 96 9 (set (reg:SI 1 dx [orig:94 x.45_12 ] [94])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":195:39 75 {*movsi_internal}
     (nil))
(insn 96 48 97 9 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [orig:93 video_num_columns.44_11 ] [93])
            (reg:SI 1 dx [orig:94 x.45_12 ] [94]))) "drivers/chr_drv/console.c":195:39 11 {*cmpsi_1}
     (nil))
(insn 97 96 50 9 (set (reg:SI 1 dx [orig:95 _13 ] [95])
        (if_then_else:SI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:SI 2 cx [orig:93 video_num_columns.44_11 ] [93])
            (reg:SI 1 dx [orig:94 x.45_12 ] [94]))) "drivers/chr_drv/console.c":195:39 1100 {*movsicc_noc}
     (nil))
(insn 50 97 82 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 count+0 S4 A32])
        (reg:SI 1 dx [orig:95 _13 ] [95])) "drivers/chr_drv/console.c":195:9 75 {*movsi_internal}
     (nil))
(jump_insn 82 50 83 9 (set (pc)
        (label_ref 68)) "drivers/chr_drv/console.c":196:3 807 {jump}
     (nil)
 -> 68)
(barrier 83 82 53)
(code_label 53 83 54 10 29 (nil) [1 uses])
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (set (reg:SI 1 dx [orig:96 pos.46_14 ] [96])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":198:15 75 {*movsi_internal}
     (nil))
(insn 56 55 57 10 (set (reg:SI 2 cx [orig:97 x.47_15 ] [97])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":198:20 75 {*movsi_internal}
     (nil))
(insn 57 56 58 10 (parallel [
            (set (reg:SI 2 cx [orig:98 _16 ] [98])
                (ashift:SI (reg:SI 2 cx [orig:97 x.47_15 ] [97])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":198:20 655 {*ashlsi3_1}
     (nil))
(insn 58 57 59 10 (parallel [
            (set (reg:SI 1 dx [orig:99 _17 ] [99])
                (minus:SI (reg:SI 1 dx [orig:96 pos.46_14 ] [96])
                    (reg:SI 2 cx [orig:98 _16 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":198:15 282 {*subsi_1}
     (nil))
(insn 59 58 60 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 start+0 S4 A32])
        (reg:SI 1 dx [orig:99 _17 ] [99])) "drivers/chr_drv/console.c":198:9 75 {*movsi_internal}
     (nil))
(insn 60 59 61 10 (set (reg:SI 1 dx [orig:100 video_num_columns.48_18 ] [100])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":199:9 75 {*movsi_internal}
     (nil))
(insn 61 60 94 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 count+0 S4 A32])
        (reg:SI 1 dx [orig:100 video_num_columns.48_18 ] [100])) "drivers/chr_drv/console.c":199:9 75 {*movsi_internal}
     (nil))
(note 94 61 95 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 68 15 (const_int 0 [0]) "drivers/chr_drv/console.c":200:3 843 {nop}
     (nil))
(code_label 68 95 69 11 35 (nil) [2 uses])
(note 69 68 70 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 11 (set (reg:HI 0 ax [orig:101 video_erase_char.49_19 ] [101])
        (mem/c:HI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_erase_char") [flags 0x2]  <var_decl 0x71960af2ec60 video_erase_char>)
                        ] UNSPEC_GOTOFF))) [8 video_erase_char+0 S2 A16])) "drivers/chr_drv/console.c":204:2 76 {*movhi_internal}
     (nil))
(insn 71 70 72 11 (set (reg:SI 1 dx [102])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 count+0 S4 A32])) "drivers/chr_drv/console.c":204:2 75 {*movsi_internal}
     (nil))
(insn 72 71 100 11 (set (reg:SI 3 bx [103])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 start+0 S4 A32])) "drivers/chr_drv/console.c":204:2 75 {*movsi_internal}
     (nil))
(insn 100 72 101 11 (set (reg:SI 2 cx [102])
        (reg:SI 1 dx [102])) "drivers/chr_drv/console.c":204:2 75 {*movsi_internal}
     (nil))
(insn 101 100 73 11 (set (reg:SI 5 di [103])
        (reg:SI 3 bx [103])) "drivers/chr_drv/console.c":204:2 75 {*movsi_internal}
     (nil))
(insn 73 101 84 11 (parallel [
            (asm_operands/v ("cld
	rep
	stosw
	") ("") 0 [
                    (reg:SI 2 cx [102])
                    (reg:SI 5 di [103])
                    (reg:HI 0 ax [orig:101 video_erase_char.49_19 ] [101])
                ]
                 [
                    (asm_input:SI ("c") drivers/chr_drv/console.c:204)
                    (asm_input:SI ("D") drivers/chr_drv/console.c:204)
                    (asm_input:HI ("a") drivers/chr_drv/console.c:204)
                ]
                 [] drivers/chr_drv/console.c:204)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":204:2 -1
     (nil))
(jump_insn 84 73 85 11 (set (pc)
        (label_ref 76)) 807 {jump}
     (nil)
 -> 76)
(barrier 85 84 87)
(code_label 87 85 86 13 36 (nil) [2 uses])
(note 86 87 88 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 88 86 89 13 (const_int 0 [0]) "drivers/chr_drv/console.c":202:3 843 {nop}
     (nil))
(jump_insn 89 88 90 13 (set (pc)
        (label_ref 76)) 807 {jump}
     (nil)
 -> 76)
(barrier 90 89 92)
(code_label 92 90 91 14 37 (nil) [1 uses])
(note 91 92 93 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 93 91 76 14 (const_int 0 [0]) "drivers/chr_drv/console.c":189:4 843 {nop}
     (nil))
(code_label 76 93 77 12 28 (nil) [2 uses])
(note 77 76 99 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(note 99 77 0 NOTE_INSN_DELETED)

;; Function scrdown (scrdown, funcdef_no=12, decl_uid=1446, cgraph_uid=13, symbol_order=37)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r {*set_got}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) qm  (1) qn {*cmpqi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 9:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) qm  (1) qn {*cmpqi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 14:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 18:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 20
	 Choosing alt 2 in insn 20:  (0) r  (1) 0  (2) mr {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 24:  (0) r  (1) 0  (2) mr {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 26
	 Choosing alt 0 in insn 26:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 27:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 29:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 31
	 Choosing alt 2 in insn 31:  (0) r  (1) 0  (2) mr {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 33
	 Choosing alt 0 in insn 33:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 34:  (0) r  (1) r  (2) le {*addsi_1}
            0 Small class reload: reject+=3
            2 Small class reload: reject+=3
          alt=0,overall=18,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 35:  (0) a  (1) c  (2) D  (3) S
      Creating newreg=128 from oldreg=85, assigning class AREG to r128
      Creating newreg=129 from oldreg=98, assigning class DIREG to r129
   35: {asm_operands;clobber flags:CC;}
      REG_DEAD r105:SI
      REG_DEAD r98:SI
      REG_DEAD r92:SI
      REG_DEAD r85:HI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   74: r128:HI=r85:HI
   75: r129:SI=r98:SI

            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 40:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 44:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 46
	 Choosing alt 2 in insn 46:  (0) r  (1) 0  (2) mr {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 50:  (0) r  (1) 0  (2) mr {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 52
	 Choosing alt 0 in insn 52:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 53:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 55:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 57
	 Choosing alt 2 in insn 57:  (0) r  (1) 0  (2) mr {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 59
	 Choosing alt 0 in insn 59:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 60:  (0) r  (1) r  (2) le {*addsi_1}
            0 Small class reload: reject+=3
            2 Small class reload: reject+=3
          alt=0,overall=18,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 61:  (0) a  (1) c  (2) D  (3) S
      Creating newreg=130 from oldreg=106, assigning class AREG to r130
      Creating newreg=131 from oldreg=119, assigning class DIREG to r131
   61: {asm_operands;clobber flags:CC;}
      REG_DEAD r126:SI
      REG_DEAD r119:SI
      REG_DEAD r113:SI
      REG_DEAD r106:HI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   76: r130:HI=r106:HI
   77: r131:SI=r119:SI

	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5 7
EBB 6 8

********** Pseudo live ranges #1: **********

  BB 8
   Insn 71: point = 0, n_alt = -1
  BB 6
  BB 4
   Insn 66: point = 0, n_alt = -1
   Insn 35: point = 0, n_alt = 0
   Insn 75: point = 1, n_alt = -2
	Hard reg 3 is preferable by r129 with profit 1000
   Insn 74: point = 3, n_alt = -2
	Hard reg 1 is preferable by r128 with profit 1000
   Insn 34: point = 5, n_alt = 3
   Insn 33: point = 7, n_alt = 0
   Insn 32: point = 9, n_alt = 0
   Insn 31: point = 11, n_alt = 2
   Insn 30: point = 13, n_alt = 0
   Insn 29: point = 14, n_alt = 3
   Insn 28: point = 16, n_alt = 0
   Insn 27: point = 17, n_alt = 0
   Insn 26: point = 19, n_alt = 0
   Insn 25: point = 21, n_alt = 0
   Insn 24: point = 22, n_alt = 2
   Insn 23: point = 24, n_alt = 0
   Insn 22: point = 25, n_alt = 0
   Insn 21: point = 26, n_alt = 0
   Insn 20: point = 28, n_alt = 2
   Insn 19: point = 30, n_alt = 0
   Insn 18: point = 31, n_alt = 3
   Insn 17: point = 33, n_alt = 0
   Insn 16: point = 35, n_alt = 0
   Insn 15: point = 36, n_alt = 0
   Insn 14: point = 37, n_alt = 2
  BB 7
   Insn 69: point = 39, n_alt = -1
  BB 5
   Insn 61: point = 39, n_alt = 0
   Insn 77: point = 40, n_alt = -2
	Hard reg 3 is preferable by r131 with profit 1000
   Insn 76: point = 42, n_alt = -2
	Hard reg 1 is preferable by r130 with profit 1000
   Insn 60: point = 44, n_alt = 3
   Insn 59: point = 46, n_alt = 0
   Insn 58: point = 48, n_alt = 0
   Insn 57: point = 50, n_alt = 2
   Insn 56: point = 52, n_alt = 0
   Insn 55: point = 53, n_alt = 3
   Insn 54: point = 55, n_alt = 0
   Insn 53: point = 56, n_alt = 0
   Insn 52: point = 58, n_alt = 0
   Insn 51: point = 60, n_alt = 0
   Insn 50: point = 61, n_alt = 2
   Insn 49: point = 63, n_alt = 0
   Insn 48: point = 64, n_alt = 0
   Insn 47: point = 65, n_alt = 0
   Insn 46: point = 67, n_alt = 2
   Insn 45: point = 69, n_alt = 0
   Insn 44: point = 70, n_alt = 3
   Insn 43: point = 72, n_alt = 0
   Insn 42: point = 74, n_alt = 0
   Insn 41: point = 75, n_alt = 0
   Insn 40: point = 76, n_alt = 2
  BB 3
   Insn 11: point = 78, n_alt = -1
   Insn 10: point = 78, n_alt = 0
   Insn 9: point = 79, n_alt = 4
  BB 2
   Insn 7: point = 81, n_alt = -1
   Insn 6: point = 81, n_alt = 0
   Insn 5: point = 82, n_alt = 4
   Insn 72: point = 83, n_alt = 0
 r82: [49..83] [10..38]
 r83: [81..82]
 r84: [78..79]
 r85: [4..37]
 r86: [34..36]
 r87: [34..35]
 r88: [32..33]
 r89: [29..31]
 r90: [29..30]
 r91: [27..28]
 r92: [0..26]
 r93: [23..25]
 r94: [23..24]
 r95: [20..22]
 r96: [20..21]
 r97: [18..19]
 r98: [2..17]
 r99: [15..16]
 r100: [12..14]
 r101: [12..13]
 r102: [8..11]
 r103: [8..9]
 r104: [6..7]
 r105: [0..5]
 r106: [43..76]
 r107: [73..75]
 r108: [73..74]
 r109: [71..72]
 r110: [68..70]
 r111: [68..69]
 r112: [66..67]
 r113: [39..65]
 r114: [62..64]
 r115: [62..63]
 r116: [59..61]
 r117: [59..60]
 r118: [57..58]
 r119: [41..56]
 r120: [54..55]
 r121: [51..53]
 r122: [51..52]
 r123: [47..50]
 r124: [47..48]
 r125: [45..46]
 r126: [39..44]
 r128: [0..3]
 r129: [0..1]
 r130: [39..42]
 r131: [39..40]
Compressing live ranges: from 84 to 64 - 76%
Ranges after the compression:
 r82: [40..63] [10..29]
 r83: [62..63]
 r84: [60..61]
 r85: [4..29]
 r86: [28..29]
 r87: [28..29]
 r88: [26..27]
 r89: [24..25]
 r90: [24..25]
 r91: [22..23]
 r92: [0..21]
 r93: [20..21]
 r94: [20..21]
 r95: [18..19]
 r96: [18..19]
 r97: [16..17]
 r98: [2..15]
 r99: [14..15]
 r100: [12..13]
 r101: [12..13]
 r102: [8..11]
 r103: [8..9]
 r104: [6..7]
 r105: [0..5]
 r106: [34..59]
 r107: [58..59]
 r108: [58..59]
 r109: [56..57]
 r110: [54..55]
 r111: [54..55]
 r112: [52..53]
 r113: [30..51]
 r114: [50..51]
 r115: [50..51]
 r116: [48..49]
 r117: [48..49]
 r118: [46..47]
 r119: [32..45]
 r120: [44..45]
 r121: [42..43]
 r122: [42..43]
 r123: [38..41]
 r124: [38..39]
 r125: [36..37]
 r126: [30..35]
 r128: [0..3]
 r129: [0..1]
 r130: [30..33]
 r131: [30..31]

********** Assignment #1: **********

	 Assigning to 128 (cl=AREG, orig=85, freq=2000, tfirst=128, tfreq=2000)...
	   Assign 0 to reload r128 (freq=2000)
	 Assigning to 129 (cl=DIREG, orig=98, freq=2000, tfirst=129, tfreq=2000)...
	   Assign 5 to reload r129 (freq=2000)
	 Assigning to 130 (cl=AREG, orig=106, freq=2000, tfirst=130, tfreq=2000)...
	   Assign 0 to reload r130 (freq=2000)
	 Assigning to 131 (cl=DIREG, orig=119, freq=2000, tfirst=131, tfreq=2000)...
	   Assign 5 to reload r131 (freq=2000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 72
changing reg in insn 58
changing reg in insn 56
changing reg in insn 54
changing reg in insn 51
changing reg in insn 49
changing reg in insn 48
changing reg in insn 45
changing reg in insn 42
changing reg in insn 41
changing reg in insn 40
changing reg in insn 32
changing reg in insn 30
changing reg in insn 28
changing reg in insn 25
changing reg in insn 23
changing reg in insn 22
changing reg in insn 19
changing reg in insn 16
changing reg in insn 15
changing reg in insn 14
changing reg in insn 9
changing reg in insn 5
changing reg in insn 5
changing reg in insn 6
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 15
changing reg in insn 17
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 35
changing reg in insn 22
changing reg in insn 24
changing reg in insn 23
changing reg in insn 24
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 35
changing reg in insn 40
changing reg in insn 41
changing reg in insn 43
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 44
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 47
changing reg in insn 61
changing reg in insn 48
changing reg in insn 50
changing reg in insn 49
changing reg in insn 50
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 60
changing reg in insn 61
starting the processing of deferred insns
ending the processing of deferred insns


scrdown

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;;  ref usage 	r0={8d,28u} r1={5d,4u} r2={11d,10u} r3={12d,12u} r4={12d,12u} r5={4d,4u} r7={1d,8u} r17={27d,2u} 
;;    total ref usage 160{80d,80u,0e} in 58{58 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 72 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 72 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 72 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:QI 1 dx [orig:83 video_type.50_1 ] [83])
        (mem/c:QI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_type") [flags 0x2]  <var_decl 0x71960af2e750 video_type>)
                        ] UNSPEC_GOTOFF))) [0 video_type+0 S1 A8])) "drivers/chr_drv/console.c":212:17 77 {*movqi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1 dx [orig:83 video_type.50_1 ] [83])
            (const_int 33 [0x21]))) "drivers/chr_drv/console.c":212:5 9 {*cmpqi_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 12)
            (pc))) "drivers/chr_drv/console.c":212:5 806 {*jcc}
     (nil)
 -> 12)
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:QI 1 dx [orig:84 video_type.51_2 ] [84])
        (mem/c:QI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_type") [flags 0x2]  <var_decl 0x71960af2e750 video_type>)
                        ] UNSPEC_GOTOFF))) [0 video_type+0 S1 A8])) "drivers/chr_drv/console.c":212:50 77 {*movqi_internal}
     (nil))
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1 dx [orig:84 video_type.51_2 ] [84])
            (const_int 32 [0x20]))) "drivers/chr_drv/console.c":212:36 9 {*cmpqi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "drivers/chr_drv/console.c":212:36 806 {*jcc}
     (nil)
 -> 38)
(code_label 12 11 13 4 39 (nil) [1 uses])
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:HI 1 dx [orig:85 video_erase_char.52_3 ] [85])
        (mem/c:HI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_erase_char") [flags 0x2]  <var_decl 0x71960af2ec60 video_erase_char>)
                        ] UNSPEC_GOTOFF))) [8 video_erase_char+0 S2 A16])) "drivers/chr_drv/console.c":213:3 76 {*movhi_internal}
     (nil))
(insn 15 14 16 4 (set (reg:SI 2 cx [orig:86 bottom.53_4 ] [86])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bottom") [flags 0x2]  <var_decl 0x71960af55000 bottom>)
                        ] UNSPEC_GOTOFF))) [3 bottom+0 S4 A32])) "drivers/chr_drv/console.c":217:16 75 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:SI 3 bx [orig:87 top.54_5 ] [87])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("top") [flags 0x2]  <var_decl 0x71960af2e2d0 top>)
                        ] UNSPEC_GOTOFF))) [3 top+0 S4 A32])) "drivers/chr_drv/console.c":217:16 75 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg:SI 2 cx [orig:88 _6 ] [88])
                (minus:SI (reg:SI 2 cx [orig:86 bottom.53_4 ] [86])
                    (reg:SI 3 bx [orig:87 top.54_5 ] [87])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":217:16 282 {*subsi_1}
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:SI 3 bx [orig:89 _7 ] [89])
                (plus:SI (reg:SI 2 cx [orig:88 _6 ] [88])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":217:22 209 {*addsi_1}
     (nil))
(insn 19 18 20 4 (set (reg:SI 2 cx [orig:90 video_num_columns.55_8 ] [90])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":217:27 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (parallel [
            (set (reg:SI 2 cx [orig:91 _9 ] [91])
                (mult:SI (reg:SI 2 cx [orig:90 video_num_columns.55_8 ] [90])
                    (reg:SI 3 bx [orig:89 _7 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":217:27 408 {*mulsi3_1}
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg:SI 2 cx [orig:92 _10 ] [92])
                (lshiftrt:SI (reg:SI 2 cx [orig:91 _9 ] [91])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":217:47 701 {*lshrsi3_1}
     (nil))
(insn 22 21 23 4 (set (reg:SI 4 si [orig:93 video_size_row.56_11 ] [93])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":218:32 75 {*movsi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:SI 3 bx [orig:94 bottom.57_12 ] [94])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bottom") [flags 0x2]  <var_decl 0x71960af55000 bottom>)
                        ] UNSPEC_GOTOFF))) [3 bottom+0 S4 A32])) "drivers/chr_drv/console.c":218:32 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg:SI 4 si [orig:95 _13 ] [95])
                (mult:SI (reg:SI 4 si [orig:93 video_size_row.56_11 ] [93])
                    (reg:SI 3 bx [orig:94 bottom.57_12 ] [94])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":218:32 408 {*mulsi3_1}
     (nil))
(insn 25 24 26 4 (set (reg:SI 3 bx [orig:96 origin.58_14 ] [96])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])) "drivers/chr_drv/console.c":218:15 75 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (parallel [
            (set (reg:SI 3 bx [orig:97 _15 ] [97])
                (plus:SI (reg:SI 3 bx [orig:96 origin.58_14 ] [96])
                    (reg:SI 4 si [orig:95 _13 ] [95])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":218:15 209 {*addsi_1}
     (nil))
(insn 27 26 28 4 (parallel [
            (set (reg:SI 3 bx [orig:98 _16 ] [98])
                (plus:SI (reg:SI 3 bx [orig:97 _15 ] [97])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":218:41 209 {*addsi_1}
     (nil))
(insn 28 27 29 4 (set (reg:SI 4 si [orig:99 bottom.59_17 ] [99])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bottom") [flags 0x2]  <var_decl 0x71960af55000 bottom>)
                        ] UNSPEC_GOTOFF))) [3 bottom+0 S4 A32])) "drivers/chr_drv/console.c":219:42 75 {*movsi_internal}
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg:SI 5 di [orig:100 _18 ] [100])
                (plus:SI (reg:SI 4 si [orig:99 bottom.59_17 ] [99])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":219:42 209 {*addsi_1}
     (nil))
(insn 30 29 31 4 (set (reg:SI 4 si [orig:101 video_size_row.60_19 ] [101])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":219:32 75 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (parallel [
            (set (reg:SI 4 si [orig:102 _20 ] [102])
                (mult:SI (reg:SI 4 si [orig:101 video_size_row.60_19 ] [101])
                    (reg:SI 5 di [orig:100 _18 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":219:32 408 {*mulsi3_1}
     (nil))
(insn 32 31 33 4 (set (reg:SI 0 ax [orig:103 origin.61_21 ] [103])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])) "drivers/chr_drv/console.c":219:15 75 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg:SI 0 ax [orig:104 _22 ] [104])
                (plus:SI (reg:SI 0 ax [orig:103 origin.61_21 ] [103])
                    (reg:SI 4 si [orig:102 _20 ] [102])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":219:15 209 {*addsi_1}
     (nil))
(insn 34 33 74 4 (parallel [
            (set (reg:SI 4 si [orig:105 _23 ] [105])
                (plus:SI (reg:SI 0 ax [orig:104 _22 ] [104])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":219:47 209 {*addsi_1}
     (nil))
(insn 74 34 75 4 (set (reg:HI 0 ax [orig:85 video_erase_char.52_3 ] [85])
        (reg:HI 1 dx [orig:85 video_erase_char.52_3 ] [85])) "drivers/chr_drv/console.c":213:3 76 {*movhi_internal}
     (nil))
(insn 75 74 35 4 (set (reg:SI 5 di [orig:98 _16 ] [98])
        (reg:SI 3 bx [orig:98 _16 ] [98])) "drivers/chr_drv/console.c":213:3 75 {*movsi_internal}
     (nil))
(insn 35 75 66 4 (parallel [
            (asm_operands/v ("std
	rep
	movsl
	addl $2, %%edi
	movl video_num_columns, %%ecx
	rep
	stosw") ("") 0 [
                    (reg:HI 0 ax [orig:85 video_erase_char.52_3 ] [85])
                    (reg:SI 2 cx [orig:92 _10 ] [92])
                    (reg:SI 5 di [orig:98 _16 ] [98])
                    (reg:SI 4 si [orig:105 _23 ] [105])
                ]
                 [
                    (asm_input:HI ("a") drivers/chr_drv/console.c:213)
                    (asm_input:SI ("c") drivers/chr_drv/console.c:213)
                    (asm_input:SI ("D") drivers/chr_drv/console.c:213)
                    (asm_input:SI ("S") drivers/chr_drv/console.c:213)
                ]
                 [] drivers/chr_drv/console.c:213)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":213:3 -1
     (nil))
(jump_insn 66 35 67 4 (set (pc)
        (label_ref 62)) "drivers/chr_drv/console.c":213:3 807 {jump}
     (nil)
 -> 62)
(barrier 67 66 38)
(code_label 38 67 39 5 40 (nil) [1 uses])
(note 39 38 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 5 (set (reg:HI 1 dx [orig:106 video_erase_char.62_24 ] [106])
        (mem/c:HI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_erase_char") [flags 0x2]  <var_decl 0x71960af2ec60 video_erase_char>)
                        ] UNSPEC_GOTOFF))) [8 video_erase_char+0 S2 A16])) "drivers/chr_drv/console.c":222:3 76 {*movhi_internal}
     (nil))
(insn 41 40 42 5 (set (reg:SI 2 cx [orig:107 bottom.63_25 ] [107])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bottom") [flags 0x2]  <var_decl 0x71960af55000 bottom>)
                        ] UNSPEC_GOTOFF))) [3 bottom+0 S4 A32])) "drivers/chr_drv/console.c":226:16 75 {*movsi_internal}
     (nil))
(insn 42 41 43 5 (set (reg:SI 3 bx [orig:108 top.64_26 ] [108])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("top") [flags 0x2]  <var_decl 0x71960af2e2d0 top>)
                        ] UNSPEC_GOTOFF))) [3 top+0 S4 A32])) "drivers/chr_drv/console.c":226:16 75 {*movsi_internal}
     (nil))
(insn 43 42 44 5 (parallel [
            (set (reg:SI 2 cx [orig:109 _27 ] [109])
                (minus:SI (reg:SI 2 cx [orig:107 bottom.63_25 ] [107])
                    (reg:SI 3 bx [orig:108 top.64_26 ] [108])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":226:16 282 {*subsi_1}
     (nil))
(insn 44 43 45 5 (parallel [
            (set (reg:SI 3 bx [orig:110 _28 ] [110])
                (plus:SI (reg:SI 2 cx [orig:109 _27 ] [109])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":226:22 209 {*addsi_1}
     (nil))
(insn 45 44 46 5 (set (reg:SI 2 cx [orig:111 video_num_columns.65_29 ] [111])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":226:27 75 {*movsi_internal}
     (nil))
(insn 46 45 47 5 (parallel [
            (set (reg:SI 2 cx [orig:112 _30 ] [112])
                (mult:SI (reg:SI 2 cx [orig:111 video_num_columns.65_29 ] [111])
                    (reg:SI 3 bx [orig:110 _28 ] [110])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":226:27 408 {*mulsi3_1}
     (nil))
(insn 47 46 48 5 (parallel [
            (set (reg:SI 2 cx [orig:113 _31 ] [113])
                (lshiftrt:SI (reg:SI 2 cx [orig:112 _30 ] [112])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":226:47 701 {*lshrsi3_1}
     (nil))
(insn 48 47 49 5 (set (reg:SI 4 si [orig:114 video_size_row.66_32 ] [114])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":227:32 75 {*movsi_internal}
     (nil))
(insn 49 48 50 5 (set (reg:SI 3 bx [orig:115 bottom.67_33 ] [115])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bottom") [flags 0x2]  <var_decl 0x71960af55000 bottom>)
                        ] UNSPEC_GOTOFF))) [3 bottom+0 S4 A32])) "drivers/chr_drv/console.c":227:32 75 {*movsi_internal}
     (nil))
(insn 50 49 51 5 (parallel [
            (set (reg:SI 4 si [orig:116 _34 ] [116])
                (mult:SI (reg:SI 4 si [orig:114 video_size_row.66_32 ] [114])
                    (reg:SI 3 bx [orig:115 bottom.67_33 ] [115])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":227:32 408 {*mulsi3_1}
     (nil))
(insn 51 50 52 5 (set (reg:SI 3 bx [orig:117 origin.68_35 ] [117])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])) "drivers/chr_drv/console.c":227:15 75 {*movsi_internal}
     (nil))
(insn 52 51 53 5 (parallel [
            (set (reg:SI 3 bx [orig:118 _36 ] [118])
                (plus:SI (reg:SI 3 bx [orig:117 origin.68_35 ] [117])
                    (reg:SI 4 si [orig:116 _34 ] [116])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":227:15 209 {*addsi_1}
     (nil))
(insn 53 52 54 5 (parallel [
            (set (reg:SI 3 bx [orig:119 _37 ] [119])
                (plus:SI (reg:SI 3 bx [orig:118 _36 ] [118])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":227:41 209 {*addsi_1}
     (nil))
(insn 54 53 55 5 (set (reg:SI 4 si [orig:120 bottom.69_38 ] [120])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bottom") [flags 0x2]  <var_decl 0x71960af55000 bottom>)
                        ] UNSPEC_GOTOFF))) [3 bottom+0 S4 A32])) "drivers/chr_drv/console.c":228:42 75 {*movsi_internal}
     (nil))
(insn 55 54 56 5 (parallel [
            (set (reg:SI 5 di [orig:121 _39 ] [121])
                (plus:SI (reg:SI 4 si [orig:120 bottom.69_38 ] [120])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":228:42 209 {*addsi_1}
     (nil))
(insn 56 55 57 5 (set (reg:SI 4 si [orig:122 video_size_row.70_40 ] [122])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":228:32 75 {*movsi_internal}
     (nil))
(insn 57 56 58 5 (parallel [
            (set (reg:SI 4 si [orig:123 _41 ] [123])
                (mult:SI (reg:SI 4 si [orig:122 video_size_row.70_40 ] [122])
                    (reg:SI 5 di [orig:121 _39 ] [121])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":228:32 408 {*mulsi3_1}
     (nil))
(insn 58 57 59 5 (set (reg:SI 0 ax [orig:124 origin.71_42 ] [124])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])) "drivers/chr_drv/console.c":228:15 75 {*movsi_internal}
     (nil))
(insn 59 58 60 5 (parallel [
            (set (reg:SI 0 ax [orig:125 _43 ] [125])
                (plus:SI (reg:SI 0 ax [orig:124 origin.71_42 ] [124])
                    (reg:SI 4 si [orig:123 _41 ] [123])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":228:15 209 {*addsi_1}
     (nil))
(insn 60 59 76 5 (parallel [
            (set (reg:SI 4 si [orig:126 _44 ] [126])
                (plus:SI (reg:SI 0 ax [orig:125 _43 ] [125])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":228:47 209 {*addsi_1}
     (nil))
(insn 76 60 77 5 (set (reg:HI 0 ax [orig:106 video_erase_char.62_24 ] [106])
        (reg:HI 1 dx [orig:106 video_erase_char.62_24 ] [106])) "drivers/chr_drv/console.c":222:3 76 {*movhi_internal}
     (nil))
(insn 77 76 61 5 (set (reg:SI 5 di [orig:119 _37 ] [119])
        (reg:SI 3 bx [orig:119 _37 ] [119])) "drivers/chr_drv/console.c":222:3 75 {*movsi_internal}
     (nil))
(insn 61 77 68 5 (parallel [
            (asm_operands/v ("std
	rep
	movsl
	addl $2, %%edi
	movl video_num_columns, %%ecx
	rep
	stosw") ("") 0 [
                    (reg:HI 0 ax [orig:106 video_erase_char.62_24 ] [106])
                    (reg:SI 2 cx [orig:113 _31 ] [113])
                    (reg:SI 5 di [orig:119 _37 ] [119])
                    (reg:SI 4 si [orig:126 _44 ] [126])
                ]
                 [
                    (asm_input:HI ("a") drivers/chr_drv/console.c:222)
                    (asm_input:SI ("c") drivers/chr_drv/console.c:222)
                    (asm_input:SI ("D") drivers/chr_drv/console.c:222)
                    (asm_input:SI ("S") drivers/chr_drv/console.c:222)
                ]
                 [] drivers/chr_drv/console.c:222)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":222:3 -1
     (nil))
(note 68 61 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 62 7 (const_int 0 [0]) "drivers/chr_drv/console.c":231:1 843 {nop}
     (nil))
(code_label 62 69 63 6 41 (nil) [1 uses])
(note 63 62 70 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 70 63 71 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 73 8 (const_int 0 [0]) "drivers/chr_drv/console.c":231:1 843 {nop}
     (nil))
(note 73 71 0 NOTE_INSN_DELETED)

;; Function scrup (scrup, funcdef_no=13, decl_uid=1388, cgraph_uid=14, symbol_order=38)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =r {*set_got}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) qm  (1) qn {*cmpqi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 9:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 25
	 Choosing alt 0 in insn 25:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 29
	 Choosing alt 0 in insn 29:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 33
	 Choosing alt 0 in insn 33:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) rm  (1) re {*cmpsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 40:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 42:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 44
	 Choosing alt 2 in insn 44:  (0) r  (1) 0  (2) mr {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
            2 Small class reload: reject+=3
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 48:  (0) a  (1) c  (2) D  (3) S
      Creating newreg=162 from oldreg=105, assigning class DIREG to r162
   48: {asm_operands;clobber flags:CC;}
      REG_DEAD r106:SI
      REG_DEAD r105:SI
      REG_DEAD r104:SI
      REG_DEAD r99:HI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  142: r162:SI=r105:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 51:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=163 from oldreg=107, assigning class GENERAL_REGS to r163
   51: {r163:SI=r163:SI-r108:SI;clobber flags:CC;}
      REG_DEAD r108:SI
      REG_DEAD r107:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  143: r163:SI=r107:SI
    Inserting insn reload after:
  144: r109:SI=r163:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 53
	 Choosing alt 0 in insn 53:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 57:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=164 from oldreg=112, assigning class GENERAL_REGS to r164
   57: {r164:SI=r164:SI-r113:SI;clobber flags:CC;}
      REG_DEAD r113:SI
      REG_DEAD r112:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  145: r164:SI=r112:SI
    Inserting insn reload after:
  146: r114:SI=r164:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 59
	 Choosing alt 0 in insn 59:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 60:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 67:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 71:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=165 from oldreg=120, assigning class GENERAL_REGS to r165
   71: {r165:SI=r165:SI-r121:SI;clobber flags:CC;}
      REG_DEAD r121:SI
      REG_DEAD r120:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  147: r165:SI=r120:SI
    Inserting insn reload after:
  148: r122:SI=r165:SI

            2 Small class reload: reject+=3
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 72:  (0) a  (1) c  (2) D
      Creating newreg=166 from oldreg=122, assigning class DIREG to r166
   72: {asm_operands;clobber flags:CC;}
      REG_DEAD r122:SI
      REG_DEAD r119:SI
      REG_DEAD r118:HI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  149: r166:SI=r122:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) lBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 80:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 84:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 86
	 Choosing alt 2 in insn 86:  (0) r  (1) 0  (2) mr {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 90:  (0) r  (1) 0  (2) mr {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 92
	 Choosing alt 0 in insn 92:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 94:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 96
	 Choosing alt 2 in insn 96:  (0) r  (1) 0  (2) mr {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 98
	 Choosing alt 0 in insn 98:  (0) =rm  (1) %0  (2) re {*addsi_1}
            2 Small class reload: reject+=3
            3 Small class reload: reject+=3
          alt=0,overall=18,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 99:  (0) a  (1) c  (2) D  (3) S
      Creating newreg=167 from oldreg=135, assigning class DIREG to r167
      Creating newreg=168 from oldreg=141, assigning class SIREG to r168
   99: {asm_operands;clobber flags:CC;}
      REG_DEAD r141:SI
      REG_DEAD r135:SI
      REG_DEAD r130:SI
      REG_DEAD r123:HI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  150: r167:SI=r135:SI
  151: r168:SI=r141:SI

            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 106:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 110:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 112
	 Choosing alt 2 in insn 112:  (0) r  (1) 0  (2) mr {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 116:  (0) r  (1) 0  (2) mr {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 118
	 Choosing alt 0 in insn 118:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 120:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 122
	 Choosing alt 2 in insn 122:  (0) r  (1) 0  (2) mr {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 124
	 Choosing alt 0 in insn 124:  (0) =rm  (1) %0  (2) re {*addsi_1}
            2 Small class reload: reject+=3
            3 Small class reload: reject+=3
          alt=0,overall=18,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 125:  (0) a  (1) c  (2) D  (3) S
      Creating newreg=169 from oldreg=154, assigning class DIREG to r169
      Creating newreg=170 from oldreg=160, assigning class SIREG to r170
  125: {asm_operands;clobber flags:CC;}
      REG_DEAD r160:SI
      REG_DEAD r154:SI
      REG_DEAD r149:SI
      REG_DEAD r142:HI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  152: r169:SI=r154:SI
  153: r170:SI=r160:SI

	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5 6 7
EBB 8
EBB 9
EBB 10
EBB 11 13
EBB 12 14

********** Pseudo live ranges #1: **********

  BB 14
   Insn 139: point = 0, n_alt = -1
  BB 12
  BB 10
   Insn 134: point = 0, n_alt = -1
   Insn 99: point = 0, n_alt = 0
   Insn 151: point = 1, n_alt = -2
	Hard reg 1 is preferable by r168 with profit 1000
   Insn 150: point = 3, n_alt = -2
	Hard reg 3 is preferable by r167 with profit 1000
   Insn 98: point = 5, n_alt = 0
   Insn 97: point = 7, n_alt = 0
   Insn 96: point = 9, n_alt = 2
   Insn 95: point = 11, n_alt = 0
   Insn 94: point = 12, n_alt = 3
   Insn 93: point = 14, n_alt = 0
   Insn 92: point = 15, n_alt = 0
   Insn 91: point = 17, n_alt = 0
   Insn 90: point = 18, n_alt = 2
   Insn 89: point = 20, n_alt = 0
   Insn 88: point = 21, n_alt = 0
   Insn 87: point = 22, n_alt = 0
   Insn 86: point = 24, n_alt = 2
   Insn 85: point = 26, n_alt = 0
   Insn 84: point = 27, n_alt = 3
   Insn 83: point = 29, n_alt = 0
   Insn 82: point = 31, n_alt = 0
   Insn 81: point = 32, n_alt = 0
   Insn 80: point = 33, n_alt = 2
  BB 13
   Insn 137: point = 35, n_alt = -1
  BB 11
   Insn 125: point = 35, n_alt = 0
   Insn 153: point = 36, n_alt = -2
	Hard reg 1 is preferable by r170 with profit 1000
   Insn 152: point = 38, n_alt = -2
	Hard reg 3 is preferable by r169 with profit 1000
   Insn 124: point = 40, n_alt = 0
   Insn 123: point = 42, n_alt = 0
   Insn 122: point = 44, n_alt = 2
   Insn 121: point = 46, n_alt = 0
   Insn 120: point = 47, n_alt = 3
   Insn 119: point = 49, n_alt = 0
   Insn 118: point = 50, n_alt = 0
   Insn 117: point = 52, n_alt = 0
   Insn 116: point = 53, n_alt = 2
   Insn 115: point = 55, n_alt = 0
   Insn 114: point = 56, n_alt = 0
   Insn 113: point = 57, n_alt = 0
   Insn 112: point = 59, n_alt = 2
   Insn 111: point = 61, n_alt = 0
   Insn 110: point = 62, n_alt = 3
   Insn 109: point = 64, n_alt = 0
   Insn 108: point = 66, n_alt = 0
   Insn 107: point = 67, n_alt = 0
   Insn 106: point = 68, n_alt = 2
  BB 9
   Insn 132: point = 70, n_alt = -1
   Insn 75: point = 70, n_alt = 0
  BB 7
   Insn 130: point = 70, n_alt = -1
   Insn 62: point = 70, n_alt = 1
   Insn 61: point = 71, n_alt = 0
   Insn 60: point = 72, n_alt = 1
   Insn 59: point = 73, n_alt = 0
   Insn 58: point = 75, n_alt = 0
   Insn 146: point = 76, n_alt = -2
	Hard reg 3 is preferable by r164 with profit 1000
   Insn 57: point = 78, n_alt = 0
   Insn 145: point = 80, n_alt = -2
	Hard reg 3 is preferable by r164 with profit 1000
	Hard reg 0 is preferable by r164 with profit 1000
   Insn 56: point = 82, n_alt = 0
   Insn 55: point = 83, n_alt = 0
   Insn 54: point = 84, n_alt = 1
   Insn 53: point = 85, n_alt = 0
   Insn 52: point = 87, n_alt = 0
   Insn 144: point = 88, n_alt = -2
	Hard reg 3 is preferable by r163 with profit 1000
   Insn 51: point = 90, n_alt = 0
   Insn 143: point = 92, n_alt = -2
	Hard reg 3 is preferable by r163 with profit 1000
	Hard reg 0 is preferable by r163 with profit 1000
   Insn 50: point = 94, n_alt = 0
   Insn 49: point = 95, n_alt = 0
   Insn 48: point = 96, n_alt = 0
   Insn 142: point = 97, n_alt = -2
	Hard reg 3 is preferable by r162 with profit 1000
   Insn 47: point = 99, n_alt = 0
   Insn 46: point = 100, n_alt = 0
   Insn 45: point = 101, n_alt = 0
   Insn 44: point = 103, n_alt = 2
   Insn 43: point = 105, n_alt = 0
   Insn 42: point = 106, n_alt = 3
   Insn 41: point = 108, n_alt = 0
   Insn 40: point = 109, n_alt = 2
  BB 8
   Insn 72: point = 111, n_alt = 0
   Insn 149: point = 112, n_alt = -2
	Hard reg 1 is preferable by r166 with profit 1000
   Insn 148: point = 114, n_alt = -2
	Hard reg 1 is preferable by r165 with profit 1000
   Insn 71: point = 116, n_alt = 0
   Insn 147: point = 118, n_alt = -2
	Hard reg 1 is preferable by r165 with profit 1000
	Hard reg 3 is preferable by r165 with profit 1000
   Insn 70: point = 120, n_alt = 0
   Insn 69: point = 122, n_alt = 0
   Insn 68: point = 123, n_alt = 0
   Insn 67: point = 124, n_alt = 2
  BB 6
   Insn 38: point = 126, n_alt = -1
   Insn 37: point = 126, n_alt = 0
   Insn 36: point = 127, n_alt = 0
   Insn 35: point = 128, n_alt = 0
   Insn 34: point = 129, n_alt = 1
   Insn 33: point = 130, n_alt = 0
   Insn 32: point = 132, n_alt = 0
   Insn 31: point = 133, n_alt = 0
   Insn 30: point = 134, n_alt = 1
   Insn 29: point = 135, n_alt = 0
   Insn 28: point = 137, n_alt = 0
   Insn 27: point = 138, n_alt = 0
   Insn 26: point = 139, n_alt = 1
   Insn 25: point = 140, n_alt = 0
   Insn 24: point = 142, n_alt = 0
   Insn 23: point = 143, n_alt = 0
  BB 5
   Insn 21: point = 145, n_alt = -1
   Insn 20: point = 145, n_alt = 0
   Insn 19: point = 146, n_alt = 0
   Insn 18: point = 147, n_alt = 0
  BB 4
   Insn 16: point = 149, n_alt = -1
   Insn 15: point = 149, n_alt = 0
   Insn 14: point = 150, n_alt = 0
  BB 3
   Insn 11: point = 152, n_alt = -1
   Insn 10: point = 152, n_alt = 0
   Insn 9: point = 153, n_alt = 4
  BB 2
   Insn 7: point = 155, n_alt = -1
   Insn 6: point = 155, n_alt = 0
   Insn 5: point = 156, n_alt = 4
   Insn 140: point = 157, n_alt = 0
 r82: [121..157] [43..110] [8..34]
 r83: [155..156]
 r84: [152..153]
 r85: [149..150]
 r86: [145..147]
 r87: [145..146]
 r88: [141..143]
 r89: [141..142]
 r90: [139..140]
 r91: [136..138]
 r92: [136..137]
 r93: [134..135]
 r94: [131..133]
 r95: [131..132]
 r96: [129..130]
 r97: [126..128]
 r98: [126..127]
 r99: [96..109]
 r100: [107..108]
 r101: [104..106]
 r102: [104..105]
 r103: [102..103]
 r104: [96..101]
 r105: [98..100]
 r106: [96..99]
 r107: [93..95]
 r108: [91..94]
 r109: [86..88]
 r110: [86..87]
 r111: [84..85]
 r112: [81..83]
 r113: [79..82]
 r114: [74..76]
 r115: [74..75]
 r116: [72..73]
 r117: [70..71]
 r118: [111..124]
 r119: [111..123]
 r120: [119..122]
 r121: [117..120]
 r122: [113..114]
 r123: [0..33]
 r124: [30..32]
 r125: [30..31]
 r126: [28..29]
 r127: [25..27]
 r128: [25..26]
 r129: [23..24]
 r130: [0..22]
 r131: [19..21]
 r132: [19..20]
 r133: [16..18]
 r134: [16..17]
 r135: [4..15]
 r136: [13..14]
 r137: [10..12]
 r138: [10..11]
 r139: [6..9]
 r140: [6..7]
 r141: [2..5]
 r142: [35..68]
 r143: [65..67]
 r144: [65..66]
 r145: [63..64]
 r146: [60..62]
 r147: [60..61]
 r148: [58..59]
 r149: [35..57]
 r150: [54..56]
 r151: [54..55]
 r152: [51..53]
 r153: [51..52]
 r154: [39..50]
 r155: [48..49]
 r156: [45..47]
 r157: [45..46]
 r158: [41..44]
 r159: [41..42]
 r160: [37..40]
 r162: [96..97]
 r163: [89..92]
 r164: [77..80]
 r165: [115..118]
 r166: [111..112]
 r167: [0..3]
 r168: [0..1]
 r169: [35..38]
 r170: [35..36]
Compressing live ranges: from 158 to 112 - 70%
Ranges after the compression:
 r82: [88..111] [34..79] [8..25]
 r83: [110..111]
 r84: [108..109]
 r85: [106..107]
 r86: [104..105]
 r87: [104..105]
 r88: [102..103]
 r89: [102..103]
 r90: [100..101]
 r91: [98..99]
 r92: [98..99]
 r93: [96..97]
 r94: [94..95]
 r95: [94..95]
 r96: [92..93]
 r97: [90..91]
 r98: [90..91]
 r99: [70..79]
 r100: [78..79]
 r101: [76..77]
 r102: [76..77]
 r103: [74..75]
 r104: [70..73]
 r105: [72..73]
 r106: [70..73]
 r107: [68..69]
 r108: [66..69]
 r109: [64..65]
 r110: [64..65]
 r111: [62..63]
 r112: [60..61]
 r113: [58..61]
 r114: [56..57]
 r115: [56..57]
 r116: [54..55]
 r117: [52..53]
 r118: [80..89]
 r119: [80..89]
 r120: [86..89]
 r121: [84..87]
 r122: [82..83]
 r123: [0..25]
 r124: [24..25]
 r125: [24..25]
 r126: [22..23]
 r127: [20..21]
 r128: [20..21]
 r129: [18..19]
 r130: [0..17]
 r131: [16..17]
 r132: [16..17]
 r133: [14..15]
 r134: [14..15]
 r135: [4..13]
 r136: [12..13]
 r137: [10..11]
 r138: [10..11]
 r139: [6..9]
 r140: [6..7]
 r141: [2..5]
 r142: [26..51]
 r143: [50..51]
 r144: [50..51]
 r145: [48..49]
 r146: [46..47]
 r147: [46..47]
 r148: [44..45]
 r149: [26..43]
 r150: [42..43]
 r151: [42..43]
 r152: [40..41]
 r153: [40..41]
 r154: [30..39]
 r155: [38..39]
 r156: [36..37]
 r157: [36..37]
 r158: [32..35]
 r159: [32..33]
 r160: [28..31]
 r162: [70..71]
 r163: [66..67]
 r164: [58..59]
 r165: [84..85]
 r166: [80..81]
 r167: [0..3]
 r168: [0..1]
 r169: [26..29]
 r170: [26..27]

********** Assignment #1: **********

	 Assigning to 162 (cl=DIREG, orig=105, freq=2000, tfirst=162, tfreq=2000)...
	   Assign 5 to reload r162 (freq=2000)
	 Assigning to 166 (cl=DIREG, orig=122, freq=2000, tfirst=166, tfreq=2000)...
	   Assign 5 to reload r166 (freq=2000)
	 Assigning to 167 (cl=DIREG, orig=135, freq=2000, tfirst=167, tfreq=2000)...
	   Assign 5 to reload r167 (freq=2000)
	 Assigning to 168 (cl=SIREG, orig=141, freq=2000, tfirst=168, tfreq=2000)...
	   Assign 4 to reload r168 (freq=2000)
	 Assigning to 169 (cl=DIREG, orig=154, freq=2000, tfirst=169, tfreq=2000)...
	   Assign 5 to reload r169 (freq=2000)
	 Assigning to 170 (cl=SIREG, orig=160, freq=2000, tfirst=170, tfreq=2000)...
	   Assign 4 to reload r170 (freq=2000)
	 Assigning to 163 (cl=GENERAL_REGS, orig=107, freq=3000, tfirst=163, tfreq=3000)...
	   Assign 0 to reload r163 (freq=3000)
	 Assigning to 164 (cl=GENERAL_REGS, orig=112, freq=3000, tfirst=164, tfreq=3000)...
	   Assign 0 to reload r164 (freq=3000)
	 Assigning to 165 (cl=GENERAL_REGS, orig=120, freq=3000, tfirst=165, tfreq=3000)...
	   Assign 3 to reload r165 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 140
changing reg in insn 123
changing reg in insn 121
changing reg in insn 119
changing reg in insn 117
changing reg in insn 115
changing reg in insn 114
changing reg in insn 111
changing reg in insn 108
changing reg in insn 107
changing reg in insn 106
changing reg in insn 97
changing reg in insn 95
changing reg in insn 93
changing reg in insn 91
changing reg in insn 89
changing reg in insn 88
changing reg in insn 85
changing reg in insn 82
changing reg in insn 81
changing reg in insn 80
changing reg in insn 70
changing reg in insn 69
changing reg in insn 68
changing reg in insn 67
changing reg in insn 62
changing reg in insn 61
changing reg in insn 60
changing reg in insn 58
changing reg in insn 56
changing reg in insn 55
changing reg in insn 54
changing reg in insn 52
changing reg in insn 50
changing reg in insn 49
changing reg in insn 47
changing reg in insn 46
changing reg in insn 43
changing reg in insn 41
changing reg in insn 40
changing reg in insn 36
changing reg in insn 35
changing reg in insn 34
changing reg in insn 32
changing reg in insn 31
changing reg in insn 30
changing reg in insn 28
changing reg in insn 27
changing reg in insn 26
changing reg in insn 24
changing reg in insn 23
changing reg in insn 19
changing reg in insn 18
changing reg in insn 14
changing reg in insn 9
changing reg in insn 5
changing reg in insn 5
changing reg in insn 6
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 15
changing reg in insn 18
changing reg in insn 20
changing reg in insn 19
changing reg in insn 20
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 37
changing reg in insn 36
changing reg in insn 37
changing reg in insn 40
changing reg in insn 48
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 45
changing reg in insn 48
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 67
changing reg in insn 72
changing reg in insn 68
changing reg in insn 72
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 80
changing reg in insn 99
changing reg in insn 81
changing reg in insn 83
changing reg in insn 82
changing reg in insn 83
changing reg in insn 83
changing reg in insn 84
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 87
changing reg in insn 99
changing reg in insn 88
changing reg in insn 90
changing reg in insn 89
changing reg in insn 90
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 94
changing reg in insn 94
changing reg in insn 95
changing reg in insn 96
changing reg in insn 97
changing reg in insn 98
changing reg in insn 106
changing reg in insn 125
changing reg in insn 107
changing reg in insn 109
changing reg in insn 108
changing reg in insn 109
changing reg in insn 109
changing reg in insn 110
changing reg in insn 110
changing reg in insn 111
changing reg in insn 112
changing reg in insn 113
changing reg in insn 113
changing reg in insn 125
changing reg in insn 114
changing reg in insn 116
changing reg in insn 115
changing reg in insn 116
changing reg in insn 116
changing reg in insn 117
changing reg in insn 118
changing reg in insn 119
changing reg in insn 120
changing reg in insn 120
changing reg in insn 121
changing reg in insn 122
changing reg in insn 123
changing reg in insn 124
deleting insn with uid = 143.
deleting insn with uid = 145.
deleting insn with uid = 147.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 75.


scrup

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={26d,24u} r1={8d,60u} r2={24d,22u} r3={16d,16u} r4={14d,14u} r5={6d,6u} r7={1d,15u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={40d,5u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 362{200d,162u,0e} in 114{113 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 140 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 140 3 2 2 (parallel [
            (set (reg:SI 1 dx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 140 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:QI 0 ax [orig:83 video_type.72_1 ] [83])
        (mem/c:QI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_type") [flags 0x2]  <var_decl 0x71960af2e750 video_type>)
                        ] UNSPEC_GOTOFF))) [0 video_type+0 S1 A8])) "drivers/chr_drv/console.c":235:20 77 {*movqi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:83 video_type.72_1 ] [83])
            (const_int 33 [0x21]))) "drivers/chr_drv/console.c":235:8 9 {*cmpqi_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 12)
            (pc))) "drivers/chr_drv/console.c":235:8 806 {*jcc}
     (nil)
 -> 12)
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:QI 0 ax [orig:84 video_type.73_2 ] [84])
        (mem/c:QI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_type") [flags 0x2]  <var_decl 0x71960af2e750 video_type>)
                        ] UNSPEC_GOTOFF))) [0 video_type+0 S1 A8])) "drivers/chr_drv/console.c":235:53 77 {*movqi_internal}
     (nil))
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:84 video_type.73_2 ] [84])
            (const_int 32 [0x20]))) "drivers/chr_drv/console.c":235:39 9 {*cmpqi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) "drivers/chr_drv/console.c":235:39 806 {*jcc}
     (nil)
 -> 104)
(code_label 12 11 13 4 43 (nil) [1 uses])
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:SI 0 ax [orig:85 top.74_3 ] [85])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("top") [flags 0x2]  <var_decl 0x71960af2e2d0 top>)
                        ] UNSPEC_GOTOFF))) [3 top+0 S4 A32])) "drivers/chr_drv/console.c":236:13 75 {*movsi_internal}
     (nil))
(insn 15 14 16 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:85 top.74_3 ] [85])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":236:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 16 15 17 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "drivers/chr_drv/console.c":236:12 806 {*jcc}
     (nil)
 -> 78)
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg:SI 2 cx [orig:86 bottom.75_4 ] [86])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bottom") [flags 0x2]  <var_decl 0x71960af55000 bottom>)
                        ] UNSPEC_GOTOFF))) [3 bottom+0 S4 A32])) "drivers/chr_drv/console.c":236:28 75 {*movsi_internal}
     (nil))
(insn 19 18 20 5 (set (reg:SI 0 ax [orig:87 video_num_lines.76_5 ] [87])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_lines") [flags 0x2]  <var_decl 0x71960af2e900 video_num_lines>)
                        ] UNSPEC_GOTOFF))) [3 video_num_lines+0 S4 A32])) "drivers/chr_drv/console.c":236:28 75 {*movsi_internal}
     (nil))
(insn 20 19 21 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 2 cx [orig:86 bottom.75_4 ] [86])
            (reg:SI 0 ax [orig:87 video_num_lines.76_5 ] [87]))) "drivers/chr_drv/console.c":236:18 11 {*cmpsi_1}
     (nil))
(jump_insn 21 20 22 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "drivers/chr_drv/console.c":236:18 806 {*jcc}
     (nil)
 -> 78)
(note 22 21 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 6 (set (reg:SI 2 cx [orig:88 origin.77_6 ] [88])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])) "drivers/chr_drv/console.c":237:20 75 {*movsi_internal}
     (nil))
(insn 24 23 25 6 (set (reg:SI 0 ax [orig:89 video_size_row.78_7 ] [89])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":237:20 75 {*movsi_internal}
     (nil))
(insn 25 24 26 6 (parallel [
            (set (reg:SI 0 ax [orig:90 _8 ] [90])
                (plus:SI (reg:SI 0 ax [orig:89 video_size_row.78_7 ] [89])
                    (reg:SI 2 cx [orig:88 origin.77_6 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":237:20 209 {*addsi_1}
     (nil))
(insn 26 25 27 6 (set (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])
        (reg:SI 0 ax [orig:90 _8 ] [90])) "drivers/chr_drv/console.c":237:20 75 {*movsi_internal}
     (nil))
(insn 27 26 28 6 (set (reg:SI 2 cx [orig:91 pos.79_9 ] [91])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":238:17 75 {*movsi_internal}
     (nil))
(insn 28 27 29 6 (set (reg:SI 0 ax [orig:92 video_size_row.80_10 ] [92])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":238:17 75 {*movsi_internal}
     (nil))
(insn 29 28 30 6 (parallel [
            (set (reg:SI 0 ax [orig:93 _11 ] [93])
                (plus:SI (reg:SI 0 ax [orig:92 video_size_row.80_10 ] [92])
                    (reg:SI 2 cx [orig:91 pos.79_9 ] [91])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":238:17 209 {*addsi_1}
     (nil))
(insn 30 29 31 6 (set (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])
        (reg:SI 0 ax [orig:93 _11 ] [93])) "drivers/chr_drv/console.c":238:17 75 {*movsi_internal}
     (nil))
(insn 31 30 32 6 (set (reg:SI 2 cx [orig:94 scr_end.81_12 ] [94])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("scr_end") [flags 0x2]  <var_decl 0x71960af2ed80 scr_end>)
                        ] UNSPEC_GOTOFF))) [3 scr_end+0 S4 A32])) "drivers/chr_drv/console.c":239:21 75 {*movsi_internal}
     (nil))
(insn 32 31 33 6 (set (reg:SI 0 ax [orig:95 video_size_row.82_13 ] [95])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":239:21 75 {*movsi_internal}
     (nil))
(insn 33 32 34 6 (parallel [
            (set (reg:SI 0 ax [orig:96 _14 ] [96])
                (plus:SI (reg:SI 0 ax [orig:95 video_size_row.82_13 ] [95])
                    (reg:SI 2 cx [orig:94 scr_end.81_12 ] [94])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":239:21 209 {*addsi_1}
     (nil))
(insn 34 33 35 6 (set (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("scr_end") [flags 0x2]  <var_decl 0x71960af2ed80 scr_end>)
                        ] UNSPEC_GOTOFF))) [3 scr_end+0 S4 A32])
        (reg:SI 0 ax [orig:96 _14 ] [96])) "drivers/chr_drv/console.c":239:21 75 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (set (reg:SI 2 cx [orig:97 scr_end.83_15 ] [97])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("scr_end") [flags 0x2]  <var_decl 0x71960af2ed80 scr_end>)
                        ] UNSPEC_GOTOFF))) [3 scr_end+0 S4 A32])) "drivers/chr_drv/console.c":241:25 75 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg:SI 0 ax [orig:98 video_mem_end.84_16 ] [98])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_end") [flags 0x2]  <var_decl 0x71960af2eab0 video_mem_end>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_end+0 S4 A32])) "drivers/chr_drv/console.c":241:25 75 {*movsi_internal}
     (nil))
(insn 37 36 38 6 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [orig:97 scr_end.83_15 ] [97])
            (reg:SI 0 ax [orig:98 video_mem_end.84_16 ] [98]))) "drivers/chr_drv/console.c":241:16 11 {*cmpsi_1}
     (nil))
(jump_insn 38 37 39 6 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "drivers/chr_drv/console.c":241:16 806 {*jcc}
     (nil)
 -> 65)
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (set (reg:HI 0 ax [orig:99 video_erase_char.85_17 ] [99])
        (mem/c:HI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_erase_char") [flags 0x2]  <var_decl 0x71960af2ec60 video_erase_char>)
                        ] UNSPEC_GOTOFF))) [8 video_erase_char+0 S2 A16])) "drivers/chr_drv/console.c":242:17 76 {*movhi_internal}
     (nil))
(insn 41 40 42 7 (set (reg:SI 2 cx [orig:100 video_num_lines.86_18 ] [100])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_lines") [flags 0x2]  <var_decl 0x71960af2e900 video_num_lines>)
                        ] UNSPEC_GOTOFF))) [3 video_num_lines+0 S4 A32])) "drivers/chr_drv/console.c":248:46 75 {*movsi_internal}
     (nil))
(insn 42 41 43 7 (parallel [
            (set (reg:SI 3 bx [orig:101 _19 ] [101])
                (plus:SI (reg:SI 2 cx [orig:100 video_num_lines.86_18 ] [100])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":248:46 209 {*addsi_1}
     (nil))
(insn 43 42 44 7 (set (reg:SI 2 cx [orig:102 video_num_columns.87_20 ] [102])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":248:51 75 {*movsi_internal}
     (nil))
(insn 44 43 45 7 (parallel [
            (set (reg:SI 2 cx [orig:103 _21 ] [103])
                (mult:SI (reg:SI 2 cx [orig:102 video_num_columns.87_20 ] [102])
                    (reg:SI 3 bx [orig:101 _19 ] [101])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":248:51 408 {*mulsi3_1}
     (nil))
(insn 45 44 46 7 (parallel [
            (set (reg:SI 2 cx [orig:104 _22 ] [104])
                (lshiftrt:SI (reg:SI 2 cx [orig:103 _21 ] [103])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":249:43 701 {*lshrsi3_1}
     (nil))
(insn 46 45 47 7 (set (reg:SI 3 bx [orig:105 video_mem_start.88_23 ] [105])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_start") [flags 0x2]  <var_decl 0x71960af2ea20 video_mem_start>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_start+0 S4 A32])) "drivers/chr_drv/console.c":242:17 75 {*movsi_internal}
     (nil))
(insn 47 46 142 7 (set (reg:SI 4 si [orig:106 origin.89_24 ] [106])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])) "drivers/chr_drv/console.c":242:17 75 {*movsi_internal}
     (nil))
(insn 142 47 48 7 (set (reg:SI 5 di [orig:105 video_mem_start.88_23 ] [105])
        (reg:SI 3 bx [orig:105 video_mem_start.88_23 ] [105])) "drivers/chr_drv/console.c":242:17 75 {*movsi_internal}
     (nil))
(insn 48 142 49 7 (parallel [
            (asm_operands/v ("cld
	rep
	movsl
	movl video_num_columns, %1
	rep
	stosw") ("") 0 [
                    (reg:HI 0 ax [orig:99 video_erase_char.85_17 ] [99])
                    (reg:SI 2 cx [orig:104 _22 ] [104])
                    (reg:SI 5 di [orig:105 video_mem_start.88_23 ] [105])
                    (reg:SI 4 si [orig:106 origin.89_24 ] [106])
                ]
                 [
                    (asm_input:HI ("a") drivers/chr_drv/console.c:242)
                    (asm_input:SI ("c") drivers/chr_drv/console.c:242)
                    (asm_input:SI ("D") drivers/chr_drv/console.c:242)
                    (asm_input:SI ("S") drivers/chr_drv/console.c:242)
                ]
                 [] drivers/chr_drv/console.c:242)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":242:17 -1
     (nil))
(insn 49 48 50 7 (set (reg:SI 0 ax [orig:107 video_mem_start.90_25 ] [107])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_start") [flags 0x2]  <var_decl 0x71960af2ea20 video_mem_start>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_start+0 S4 A32])) "drivers/chr_drv/console.c":251:25 75 {*movsi_internal}
     (nil))
(insn 50 49 51 7 (set (reg:SI 2 cx [orig:108 origin.91_26 ] [108])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])) "drivers/chr_drv/console.c":251:25 75 {*movsi_internal}
     (nil))
(insn 51 50 144 7 (parallel [
            (set (reg:SI 0 ax [orig:107 video_mem_start.90_25 ] [107])
                (minus:SI (reg:SI 0 ax [orig:107 video_mem_start.90_25 ] [107])
                    (reg:SI 2 cx [orig:108 origin.91_26 ] [108])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":251:25 282 {*subsi_1}
     (nil))
(insn 144 51 52 7 (set (reg:SI 3 bx [orig:109 _27 ] [109])
        (reg:SI 0 ax [orig:107 video_mem_start.90_25 ] [107])) "drivers/chr_drv/console.c":251:25 75 {*movsi_internal}
     (nil))
(insn 52 144 53 7 (set (reg:SI 0 ax [orig:110 scr_end.92_28 ] [110])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("scr_end") [flags 0x2]  <var_decl 0x71960af2ed80 scr_end>)
                        ] UNSPEC_GOTOFF))) [3 scr_end+0 S4 A32])) "drivers/chr_drv/console.c":251:25 75 {*movsi_internal}
     (nil))
(insn 53 52 54 7 (parallel [
            (set (reg:SI 0 ax [orig:111 _29 ] [111])
                (plus:SI (reg:SI 0 ax [orig:110 scr_end.92_28 ] [110])
                    (reg:SI 3 bx [orig:109 _27 ] [109])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":251:25 209 {*addsi_1}
     (nil))
(insn 54 53 55 7 (set (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("scr_end") [flags 0x2]  <var_decl 0x71960af2ed80 scr_end>)
                        ] UNSPEC_GOTOFF))) [3 scr_end+0 S4 A32])
        (reg:SI 0 ax [orig:111 _29 ] [111])) "drivers/chr_drv/console.c":251:25 75 {*movsi_internal}
     (nil))
(insn 55 54 56 7 (set (reg:SI 0 ax [orig:112 video_mem_start.93_30 ] [112])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_start") [flags 0x2]  <var_decl 0x71960af2ea20 video_mem_start>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_start+0 S4 A32])) "drivers/chr_drv/console.c":252:21 75 {*movsi_internal}
     (nil))
(insn 56 55 57 7 (set (reg:SI 2 cx [orig:113 origin.94_31 ] [113])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])) "drivers/chr_drv/console.c":252:21 75 {*movsi_internal}
     (nil))
(insn 57 56 146 7 (parallel [
            (set (reg:SI 0 ax [orig:112 video_mem_start.93_30 ] [112])
                (minus:SI (reg:SI 0 ax [orig:112 video_mem_start.93_30 ] [112])
                    (reg:SI 2 cx [orig:113 origin.94_31 ] [113])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":252:21 282 {*subsi_1}
     (nil))
(insn 146 57 58 7 (set (reg:SI 3 bx [orig:114 _32 ] [114])
        (reg:SI 0 ax [orig:112 video_mem_start.93_30 ] [112])) "drivers/chr_drv/console.c":252:21 75 {*movsi_internal}
     (nil))
(insn 58 146 59 7 (set (reg:SI 0 ax [orig:115 pos.95_33 ] [115])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":252:21 75 {*movsi_internal}
     (nil))
(insn 59 58 60 7 (parallel [
            (set (reg:SI 0 ax [orig:116 _34 ] [116])
                (plus:SI (reg:SI 0 ax [orig:115 pos.95_33 ] [115])
                    (reg:SI 3 bx [orig:114 _32 ] [114])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":252:21 209 {*addsi_1}
     (nil))
(insn 60 59 61 7 (set (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])
        (reg:SI 0 ax [orig:116 _34 ] [116])) "drivers/chr_drv/console.c":252:21 75 {*movsi_internal}
     (nil))
(insn 61 60 62 7 (set (reg:SI 0 ax [orig:117 video_mem_start.96_35 ] [117])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_start") [flags 0x2]  <var_decl 0x71960af2ea20 video_mem_start>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_start+0 S4 A32])) "drivers/chr_drv/console.c":253:24 75 {*movsi_internal}
     (nil))
(insn 62 61 130 7 (set (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])
        (reg:SI 0 ax [orig:117 video_mem_start.96_35 ] [117])) "drivers/chr_drv/console.c":253:24 75 {*movsi_internal}
     (nil))
(jump_insn 130 62 131 7 (set (pc)
        (label_ref 73)) 807 {jump}
     (nil)
 -> 73)
(barrier 131 130 65)
(code_label 65 131 66 8 46 (nil) [1 uses])
(note 66 65 67 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 8 (set (reg:HI 0 ax [orig:118 video_erase_char.97_36 ] [118])
        (mem/c:HI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_erase_char") [flags 0x2]  <var_decl 0x71960af2ec60 video_erase_char>)
                        ] UNSPEC_GOTOFF))) [8 video_erase_char+0 S2 A16])) "drivers/chr_drv/console.c":255:17 76 {*movhi_internal}
     (nil))
(insn 68 67 69 8 (set (reg:SI 2 cx [orig:119 video_num_columns.98_37 ] [119])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":255:17 75 {*movsi_internal}
     (nil))
(insn 69 68 70 8 (set (reg:SI 3 bx [orig:120 scr_end.99_38 ] [120])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("scr_end") [flags 0x2]  <var_decl 0x71960af2ed80 scr_end>)
                        ] UNSPEC_GOTOFF))) [3 scr_end+0 S4 A32])) "drivers/chr_drv/console.c":259:37 75 {*movsi_internal}
     (nil))
(insn 70 69 71 8 (set (reg:SI 4 si [orig:121 video_size_row.100_39 ] [121])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":259:37 75 {*movsi_internal}
     (nil))
(insn 71 70 148 8 (parallel [
            (set (reg:SI 3 bx [orig:120 scr_end.99_38 ] [120])
                (minus:SI (reg:SI 3 bx [orig:120 scr_end.99_38 ] [120])
                    (reg:SI 4 si [orig:121 video_size_row.100_39 ] [121])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":259:37 282 {*subsi_1}
     (nil))
(insn 148 71 149 8 (set (reg:SI 1 dx [orig:122 _40 ] [122])
        (reg:SI 3 bx [orig:120 scr_end.99_38 ] [120])) "drivers/chr_drv/console.c":259:37 75 {*movsi_internal}
     (nil))
(insn 149 148 72 8 (set (reg:SI 5 di [orig:122 _40 ] [122])
        (reg:SI 1 dx [orig:122 _40 ] [122])) "drivers/chr_drv/console.c":255:17 75 {*movsi_internal}
     (nil))
(insn 72 149 73 8 (parallel [
            (asm_operands/v ("cld
	rep
	stosw") ("") 0 [
                    (reg:HI 0 ax [orig:118 video_erase_char.97_36 ] [118])
                    (reg:SI 2 cx [orig:119 video_num_columns.98_37 ] [119])
                    (reg:SI 5 di [orig:122 _40 ] [122])
                ]
                 [
                    (asm_input:HI ("a") drivers/chr_drv/console.c:255)
                    (asm_input:SI ("c") drivers/chr_drv/console.c:255)
                    (asm_input:SI ("D") drivers/chr_drv/console.c:255)
                ]
                 [] drivers/chr_drv/console.c:255)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":255:17 -1
     (nil))
(code_label 73 72 74 9 47 (nil) [1 uses])
(note 74 73 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 75 74 132 9 (call (mem:QI (symbol_ref:SI ("set_origin") [flags 0x3]  <function_decl 0x71960af50800 set_origin>) [0 set_origin S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":261:13 812 {*call}
     (nil)
    (nil))
(jump_insn 132 75 133 9 (set (pc)
        (label_ref 126)) "drivers/chr_drv/console.c":236:12 807 {jump}
     (nil)
 -> 126)
(barrier 133 132 78)
(code_label 78 133 79 10 45 (nil) [2 uses])
(note 79 78 80 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 10 (set (reg:HI 0 ax [orig:123 video_erase_char.101_41 ] [123])
        (mem/c:HI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_erase_char") [flags 0x2]  <var_decl 0x71960af2ec60 video_erase_char>)
                        ] UNSPEC_GOTOFF))) [8 video_erase_char+0 S2 A16])) "drivers/chr_drv/console.c":263:13 76 {*movhi_internal}
     (nil))
(insn 81 80 82 10 (set (reg:SI 2 cx [orig:124 bottom.102_42 ] [124])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bottom") [flags 0x2]  <var_decl 0x71960af55000 bottom>)
                        ] UNSPEC_GOTOFF))) [3 bottom+0 S4 A32])) "drivers/chr_drv/console.c":269:33 75 {*movsi_internal}
     (nil))
(insn 82 81 83 10 (set (reg:SI 3 bx [orig:125 top.103_43 ] [125])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("top") [flags 0x2]  <var_decl 0x71960af2e2d0 top>)
                        ] UNSPEC_GOTOFF))) [3 top+0 S4 A32])) "drivers/chr_drv/console.c":269:33 75 {*movsi_internal}
     (nil))
(insn 83 82 84 10 (parallel [
            (set (reg:SI 2 cx [orig:126 _44 ] [126])
                (minus:SI (reg:SI 2 cx [orig:124 bottom.102_42 ] [124])
                    (reg:SI 3 bx [orig:125 top.103_43 ] [125])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":269:33 282 {*subsi_1}
     (nil))
(insn 84 83 85 10 (parallel [
            (set (reg:SI 3 bx [orig:127 _45 ] [127])
                (plus:SI (reg:SI 2 cx [orig:126 _44 ] [126])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":269:39 209 {*addsi_1}
     (nil))
(insn 85 84 86 10 (set (reg:SI 2 cx [orig:128 video_num_columns.104_46 ] [128])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":269:44 75 {*movsi_internal}
     (nil))
(insn 86 85 87 10 (parallel [
            (set (reg:SI 2 cx [orig:129 _47 ] [129])
                (mult:SI (reg:SI 2 cx [orig:128 video_num_columns.104_46 ] [128])
                    (reg:SI 3 bx [orig:127 _45 ] [127])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":269:44 408 {*mulsi3_1}
     (nil))
(insn 87 86 88 10 (parallel [
            (set (reg:SI 2 cx [orig:130 _48 ] [130])
                (lshiftrt:SI (reg:SI 2 cx [orig:129 _47 ] [129])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":270:39 701 {*lshrsi3_1}
     (nil))
(insn 88 87 89 10 (set (reg:SI 4 si [orig:131 video_size_row.105_49 ] [131])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":271:49 75 {*movsi_internal}
     (nil))
(insn 89 88 90 10 (set (reg:SI 3 bx [orig:132 top.106_50 ] [132])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("top") [flags 0x2]  <var_decl 0x71960af2e2d0 top>)
                        ] UNSPEC_GOTOFF))) [3 top+0 S4 A32])) "drivers/chr_drv/console.c":271:49 75 {*movsi_internal}
     (nil))
(insn 90 89 91 10 (parallel [
            (set (reg:SI 4 si [orig:133 _51 ] [133])
                (mult:SI (reg:SI 4 si [orig:131 video_size_row.105_49 ] [131])
                    (reg:SI 3 bx [orig:132 top.106_50 ] [132])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":271:49 408 {*mulsi3_1}
     (nil))
(insn 91 90 92 10 (set (reg:SI 3 bx [orig:134 origin.107_52 ] [134])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])) "drivers/chr_drv/console.c":271:32 75 {*movsi_internal}
     (nil))
(insn 92 91 93 10 (parallel [
            (set (reg:SI 3 bx [orig:135 _53 ] [135])
                (plus:SI (reg:SI 3 bx [orig:134 origin.107_52 ] [134])
                    (reg:SI 4 si [orig:133 _51 ] [133])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":271:32 209 {*addsi_1}
     (nil))
(insn 93 92 94 10 (set (reg:SI 4 si [orig:136 top.108_54 ] [136])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("top") [flags 0x2]  <var_decl 0x71960af2e2d0 top>)
                        ] UNSPEC_GOTOFF))) [3 top+0 S4 A32])) "drivers/chr_drv/console.c":272:56 75 {*movsi_internal}
     (nil))
(insn 94 93 95 10 (parallel [
            (set (reg:SI 5 di [orig:137 _55 ] [137])
                (plus:SI (reg:SI 4 si [orig:136 top.108_54 ] [136])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":272:56 209 {*addsi_1}
     (nil))
(insn 95 94 96 10 (set (reg:SI 4 si [orig:138 video_size_row.109_56 ] [138])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":272:49 75 {*movsi_internal}
     (nil))
(insn 96 95 97 10 (parallel [
            (set (reg:SI 4 si [orig:139 _57 ] [139])
                (mult:SI (reg:SI 4 si [orig:138 video_size_row.109_56 ] [138])
                    (reg:SI 5 di [orig:137 _55 ] [137])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":272:49 408 {*mulsi3_1}
     (nil))
(insn 97 96 98 10 (set (reg:SI 1 dx [orig:140 origin.110_58 ] [140])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])) "drivers/chr_drv/console.c":272:32 75 {*movsi_internal}
     (nil))
(insn 98 97 150 10 (parallel [
            (set (reg:SI 1 dx [orig:141 _59 ] [141])
                (plus:SI (reg:SI 1 dx [orig:140 origin.110_58 ] [140])
                    (reg:SI 4 si [orig:139 _57 ] [139])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":272:32 209 {*addsi_1}
     (nil))
(insn 150 98 151 10 (set (reg:SI 5 di [orig:135 _53 ] [135])
        (reg:SI 3 bx [orig:135 _53 ] [135])) "drivers/chr_drv/console.c":263:13 75 {*movsi_internal}
     (nil))
(insn 151 150 99 10 (set (reg:SI 4 si [orig:141 _59 ] [141])
        (reg:SI 1 dx [orig:141 _59 ] [141])) "drivers/chr_drv/console.c":263:13 75 {*movsi_internal}
     (nil))
(insn 99 151 134 10 (parallel [
            (asm_operands/v ("cld
	rep
	movsl
	movl video_num_columns, %%ecx
	rep
	stosw") ("") 0 [
                    (reg:HI 0 ax [orig:123 video_erase_char.101_41 ] [123])
                    (reg:SI 2 cx [orig:130 _48 ] [130])
                    (reg:SI 5 di [orig:135 _53 ] [135])
                    (reg:SI 4 si [orig:141 _59 ] [141])
                ]
                 [
                    (asm_input:HI ("a") drivers/chr_drv/console.c:263)
                    (asm_input:SI ("c") drivers/chr_drv/console.c:263)
                    (asm_input:SI ("D") drivers/chr_drv/console.c:263)
                    (asm_input:SI ("S") drivers/chr_drv/console.c:263)
                ]
                 [] drivers/chr_drv/console.c:263)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":263:13 -1
     (nil))
(jump_insn 134 99 135 10 (set (pc)
        (label_ref 126)) "drivers/chr_drv/console.c":236:12 807 {jump}
     (nil)
 -> 126)
(barrier 135 134 104)
(code_label 104 135 105 11 44 (nil) [1 uses])
(note 105 104 106 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 11 (set (reg:HI 0 ax [orig:142 video_erase_char.111_60 ] [142])
        (mem/c:HI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_erase_char") [flags 0x2]  <var_decl 0x71960af2ec60 video_erase_char>)
                        ] UNSPEC_GOTOFF))) [8 video_erase_char+0 S2 A16])) "drivers/chr_drv/console.c":275:9 76 {*movhi_internal}
     (nil))
(insn 107 106 108 11 (set (reg:SI 2 cx [orig:143 bottom.112_61 ] [143])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bottom") [flags 0x2]  <var_decl 0x71960af55000 bottom>)
                        ] UNSPEC_GOTOFF))) [3 bottom+0 S4 A32])) "drivers/chr_drv/console.c":281:29 75 {*movsi_internal}
     (nil))
(insn 108 107 109 11 (set (reg:SI 3 bx [orig:144 top.113_62 ] [144])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("top") [flags 0x2]  <var_decl 0x71960af2e2d0 top>)
                        ] UNSPEC_GOTOFF))) [3 top+0 S4 A32])) "drivers/chr_drv/console.c":281:29 75 {*movsi_internal}
     (nil))
(insn 109 108 110 11 (parallel [
            (set (reg:SI 2 cx [orig:145 _63 ] [145])
                (minus:SI (reg:SI 2 cx [orig:143 bottom.112_61 ] [143])
                    (reg:SI 3 bx [orig:144 top.113_62 ] [144])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":281:29 282 {*subsi_1}
     (nil))
(insn 110 109 111 11 (parallel [
            (set (reg:SI 3 bx [orig:146 _64 ] [146])
                (plus:SI (reg:SI 2 cx [orig:145 _63 ] [145])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":281:35 209 {*addsi_1}
     (nil))
(insn 111 110 112 11 (set (reg:SI 2 cx [orig:147 video_num_columns.114_65 ] [147])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":281:40 75 {*movsi_internal}
     (nil))
(insn 112 111 113 11 (parallel [
            (set (reg:SI 2 cx [orig:148 _66 ] [148])
                (mult:SI (reg:SI 2 cx [orig:147 video_num_columns.114_65 ] [147])
                    (reg:SI 3 bx [orig:146 _64 ] [146])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":281:40 408 {*mulsi3_1}
     (nil))
(insn 113 112 114 11 (parallel [
            (set (reg:SI 2 cx [orig:149 _67 ] [149])
                (lshiftrt:SI (reg:SI 2 cx [orig:148 _66 ] [148])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":281:60 701 {*lshrsi3_1}
     (nil))
(insn 114 113 115 11 (set (reg:SI 4 si [orig:150 video_size_row.115_68 ] [150])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":282:45 75 {*movsi_internal}
     (nil))
(insn 115 114 116 11 (set (reg:SI 3 bx [orig:151 top.116_69 ] [151])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("top") [flags 0x2]  <var_decl 0x71960af2e2d0 top>)
                        ] UNSPEC_GOTOFF))) [3 top+0 S4 A32])) "drivers/chr_drv/console.c":282:45 75 {*movsi_internal}
     (nil))
(insn 116 115 117 11 (parallel [
            (set (reg:SI 4 si [orig:152 _70 ] [152])
                (mult:SI (reg:SI 4 si [orig:150 video_size_row.115_68 ] [150])
                    (reg:SI 3 bx [orig:151 top.116_69 ] [151])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":282:45 408 {*mulsi3_1}
     (nil))
(insn 117 116 118 11 (set (reg:SI 3 bx [orig:153 origin.117_71 ] [153])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])) "drivers/chr_drv/console.c":282:28 75 {*movsi_internal}
     (nil))
(insn 118 117 119 11 (parallel [
            (set (reg:SI 3 bx [orig:154 _72 ] [154])
                (plus:SI (reg:SI 3 bx [orig:153 origin.117_71 ] [153])
                    (reg:SI 4 si [orig:152 _70 ] [152])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":282:28 209 {*addsi_1}
     (nil))
(insn 119 118 120 11 (set (reg:SI 4 si [orig:155 top.118_73 ] [155])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("top") [flags 0x2]  <var_decl 0x71960af2e2d0 top>)
                        ] UNSPEC_GOTOFF))) [3 top+0 S4 A32])) "drivers/chr_drv/console.c":283:52 75 {*movsi_internal}
     (nil))
(insn 120 119 121 11 (parallel [
            (set (reg:SI 5 di [orig:156 _74 ] [156])
                (plus:SI (reg:SI 4 si [orig:155 top.118_73 ] [155])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":283:52 209 {*addsi_1}
     (nil))
(insn 121 120 122 11 (set (reg:SI 4 si [orig:157 video_size_row.119_75 ] [157])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":283:45 75 {*movsi_internal}
     (nil))
(insn 122 121 123 11 (parallel [
            (set (reg:SI 4 si [orig:158 _76 ] [158])
                (mult:SI (reg:SI 4 si [orig:157 video_size_row.119_75 ] [157])
                    (reg:SI 5 di [orig:156 _74 ] [156])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":283:45 408 {*mulsi3_1}
     (nil))
(insn 123 122 124 11 (set (reg:SI 1 dx [orig:159 origin.120_77 ] [159])
        (mem/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])) "drivers/chr_drv/console.c":283:28 75 {*movsi_internal}
     (nil))
(insn 124 123 152 11 (parallel [
            (set (reg:SI 1 dx [orig:160 _78 ] [160])
                (plus:SI (reg:SI 1 dx [orig:159 origin.120_77 ] [159])
                    (reg:SI 4 si [orig:158 _76 ] [158])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":283:28 209 {*addsi_1}
     (nil))
(insn 152 124 153 11 (set (reg:SI 5 di [orig:154 _72 ] [154])
        (reg:SI 3 bx [orig:154 _72 ] [154])) "drivers/chr_drv/console.c":275:9 75 {*movsi_internal}
     (nil))
(insn 153 152 125 11 (set (reg:SI 4 si [orig:160 _78 ] [160])
        (reg:SI 1 dx [orig:160 _78 ] [160])) "drivers/chr_drv/console.c":275:9 75 {*movsi_internal}
     (nil))
(insn 125 153 136 11 (parallel [
            (asm_operands/v ("cld
	rep
	movsl
	movl video_num_columns, %%ecx
	rep
	stosw") ("") 0 [
                    (reg:HI 0 ax [orig:142 video_erase_char.111_60 ] [142])
                    (reg:SI 2 cx [orig:149 _67 ] [149])
                    (reg:SI 5 di [orig:154 _72 ] [154])
                    (reg:SI 4 si [orig:160 _78 ] [160])
                ]
                 [
                    (asm_input:HI ("a") drivers/chr_drv/console.c:275)
                    (asm_input:SI ("c") drivers/chr_drv/console.c:275)
                    (asm_input:SI ("D") drivers/chr_drv/console.c:275)
                    (asm_input:SI ("S") drivers/chr_drv/console.c:275)
                ]
                 [] drivers/chr_drv/console.c:275)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":275:9 -1
     (nil))
(note 136 125 137 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 126 13 (const_int 0 [0]) "drivers/chr_drv/console.c":285:1 843 {nop}
     (nil))
(code_label 126 137 127 12 49 (nil) [2 uses])
(note 127 126 138 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(note 138 127 139 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 141 14 (const_int 0 [0]) "drivers/chr_drv/console.c":285:1 843 {nop}
     (nil))
(note 141 139 0 NOTE_INSN_DELETED)

;; Function ri (ri, funcdef_no=14, decl_uid=1452, cgraph_uid=15, symbol_order=39)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =rm  (1) 0  (2) re {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) lBwBz {*call}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
  BB 3
   Insn 26: point = 0, n_alt = -1
   Insn 16: point = 0, n_alt = 1
   Insn 15: point = 1, n_alt = 0
   Insn 14: point = 3, n_alt = 0
   Insn 13: point = 4, n_alt = 0
   Insn 12: point = 5, n_alt = 1
   Insn 11: point = 6, n_alt = 0
   Insn 10: point = 8, n_alt = 0
  BB 4
   Insn 21: point = 10, n_alt = 0
  BB 2
   Insn 8: point = 10, n_alt = -1
   Insn 7: point = 10, n_alt = 0
   Insn 6: point = 11, n_alt = 0
   Insn 5: point = 12, n_alt = 0
   Insn 28: point = 13, n_alt = 0
 r82: [0..13]
 r83: [10..12]
 r84: [10..11]
 r85: [7..8]
 r86: [5..6]
 r87: [2..4]
 r88: [2..3]
 r89: [0..1]
Compressing live ranges: from 14 to 10 - 71%
Ranges after the compression:
 r82: [0..9]
 r83: [8..9]
 r84: [8..9]
 r85: [6..7]
 r86: [4..5]
 r87: [2..3]
 r88: [2..3]
 r89: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 28
changing reg in insn 16
changing reg in insn 14
changing reg in insn 13
changing reg in insn 12
changing reg in insn 10
changing reg in insn 6
changing reg in insn 5
changing reg in insn 5
changing reg in insn 7
changing reg in insn 6
changing reg in insn 7
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 15
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 16
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 21.


ri

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,7u} r1={7d,5u} r2={4d,2u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={5d,1u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 106{85d,21u,0e} in 14{13 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 28 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 28 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 2 cx [orig:83 y.129_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])) "drivers/chr_drv/console.c":289:8 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 1 dx [orig:84 top.130_2 ] [84])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("top") [flags 0x2]  <var_decl 0x71960af2e2d0 top>)
                        ] UNSPEC_GOTOFF))) [3 top+0 S4 A32])) "drivers/chr_drv/console.c":289:8 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [orig:83 y.129_1 ] [83])
            (reg:SI 1 dx [orig:84 top.130_2 ] [84]))) "drivers/chr_drv/console.c":289:5 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "drivers/chr_drv/console.c":289:5 806 {*jcc}
     (nil)
 -> 19)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:SI 1 dx [orig:85 y.131_3 ] [85])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])) "drivers/chr_drv/console.c":290:4 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (parallel [
            (set (reg:SI 1 dx [orig:86 _4 ] [86])
                (plus:SI (reg:SI 1 dx [orig:85 y.131_3 ] [85])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":290:4 209 {*addsi_1}
     (nil))
(insn 12 11 13 3 (set (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])
        (reg:SI 1 dx [orig:86 _4 ] [86])) "drivers/chr_drv/console.c":290:4 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:SI 1 dx [orig:87 pos.132_5 ] [87])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":291:7 75 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:SI 2 cx [orig:88 video_size_row.133_6 ] [88])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":291:7 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (parallel [
            (set (reg:SI 1 dx [orig:89 _7 ] [89])
                (minus:SI (reg:SI 1 dx [orig:87 pos.132_5 ] [87])
                    (reg:SI 2 cx [orig:88 video_size_row.133_6 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":291:7 282 {*subsi_1}
     (nil))
(insn 16 15 26 3 (set (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])
        (reg:SI 1 dx [orig:89 _7 ] [89])) "drivers/chr_drv/console.c":291:7 75 {*movsi_internal}
     (nil))
(jump_insn 26 16 27 3 (set (pc)
        (label_ref 24)) "drivers/chr_drv/console.c":292:3 807 {jump}
     (nil)
 -> 24)
(barrier 27 26 19)
(code_label 19 27 20 4 51 (nil) [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 21 20 24 4 (call (mem:QI (symbol_ref:SI ("scrdown") [flags 0x3]  <function_decl 0x71960af5f200 scrdown>) [0 scrdown S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":294:2 812 {*call}
     (nil)
    (nil))
(code_label 24 21 25 5 50 (nil) [1 uses])
(note 25 24 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 29 25 0 NOTE_INSN_DELETED)

;; Function delete_line (delete_line, funcdef_no=15, decl_uid=1455, cgraph_uid=16, symbol_order=40)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 21: point = 0, n_alt = -1
  BB 2
   Insn 17: point = 0, n_alt = 1
   Insn 16: point = 1, n_alt = 0
   Insn 15: point = 2, n_alt = 1
   Insn 14: point = 3, n_alt = 0
   Insn 13: point = 4, n_alt = 0
   Insn 12: point = 4, n_alt = 1
   Insn 11: point = 5, n_alt = 0
   Insn 10: point = 6, n_alt = 1
   Insn 9: point = 7, n_alt = 0
   Insn 8: point = 8, n_alt = 1
   Insn 7: point = 9, n_alt = 0
   Insn 6: point = 10, n_alt = 1
   Insn 5: point = 11, n_alt = 0
   Insn 22: point = 12, n_alt = 0
 r82: [0..12]
 r83: [10..11]
 r84: [8..9]
 r85: [6..7]
 r86: [4..5]
 r87: [2..3]
 r88: [0..1]
Compressing live ranges: from 13 to 12 - 92%
Ranges after the compression:
 r82: [0..11]
 r83: [10..11]
 r84: [8..9]
 r85: [6..7]
 r86: [4..5]
 r87: [2..3]
 r88: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=24)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
changing reg in insn 22
changing reg in insn 17
changing reg in insn 15
changing reg in insn 12
changing reg in insn 11
changing reg in insn 10
changing reg in insn 9
changing reg in insn 7
changing reg in insn 5
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.


delete_line

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={8d,6u} r1={2d} r2={2d} r3={1d,8u} r7={1d,8u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={2d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 103{81d,22u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 22 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 22 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 22 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 ax [orig:83 top.134_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("top") [flags 0x2]  <var_decl 0x71960af2e2d0 top>)
                        ] UNSPEC_GOTOFF))) [3 top+0 S4 A32])) "drivers/chr_drv/console.c":301:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [4 oldtop+0 S4 A32])
        (reg:SI 0 ax [orig:83 top.134_1 ] [83])) "drivers/chr_drv/console.c":301:9 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 0 ax [orig:84 bottom.135_2 ] [84])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bottom") [flags 0x2]  <var_decl 0x71960af55000 bottom>)
                        ] UNSPEC_GOTOFF))) [3 bottom+0 S4 A32])) "drivers/chr_drv/console.c":302:12 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [4 oldbottom+0 S4 A32])
        (reg:SI 0 ax [orig:84 bottom.135_2 ] [84])) "drivers/chr_drv/console.c":302:12 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:85 y.136_3 ] [85])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])) "drivers/chr_drv/console.c":303:6 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("top") [flags 0x2]  <var_decl 0x71960af2e2d0 top>)
                        ] UNSPEC_GOTOFF))) [3 top+0 S4 A32])
        (reg:SI 0 ax [orig:85 y.136_3 ] [85])) "drivers/chr_drv/console.c":303:6 75 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 0 ax [orig:86 video_num_lines.137_4 ] [86])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_lines") [flags 0x2]  <var_decl 0x71960af2e900 video_num_lines>)
                        ] UNSPEC_GOTOFF))) [3 video_num_lines+0 S4 A32])) "drivers/chr_drv/console.c":304:9 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bottom") [flags 0x2]  <var_decl 0x71960af55000 bottom>)
                        ] UNSPEC_GOTOFF))) [3 bottom+0 S4 A32])
        (reg:SI 0 ax [orig:86 video_num_lines.137_4 ] [86])) "drivers/chr_drv/console.c":304:9 75 {*movsi_internal}
     (nil))
(call_insn 13 12 14 2 (call (mem:QI (symbol_ref:SI ("scrup") [flags 0x3]  <function_decl 0x71960af50600 scrup>) [0 scrup S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":305:2 812 {*call}
     (nil)
    (nil))
(insn 14 13 15 2 (set (reg:SI 0 ax [orig:87 oldtop.138_5 ] [87])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [4 oldtop+0 S4 A32])) "drivers/chr_drv/console.c":306:6 75 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("top") [flags 0x2]  <var_decl 0x71960af2e2d0 top>)
                        ] UNSPEC_GOTOFF))) [3 top+0 S4 A32])
        (reg:SI 0 ax [orig:87 oldtop.138_5 ] [87])) "drivers/chr_drv/console.c":306:6 75 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:SI 0 ax [orig:88 oldbottom.139_6 ] [88])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [4 oldbottom+0 S4 A32])) "drivers/chr_drv/console.c":307:9 75 {*movsi_internal}
     (nil))
(insn 17 16 20 2 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bottom") [flags 0x2]  <var_decl 0x71960af55000 bottom>)
                        ] UNSPEC_GOTOFF))) [3 bottom+0 S4 A32])
        (reg:SI 0 ax [orig:88 oldbottom.139_6 ] [88])) "drivers/chr_drv/console.c":307:9 75 {*movsi_internal}
     (nil))
(note 20 17 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 23 3 (const_int 0 [0]) "drivers/chr_drv/console.c":308:1 843 {nop}
     (nil))
(note 23 21 0 NOTE_INSN_DELETED)

;; Function insert_line (insert_line, funcdef_no=16, decl_uid=1460, cgraph_uid=17, symbol_order=41)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 21: point = 0, n_alt = -1
  BB 2
   Insn 17: point = 0, n_alt = 1
   Insn 16: point = 1, n_alt = 0
   Insn 15: point = 2, n_alt = 1
   Insn 14: point = 3, n_alt = 0
   Insn 13: point = 4, n_alt = 0
   Insn 12: point = 4, n_alt = 1
   Insn 11: point = 5, n_alt = 0
   Insn 10: point = 6, n_alt = 1
   Insn 9: point = 7, n_alt = 0
   Insn 8: point = 8, n_alt = 1
   Insn 7: point = 9, n_alt = 0
   Insn 6: point = 10, n_alt = 1
   Insn 5: point = 11, n_alt = 0
   Insn 22: point = 12, n_alt = 0
 r82: [0..12]
 r83: [10..11]
 r84: [8..9]
 r85: [6..7]
 r86: [4..5]
 r87: [2..3]
 r88: [0..1]
Compressing live ranges: from 13 to 12 - 92%
Ranges after the compression:
 r82: [0..11]
 r83: [10..11]
 r84: [8..9]
 r85: [6..7]
 r86: [4..5]
 r87: [2..3]
 r88: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=24)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
changing reg in insn 22
changing reg in insn 17
changing reg in insn 15
changing reg in insn 12
changing reg in insn 11
changing reg in insn 10
changing reg in insn 9
changing reg in insn 7
changing reg in insn 5
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.


insert_line

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={8d,6u} r1={2d} r2={2d} r3={1d,8u} r7={1d,8u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={2d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 103{81d,22u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 22 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 22 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 22 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 ax [orig:83 top.140_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("top") [flags 0x2]  <var_decl 0x71960af2e2d0 top>)
                        ] UNSPEC_GOTOFF))) [3 top+0 S4 A32])) "drivers/chr_drv/console.c":314:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [4 oldtop+0 S4 A32])
        (reg:SI 0 ax [orig:83 top.140_1 ] [83])) "drivers/chr_drv/console.c":314:9 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 0 ax [orig:84 bottom.141_2 ] [84])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bottom") [flags 0x2]  <var_decl 0x71960af55000 bottom>)
                        ] UNSPEC_GOTOFF))) [3 bottom+0 S4 A32])) "drivers/chr_drv/console.c":315:12 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [4 oldbottom+0 S4 A32])
        (reg:SI 0 ax [orig:84 bottom.141_2 ] [84])) "drivers/chr_drv/console.c":315:12 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:85 y.142_3 ] [85])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])) "drivers/chr_drv/console.c":316:6 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("top") [flags 0x2]  <var_decl 0x71960af2e2d0 top>)
                        ] UNSPEC_GOTOFF))) [3 top+0 S4 A32])
        (reg:SI 0 ax [orig:85 y.142_3 ] [85])) "drivers/chr_drv/console.c":316:6 75 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 0 ax [orig:86 video_num_lines.143_4 ] [86])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_lines") [flags 0x2]  <var_decl 0x71960af2e900 video_num_lines>)
                        ] UNSPEC_GOTOFF))) [3 video_num_lines+0 S4 A32])) "drivers/chr_drv/console.c":317:9 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bottom") [flags 0x2]  <var_decl 0x71960af55000 bottom>)
                        ] UNSPEC_GOTOFF))) [3 bottom+0 S4 A32])
        (reg:SI 0 ax [orig:86 video_num_lines.143_4 ] [86])) "drivers/chr_drv/console.c":317:9 75 {*movsi_internal}
     (nil))
(call_insn 13 12 14 2 (call (mem:QI (symbol_ref:SI ("scrdown") [flags 0x3]  <function_decl 0x71960af5f200 scrdown>) [0 scrdown S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":318:2 812 {*call}
     (nil)
    (nil))
(insn 14 13 15 2 (set (reg:SI 0 ax [orig:87 oldtop.144_5 ] [87])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [4 oldtop+0 S4 A32])) "drivers/chr_drv/console.c":319:6 75 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("top") [flags 0x2]  <var_decl 0x71960af2e2d0 top>)
                        ] UNSPEC_GOTOFF))) [3 top+0 S4 A32])
        (reg:SI 0 ax [orig:87 oldtop.144_5 ] [87])) "drivers/chr_drv/console.c":319:6 75 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:SI 0 ax [orig:88 oldbottom.145_6 ] [88])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [4 oldbottom+0 S4 A32])) "drivers/chr_drv/console.c":320:9 75 {*movsi_internal}
     (nil))
(insn 17 16 20 2 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bottom") [flags 0x2]  <var_decl 0x71960af55000 bottom>)
                        ] UNSPEC_GOTOFF))) [3 bottom+0 S4 A32])
        (reg:SI 0 ax [orig:88 oldbottom.145_6 ] [88])) "drivers/chr_drv/console.c":320:9 75 {*movsi_internal}
     (nil))
(note 20 17 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 23 3 (const_int 0 [0]) "drivers/chr_drv/console.c":321:1 843 {nop}
     (nil))
(note 23 21 0 NOTE_INSN_DELETED)

;; Function delete_char (delete_char, funcdef_no=17, decl_uid=1465, cgraph_uid=18, symbol_order=42)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 22:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 25:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 28:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) rm  (1) re {*cmpsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 35:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) m  (1) rn {*movhi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5 6
EBB 8
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
  BB 6
   Insn 44: point = 0, n_alt = -1
   Insn 37: point = 0, n_alt = 3
   Insn 36: point = 1, n_alt = 0
   Insn 35: point = 2, n_alt = 2
  BB 5
   Insn 33: point = 5, n_alt = -1
   Insn 32: point = 5, n_alt = 0
   Insn 30: point = 6, n_alt = 0
   Insn 29: point = 7, n_alt = 0
   Insn 28: point = 8, n_alt = 0
  BB 3
   Insn 42: point = 9, n_alt = -1
   Insn 17: point = 9, n_alt = 1
   Insn 16: point = 10, n_alt = 0
  BB 4
   Insn 25: point = 12, n_alt = 0
   Insn 24: point = 12, n_alt = 3
   Insn 23: point = 13, n_alt = 0
   Insn 22: point = 14, n_alt = 2
   Insn 21: point = 16, n_alt = 0
  BB 8
   Insn 48: point = 18, n_alt = -1
  BB 2
   Insn 10: point = 18, n_alt = -1
   Insn 9: point = 18, n_alt = 0
   Insn 8: point = 19, n_alt = 0
   Insn 7: point = 20, n_alt = 0
   Insn 6: point = 21, n_alt = 1
   Insn 5: point = 22, n_alt = 0
   Insn 49: point = 23, n_alt = 0
 r82: [3..23]
 r83: [21..22]
 r84: [18..20]
 r85: [18..19]
 r86: [9..10]
 r87: [12..14]
 r88: [5..7]
 r89: [5..6]
 r90: [0..2]
 r91: [15..16]
 r92: [12..13]
 r93: [0..1]
Compressing live ranges: from 24 to 14 - 58%
Ranges after the compression:
 r82: [2..13]
 r83: [12..13]
 r84: [10..11]
 r85: [10..11]
 r86: [4..5]
 r87: [6..7]
 r88: [2..3]
 r89: [2..3]
 r90: [0..1]
 r91: [8..9]
 r92: [6..7]
 r93: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 49
changing reg in insn 35
changing reg in insn 30
changing reg in insn 16
changing reg in insn 8
changing reg in insn 7
changing reg in insn 5
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 9
changing reg in insn 8
changing reg in insn 9
changing reg in insn 16
changing reg in insn 17
changing reg in insn 22
changing reg in insn 24
changing reg in insn 29
changing reg in insn 32
changing reg in insn 30
changing reg in insn 32
changing reg in insn 35
changing reg in insn 37
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 36
changing reg in insn 37
starting the processing of deferred insns
ending the processing of deferred insns


delete_char

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={3d,7u} r1={8d,7u} r2={4d,3u} r7={1d,18u} r17={5d,2u} 
;;    total ref usage 58{21d,37u,0e} in 25{25 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 49 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 49 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 49 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 1 dx [orig:83 pos.146_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":326:22 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 p+0 S4 A32])
        (reg:SI 1 dx [orig:83 pos.146_1 ] [83])) "drivers/chr_drv/console.c":326:18 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 2 cx [orig:84 x.147_2 ] [84])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":328:8 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 1 dx [orig:85 video_num_columns.148_3 ] [85])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":328:8 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [orig:84 x.147_2 ] [84])
            (reg:SI 1 dx [orig:85 video_num_columns.148_3 ] [85]))) "drivers/chr_drv/console.c":328:5 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 15 2 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 47)
            (pc))) "drivers/chr_drv/console.c":328:5 806 {*jcc}
     (nil)
 -> 47)
(note 15 10 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:SI 1 dx [orig:86 x.149_4 ] [86])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":331:4 75 {*movsi_internal}
     (nil))
(insn 17 16 42 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [4 i+0 S4 A32])
        (reg:SI 1 dx [orig:86 x.149_4 ] [86])) "drivers/chr_drv/console.c":331:4 75 {*movsi_internal}
     (nil))
(jump_insn 42 17 43 3 (set (pc)
        (label_ref 26)) "drivers/chr_drv/console.c":332:8 807 {jump}
     (nil)
 -> 26)
(barrier 43 42 31)
(code_label 31 43 20 4 59 (nil) [1 uses])
(note 20 31 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg/f:SI 1 dx [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 p+0 S4 A32])) "drivers/chr_drv/console.c":333:6 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:HI 2 cx [orig:87 _5 ] [87])
        (mem:HI (plus:SI (reg/f:SI 1 dx [91])
                (const_int 2 [0x2])) [8 MEM[(short unsigned int *)p_10 + 2B]+0 S2 A16])) "drivers/chr_drv/console.c":333:6 76 {*movhi_internal}
     (nil))
(insn 23 22 24 4 (set (reg/f:SI 1 dx [92])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 p+0 S4 A32])) "drivers/chr_drv/console.c":333:6 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (mem:HI (reg/f:SI 1 dx [92]) [8 *p_10+0 S2 A16])
        (reg:HI 2 cx [orig:87 _5 ] [87])) "drivers/chr_drv/console.c":333:6 76 {*movhi_internal}
     (nil))
(insn 25 24 26 4 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [11 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [11 p+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":334:4 209 {*addsi_1}
     (nil))
(code_label 26 25 27 5 58 (nil) [1 uses])
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [4 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [4 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":332:13 209 {*addsi_1}
     (nil))
(insn 29 28 30 5 (set (reg:SI 2 cx [orig:88 i.150_6 ] [88])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [4 i+0 S4 A32])) "drivers/chr_drv/console.c":332:9 75 {*movsi_internal}
     (nil))
(insn 30 29 32 5 (set (reg:SI 1 dx [orig:89 video_num_columns.151_7 ] [89])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":332:13 75 {*movsi_internal}
     (nil))
(insn 32 30 33 5 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [orig:88 i.150_6 ] [88])
            (reg:SI 1 dx [orig:89 video_num_columns.151_7 ] [89]))) "drivers/chr_drv/console.c":332:13 11 {*cmpsi_1}
     (nil))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "drivers/chr_drv/console.c":332:13 806 {*jcc}
     (nil)
 -> 31)
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg:HI 1 dx [orig:90 video_erase_char.152_8 ] [90])
        (mem/c:HI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_erase_char") [flags 0x2]  <var_decl 0x71960af2ec60 video_erase_char>)
                        ] UNSPEC_GOTOFF))) [8 video_erase_char+0 S2 A16])) "drivers/chr_drv/console.c":336:5 76 {*movhi_internal}
     (nil))
(insn 36 35 37 6 (set (reg/f:SI 0 ax [93])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 p+0 S4 A32])) "drivers/chr_drv/console.c":336:5 75 {*movsi_internal}
     (nil))
(insn 37 36 44 6 (set (mem:HI (reg/f:SI 0 ax [93]) [8 *p_10+0 S2 A16])
        (reg:HI 1 dx [orig:90 video_erase_char.152_8 ] [90])) "drivers/chr_drv/console.c":336:5 76 {*movhi_internal}
     (nil))
(jump_insn 44 37 45 6 (set (pc)
        (label_ref 40)) 807 {jump}
     (nil)
 -> 40)
(barrier 45 44 47)
(code_label 47 45 46 8 60 (nil) [1 uses])
(note 46 47 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 46 40 8 (const_int 0 [0]) "drivers/chr_drv/console.c":329:3 843 {nop}
     (nil))
(code_label 40 48 41 7 55 (nil) [1 uses])
(note 41 40 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 50 41 0 NOTE_INSN_DELETED)

;; Function insert_char (insert_char, funcdef_no=18, decl_uid=1473, cgraph_uid=19, symbol_order=43)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) r  (1) rm {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 15:  (0) r  (1) rm {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 18:  (0) r  (1) rm {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) m  (1) rn {*movhi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 20:  (0) r  (1) rm {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 22:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 26:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) rm  (1) re {*cmpsi_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 6 5 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 41: point = 0, n_alt = -1
  BB 5
  BB 6
   Insn 39: point = 0, n_alt = -1
  BB 4
   Insn 32: point = 0, n_alt = -1
   Insn 31: point = 0, n_alt = 0
   Insn 29: point = 1, n_alt = 0
   Insn 28: point = 2, n_alt = -2
   Insn 27: point = 4, n_alt = 1
   Insn 26: point = 5, n_alt = 3
   Insn 25: point = 6, n_alt = 0
  BB 2
   Insn 36: point = 8, n_alt = -1
   Insn 10: point = 8, n_alt = 1
   Insn 9: point = 9, n_alt = 0
   Insn 8: point = 10, n_alt = 3
   Insn 7: point = 11, n_alt = 2
   Insn 6: point = 12, n_alt = 1
   Insn 5: point = 13, n_alt = 0
   Insn 42: point = 14, n_alt = 0
  BB 3
   Insn 22: point = 15, n_alt = 0
   Insn 21: point = 15, n_alt = 3
   Insn 20: point = 16, n_alt = 2
   Insn 19: point = 17, n_alt = 3
   Insn 18: point = 18, n_alt = 2
   Insn 17: point = 19, n_alt = 0
   Insn 16: point = 20, n_alt = 3
   Insn 15: point = 21, n_alt = 2
   Insn 14: point = 23, n_alt = 0
 r82: [0..24]
 r83: [12..13]
 r84: [8..9]
 r85: [3..6]
 r86: [0..2]
 r87: [0..1]
 r88: [10..11]
 r89: [22..23]
 r90: [20..21]
 r91: [17..19]
 r92: [17..18]
 r93: [15..16]
 r94: [4..5]
Compressing live ranges: from 25 to 18 - 72%
Ranges after the compression:
 r82: [0..17]
 r83: [8..9]
 r84: [4..5]
 r85: [2..3]
 r86: [0..1]
 r87: [0..1]
 r88: [6..7]
 r89: [16..17]
 r90: [14..15]
 r91: [12..13]
 r92: [12..13]
 r93: [10..11]
 r94: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 42
changing reg in insn 29
changing reg in insn 9
changing reg in insn 7
changing reg in insn 5
changing reg in insn 5
changing reg in insn 6
changing reg in insn 9
changing reg in insn 10
changing reg in insn 25
changing reg in insn 28
changing reg in insn 26
changing reg in insn 28
changing reg in insn 31
changing reg in insn 29
changing reg in insn 31
changing reg in insn 7
changing reg in insn 8
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 19
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 26
changing reg in insn 27
starting the processing of deferred insns
ending the processing of deferred insns


insert_char

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={2d,4u} r1={10d,10u} r2={4d,3u} r7={1d,20u} r17={4d,1u} 
;;    total ref usage 59{21d,38u,0e} in 26{26 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 42 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 42 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 42 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 1 dx [orig:83 x.153_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":341:6 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [4 i+0 S4 A32])
        (reg:SI 1 dx [orig:83 x.153_1 ] [83])) "drivers/chr_drv/console.c":341:6 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:HI 1 dx [88])
        (mem/c:HI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_erase_char") [flags 0x2]  <var_decl 0x71960af2ec60 video_erase_char>)
                        ] UNSPEC_GOTOFF))) [8 video_erase_char+0 S2 A16])) "drivers/chr_drv/console.c":342:22 76 {*movhi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 sp)
                (const_int 10 [0xa])) [8 old+0 S2 A16])
        (reg:HI 1 dx [88])) "drivers/chr_drv/console.c":342:22 76 {*movhi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 1 dx [orig:84 pos.154_2 ] [84])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":343:22 75 {*movsi_internal}
     (nil))
(insn 10 9 36 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [11 p+0 S4 A32])
        (reg:SI 1 dx [orig:84 pos.154_2 ] [84])) "drivers/chr_drv/console.c":343:18 75 {*movsi_internal}
     (nil))
(jump_insn 36 10 37 2 (set (pc)
        (label_ref 23)) "drivers/chr_drv/console.c":345:8 807 {jump}
     (nil)
 -> 23)
(barrier 37 36 30)
(code_label 30 37 13 3 63 (nil) [1 uses])
(note 13 30 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg/f:SI 1 dx [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [11 p+0 S4 A32])) "drivers/chr_drv/console.c":346:7 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:HI 1 dx [90])
        (mem:HI (reg/f:SI 1 dx [89]) [8 *p_8+0 S2 A16])) "drivers/chr_drv/console.c":346:7 76 {*movhi_internal}
     (nil))
(insn 16 15 17 3 (set (mem/c:HI (plus:SI (reg/f:SI 7 sp)
                (const_int 2 [0x2])) [8 tmp+0 S2 A16])
        (reg:HI 1 dx [90])) "drivers/chr_drv/console.c":346:7 76 {*movhi_internal}
     (nil))
(insn 17 16 18 3 (set (reg/f:SI 1 dx [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [11 p+0 S4 A32])) "drivers/chr_drv/console.c":347:6 75 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:HI 2 cx [92])
        (mem/c:HI (plus:SI (reg/f:SI 7 sp)
                (const_int 10 [0xa])) [8 old+0 S2 A16])) "drivers/chr_drv/console.c":347:6 76 {*movhi_internal}
     (nil))
(insn 19 18 20 3 (set (mem:HI (reg/f:SI 1 dx [91]) [8 *p_8+0 S2 A16])
        (reg:HI 2 cx [92])) "drivers/chr_drv/console.c":347:6 76 {*movhi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:HI 1 dx [93])
        (mem/c:HI (plus:SI (reg/f:SI 7 sp)
                (const_int 2 [0x2])) [8 tmp+0 S2 A16])) "drivers/chr_drv/console.c":348:7 76 {*movhi_internal}
     (nil))
(insn 21 20 22 3 (set (mem/c:HI (plus:SI (reg/f:SI 7 sp)
                (const_int 10 [0xa])) [8 old+0 S2 A16])
        (reg:HI 1 dx [93])) "drivers/chr_drv/console.c":348:7 76 {*movhi_internal}
     (nil))
(insn 22 21 23 3 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [11 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [11 p+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":349:4 209 {*addsi_1}
     (nil))
(code_label 23 22 24 4 62 (nil) [1 uses])
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:SI 1 dx [orig:85 i.155_3 ] [85])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [4 i+0 S4 A32])) "drivers/chr_drv/console.c":345:10 75 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (parallel [
            (set (reg:SI 2 cx [94])
                (plus:SI (reg:SI 1 dx [orig:85 i.155_3 ] [85])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":345:10 209 {*addsi_1}
     (nil))
(insn 27 26 28 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [4 i+0 S4 A32])
        (reg:SI 2 cx [94])) "drivers/chr_drv/console.c":345:10 75 {*movsi_internal}
     (nil))
(insn 28 27 29 4 (set (reg:SI 2 cx [orig:86 i.156_4 ] [86])
        (reg:SI 1 dx [orig:85 i.155_3 ] [85])) "drivers/chr_drv/console.c":345:10 75 {*movsi_internal}
     (nil))
(insn 29 28 31 4 (set (reg:SI 1 dx [orig:87 video_num_columns.157_5 ] [87])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":345:13 75 {*movsi_internal}
     (nil))
(insn 31 29 32 4 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [orig:86 i.156_4 ] [86])
            (reg:SI 1 dx [orig:87 video_num_columns.157_5 ] [87]))) "drivers/chr_drv/console.c":345:13 11 {*cmpsi_1}
     (nil))
(jump_insn 32 31 38 4 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "drivers/chr_drv/console.c":345:13 806 {*jcc}
     (nil)
 -> 30)
(note 38 32 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 33 6 (const_int 0 [0]) "drivers/chr_drv/console.c":351:1 843 {nop}
     (nil))
(note 33 39 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 40 33 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 43 7 (const_int 0 [0]) "drivers/chr_drv/console.c":351:1 843 {nop}
     (nil))
(note 43 41 0 NOTE_INSN_DELETED)

;; Function csi_L (csi_L, funcdef_no=19, decl_uid=1483, cgraph_uid=20, symbol_order=44)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 28:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) r {*cmpsi_ccno_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7
EBB 8 10 9 11

********** Pseudo live ranges #1: **********

  BB 11
   Insn 43: point = 0, n_alt = -1
  BB 9
  BB 10
   Insn 41: point = 0, n_alt = -1
  BB 8
   Insn 32: point = 0, n_alt = -1
   Insn 31: point = 0, n_alt = 0
   Insn 29: point = 1, n_alt = 1
   Insn 28: point = 2, n_alt = 3
   Insn 27: point = 3, n_alt = 0
  BB 6
   Insn 38: point = 4, n_alt = -1
  BB 3
   Insn 36: point = 4, n_alt = -1
   Insn 10: point = 4, n_alt = 1
   Insn 9: point = 5, n_alt = 0
  BB 5
   Insn 18: point = 8, n_alt = 1
  BB 4
   Insn 16: point = 8, n_alt = -1
   Insn 15: point = 8, n_alt = 1
  BB 2
   Insn 7: point = 8, n_alt = -1
   Insn 6: point = 8, n_alt = 0
   Insn 5: point = 9, n_alt = 0
   Insn 44: point = 10, n_alt = 0
  BB 7
   Insn 24: point = 11, n_alt = 0
 r82: [6..10]
 r83: [8..9]
 r84: [0..3]
 r85: [4..5]
 r86: [1..2]
Compressing live ranges: from 11 to 6 - 54%
Ranges after the compression:
 r82: [4..5]
 r83: [4..5]
 r84: [0..1]
 r85: [2..3]
 r86: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 44
changing reg in insn 9
changing reg in insn 5
changing reg in insn 5
changing reg in insn 6
changing reg in insn 27
changing reg in insn 31
changing reg in insn 28
changing reg in insn 9
changing reg in insn 10
changing reg in insn 28
changing reg in insn 29
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 24.


csi_L

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,5u} r1={4d,2u} r2={2d} r7={1d,18u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={6d,3u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 111{83d,28u,0e} in 19{18 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 44 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 44 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 44 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 1 dx [orig:83 video_num_lines.158_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_lines") [flags 0x2]  <var_decl 0x71960af2e900 video_num_lines>)
                        ] UNSPEC_GOTOFF))) [3 video_num_lines+0 S4 A32])) "drivers/chr_drv/console.c":355:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [4 nr+0 S4 A32])
            (reg:SI 1 dx [orig:83 video_num_lines.158_1 ] [83]))) "drivers/chr_drv/console.c":355:5 11 {*cmpsi_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) "drivers/chr_drv/console.c":355:5 806 {*jcc}
     (nil)
 -> 13)
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:SI 0 ax [85])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_lines") [flags 0x2]  <var_decl 0x71960af2e900 video_num_lines>)
                        ] UNSPEC_GOTOFF))) [3 video_num_lines+0 S4 A32])) "drivers/chr_drv/console.c":356:6 75 {*movsi_internal}
     (nil))
(insn 10 9 36 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [4 nr+0 S4 A32])
        (reg:SI 0 ax [85])) "drivers/chr_drv/console.c":356:6 75 {*movsi_internal}
     (nil))
(jump_insn 36 10 37 3 (set (pc)
        (label_ref 19)) 807 {jump}
     (nil)
 -> 19)
(barrier 37 36 13)
(code_label 13 37 14 4 65 (nil) [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [4 nr+0 S4 A32])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":357:10 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 16 15 17 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "drivers/chr_drv/console.c":357:10 806 {*jcc}
     (nil)
 -> 19)
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [4 nr+0 S4 A32])
        (const_int 1 [0x1])) "drivers/chr_drv/console.c":358:6 75 {*movsi_internal}
     (nil))
(code_label 19 18 20 6 66 (nil) [2 uses])
(note 20 19 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 38 20 39 6 (set (pc)
        (label_ref 25)) "drivers/chr_drv/console.c":359:8 807 {jump}
     (nil)
 -> 25)
(barrier 39 38 30)
(code_label 30 39 23 7 68 (nil) [1 uses])
(note 23 30 24 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn 24 23 25 7 (call (mem:QI (symbol_ref:SI ("insert_line") [flags 0x3]  <function_decl 0x71960af5fa00 insert_line>) [0 insert_line S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":360:3 812 {*call}
     (nil)
    (nil))
(code_label 25 24 26 8 67 (nil) [1 uses])
(note 26 25 27 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 8 (set (reg:SI 0 ax [orig:84 nr.159_2 ] [84])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [4 nr+0 S4 A32])) "drivers/chr_drv/console.c":359:11 75 {*movsi_internal}
     (nil))
(insn 28 27 29 8 (parallel [
            (set (reg:SI 1 dx [86])
                (plus:SI (reg:SI 0 ax [orig:84 nr.159_2 ] [84])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":359:11 209 {*addsi_1}
     (nil))
(insn 29 28 31 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [4 nr+0 S4 A32])
        (reg:SI 1 dx [86])) "drivers/chr_drv/console.c":359:11 75 {*movsi_internal}
     (nil))
(insn 31 29 32 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 nr.159_2 ] [84])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":359:9 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 32 31 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "drivers/chr_drv/console.c":359:9 806 {*jcc}
     (nil)
 -> 30)
(note 40 32 41 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 33 10 (const_int 0 [0]) "drivers/chr_drv/console.c":361:1 843 {nop}
     (nil))
(note 33 41 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 42 33 43 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 45 11 (const_int 0 [0]) "drivers/chr_drv/console.c":361:1 843 {nop}
     (nil))
(note 45 43 0 NOTE_INSN_DELETED)

;; Function csi_M (csi_M, funcdef_no=20, decl_uid=1489, cgraph_uid=21, symbol_order=45)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 28:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) r {*cmpsi_ccno_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7
EBB 8 10 9 11

********** Pseudo live ranges #1: **********

  BB 11
   Insn 43: point = 0, n_alt = -1
  BB 9
  BB 10
   Insn 41: point = 0, n_alt = -1
  BB 8
   Insn 32: point = 0, n_alt = -1
   Insn 31: point = 0, n_alt = 0
   Insn 29: point = 1, n_alt = 1
   Insn 28: point = 2, n_alt = 3
   Insn 27: point = 3, n_alt = 0
  BB 6
   Insn 38: point = 4, n_alt = -1
  BB 3
   Insn 36: point = 4, n_alt = -1
   Insn 10: point = 4, n_alt = 1
   Insn 9: point = 5, n_alt = 0
  BB 5
   Insn 18: point = 8, n_alt = 1
  BB 4
   Insn 16: point = 8, n_alt = -1
   Insn 15: point = 8, n_alt = 1
  BB 2
   Insn 7: point = 8, n_alt = -1
   Insn 6: point = 8, n_alt = 0
   Insn 5: point = 9, n_alt = 0
   Insn 44: point = 10, n_alt = 0
  BB 7
   Insn 24: point = 11, n_alt = 0
 r82: [6..10]
 r83: [8..9]
 r84: [0..3]
 r85: [4..5]
 r86: [1..2]
Compressing live ranges: from 11 to 6 - 54%
Ranges after the compression:
 r82: [4..5]
 r83: [4..5]
 r84: [0..1]
 r85: [2..3]
 r86: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 44
changing reg in insn 9
changing reg in insn 5
changing reg in insn 5
changing reg in insn 6
changing reg in insn 27
changing reg in insn 31
changing reg in insn 28
changing reg in insn 9
changing reg in insn 10
changing reg in insn 28
changing reg in insn 29
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 24.


csi_M

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,5u} r1={4d,2u} r2={2d} r7={1d,18u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={6d,3u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 111{83d,28u,0e} in 19{18 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 44 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 44 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 44 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 1 dx [orig:83 video_num_lines.160_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_lines") [flags 0x2]  <var_decl 0x71960af2e900 video_num_lines>)
                        ] UNSPEC_GOTOFF))) [3 video_num_lines+0 S4 A32])) "drivers/chr_drv/console.c":365:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [4 nr+0 S4 A32])
            (reg:SI 1 dx [orig:83 video_num_lines.160_1 ] [83]))) "drivers/chr_drv/console.c":365:5 11 {*cmpsi_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) "drivers/chr_drv/console.c":365:5 806 {*jcc}
     (nil)
 -> 13)
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:SI 0 ax [85])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_lines") [flags 0x2]  <var_decl 0x71960af2e900 video_num_lines>)
                        ] UNSPEC_GOTOFF))) [3 video_num_lines+0 S4 A32])) "drivers/chr_drv/console.c":366:6 75 {*movsi_internal}
     (nil))
(insn 10 9 36 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [4 nr+0 S4 A32])
        (reg:SI 0 ax [85])) "drivers/chr_drv/console.c":366:6 75 {*movsi_internal}
     (nil))
(jump_insn 36 10 37 3 (set (pc)
        (label_ref 19)) 807 {jump}
     (nil)
 -> 19)
(barrier 37 36 13)
(code_label 13 37 14 4 70 (nil) [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [4 nr+0 S4 A32])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":367:10 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 16 15 17 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "drivers/chr_drv/console.c":367:10 806 {*jcc}
     (nil)
 -> 19)
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [4 nr+0 S4 A32])
        (const_int 1 [0x1])) "drivers/chr_drv/console.c":368:6 75 {*movsi_internal}
     (nil))
(code_label 19 18 20 6 71 (nil) [2 uses])
(note 20 19 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 38 20 39 6 (set (pc)
        (label_ref 25)) "drivers/chr_drv/console.c":369:8 807 {jump}
     (nil)
 -> 25)
(barrier 39 38 30)
(code_label 30 39 23 7 73 (nil) [1 uses])
(note 23 30 24 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn 24 23 25 7 (call (mem:QI (symbol_ref:SI ("delete_line") [flags 0x3]  <function_decl 0x71960af5f800 delete_line>) [0 delete_line S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":370:3 812 {*call}
     (nil)
    (nil))
(code_label 25 24 26 8 72 (nil) [1 uses])
(note 26 25 27 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 8 (set (reg:SI 0 ax [orig:84 nr.161_2 ] [84])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [4 nr+0 S4 A32])) "drivers/chr_drv/console.c":369:11 75 {*movsi_internal}
     (nil))
(insn 28 27 29 8 (parallel [
            (set (reg:SI 1 dx [86])
                (plus:SI (reg:SI 0 ax [orig:84 nr.161_2 ] [84])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":369:11 209 {*addsi_1}
     (nil))
(insn 29 28 31 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [4 nr+0 S4 A32])
        (reg:SI 1 dx [86])) "drivers/chr_drv/console.c":369:11 75 {*movsi_internal}
     (nil))
(insn 31 29 32 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 nr.161_2 ] [84])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":369:9 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 32 31 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "drivers/chr_drv/console.c":369:9 806 {*jcc}
     (nil)
 -> 30)
(note 40 32 41 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 33 10 (const_int 0 [0]) "drivers/chr_drv/console.c":371:1 843 {nop}
     (nil))
(note 33 41 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 42 33 43 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 45 11 (const_int 0 [0]) "drivers/chr_drv/console.c":371:1 843 {nop}
     (nil))
(note 45 43 0 NOTE_INSN_DELETED)

;; Function csi_at (csi_at, funcdef_no=21, decl_uid=1495, cgraph_uid=22, symbol_order=46)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 28:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) r {*cmpsi_ccno_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7
EBB 8 10 9 11

********** Pseudo live ranges #1: **********

  BB 11
   Insn 43: point = 0, n_alt = -1
  BB 9
  BB 10
   Insn 41: point = 0, n_alt = -1
  BB 8
   Insn 32: point = 0, n_alt = -1
   Insn 31: point = 0, n_alt = 0
   Insn 29: point = 1, n_alt = 1
   Insn 28: point = 2, n_alt = 3
   Insn 27: point = 3, n_alt = 0
  BB 6
   Insn 38: point = 4, n_alt = -1
  BB 3
   Insn 36: point = 4, n_alt = -1
   Insn 10: point = 4, n_alt = 1
   Insn 9: point = 5, n_alt = 0
  BB 5
   Insn 18: point = 8, n_alt = 1
  BB 4
   Insn 16: point = 8, n_alt = -1
   Insn 15: point = 8, n_alt = 1
  BB 2
   Insn 7: point = 8, n_alt = -1
   Insn 6: point = 8, n_alt = 0
   Insn 5: point = 9, n_alt = 0
   Insn 44: point = 10, n_alt = 0
  BB 7
   Insn 24: point = 11, n_alt = 0
 r82: [6..10]
 r83: [8..9]
 r84: [0..3]
 r85: [4..5]
 r86: [1..2]
Compressing live ranges: from 11 to 6 - 54%
Ranges after the compression:
 r82: [4..5]
 r83: [4..5]
 r84: [0..1]
 r85: [2..3]
 r86: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 44
changing reg in insn 9
changing reg in insn 5
changing reg in insn 5
changing reg in insn 6
changing reg in insn 27
changing reg in insn 31
changing reg in insn 28
changing reg in insn 9
changing reg in insn 10
changing reg in insn 28
changing reg in insn 29
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 24.


csi_at

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,5u} r1={4d,2u} r2={2d} r7={1d,18u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={6d,3u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 111{83d,28u,0e} in 19{18 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 44 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 44 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 44 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 1 dx [orig:83 video_num_columns.162_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":375:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [4 nr+0 S4 A32])
            (reg:SI 1 dx [orig:83 video_num_columns.162_1 ] [83]))) "drivers/chr_drv/console.c":375:5 11 {*cmpsi_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) "drivers/chr_drv/console.c":375:5 806 {*jcc}
     (nil)
 -> 13)
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:SI 0 ax [85])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":376:6 75 {*movsi_internal}
     (nil))
(insn 10 9 36 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [4 nr+0 S4 A32])
        (reg:SI 0 ax [85])) "drivers/chr_drv/console.c":376:6 75 {*movsi_internal}
     (nil))
(jump_insn 36 10 37 3 (set (pc)
        (label_ref 19)) 807 {jump}
     (nil)
 -> 19)
(barrier 37 36 13)
(code_label 13 37 14 4 75 (nil) [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [4 nr+0 S4 A32])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":377:10 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 16 15 17 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "drivers/chr_drv/console.c":377:10 806 {*jcc}
     (nil)
 -> 19)
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [4 nr+0 S4 A32])
        (const_int 1 [0x1])) "drivers/chr_drv/console.c":378:6 75 {*movsi_internal}
     (nil))
(code_label 19 18 20 6 76 (nil) [2 uses])
(note 20 19 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 38 20 39 6 (set (pc)
        (label_ref 25)) "drivers/chr_drv/console.c":380:8 807 {jump}
     (nil)
 -> 25)
(barrier 39 38 30)
(code_label 30 39 23 7 78 (nil) [1 uses])
(note 23 30 24 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn 24 23 25 7 (call (mem:QI (symbol_ref:SI ("insert_char") [flags 0x3]  <function_decl 0x71960af5fe00 insert_char>) [0 insert_char S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":381:3 812 {*call}
     (nil)
    (nil))
(code_label 25 24 26 8 77 (nil) [1 uses])
(note 26 25 27 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 8 (set (reg:SI 0 ax [orig:84 nr.163_2 ] [84])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [4 nr+0 S4 A32])) "drivers/chr_drv/console.c":380:11 75 {*movsi_internal}
     (nil))
(insn 28 27 29 8 (parallel [
            (set (reg:SI 1 dx [86])
                (plus:SI (reg:SI 0 ax [orig:84 nr.163_2 ] [84])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":380:11 209 {*addsi_1}
     (nil))
(insn 29 28 31 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [4 nr+0 S4 A32])
        (reg:SI 1 dx [86])) "drivers/chr_drv/console.c":380:11 75 {*movsi_internal}
     (nil))
(insn 31 29 32 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 nr.163_2 ] [84])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":380:9 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 32 31 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "drivers/chr_drv/console.c":380:9 806 {*jcc}
     (nil)
 -> 30)
(note 40 32 41 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 33 10 (const_int 0 [0]) "drivers/chr_drv/console.c":382:1 843 {nop}
     (nil))
(note 33 41 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 42 33 43 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 45 11 (const_int 0 [0]) "drivers/chr_drv/console.c":382:1 843 {nop}
     (nil))
(note 45 43 0 NOTE_INSN_DELETED)

;; Function csi_P (csi_P, funcdef_no=22, decl_uid=1501, cgraph_uid=23, symbol_order=47)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 28:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) r {*cmpsi_ccno_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7
EBB 8 10 9 11

********** Pseudo live ranges #1: **********

  BB 11
   Insn 43: point = 0, n_alt = -1
  BB 9
  BB 10
   Insn 41: point = 0, n_alt = -1
  BB 8
   Insn 32: point = 0, n_alt = -1
   Insn 31: point = 0, n_alt = 0
   Insn 29: point = 1, n_alt = 1
   Insn 28: point = 2, n_alt = 3
   Insn 27: point = 3, n_alt = 0
  BB 6
   Insn 38: point = 4, n_alt = -1
  BB 3
   Insn 36: point = 4, n_alt = -1
   Insn 10: point = 4, n_alt = 1
   Insn 9: point = 5, n_alt = 0
  BB 5
   Insn 18: point = 8, n_alt = 1
  BB 4
   Insn 16: point = 8, n_alt = -1
   Insn 15: point = 8, n_alt = 1
  BB 2
   Insn 7: point = 8, n_alt = -1
   Insn 6: point = 8, n_alt = 0
   Insn 5: point = 9, n_alt = 0
   Insn 44: point = 10, n_alt = 0
  BB 7
   Insn 24: point = 11, n_alt = 0
 r82: [6..10]
 r83: [8..9]
 r84: [0..3]
 r85: [4..5]
 r86: [1..2]
Compressing live ranges: from 11 to 6 - 54%
Ranges after the compression:
 r82: [4..5]
 r83: [4..5]
 r84: [0..1]
 r85: [2..3]
 r86: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 44
changing reg in insn 9
changing reg in insn 5
changing reg in insn 5
changing reg in insn 6
changing reg in insn 27
changing reg in insn 31
changing reg in insn 28
changing reg in insn 9
changing reg in insn 10
changing reg in insn 28
changing reg in insn 29
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 24.


csi_P

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,5u} r1={4d,2u} r2={2d} r7={1d,18u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={6d,3u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 111{83d,28u,0e} in 19{18 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 44 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 44 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 44 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 1 dx [orig:83 video_num_columns.164_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":386:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [4 nr+0 S4 A32])
            (reg:SI 1 dx [orig:83 video_num_columns.164_1 ] [83]))) "drivers/chr_drv/console.c":386:5 11 {*cmpsi_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) "drivers/chr_drv/console.c":386:5 806 {*jcc}
     (nil)
 -> 13)
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:SI 0 ax [85])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":387:6 75 {*movsi_internal}
     (nil))
(insn 10 9 36 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [4 nr+0 S4 A32])
        (reg:SI 0 ax [85])) "drivers/chr_drv/console.c":387:6 75 {*movsi_internal}
     (nil))
(jump_insn 36 10 37 3 (set (pc)
        (label_ref 19)) 807 {jump}
     (nil)
 -> 19)
(barrier 37 36 13)
(code_label 13 37 14 4 80 (nil) [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [4 nr+0 S4 A32])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":388:10 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 16 15 17 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "drivers/chr_drv/console.c":388:10 806 {*jcc}
     (nil)
 -> 19)
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [4 nr+0 S4 A32])
        (const_int 1 [0x1])) "drivers/chr_drv/console.c":389:6 75 {*movsi_internal}
     (nil))
(code_label 19 18 20 6 81 (nil) [2 uses])
(note 20 19 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 38 20 39 6 (set (pc)
        (label_ref 25)) "drivers/chr_drv/console.c":391:8 807 {jump}
     (nil)
 -> 25)
(barrier 39 38 30)
(code_label 30 39 23 7 83 (nil) [1 uses])
(note 23 30 24 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn 24 23 25 7 (call (mem:QI (symbol_ref:SI ("delete_char") [flags 0x3]  <function_decl 0x71960af5fc00 delete_char>) [0 delete_char S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":392:3 812 {*call}
     (nil)
    (nil))
(code_label 25 24 26 8 82 (nil) [1 uses])
(note 26 25 27 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 8 (set (reg:SI 0 ax [orig:84 nr.165_2 ] [84])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [4 nr+0 S4 A32])) "drivers/chr_drv/console.c":391:11 75 {*movsi_internal}
     (nil))
(insn 28 27 29 8 (parallel [
            (set (reg:SI 1 dx [86])
                (plus:SI (reg:SI 0 ax [orig:84 nr.165_2 ] [84])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":391:11 209 {*addsi_1}
     (nil))
(insn 29 28 31 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [4 nr+0 S4 A32])
        (reg:SI 1 dx [86])) "drivers/chr_drv/console.c":391:11 75 {*movsi_internal}
     (nil))
(insn 31 29 32 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 nr.165_2 ] [84])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":391:9 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 32 31 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "drivers/chr_drv/console.c":391:9 806 {*jcc}
     (nil)
 -> 30)
(note 40 32 41 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 33 10 (const_int 0 [0]) "drivers/chr_drv/console.c":393:1 843 {nop}
     (nil))
(note 33 41 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 42 33 43 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 45 11 (const_int 0 [0]) "drivers/chr_drv/console.c":393:1 843 {nop}
     (nil))
(note 45 43 0 NOTE_INSN_DELETED)

;; Function csi_m (csi_m, funcdef_no=23, decl_uid=1507, cgraph_uid=24, symbol_order=48)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) rBw {*tablejump_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 24:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 29:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 34:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 39:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 44:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 47:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) rm  (1) re {*cmpsi_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9 13
EBB 10
EBB 11 14 12 15

********** Pseudo live ranges #1: **********

  BB 15
   Insn 74: point = 0, n_alt = -1
  BB 12
  BB 14
   Insn 72: point = 0, n_alt = -1
  BB 11
   Insn 54: point = 0, n_alt = -1
   Insn 53: point = 0, n_alt = 0
   Insn 51: point = 1, n_alt = 0
   Insn 50: point = 2, n_alt = 0
  BB 2
   Insn 59: point = 4, n_alt = -1
   Insn 5: point = 4, n_alt = 1
   Insn 75: point = 4, n_alt = 0
  BB 10
   Insn 47: point = 5, n_alt = 0
  BB 8
   Insn 67: point = 6, n_alt = -1
   Insn 39: point = 6, n_alt = 8
  BB 13
   Insn 70: point = 7, n_alt = -1
  BB 9
   Insn 44: point = 8, n_alt = 8
  BB 7
   Insn 65: point = 9, n_alt = -1
   Insn 34: point = 9, n_alt = 8
  BB 6
   Insn 63: point = 10, n_alt = -1
   Insn 29: point = 10, n_alt = 8
  BB 5
   Insn 61: point = 11, n_alt = -1
   Insn 24: point = 11, n_alt = 8
  BB 4
   Insn 18: point = 12, n_alt = 0
   Insn 17: point = 13, n_alt = 0
   Insn 16: point = 15, n_alt = 0
   Insn 15: point = 17, n_alt = 0
  BB 3
   Insn 14: point = 20, n_alt = -1
   Insn 13: point = 20, n_alt = 0
   Insn 10: point = 20, n_alt = 0
   Insn 9: point = 22, n_alt = 0
 r82: [0..23]
 r83: [18..20]
 r84: [0..2]
 r85: [0..1]
 r86: [21..22]
 r87: [16..17]
 r88: [14..15]
 r89: [12..13]
Compressing live ranges: from 24 to 12 - 50%
Ranges after the compression:
 r82: [0..11]
 r83: [8..9]
 r84: [0..1]
 r85: [0..1]
 r86: [10..11]
 r87: [6..7]
 r88: [4..5]
 r89: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 75
changing reg in insn 51
changing reg in insn 44
changing reg in insn 39
changing reg in insn 34
changing reg in insn 29
changing reg in insn 24
changing reg in insn 17
changing reg in insn 16
changing reg in insn 10
changing reg in insn 10
changing reg in insn 15
changing reg in insn 13
changing reg in insn 50
changing reg in insn 53
changing reg in insn 51
changing reg in insn 53
changing reg in insn 9
changing reg in insn 10
changing reg in insn 15
changing reg in insn 16
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
starting the processing of deferred insns
ending the processing of deferred insns


csi_m

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={2d,9u} r1={7d,7u} r2={2d,1u} r7={1d,20u} r17={6d,2u} 
;;    total ref usage 57{18d,39u,0e} in 28{28 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 75 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 75 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 75 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 59 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [4 i+0 S4 A32])
        (const_int 0 [0])) "drivers/chr_drv/console.c":399:9 75 {*movsi_internal}
     (nil))
(jump_insn 59 5 60 2 (set (pc)
        (label_ref 48)) "drivers/chr_drv/console.c":399:2 807 {jump}
     (nil)
 -> 48)
(barrier 60 59 52)
(code_label 52 60 8 3 93 (nil) [1 uses])
(note 8 52 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:SI 1 dx [86])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [4 i+0 S4 A32])) "drivers/chr_drv/console.c":400:14 75 {*movsi_internal}
     (nil))
(insn 10 9 13 3 (set (reg:SI 1 dx [orig:83 _1 ] [83])
        (mem:SI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [86])
                        (const_int 4 [0x4]))
                    (reg:SI 0 ax [82]))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[i_4]+0 S4 A32])) "drivers/chr_drv/console.c":400:14 75 {*movsi_internal}
     (nil))
(insn 13 10 14 3 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:83 _1 ] [83])
            (const_int 27 [0x1b]))) "drivers/chr_drv/console.c":400:3 11 {*cmpsi_1}
     (nil))
(jump_insn 14 13 58 3 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "drivers/chr_drv/console.c":400:3 806 {*jcc}
     (nil)
 -> 45)
(note 58 14 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 58 16 4 (parallel [
            (set (reg:SI 1 dx [87])
                (ashift:SI (reg:SI 1 dx [orig:83 _1 ] [83])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":400:3 655 {*ashlsi3_1}
     (nil))
(insn 16 15 17 4 (set (reg:SI 1 dx [88])
        (mem/u/c:SI (plus:SI (plus:SI (reg:SI 1 dx [87])
                    (reg:SI 0 ax [82]))
                (const:SI (unspec:SI [
                            (label_ref:SI 19)
                        ] UNSPEC_GOTOFF))) [0  S4 A8])) "drivers/chr_drv/console.c":400:3 75 {*movsi_internal}
     (insn_list:REG_LABEL_OPERAND 19 (nil)))
(insn 17 16 18 4 (parallel [
            (set (reg:SI 1 dx [89])
                (plus:SI (reg:SI 1 dx [88])
                    (reg:SI 0 ax [82])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":400:3 209 {*addsi_1}
     (nil))
(jump_insn 18 17 19 4 (parallel [
            (set (pc)
                (reg:SI 1 dx [89]))
            (use (label_ref 19))
        ]) "drivers/chr_drv/console.c":400:3 810 {*tablejump_1}
     (nil)
 -> 19)
(code_label 19 18 20 88 (nil) [2 uses])
(jump_table_data 20 19 21 (addr_diff_vec:SI (label_ref:SI 19)
         [
            (label_ref:SI 22)
            (label_ref:SI 27)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 32)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 37)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 45)
            (label_ref:SI 42)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 21 20 22)
(code_label 22 21 23 5 92 (nil) [1 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 61 5 (set (mem/c:QI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("attr") [flags 0x2]  <var_decl 0x71960af55240 attr>)
                        ] UNSPEC_GOTOFF))) [0 attr+0 S1 A8])
        (const_int 7 [0x7])) "drivers/chr_drv/console.c":402:9 77 {*movqi_internal}
     (nil))
(jump_insn 61 24 62 5 (set (pc)
        (label_ref 45)) "drivers/chr_drv/console.c":403:4 807 {jump}
     (nil)
 -> 45)
(barrier 62 61 27)
(code_label 27 62 28 6 91 (nil) [1 uses])
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 63 6 (set (mem/c:QI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("attr") [flags 0x2]  <var_decl 0x71960af55240 attr>)
                        ] UNSPEC_GOTOFF))) [0 attr+0 S1 A8])
        (const_int 15 [0xf])) "drivers/chr_drv/console.c":405:9 77 {*movqi_internal}
     (nil))
(jump_insn 63 29 64 6 (set (pc)
        (label_ref 45)) "drivers/chr_drv/console.c":406:4 807 {jump}
     (nil)
 -> 45)
(barrier 64 63 32)
(code_label 32 64 33 7 90 (nil) [1 uses])
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 65 7 (set (mem/c:QI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("attr") [flags 0x2]  <var_decl 0x71960af55240 attr>)
                        ] UNSPEC_GOTOFF))) [0 attr+0 S1 A8])
        (const_int 15 [0xf])) "drivers/chr_drv/console.c":408:9 77 {*movqi_internal}
     (nil))
(jump_insn 65 34 66 7 (set (pc)
        (label_ref 45)) "drivers/chr_drv/console.c":409:4 807 {jump}
     (nil)
 -> 45)
(barrier 66 65 37)
(code_label 37 66 38 8 89 (nil) [1 uses])
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 67 8 (set (mem/c:QI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("attr") [flags 0x2]  <var_decl 0x71960af55240 attr>)
                        ] UNSPEC_GOTOFF))) [0 attr+0 S1 A8])
        (const_int 112 [0x70])) "drivers/chr_drv/console.c":411:9 77 {*movqi_internal}
     (nil))
(jump_insn 67 39 68 8 (set (pc)
        (label_ref 45)) "drivers/chr_drv/console.c":412:4 807 {jump}
     (nil)
 -> 45)
(barrier 68 67 42)
(code_label 42 68 43 9 87 (nil) [1 uses])
(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 69 9 (set (mem/c:QI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("attr") [flags 0x2]  <var_decl 0x71960af55240 attr>)
                        ] UNSPEC_GOTOFF))) [0 attr+0 S1 A8])
        (const_int 7 [0x7])) "drivers/chr_drv/console.c":414:9 77 {*movqi_internal}
     (nil))
(note 69 44 70 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 45 13 (const_int 0 [0]) "drivers/chr_drv/console.c":415:4 843 {nop}
     (nil))
(code_label 45 70 46 10 86 (nil) [28 uses])
(note 46 45 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 10 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [4 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [4 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":399:26 209 {*addsi_1}
     (nil))
(code_label 48 47 49 11 85 (nil) [1 uses])
(note 49 48 50 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 11 (set (reg:SI 2 cx [orig:84 i.166_2 ] [84])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [4 i+0 S4 A32])) "drivers/chr_drv/console.c":399:16 75 {*movsi_internal}
     (nil))
(insn 51 50 53 11 (set (reg:SI 1 dx [orig:85 npar.167_3 ] [85])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("npar") [flags 0x2]  <var_decl 0x71960af55090 npar>)
                        ] UNSPEC_GOTOFF))) [3 npar+0 S4 A32])) "drivers/chr_drv/console.c":399:16 75 {*movsi_internal}
     (nil))
(insn 53 51 54 11 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [orig:84 i.166_2 ] [84])
            (reg:SI 1 dx [orig:85 npar.167_3 ] [85]))) "drivers/chr_drv/console.c":399:16 11 {*cmpsi_1}
     (nil))
(jump_insn 54 53 71 11 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) "drivers/chr_drv/console.c":399:16 806 {*jcc}
     (nil)
 -> 52)
(note 71 54 72 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 55 14 (const_int 0 [0]) "drivers/chr_drv/console.c":417:1 843 {nop}
     (nil))
(note 55 72 73 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(note 73 55 74 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 76 15 (const_int 0 [0]) "drivers/chr_drv/console.c":417:1 843 {nop}
     (nil))
(note 76 74 0 NOTE_INSN_DELETED)

;; Function con_write (con_write, funcdef_no=24, decl_uid=1349, cgraph_uid=25, symbol_order=49)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 757:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 9:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=258 from oldreg=83, assigning class GENERAL_REGS to r258
    9: {r258:SI=r258:SI-r84:SI;clobber flags:CC;}
      REG_DEAD r84:SI
      REG_DEAD r83:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  759: r258:SI=r83:SI
    Inserting insn reload after:
  760: r85:SI=r258:SI

          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*andsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 19:  (0) q  (1) m {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 20:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 23:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            alt=2: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 24:  (0) =rm  (1) %0  (2) re {*andsi_1}
      Creating newreg=259 from oldreg=89, assigning class GENERAL_REGS to r259
   24: {r259:SI=r259:SI&0x3ff;clobber flags:CC;}
      REG_DEAD r89:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  761: r259:SI=r89:SI
    Inserting insn reload after:
  762: r90:SI=r259:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) rBw {*tablejump_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =rm  (1) 0  (2) re {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =rm  (1) 0  (2) re {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 69:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) a  (1) m
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 72:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 73:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 75:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) qm  (1) qn {*cmpqi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 84:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 114:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 132:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 133:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 135:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 136:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =Q  (1) Q {*movqi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            alt=3: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 146:  (0) =qm  (1) %0  (2) qn {*andqi_1}
      Creating newreg=260 from oldreg=115, assigning class Q_REGS to r260
  146: {r260:QI=r260:QI&0x7;clobber flags:CC;}
      REG_DEAD r115:QI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  763: r260:QI=r115:QI
    Inserting insn reload after:
  764: r116:QI=r260:QI

            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 147:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) =qm  (1) 0  (2) qn {*subqi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 149:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 152
	 Choosing alt 0 in insn 152:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 153:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 158
	 Choosing alt 0 in insn 158:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 159:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =rm  (1) 0  (2) re {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 168:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =rm  (1) 0  (2) re {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 172:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) lBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 176:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (0) lBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 191:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) qm  (1) qn {*cmpqi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 195:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 204:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 205:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 209:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 222:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 233:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 234:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 236:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 241:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 242:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 245:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 250:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 251:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 254:  (0) lBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 261:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 265:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 266:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 267:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 268:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 269:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 272:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 276:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 279:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 280:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 281:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 282:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 283:  (0) =r  (1) qm {*zero_extendqisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 284:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 285:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 286:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 293:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 296:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 299:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 302:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 303:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 304:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 311:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 316:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 319:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 320:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 322:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 324:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 327:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 328:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 329:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 330:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 331:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 336:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 339:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 340:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 341:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 344:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 346:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 347:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 348:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 349:  (0) rBw {*tablejump_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 355:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 356:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 359:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 360:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 361:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 364:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 365:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 366:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 367:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 368:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 369:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 370:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 375:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 376:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 379:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 380:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 381:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 384:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 385:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 386:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=261 from oldreg=164, assigning class GENERAL_REGS to r261
  386: {r261:SI=r261:SI-r165:SI;clobber flags:CC;}
      REG_DEAD r165:SI
      REG_DEAD r164:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  765: r261:SI=r164:SI
    Inserting insn reload after:
  766: r166:SI=r261:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 387:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 388:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 389:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 390:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 391:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 392:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 397:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 398:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 401:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 402:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 403:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 406:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 407:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 408:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 409:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 410:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 411:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 412:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 413:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 414:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 419:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 420:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 423:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 424:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 425:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 428:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 429:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 430:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 431
	 Choosing alt 0 in insn 431:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 432:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 433:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 434:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 435:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 436:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 441:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 442:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 445:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 446:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 447:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 450:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 451:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 452:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 453:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 454:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 455:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 456:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 457:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 458:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 463:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 464:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 467:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 468:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 469:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 472:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 473:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 474
	 Choosing alt 0 in insn 474:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 475:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 476:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 477:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 478:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 479:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 484:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 485:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 488:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 489:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 490:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 493:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 494:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 495:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 496:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 497:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 498:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 499:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 500:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 505:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 506:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 509:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 510:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 511:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 514:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 515:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 516:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 517:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 518:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 519:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 520:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 525:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 526:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 529:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 530:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 531:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 534:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 535:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 538:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 539:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 540:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 543:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 544:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 545:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 546:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 547:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 548:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 549:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 554:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 556:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 557:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 558:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 559:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 564:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 566:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 567:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 568:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 569:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 574:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 575:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 576:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 577:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 578:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 583:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 584:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 585:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 586:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 587:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 592:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 593:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 594:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 595:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 596:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 601:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 602:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 603:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 604:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 605:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 610:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 615:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 616:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 619:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 620:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 621:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 624:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 625:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 628:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 629:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 632:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 633:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 634:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 637:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 638:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 639:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 642:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 643:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 644:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 645:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 652:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 657:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 664:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 665:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 666:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 668:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 671:  (0) lBwBz {*call}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 6 7 8
EBB 9
EBB 10 11
EBB 12 13 14
EBB 15
EBB 16 17
EBB 18 19
EBB 20 21 22
EBB 23 24 25
EBB 26
EBB 27 28
EBB 29
EBB 30 31
EBB 32 33
EBB 34 35
EBB 36 37
EBB 38 39
EBB 40 41
EBB 42 43
EBB 44
EBB 45
EBB 46
EBB 47 48 49
EBB 50 51 52
EBB 53 54 55
EBB 56
EBB 57 58
EBB 59 60
EBB 61
EBB 62 63
EBB 64
EBB 65 66
EBB 67
EBB 68 69
EBB 70
EBB 71 72
EBB 73
EBB 74 75
EBB 76
EBB 77 78
EBB 79
EBB 80 81
EBB 82
EBB 83 84
EBB 85 86
EBB 87
EBB 88
EBB 89
EBB 90
EBB 91
EBB 92
EBB 93
EBB 94
EBB 95 96
EBB 97 98
EBB 99 100 101
EBB 102
EBB 103
EBB 104 107
EBB 105 106 108

********** Pseudo live ranges #1: **********

  BB 108
   Insn 756: point = 0, n_alt = -1
  BB 106
   Insn 671: point = 0, n_alt = 0
  BB 105
   Insn 669: point = 0, n_alt = -1
   Insn 668: point = 0, n_alt = 0
   Insn 666: point = 1, n_alt = 1
   Insn 665: point = 2, n_alt = 3
   Insn 664: point = 3, n_alt = 0
  BB 103
   Insn 751: point = 5, n_alt = -1
   Insn 652: point = 5, n_alt = 0
  BB 49
   Insn 711: point = 6, n_alt = -1
  BB 52
   Insn 713: point = 7, n_alt = -1
   Insn 304: point = 7, n_alt = 1
   Insn 303: point = 8, n_alt = 0
   Insn 302: point = 10, n_alt = 0
  BB 29
   Insn 693: point = 12, n_alt = -1
  BB 26
   Insn 691: point = 13, n_alt = -1
   Insn 176: point = 13, n_alt = 8
  BB 25
   Insn 173: point = 14, n_alt = 0
   Insn 172: point = 14, n_alt = 1
   Insn 171: point = 15, n_alt = 0
   Insn 170: point = 17, n_alt = 0
   Insn 169: point = 18, n_alt = 0
   Insn 168: point = 19, n_alt = 1
   Insn 167: point = 20, n_alt = 0
   Insn 166: point = 22, n_alt = 0
   Insn 165: point = 23, n_alt = 0
  BB 24
   Insn 163: point = 25, n_alt = -1
   Insn 162: point = 25, n_alt = 0
   Insn 161: point = 26, n_alt = 0
   Insn 160: point = 27, n_alt = 0
   Insn 159: point = 28, n_alt = 1
   Insn 158: point = 29, n_alt = 0
   Insn 157: point = 31, n_alt = 0
   Insn 156: point = 32, n_alt = -2
   Insn 155: point = 34, n_alt = 0
   Insn 154: point = 36, n_alt = 0
   Insn 153: point = 37, n_alt = 1
   Insn 152: point = 38, n_alt = 0
   Insn 151: point = 40, n_alt = 0
   Insn 150: point = 41, n_alt = 0
   Insn 149: point = 42, n_alt = 8
   Insn 148: point = 43, n_alt = 0
   Insn 147: point = 45, n_alt = 3
   Insn 764: point = 46, n_alt = -2
	Hard reg 1 is preferable by r260 with profit 1000
   Insn 146: point = 48, n_alt = 0
   Insn 763: point = 49, n_alt = -2
	Hard reg 1 is preferable by r260 with profit 1000
	Hard reg 0 is preferable by r260 with profit 1000
   Insn 145: point = 51, n_alt = 0
   Insn 144: point = 53, n_alt = 0
  BB 28
   Insn 184: point = 55, n_alt = 0
  BB 27
   Insn 182: point = 56, n_alt = -1
   Insn 181: point = 56, n_alt = 0
  BB 23
   Insn 142: point = 57, n_alt = -1
   Insn 141: point = 57, n_alt = 0
  BB 22
   Insn 689: point = 58, n_alt = -1
   Insn 136: point = 58, n_alt = 1
   Insn 135: point = 59, n_alt = 0
   Insn 134: point = 61, n_alt = 0
   Insn 133: point = 62, n_alt = 1
   Insn 132: point = 63, n_alt = 0
   Insn 131: point = 65, n_alt = 0
  BB 19
   Insn 687: point = 67, n_alt = -1
   Insn 119: point = 67, n_alt = 0
  BB 17
   Insn 685: point = 68, n_alt = -1
   Insn 107: point = 68, n_alt = 0
  BB 15
   Insn 683: point = 69, n_alt = -1
   Insn 99: point = 69, n_alt = 0
  BB 11
   Insn 681: point = 70, n_alt = -1
   Insn 84: point = 70, n_alt = 1
  BB 9
   Insn 679: point = 71, n_alt = -1
   Insn 76: point = 71, n_alt = 1
   Insn 75: point = 72, n_alt = 0
   Insn 74: point = 74, n_alt = 0
   Insn 73: point = 75, n_alt = 1
   Insn 72: point = 76, n_alt = 0
   Insn 71: point = 78, n_alt = 0
   Insn 70: point = 79, n_alt = 0
   Insn 69: point = 80, n_alt = 4
   Insn 68: point = 81, n_alt = -2
   Insn 67: point = 83, n_alt = 0
  BB 8
   Insn 64: point = 85, n_alt = 0
   Insn 63: point = 85, n_alt = 1
   Insn 62: point = 86, n_alt = 0
   Insn 61: point = 88, n_alt = 0
   Insn 60: point = 89, n_alt = 0
   Insn 59: point = 90, n_alt = 1
   Insn 58: point = 91, n_alt = 0
   Insn 57: point = 93, n_alt = 0
   Insn 56: point = 94, n_alt = 0
  BB 7
   Insn 54: point = 96, n_alt = -1
   Insn 53: point = 96, n_alt = 0
   Insn 52: point = 97, n_alt = 0
   Insn 51: point = 98, n_alt = 0
  BB 21
   Insn 129: point = 100, n_alt = -1
   Insn 128: point = 100, n_alt = 0
   Insn 127: point = 101, n_alt = 0
  BB 20
   Insn 125: point = 103, n_alt = -1
   Insn 124: point = 103, n_alt = 0
  BB 18
   Insn 117: point = 104, n_alt = -1
   Insn 116: point = 104, n_alt = 0
   Insn 115: point = 105, n_alt = 0
   Insn 114: point = 107, n_alt = 4
   Insn 113: point = 109, n_alt = 0
   Insn 112: point = 110, n_alt = 0
  BB 16
   Insn 105: point = 112, n_alt = -1
   Insn 104: point = 112, n_alt = 0
  BB 14
   Insn 96: point = 113, n_alt = -1
   Insn 95: point = 113, n_alt = 0
  BB 13
   Insn 93: point = 114, n_alt = -1
   Insn 92: point = 114, n_alt = 0
  BB 12
   Insn 90: point = 115, n_alt = -1
   Insn 89: point = 115, n_alt = 0
  BB 10
   Insn 82: point = 116, n_alt = -1
   Insn 81: point = 116, n_alt = 0
  BB 6
   Insn 49: point = 117, n_alt = -1
   Insn 48: point = 117, n_alt = 0
  BB 5
   Insn 46: point = 118, n_alt = -1
   Insn 45: point = 118, n_alt = 0
  BB 55
   Insn 715: point = 119, n_alt = -1
   Insn 331: point = 119, n_alt = 1
   Insn 330: point = 120, n_alt = 0
   Insn 329: point = 122, n_alt = 0
   Insn 328: point = 123, n_alt = 0
   Insn 327: point = 125, n_alt = 0
   Insn 326: point = 126, n_alt = -2
   Insn 325: point = 128, n_alt = -2
   Insn 324: point = 130, n_alt = 0
   Insn 323: point = 132, n_alt = 0
   Insn 322: point = 134, n_alt = 0
   Insn 321: point = 135, n_alt = -2
   Insn 320: point = 136, n_alt = 0
   Insn 319: point = 138, n_alt = 0
  BB 61
   Insn 717: point = 140, n_alt = -1
   Insn 370: point = 140, n_alt = 0
   Insn 369: point = 140, n_alt = 0
   Insn 368: point = 140, n_alt = 0
   Insn 367: point = 141, n_alt = 0
   Insn 366: point = 142, n_alt = 0
   Insn 365: point = 142, n_alt = 0
   Insn 364: point = 143, n_alt = 0
  BB 60
   Insn 361: point = 145, n_alt = 1
   Insn 360: point = 146, n_alt = 0
   Insn 359: point = 148, n_alt = 0
  BB 59
   Insn 357: point = 150, n_alt = -1
   Insn 356: point = 150, n_alt = 0
   Insn 355: point = 151, n_alt = 0
  BB 64
   Insn 719: point = 153, n_alt = -1
   Insn 392: point = 153, n_alt = 0
   Insn 391: point = 153, n_alt = 0
   Insn 390: point = 153, n_alt = 0
   Insn 389: point = 154, n_alt = 0
   Insn 388: point = 155, n_alt = 0
   Insn 387: point = 155, n_alt = 0
   Insn 766: point = 156, n_alt = -2
	Hard reg 1 is preferable by r261 with profit 1000
   Insn 386: point = 158, n_alt = 0
   Insn 765: point = 160, n_alt = -2
	Hard reg 1 is preferable by r261 with profit 1000
	Hard reg 0 is preferable by r261 with profit 1000
   Insn 385: point = 162, n_alt = 0
   Insn 384: point = 163, n_alt = 0
  BB 63
   Insn 381: point = 165, n_alt = 1
   Insn 380: point = 166, n_alt = 0
   Insn 379: point = 168, n_alt = 0
  BB 62
   Insn 377: point = 170, n_alt = -1
   Insn 376: point = 170, n_alt = 0
   Insn 375: point = 171, n_alt = 0
  BB 67
   Insn 721: point = 173, n_alt = -1
   Insn 414: point = 173, n_alt = 0
   Insn 413: point = 173, n_alt = 0
   Insn 412: point = 173, n_alt = 0
   Insn 411: point = 174, n_alt = 0
   Insn 410: point = 175, n_alt = 0
   Insn 409: point = 175, n_alt = 0
   Insn 408: point = 176, n_alt = 0
   Insn 407: point = 178, n_alt = 0
   Insn 406: point = 179, n_alt = 0
  BB 66
   Insn 403: point = 181, n_alt = 1
   Insn 402: point = 182, n_alt = 0
   Insn 401: point = 184, n_alt = 0
  BB 65
   Insn 399: point = 186, n_alt = -1
   Insn 398: point = 186, n_alt = 0
   Insn 397: point = 187, n_alt = 0
  BB 70
   Insn 723: point = 189, n_alt = -1
   Insn 436: point = 189, n_alt = 0
   Insn 435: point = 189, n_alt = 0
   Insn 434: point = 189, n_alt = 0
   Insn 433: point = 190, n_alt = 0
   Insn 432: point = 191, n_alt = 0
   Insn 431: point = 191, n_alt = 0
   Insn 430: point = 193, n_alt = 0
   Insn 429: point = 194, n_alt = 0
   Insn 428: point = 195, n_alt = 0
  BB 69
   Insn 425: point = 197, n_alt = 1
   Insn 424: point = 198, n_alt = 0
   Insn 423: point = 200, n_alt = 0
  BB 68
   Insn 421: point = 202, n_alt = -1
   Insn 420: point = 202, n_alt = 0
   Insn 419: point = 203, n_alt = 0
  BB 73
   Insn 725: point = 205, n_alt = -1
   Insn 458: point = 205, n_alt = 0
   Insn 457: point = 205, n_alt = 0
   Insn 456: point = 205, n_alt = 0
   Insn 455: point = 206, n_alt = 0
   Insn 454: point = 207, n_alt = 0
   Insn 453: point = 207, n_alt = 0
   Insn 452: point = 209, n_alt = 0
   Insn 451: point = 210, n_alt = 0
   Insn 450: point = 211, n_alt = 0
  BB 72
   Insn 447: point = 213, n_alt = 1
   Insn 446: point = 214, n_alt = 0
   Insn 445: point = 216, n_alt = 0
  BB 71
   Insn 443: point = 218, n_alt = -1
   Insn 442: point = 218, n_alt = 0
   Insn 441: point = 219, n_alt = 0
  BB 76
   Insn 727: point = 221, n_alt = -1
   Insn 479: point = 221, n_alt = 0
   Insn 478: point = 221, n_alt = 0
   Insn 477: point = 221, n_alt = 0
   Insn 476: point = 221, n_alt = 0
   Insn 475: point = 222, n_alt = 0
   Insn 474: point = 222, n_alt = 0
   Insn 473: point = 224, n_alt = 0
   Insn 472: point = 225, n_alt = 0
  BB 75
   Insn 469: point = 227, n_alt = 1
   Insn 468: point = 228, n_alt = 0
   Insn 467: point = 230, n_alt = 0
  BB 74
   Insn 465: point = 232, n_alt = -1
   Insn 464: point = 232, n_alt = 0
   Insn 463: point = 233, n_alt = 0
  BB 79
   Insn 729: point = 235, n_alt = -1
   Insn 500: point = 235, n_alt = 0
   Insn 499: point = 235, n_alt = 0
   Insn 498: point = 235, n_alt = 0
   Insn 497: point = 235, n_alt = 0
   Insn 496: point = 236, n_alt = 0
   Insn 495: point = 236, n_alt = 0
   Insn 494: point = 238, n_alt = 0
   Insn 493: point = 239, n_alt = 0
  BB 78
   Insn 490: point = 241, n_alt = 1
   Insn 489: point = 242, n_alt = 0
   Insn 488: point = 244, n_alt = 0
  BB 77
   Insn 486: point = 246, n_alt = -1
   Insn 485: point = 246, n_alt = 0
   Insn 484: point = 247, n_alt = 0
  BB 82
   Insn 731: point = 249, n_alt = -1
   Insn 520: point = 249, n_alt = 0
   Insn 519: point = 249, n_alt = 0
   Insn 518: point = 249, n_alt = 0
   Insn 517: point = 250, n_alt = 0
   Insn 516: point = 251, n_alt = 0
   Insn 515: point = 251, n_alt = 0
   Insn 514: point = 252, n_alt = 0
  BB 81
   Insn 511: point = 254, n_alt = 1
   Insn 510: point = 255, n_alt = 0
   Insn 509: point = 257, n_alt = 0
  BB 80
   Insn 507: point = 259, n_alt = -1
   Insn 506: point = 259, n_alt = 0
   Insn 505: point = 260, n_alt = 0
  BB 87
   Insn 733: point = 262, n_alt = -1
   Insn 549: point = 262, n_alt = 0
   Insn 548: point = 262, n_alt = 0
   Insn 547: point = 262, n_alt = 0
   Insn 546: point = 263, n_alt = 0
   Insn 545: point = 264, n_alt = 0
   Insn 544: point = 264, n_alt = 0
   Insn 543: point = 265, n_alt = 0
  BB 86
   Insn 540: point = 267, n_alt = 1
   Insn 539: point = 268, n_alt = 0
   Insn 538: point = 270, n_alt = 0
  BB 85
   Insn 536: point = 272, n_alt = -1
   Insn 535: point = 272, n_alt = 0
   Insn 534: point = 273, n_alt = 0
  BB 84
   Insn 531: point = 275, n_alt = 1
   Insn 530: point = 276, n_alt = 0
   Insn 529: point = 278, n_alt = 0
  BB 83
   Insn 527: point = 280, n_alt = -1
   Insn 526: point = 280, n_alt = 0
   Insn 525: point = 281, n_alt = 0
  BB 88
   Insn 735: point = 283, n_alt = -1
   Insn 559: point = 283, n_alt = 0
   Insn 558: point = 283, n_alt = 0
   Insn 557: point = 283, n_alt = 0
   Insn 556: point = 284, n_alt = 0
   Insn 555: point = 284, n_alt = -2
   Insn 554: point = 286, n_alt = 0
  BB 89
   Insn 737: point = 288, n_alt = -1
   Insn 569: point = 288, n_alt = 0
   Insn 568: point = 288, n_alt = 0
   Insn 567: point = 288, n_alt = 0
   Insn 566: point = 289, n_alt = 0
   Insn 565: point = 289, n_alt = -2
   Insn 564: point = 291, n_alt = 0
  BB 90
   Insn 739: point = 293, n_alt = -1
   Insn 578: point = 293, n_alt = 0
   Insn 577: point = 293, n_alt = 0
   Insn 576: point = 293, n_alt = 0
   Insn 575: point = 294, n_alt = 0
   Insn 574: point = 294, n_alt = 0
  BB 91
   Insn 741: point = 296, n_alt = -1
   Insn 587: point = 296, n_alt = 0
   Insn 586: point = 296, n_alt = 0
   Insn 585: point = 296, n_alt = 0
   Insn 584: point = 297, n_alt = 0
   Insn 583: point = 297, n_alt = 0
  BB 92
   Insn 743: point = 299, n_alt = -1
   Insn 596: point = 299, n_alt = 0
   Insn 595: point = 299, n_alt = 0
   Insn 594: point = 299, n_alt = 0
   Insn 593: point = 300, n_alt = 0
   Insn 592: point = 300, n_alt = 0
  BB 93
   Insn 745: point = 302, n_alt = -1
   Insn 605: point = 302, n_alt = 0
   Insn 604: point = 302, n_alt = 0
   Insn 603: point = 302, n_alt = 0
   Insn 602: point = 303, n_alt = 0
   Insn 601: point = 303, n_alt = 0
  BB 94
   Insn 747: point = 305, n_alt = -1
   Insn 610: point = 305, n_alt = 0
  BB 102
   Insn 749: point = 306, n_alt = -1
  BB 101
   Insn 645: point = 307, n_alt = 1
   Insn 644: point = 308, n_alt = 0
   Insn 643: point = 309, n_alt = 1
   Insn 642: point = 310, n_alt = 0
  BB 100
   Insn 640: point = 312, n_alt = -1
   Insn 639: point = 312, n_alt = 0
   Insn 638: point = 313, n_alt = 0
   Insn 637: point = 314, n_alt = 0
  BB 99
   Insn 635: point = 316, n_alt = -1
   Insn 634: point = 316, n_alt = 0
   Insn 633: point = 317, n_alt = 0
   Insn 632: point = 318, n_alt = 0
  BB 98
   Insn 629: point = 320, n_alt = 1
   Insn 628: point = 321, n_alt = 0
  BB 97
   Insn 626: point = 323, n_alt = -1
   Insn 625: point = 323, n_alt = 0
   Insn 624: point = 324, n_alt = 0
  BB 96
   Insn 621: point = 326, n_alt = 1
   Insn 620: point = 327, n_alt = 0
   Insn 619: point = 329, n_alt = 0
  BB 95
   Insn 617: point = 331, n_alt = -1
   Insn 616: point = 331, n_alt = 0
   Insn 615: point = 332, n_alt = 0
  BB 107
   Insn 754: point = 334, n_alt = -1
  BB 104
   Insn 657: point = 335, n_alt = 0
  BB 44
   Insn 707: point = 336, n_alt = -1
  BB 41
   Insn 705: point = 337, n_alt = -1
   Insn 245: point = 337, n_alt = 0
  BB 39
   Insn 703: point = 338, n_alt = -1
   Insn 236: point = 338, n_alt = 0
   Insn 235: point = 338, n_alt = 0
   Insn 234: point = 338, n_alt = 0
   Insn 233: point = 338, n_alt = 0
  BB 37
   Insn 701: point = 339, n_alt = -1
   Insn 225: point = 339, n_alt = 0
  BB 35
   Insn 699: point = 340, n_alt = -1
   Insn 217: point = 340, n_alt = 0
  BB 33
   Insn 697: point = 341, n_alt = -1
   Insn 209: point = 341, n_alt = 0
   Insn 208: point = 341, n_alt = 0
   Insn 207: point = 341, n_alt = 0
   Insn 206: point = 341, n_alt = 0
   Insn 205: point = 342, n_alt = 0
   Insn 204: point = 342, n_alt = 0
   Insn 203: point = 344, n_alt = 0
  BB 31
   Insn 695: point = 346, n_alt = -1
   Insn 195: point = 346, n_alt = 1
  BB 43
   Insn 254: point = 347, n_alt = 0
  BB 42
   Insn 252: point = 348, n_alt = -1
   Insn 251: point = 348, n_alt = 0
   Insn 250: point = 349, n_alt = 0
  BB 40
   Insn 243: point = 351, n_alt = -1
   Insn 242: point = 351, n_alt = 0
   Insn 241: point = 352, n_alt = 0
  BB 38
   Insn 231: point = 354, n_alt = -1
   Insn 230: point = 354, n_alt = 0
  BB 36
   Insn 223: point = 355, n_alt = -1
   Insn 222: point = 355, n_alt = 0
  BB 34
   Insn 215: point = 356, n_alt = -1
   Insn 214: point = 356, n_alt = 0
  BB 32
   Insn 201: point = 357, n_alt = -1
   Insn 200: point = 357, n_alt = 0
  BB 30
   Insn 193: point = 358, n_alt = -1
   Insn 192: point = 358, n_alt = 0
   Insn 191: point = 358, n_alt = 1
  BB 58
   Insn 349: point = 359, n_alt = 0
   Insn 348: point = 360, n_alt = 0
   Insn 347: point = 362, n_alt = 0
   Insn 346: point = 364, n_alt = 0
  BB 2
   Insn 677: point = 367, n_alt = -1
   Insn 676: point = 367, n_alt = -1
   Insn 12: point = 367, n_alt = 1
   Insn 11: point = 368, n_alt = 0
   Insn 10: point = 370, n_alt = -2
   Insn 760: point = 372, n_alt = -2
	Hard reg 0 is preferable by r258 with profit 1000
   Insn 9: point = 374, n_alt = 0
   Insn 759: point = 376, n_alt = -2
	Hard reg 0 is preferable by r258 with profit 1000
	Hard reg 1 is preferable by r258 with profit 1000
   Insn 8: point = 378, n_alt = 0
   Insn 7: point = 380, n_alt = 0
   Insn 6: point = 381, n_alt = 0
   Insn 5: point = 383, n_alt = 0
   Insn 757: point = 384, n_alt = 0
  BB 57
   Insn 345: point = 385, n_alt = -1
   Insn 344: point = 385, n_alt = 0
   Insn 341: point = 385, n_alt = 0
   Insn 340: point = 387, n_alt = 0
   Insn 339: point = 388, n_alt = 1
  BB 56
   Insn 336: point = 389, n_alt = 1
  BB 54
   Insn 317: point = 390, n_alt = -1
   Insn 316: point = 390, n_alt = 0
  BB 53
   Insn 312: point = 391, n_alt = -1
   Insn 311: point = 391, n_alt = 0
  BB 51
   Insn 300: point = 392, n_alt = -1
   Insn 299: point = 392, n_alt = 0
   Insn 296: point = 393, n_alt = 0
  BB 50
   Insn 294: point = 395, n_alt = -1
   Insn 293: point = 395, n_alt = 0
  BB 48
   Insn 287: point = 396, n_alt = -1
   Insn 286: point = 396, n_alt = 0
   Insn 285: point = 397, n_alt = 0
   Insn 284: point = 398, n_alt = 1
   Insn 283: point = 399, n_alt = 0
   Insn 282: point = 401, n_alt = 0
   Insn 281: point = 402, n_alt = 0
   Insn 280: point = 402, n_alt = 1
   Insn 279: point = 402, n_alt = 1
  BB 47
   Insn 277: point = 403, n_alt = -1
   Insn 276: point = 403, n_alt = 0
   Insn 272: point = 404, n_alt = 0
  BB 45
   Insn 709: point = 406, n_alt = -1
   Insn 261: point = 406, n_alt = 1
  BB 46
   Insn 269: point = 407, n_alt = 1
   Insn 268: point = 408, n_alt = 0
   Insn 267: point = 410, n_alt = 0
   Insn 266: point = 411, n_alt = 1
   Insn 265: point = 412, n_alt = 0
  BB 4
   Insn 37: point = 414, n_alt = 0
   Insn 36: point = 415, n_alt = 0
   Insn 35: point = 417, n_alt = 0
   Insn 34: point = 419, n_alt = 0
  BB 3
   Insn 33: point = 422, n_alt = -1
   Insn 32: point = 422, n_alt = 0
   Insn 29: point = 422, n_alt = 0
   Insn 26: point = 423, n_alt = 1
   Insn 25: point = 424, n_alt = 0
   Insn 762: point = 425, n_alt = -2
	Hard reg 1 is preferable by r259 with profit 1000
   Insn 24: point = 427, n_alt = 0
   Insn 761: point = 428, n_alt = -2
	Hard reg 1 is preferable by r259 with profit 1000
	Hard reg 0 is preferable by r259 with profit 1000
   Insn 23: point = 430, n_alt = 0
   Insn 22: point = 432, n_alt = 0
   Insn 21: point = 434, n_alt = 0
   Insn 20: point = 435, n_alt = 8
   Insn 19: point = 436, n_alt = 4
   Insn 18: point = 438, n_alt = 0
   Insn 17: point = 439, n_alt = 0
   Insn 16: point = 441, n_alt = 0
 r82: [0..442]
 r83: [377..381]
 r84: [375..378]
 r85: [371..372]
 r86: [369..370]
 r87: [437..439]
 r88: [431..432]
 r89: [429..430]
 r90: [423..425]
 r91: [420..422]
 r92: [96..98]
 r93: [96..97]
 r94: [92..94]
 r95: [92..93]
 r96: [90..91]
 r97: [87..89]
 r98: [87..88]
 r99: [85..86]
 r100: [82..83]
 r101: [79..81]
 r102: [77..78]
 r103: [75..76]
 r104: [73..74]
 r105: [71..72]
 r106: [104..110]
 r107: [106..107]
 r108: [104..105]
 r109: [100..101]
 r110: [64..65]
 r111: [62..63]
 r112: [60..61]
 r113: [58..59]
 r114: [52..53]
 r115: [50..51]
 r116: [44..46]
 r117: [42..43]
 r118: [39..41]
 r119: [39..40]
 r120: [37..38]
 r121: [35..36]
 r122: [33..34]
 r123: [30..32]
 r124: [30..31]
 r125: [28..29]
 r126: [25..27]
 r127: [25..26]
 r128: [21..23]
 r129: [21..22]
 r130: [19..20]
 r131: [16..18]
 r132: [16..17]
 r133: [14..15]
 r134: [343..344]
 r135: [341..342]
 r136: [351..352]
 r137: [348..349]
 r138: [411..412]
 r139: [409..410]
 r140: [407..408]
 r141: [403..404]
 r142: [400..401]
 r143: [398..399]
 r144: [396..397]
 r145: [392..393]
 r146: [9..10]
 r147: [7..8]
 r148: [137..138]
 r149: [133..136]
 r150: [124..126]
 r151: [124..125]
 r152: [121..123]
 r153: [119..122]
 r154: [119..120]
 r155: [386..387]
 r156: [150..151]
 r157: [147..148]
 r158: [145..146]
 r159: [141..143]
 r160: [140..142]
 r161: [170..171]
 r162: [167..168]
 r163: [165..166]
 r164: [161..163]
 r165: [159..162]
 r166: [154..156]
 r167: [153..155]
 r168: [186..187]
 r169: [183..184]
 r170: [181..182]
 r171: [177..179]
 r172: [177..178]
 r173: [174..176]
 r174: [173..175]
 r175: [202..203]
 r176: [199..200]
 r177: [197..198]
 r178: [190..195]
 r179: [192..194]
 r180: [192..193]
 r181: [189..191]
 r182: [218..219]
 r183: [215..216]
 r184: [213..214]
 r185: [206..211]
 r186: [208..210]
 r187: [208..209]
 r188: [205..207]
 r189: [232..233]
 r190: [229..230]
 r191: [227..228]
 r192: [223..225]
 r193: [223..224]
 r194: [221..222]
 r195: [246..247]
 r196: [243..244]
 r197: [241..242]
 r198: [237..239]
 r199: [237..238]
 r200: [235..236]
 r201: [259..260]
 r202: [256..257]
 r203: [254..255]
 r204: [250..252]
 r205: [249..251]
 r206: [280..281]
 r207: [277..278]
 r208: [275..276]
 r209: [272..273]
 r210: [269..270]
 r211: [267..268]
 r212: [263..265]
 r213: [262..264]
 r214: [285..286]
 r215: [283..284]
 r216: [290..291]
 r217: [288..289]
 r218: [293..294]
 r219: [296..297]
 r220: [299..300]
 r221: [302..303]
 r222: [331..332]
 r223: [328..329]
 r224: [326..327]
 r225: [323..324]
 r226: [320..321]
 r227: [316..318]
 r228: [316..317]
 r229: [312..314]
 r230: [312..313]
 r231: [309..310]
 r232: [307..308]
 r233: [0..3]
 r235: [382..383]
 r236: [379..380]
 r237: [367..368]
 r238: [440..441]
 r239: [437..438]
 r240: [435..436]
 r241: [433..434]
 r242: [423..424]
 r244: [418..419]
 r245: [416..417]
 r246: [414..415]
 r247: [79..80]
 r248: [108..109]
 r249: [44..45]
 r250: [131..135] [127..128]
 r251: [129..130]
 r252: [385..385] [365..366]
 r253: [363..364]
 r254: [361..362]
 r255: [359..360]
 r256: [1..2]
 r258: [373..376]
 r259: [426..428]
 r260: [47..49]
 r261: [157..160]
Compressing live ranges: from 443 to 289 - 65%
Ranges after the compression:
 r82: [0..288]
 r83: [240..243]
 r84: [238..241]
 r85: [236..237]
 r86: [234..235]
 r87: [285..286]
 r88: [279..280]
 r89: [277..278]
 r90: [273..274]
 r91: [271..272]
 r92: [66..67]
 r93: [66..67]
 r94: [64..65]
 r95: [64..65]
 r96: [62..63]
 r97: [60..61]
 r98: [60..61]
 r99: [58..59]
 r100: [56..57]
 r101: [54..55]
 r102: [52..53]
 r103: [50..51]
 r104: [48..49]
 r105: [46..47]
 r106: [70..75]
 r107: [72..73]
 r108: [70..71]
 r109: [68..69]
 r110: [44..45]
 r111: [42..43]
 r112: [40..41]
 r113: [38..39]
 r114: [36..37]
 r115: [34..35]
 r116: [30..31]
 r117: [28..29]
 r118: [26..27]
 r119: [26..27]
 r120: [24..25]
 r121: [22..23]
 r122: [20..21]
 r123: [18..19]
 r124: [18..19]
 r125: [16..17]
 r126: [14..15]
 r127: [14..15]
 r128: [12..13]
 r129: [12..13]
 r130: [10..11]
 r131: [8..9]
 r132: [8..9]
 r133: [6..7]
 r134: [218..219]
 r135: [216..217]
 r136: [222..223]
 r137: [220..221]
 r138: [263..264]
 r139: [261..262]
 r140: [259..260]
 r141: [257..258]
 r142: [255..256]
 r143: [253..254]
 r144: [251..252]
 r145: [249..250]
 r146: [4..5]
 r147: [2..3]
 r148: [88..89]
 r149: [86..87]
 r150: [80..81]
 r151: [80..81]
 r152: [78..79]
 r153: [76..79]
 r154: [76..77]
 r155: [247..248]
 r156: [96..97]
 r157: [94..95]
 r158: [92..93]
 r159: [90..91]
 r160: [90..91]
 r161: [108..109]
 r162: [106..107]
 r163: [104..105]
 r164: [102..103]
 r165: [100..103]
 r166: [98..99]
 r167: [98..99]
 r168: [118..119]
 r169: [116..117]
 r170: [114..115]
 r171: [112..113]
 r172: [112..113]
 r173: [110..111]
 r174: [110..111]
 r175: [128..129]
 r176: [126..127]
 r177: [124..125]
 r178: [120..123]
 r179: [122..123]
 r180: [122..123]
 r181: [120..121]
 r182: [138..139]
 r183: [136..137]
 r184: [134..135]
 r185: [130..133]
 r186: [132..133]
 r187: [132..133]
 r188: [130..131]
 r189: [148..149]
 r190: [146..147]
 r191: [144..145]
 r192: [142..143]
 r193: [142..143]
 r194: [140..141]
 r195: [158..159]
 r196: [156..157]
 r197: [154..155]
 r198: [152..153]
 r199: [152..153]
 r200: [150..151]
 r201: [166..167]
 r202: [164..165]
 r203: [162..163]
 r204: [160..161]
 r205: [160..161]
 r206: [180..181]
 r207: [178..179]
 r208: [176..177]
 r209: [174..175]
 r210: [172..173]
 r211: [170..171]
 r212: [168..169]
 r213: [168..169]
 r214: [184..185]
 r215: [182..183]
 r216: [188..189]
 r217: [186..187]
 r218: [190..191]
 r219: [192..193]
 r220: [194..195]
 r221: [196..197]
 r222: [214..215]
 r223: [212..213]
 r224: [210..211]
 r225: [208..209]
 r226: [206..207]
 r227: [204..205]
 r228: [204..205]
 r229: [202..203]
 r230: [202..203]
 r231: [200..201]
 r232: [198..199]
 r233: [0..1]
 r235: [244..245]
 r236: [242..243]
 r237: [232..233]
 r238: [287..288]
 r239: [285..286]
 r240: [283..284]
 r241: [281..282]
 r242: [273..274]
 r244: [269..270]
 r245: [267..268]
 r246: [265..266]
 r247: [54..55]
 r248: [74..75]
 r249: [30..31]
 r250: [86..87] [82..83]
 r251: [84..85]
 r252: [246..246] [230..231]
 r253: [228..229]
 r254: [226..227]
 r255: [224..225]
 r256: [0..1]
 r258: [238..239]
 r259: [275..276]
 r260: [32..33]
 r261: [100..101]

********** Assignment #1: **********

	 Assigning to 260 (cl=Q_REGS, orig=115, freq=3000, tfirst=260, tfreq=3000)...
	   Assign 0 to reload r260 (freq=3000)
	 Assigning to 258 (cl=GENERAL_REGS, orig=83, freq=3000, tfirst=258, tfreq=3000)...
	   Assign 0 to reload r258 (freq=3000)
	 Assigning to 259 (cl=GENERAL_REGS, orig=89, freq=3000, tfirst=259, tfreq=3000)...
	   Assign 0 to reload r259 (freq=3000)
	 Assigning to 261 (cl=GENERAL_REGS, orig=164, freq=3000, tfirst=261, tfreq=3000)...
	   Assign 0 to reload r261 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 757
changing reg in insn 645
changing reg in insn 644
changing reg in insn 643
changing reg in insn 642
changing reg in insn 638
changing reg in insn 637
changing reg in insn 633
changing reg in insn 632
changing reg in insn 629
changing reg in insn 628
changing reg in insn 624
changing reg in insn 621
changing reg in insn 619
changing reg in insn 615
changing reg in insn 601
changing reg in insn 592
changing reg in insn 583
changing reg in insn 574
changing reg in insn 564
changing reg in insn 554
changing reg in insn 544
changing reg in insn 543
changing reg in insn 540
changing reg in insn 538
changing reg in insn 534
changing reg in insn 531
changing reg in insn 529
changing reg in insn 525
changing reg in insn 515
changing reg in insn 514
changing reg in insn 511
changing reg in insn 509
changing reg in insn 505
changing reg in insn 494
changing reg in insn 493
changing reg in insn 490
changing reg in insn 488
changing reg in insn 484
changing reg in insn 473
changing reg in insn 472
changing reg in insn 469
changing reg in insn 467
changing reg in insn 463
changing reg in insn 452
changing reg in insn 451
changing reg in insn 450
changing reg in insn 447
changing reg in insn 445
changing reg in insn 441
changing reg in insn 430
changing reg in insn 429
changing reg in insn 428
changing reg in insn 425
changing reg in insn 423
changing reg in insn 419
changing reg in insn 409
changing reg in insn 407
changing reg in insn 406
changing reg in insn 403
changing reg in insn 401
changing reg in insn 397
changing reg in insn 387
changing reg in insn 385
changing reg in insn 384
changing reg in insn 381
changing reg in insn 379
changing reg in insn 375
changing reg in insn 365
changing reg in insn 364
changing reg in insn 361
changing reg in insn 359
changing reg in insn 355
changing reg in insn 348
changing reg in insn 347
changing reg in insn 339
changing reg in insn 336
changing reg in insn 331
changing reg in insn 329
changing reg in insn 320
changing reg in insn 319
changing reg in insn 304
changing reg in insn 302
changing reg in insn 296
changing reg in insn 285
changing reg in insn 284
changing reg in insn 280
changing reg in insn 279
changing reg in insn 272
changing reg in insn 269
changing reg in insn 267
changing reg in insn 266
changing reg in insn 265
changing reg in insn 261
changing reg in insn 250
changing reg in insn 241
changing reg in insn 203
changing reg in insn 195
changing reg in insn 191
changing reg in insn 172
changing reg in insn 170
changing reg in insn 169
changing reg in insn 168
changing reg in insn 166
changing reg in insn 165
changing reg in insn 161
changing reg in insn 160
changing reg in insn 159
changing reg in insn 157
changing reg in insn 153
changing reg in insn 151
changing reg in insn 144
changing reg in insn 136
changing reg in insn 134
changing reg in insn 133
changing reg in insn 131
changing reg in insn 127
changing reg in insn 84
changing reg in insn 76
changing reg in insn 74
changing reg in insn 73
changing reg in insn 71
changing reg in insn 67
changing reg in insn 63
changing reg in insn 61
changing reg in insn 60
changing reg in insn 59
changing reg in insn 57
changing reg in insn 56
changing reg in insn 52
changing reg in insn 51
changing reg in insn 36
changing reg in insn 35
changing reg in insn 29
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 17
changing reg in insn 19
changing reg in insn 22
changing reg in insn 23
changing reg in insn 23
changing reg in insn 26
changing reg in insn 29
changing reg in insn 34
changing reg in insn 32
changing reg in insn 51
changing reg in insn 53
changing reg in insn 52
changing reg in insn 53
changing reg in insn 56
changing reg in insn 58
changing reg in insn 57
changing reg in insn 58
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 62
changing reg in insn 61
changing reg in insn 62
changing reg in insn 62
changing reg in insn 63
changing reg in insn 67
changing reg in insn 68
changing reg in insn 68
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 72
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 75
changing reg in insn 76
changing reg in insn 112
changing reg in insn 116
changing reg in insn 114
changing reg in insn 115
changing reg in insn 115
changing reg in insn 116
changing reg in insn 127
changing reg in insn 128
changing reg in insn 131
changing reg in insn 132
changing reg in insn 132
changing reg in insn 133
changing reg in insn 134
changing reg in insn 135
changing reg in insn 135
changing reg in insn 136
changing reg in insn 144
changing reg in insn 145
changing reg in insn 148
changing reg in insn 148
changing reg in insn 149
changing reg in insn 150
changing reg in insn 151
changing reg in insn 152
changing reg in insn 153
changing reg in insn 154
changing reg in insn 155
changing reg in insn 155
changing reg in insn 156
changing reg in insn 156
changing reg in insn 157
changing reg in insn 158
changing reg in insn 159
changing reg in insn 160
changing reg in insn 162
changing reg in insn 161
changing reg in insn 162
changing reg in insn 165
changing reg in insn 167
changing reg in insn 166
changing reg in insn 167
changing reg in insn 167
changing reg in insn 168
changing reg in insn 169
changing reg in insn 171
changing reg in insn 170
changing reg in insn 171
changing reg in insn 171
changing reg in insn 172
changing reg in insn 203
changing reg in insn 204
changing reg in insn 204
changing reg in insn 206
changing reg in insn 241
changing reg in insn 242
changing reg in insn 250
changing reg in insn 251
changing reg in insn 265
changing reg in insn 266
changing reg in insn 267
changing reg in insn 268
changing reg in insn 268
changing reg in insn 269
changing reg in insn 272
changing reg in insn 276
changing reg in insn 282
changing reg in insn 283
changing reg in insn 283
changing reg in insn 284
changing reg in insn 285
changing reg in insn 286
changing reg in insn 296
changing reg in insn 299
changing reg in insn 302
changing reg in insn 303
changing reg in insn 303
changing reg in insn 304
changing reg in insn 319
changing reg in insn 320
changing reg in insn 320
changing reg in insn 323
changing reg in insn 321
changing reg in insn 323
changing reg in insn 326
changing reg in insn 328
changing reg in insn 327
changing reg in insn 328
changing reg in insn 328
changing reg in insn 330
changing reg in insn 329
changing reg in insn 331
changing reg in insn 330
changing reg in insn 331
changing reg in insn 340
changing reg in insn 341
changing reg in insn 355
changing reg in insn 356
changing reg in insn 359
changing reg in insn 360
changing reg in insn 360
changing reg in insn 361
changing reg in insn 364
changing reg in insn 367
changing reg in insn 365
changing reg in insn 368
changing reg in insn 375
changing reg in insn 376
changing reg in insn 379
changing reg in insn 380
changing reg in insn 380
changing reg in insn 381
changing reg in insn 384
changing reg in insn 385
changing reg in insn 386
changing reg in insn 389
changing reg in insn 387
changing reg in insn 390
changing reg in insn 397
changing reg in insn 398
changing reg in insn 401
changing reg in insn 402
changing reg in insn 402
changing reg in insn 403
changing reg in insn 406
changing reg in insn 408
changing reg in insn 407
changing reg in insn 408
changing reg in insn 408
changing reg in insn 411
changing reg in insn 409
changing reg in insn 412
changing reg in insn 419
changing reg in insn 420
changing reg in insn 423
changing reg in insn 424
changing reg in insn 424
changing reg in insn 425
changing reg in insn 428
changing reg in insn 433
changing reg in insn 429
changing reg in insn 430
changing reg in insn 431
changing reg in insn 434
changing reg in insn 441
changing reg in insn 442
changing reg in insn 445
changing reg in insn 446
changing reg in insn 446
changing reg in insn 447
changing reg in insn 450
changing reg in insn 455
changing reg in insn 451
changing reg in insn 453
changing reg in insn 452
changing reg in insn 453
changing reg in insn 453
changing reg in insn 456
changing reg in insn 463
changing reg in insn 464
changing reg in insn 467
changing reg in insn 468
changing reg in insn 468
changing reg in insn 469
changing reg in insn 472
changing reg in insn 473
changing reg in insn 474
changing reg in insn 476
changing reg in insn 484
changing reg in insn 485
changing reg in insn 488
changing reg in insn 489
changing reg in insn 489
changing reg in insn 490
changing reg in insn 493
changing reg in insn 495
changing reg in insn 494
changing reg in insn 495
changing reg in insn 495
changing reg in insn 497
changing reg in insn 505
changing reg in insn 506
changing reg in insn 509
changing reg in insn 510
changing reg in insn 510
changing reg in insn 511
changing reg in insn 514
changing reg in insn 517
changing reg in insn 515
changing reg in insn 518
changing reg in insn 525
changing reg in insn 526
changing reg in insn 529
changing reg in insn 530
changing reg in insn 530
changing reg in insn 531
changing reg in insn 534
changing reg in insn 535
changing reg in insn 538
changing reg in insn 539
changing reg in insn 539
changing reg in insn 540
changing reg in insn 543
changing reg in insn 546
changing reg in insn 544
changing reg in insn 547
changing reg in insn 554
changing reg in insn 555
changing reg in insn 555
changing reg in insn 557
changing reg in insn 564
changing reg in insn 565
changing reg in insn 565
changing reg in insn 567
changing reg in insn 574
changing reg in insn 576
changing reg in insn 583
changing reg in insn 585
changing reg in insn 592
changing reg in insn 594
changing reg in insn 601
changing reg in insn 603
changing reg in insn 615
changing reg in insn 616
changing reg in insn 619
changing reg in insn 620
changing reg in insn 620
changing reg in insn 621
changing reg in insn 624
changing reg in insn 625
changing reg in insn 628
changing reg in insn 629
changing reg in insn 632
changing reg in insn 634
changing reg in insn 633
changing reg in insn 634
changing reg in insn 637
changing reg in insn 639
changing reg in insn 638
changing reg in insn 639
changing reg in insn 642
changing reg in insn 643
changing reg in insn 644
changing reg in insn 645
changing reg in insn 664
changing reg in insn 668
changing reg in insn 665
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 11
changing reg in insn 12
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 25
changing reg in insn 26
changing reg in insn 34
changing reg in insn 35
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 37
changing reg in insn 69
changing reg in insn 70
changing reg in insn 113
changing reg in insn 114
changing reg in insn 147
changing reg in insn 148
changing reg in insn 325
changing reg in insn 323
changing reg in insn 322
changing reg in insn 321
changing reg in insn 326
changing reg in insn 324
changing reg in insn 323
changing reg in insn 322
changing reg in insn 324
changing reg in insn 325
changing reg in insn 341
changing reg in insn 346
changing reg in insn 344
changing reg in insn 346
changing reg in insn 347
changing reg in insn 347
changing reg in insn 348
changing reg in insn 348
changing reg in insn 349
changing reg in insn 665
changing reg in insn 666
deleting insn with uid = 760.
deleting insn with uid = 10.
deleting insn with uid = 761.
deleting insn with uid = 145.
deleting insn with uid = 763.
deleting insn with uid = 325.
deleting insn with uid = 765.
deleting insn with uid = 555.
deleting insn with uid = 565.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 99.
verify found no changes in insn with uid = 107.
verify found no changes in insn with uid = 119.
verify found no changes in insn with uid = 173.
verify found no changes in insn with uid = 184.
verify found no changes in insn with uid = 208.
verify found no changes in insn with uid = 217.
verify found no changes in insn with uid = 225.
verify found no changes in insn with uid = 235.
verify found no changes in insn with uid = 245.
verify found no changes in insn with uid = 254.
verify found no changes in insn with uid = 369.
verify found no changes in insn with uid = 391.
verify found no changes in insn with uid = 413.
verify found no changes in insn with uid = 435.
verify found no changes in insn with uid = 457.
verify found no changes in insn with uid = 478.
verify found no changes in insn with uid = 499.
verify found no changes in insn with uid = 519.
verify found no changes in insn with uid = 548.
verify found no changes in insn with uid = 558.
verify found no changes in insn with uid = 568.
verify found no changes in insn with uid = 577.
verify found no changes in insn with uid = 586.
verify found no changes in insn with uid = 595.
verify found no changes in insn with uid = 604.
verify found no changes in insn with uid = 610.
verify found no changes in insn with uid = 652.
verify found no changes in insn with uid = 657.
verify found no changes in insn with uid = 671.


con_write

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={169d,140u} r1={65d,34u,1e} r2={36d,4u} r3={1d,133u} r7={62d,273u} r8={31d} r9={31d} r10={31d} r11={31d} r12={31d} r13={31d} r14={31d} r15={31d} r17={160d,45u} r18={31d} r20={31d} r21={31d} r22={31d} r23={31d} r24={31d} r25={31d} r26={31d} r27={31d} r28={31d} r29={31d} r30={31d} r31={31d} r32={31d} r33={31d} r34={31d} r35={31d} r36={31d} r37={31d} r38={31d} r39={31d} r40={31d} r41={31d} r42={31d} r43={31d} r44={31d} r45={31d} r46={31d} r47={31d} r48={31d} r49={31d} r50={31d} r51={31d} r52={31d} r53={31d} r54={31d} r55={31d} r56={31d} r57={31d} r58={31d} r59={31d} r60={31d} r61={31d} r62={31d} r63={31d} r64={31d} r65={31d} r66={31d} r67={31d} r68={31d} r69={31d} r70={31d} r71={31d} r72={31d} r73={31d} r74={31d} r75={31d} 
;;    total ref usage 3138{2508d,629u,1e} in 443{412 regular + 31 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 757 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 757 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 757 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [235])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 tty+0 S4 A32])) "drivers/chr_drv/console.c":424:10 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 1 dx [orig:83 _1 ] [83])
        (mem:SI (plus:SI (reg/f:SI 0 ax [235])
                (const_int 1092 [0x444])) [3 tty_175(D)->write_q.head+0 S4 A32])) "drivers/chr_drv/console.c":424:10 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 0 ax [236])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 tty+0 S4 A32])) "drivers/chr_drv/console.c":424:10 75 {*movsi_internal}
     (nil))
(insn 8 7 759 2 (set (reg:SI 2 cx [orig:84 _2 ] [84])
        (mem:SI (plus:SI (reg/f:SI 0 ax [236])
                (const_int 1096 [0x448])) [3 tty_175(D)->write_q.tail+0 S4 A32])) "drivers/chr_drv/console.c":424:10 75 {*movsi_internal}
     (nil))
(insn 759 8 9 2 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (reg:SI 1 dx [orig:83 _1 ] [83])) "drivers/chr_drv/console.c":424:10 75 {*movsi_internal}
     (nil))
(insn 9 759 11 2 (parallel [
            (set (reg:SI 0 ax [orig:83 _1 ] [83])
                (minus:SI (reg:SI 0 ax [orig:83 _1 ] [83])
                    (reg:SI 2 cx [orig:84 _2 ] [84])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":424:10 282 {*subsi_1}
     (nil))
(insn 11 9 12 2 (parallel [
            (set (reg:SI 0 ax [237])
                (and:SI (reg:SI 0 ax [orig:86 _4 ] [86])
                    (const_int 1023 [0x3ff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":424:8 490 {*andsi_1}
     (nil))
(insn 12 11 676 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [4 nr+0 S4 A32])
        (reg:SI 0 ax [237])) "drivers/chr_drv/console.c":424:8 75 {*movsi_internal}
     (nil))
(insn 676 12 677 2 (const_int 0 [0]) "drivers/chr_drv/console.c":425:11 843 {nop}
     (nil))
(jump_insn 677 676 678 2 (set (pc)
        (label_ref 662)) 807 {jump}
     (nil)
 -> 662)
(barrier 678 677 667)
(code_label 667 678 15 3 158 (nil) [1 uses])
(note 15 667 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:SI 0 ax [238])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 tty+0 S4 A32])) "drivers/chr_drv/console.c":426:9 75 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:SI 0 ax [orig:87 _5 ] [87])
        (mem:SI (plus:SI (reg/f:SI 0 ax [238])
                (const_int 1096 [0x448])) [3 tty_175(D)->write_q.tail+0 S4 A32])) "drivers/chr_drv/console.c":426:9 75 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (set (reg/f:SI 1 dx [239])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 tty+0 S4 A32])) "drivers/chr_drv/console.c":426:9 75 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:QI 0 ax [240])
        (mem:QI (plus:SI (plus:SI (reg/f:SI 1 dx [239])
                    (reg:SI 0 ax [orig:87 _5 ] [87]))
                (const_int 1104 [0x450])) [0 tty_175(D)->write_q.buf[_5]+0 S1 A8])) "drivers/chr_drv/console.c":426:9 77 {*movqi_internal}
     (nil))
(insn 20 19 21 3 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 11 [0xb])) [0 c+0 S1 A8])
        (reg:QI 0 ax [240])) "drivers/chr_drv/console.c":426:9 77 {*movqi_internal}
     (nil))
(insn 21 20 22 3 (set (reg/f:SI 0 ax [241])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 tty+0 S4 A32])) "drivers/chr_drv/console.c":426:9 75 {*movsi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:SI 0 ax [orig:88 _6 ] [88])
        (mem:SI (plus:SI (reg/f:SI 0 ax [241])
                (const_int 1096 [0x448])) [3 tty_175(D)->write_q.tail+0 S4 A32])) "drivers/chr_drv/console.c":426:9 75 {*movsi_internal}
     (nil))
(insn 23 22 24 3 (parallel [
            (set (reg:SI 0 ax [orig:89 _7 ] [89])
                (plus:SI (reg:SI 0 ax [orig:88 _6 ] [88])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":426:9 209 {*addsi_1}
     (nil))
(insn 24 23 762 3 (parallel [
            (set (reg:SI 0 ax [orig:89 _7 ] [89])
                (and:SI (reg:SI 0 ax [orig:89 _7 ] [89])
                    (const_int 1023 [0x3ff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":426:9 490 {*andsi_1}
     (nil))
(insn 762 24 25 3 (set (reg:SI 1 dx [orig:90 _8 ] [90])
        (reg:SI 0 ax [orig:89 _7 ] [89])) "drivers/chr_drv/console.c":426:9 75 {*movsi_internal}
     (nil))
(insn 25 762 26 3 (set (reg/f:SI 0 ax [242])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 tty+0 S4 A32])) "drivers/chr_drv/console.c":426:9 75 {*movsi_internal}
     (nil))
(insn 26 25 29 3 (set (mem:SI (plus:SI (reg/f:SI 0 ax [242])
                (const_int 1096 [0x448])) [3 tty_175(D)->write_q.tail+0 S4 A32])
        (reg:SI 1 dx [orig:90 _8 ] [90])) "drivers/chr_drv/console.c":426:9 75 {*movsi_internal}
     (nil))
(insn 29 26 32 3 (set (reg:SI 0 ax [orig:91 state.168_9 ] [91])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("state") [flags 0x2]  <var_decl 0x71960af552d0 state>)
                        ] UNSPEC_GOTOFF))) [3 state+0 S4 A32])) "drivers/chr_drv/console.c":427:9 75 {*movsi_internal}
     (nil))
(insn 32 29 33 3 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:91 state.168_9 ] [91])
            (const_int 4 [0x4]))) "drivers/chr_drv/console.c":427:9 11 {*cmpsi_1}
     (nil))
(jump_insn 33 32 674 3 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 662)
            (pc))) "drivers/chr_drv/console.c":427:9 806 {*jcc}
     (nil)
 -> 662)
(note 674 33 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 34 674 35 4 (parallel [
            (set (reg:SI 0 ax [244])
                (ashift:SI (reg:SI 0 ax [orig:91 state.168_9 ] [91])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":427:9 655 {*ashlsi3_1}
     (nil))
(insn 35 34 36 4 (set (reg:SI 0 ax [245])
        (mem/u/c:SI (plus:SI (plus:SI (reg:SI 0 ax [244])
                    (reg:SI 3 bx [82]))
                (const:SI (unspec:SI [
                            (label_ref:SI 38)
                        ] UNSPEC_GOTOFF))) [0  S4 A8])) "drivers/chr_drv/console.c":427:9 75 {*movsi_internal}
     (insn_list:REG_LABEL_OPERAND 38 (nil)))
(insn 36 35 37 4 (parallel [
            (set (reg:SI 0 ax [246])
                (plus:SI (reg:SI 0 ax [245])
                    (reg:SI 3 bx [82])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":427:9 209 {*addsi_1}
     (nil))
(jump_insn 37 36 38 4 (parallel [
            (set (pc)
                (reg:SI 0 ax [246]))
            (use (label_ref 38))
        ]) "drivers/chr_drv/console.c":427:9 810 {*tablejump_1}
     (nil)
 -> 38)
(code_label 38 37 39 98 (nil) [2 uses])
(jump_table_data 39 38 40 (addr_diff_vec:SI (label_ref:SI 38)
         [
            (label_ref:SI 41)
            (label_ref:SI 189)
            (label_ref:SI 259)
            (label_ref:SI 291)
            (label_ref:SI 337)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 40 39 41)
(code_label 41 40 42 5 102 (nil) [1 uses])
(note 42 41 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 45 42 46 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 31 [0x1f]))) "drivers/chr_drv/console.c":429:16 9 {*cmpqi_1}
     (nil))
(jump_insn 46 45 47 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "drivers/chr_drv/console.c":429:16 806 {*jcc}
     (nil)
 -> 79)
(note 47 46 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 127 [0x7f]))) "drivers/chr_drv/console.c":429:24 9 {*cmpqi_1}
     (nil))
(jump_insn 49 48 50 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "drivers/chr_drv/console.c":429:24 806 {*jcc}
     (nil)
 -> 79)
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 7 (set (reg:SI 1 dx [orig:92 x.169_10 ] [92])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":430:23 75 {*movsi_internal}
     (nil))
(insn 52 51 53 7 (set (reg:SI 0 ax [orig:93 video_num_columns.170_11 ] [93])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":430:23 75 {*movsi_internal}
     (nil))
(insn 53 52 54 7 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:92 x.169_10 ] [92])
            (reg:SI 0 ax [orig:93 video_num_columns.170_11 ] [93]))) "drivers/chr_drv/console.c":430:20 11 {*cmpsi_1}
     (nil))
(jump_insn 54 53 55 7 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "drivers/chr_drv/console.c":430:20 806 {*jcc}
     (nil)
 -> 65)
(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 8 (set (reg:SI 0 ax [orig:94 x.171_12 ] [94])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":431:23 75 {*movsi_internal}
     (nil))
(insn 57 56 58 8 (set (reg:SI 1 dx [orig:95 video_num_columns.172_13 ] [95])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":431:23 75 {*movsi_internal}
     (nil))
(insn 58 57 59 8 (parallel [
            (set (reg:SI 0 ax [orig:96 _14 ] [96])
                (minus:SI (reg:SI 0 ax [orig:94 x.171_12 ] [94])
                    (reg:SI 1 dx [orig:95 video_num_columns.172_13 ] [95])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":431:23 282 {*subsi_1}
     (nil))
(insn 59 58 60 8 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])
        (reg:SI 0 ax [orig:96 _14 ] [96])) "drivers/chr_drv/console.c":431:23 75 {*movsi_internal}
     (nil))
(insn 60 59 61 8 (set (reg:SI 0 ax [orig:97 pos.173_15 ] [97])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":432:25 75 {*movsi_internal}
     (nil))
(insn 61 60 62 8 (set (reg:SI 1 dx [orig:98 video_size_row.174_16 ] [98])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":432:25 75 {*movsi_internal}
     (nil))
(insn 62 61 63 8 (parallel [
            (set (reg:SI 0 ax [orig:99 _17 ] [99])
                (minus:SI (reg:SI 0 ax [orig:97 pos.173_15 ] [97])
                    (reg:SI 1 dx [orig:98 video_size_row.174_16 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":432:25 282 {*subsi_1}
     (nil))
(insn 63 62 64 8 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])
        (reg:SI 0 ax [orig:99 _17 ] [99])) "drivers/chr_drv/console.c":432:25 75 {*movsi_internal}
     (nil))
(call_insn 64 63 65 8 (call (mem:QI (symbol_ref:SI ("lf") [flags 0x3]  <function_decl 0x71960af50c00 lf>) [0 lf S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":433:21 812 {*call}
     (nil)
    (nil))
(code_label 65 64 66 9 104 (nil) [1 uses])
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 9 (set (reg:SI 0 ax [orig:100 pos.175_18 ] [100])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":437:30 75 {*movsi_internal}
     (nil))
(insn 68 67 69 9 (set (reg/f:SI 1 dx [orig:101 pos.176_19 ] [101])
        (reg:SI 0 ax [orig:100 pos.175_18 ] [100])) "drivers/chr_drv/console.c":437:30 75 {*movsi_internal}
     (nil))
(insn 69 68 70 9 (set (reg:QI 0 ax [247])
        (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 11 [0xb])) [0 c+0 S1 A8])) "drivers/chr_drv/console.c":435:17 77 {*movqi_internal}
     (nil))
(insn 70 69 71 9 (parallel [
            (asm_operands/v ("movb attr, %%ah
	movw %%ax, %1
	") ("") 0 [
                    (reg:QI 0 ax [247])
                    (mem:HI (reg/f:SI 1 dx [orig:101 pos.176_19 ] [101]) [8 *pos.176_19+0 S2 A16])
                ]
                 [
                    (asm_input:QI ("a") drivers/chr_drv/console.c:435)
                    (asm_input:HI ("m") drivers/chr_drv/console.c:435)
                ]
                 [] drivers/chr_drv/console.c:435)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":435:17 -1
     (nil))
(insn 71 70 72 9 (set (reg:SI 0 ax [orig:102 pos.177_20 ] [102])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":438:21 75 {*movsi_internal}
     (nil))
(insn 72 71 73 9 (parallel [
            (set (reg:SI 0 ax [orig:103 _21 ] [103])
                (plus:SI (reg:SI 0 ax [orig:102 pos.177_20 ] [102])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":438:21 209 {*addsi_1}
     (nil))
(insn 73 72 74 9 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])
        (reg:SI 0 ax [orig:103 _21 ] [103])) "drivers/chr_drv/console.c":438:21 75 {*movsi_internal}
     (nil))
(insn 74 73 75 9 (set (reg:SI 0 ax [orig:104 x.178_22 ] [104])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":439:18 75 {*movsi_internal}
     (nil))
(insn 75 74 76 9 (parallel [
            (set (reg:SI 0 ax [orig:105 _23 ] [105])
                (plus:SI (reg:SI 0 ax [orig:104 x.178_22 ] [104])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":439:18 209 {*addsi_1}
     (nil))
(insn 76 75 679 9 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])
        (reg:SI 0 ax [orig:105 _23 ] [105])) "drivers/chr_drv/console.c":439:18 75 {*movsi_internal}
     (nil))
(jump_insn 679 76 680 9 (set (pc)
        (label_ref 185)) "drivers/chr_drv/console.c":439:18 807 {jump}
     (nil)
 -> 185)
(barrier 680 679 79)
(code_label 79 680 80 10 103 (nil) [2 uses])
(note 80 79 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 27 [0x1b]))) "drivers/chr_drv/console.c":440:23 9 {*cmpqi_1}
     (nil))
(jump_insn 82 81 83 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) "drivers/chr_drv/console.c":440:23 806 {*jcc}
     (nil)
 -> 87)
(note 83 82 84 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 681 11 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("state") [flags 0x2]  <var_decl 0x71960af552d0 state>)
                        ] UNSPEC_GOTOFF))) [3 state+0 S4 A32])
        (const_int 1 [0x1])) "drivers/chr_drv/console.c":441:23 75 {*movsi_internal}
     (nil))
(jump_insn 681 84 682 11 (set (pc)
        (label_ref 185)) 807 {jump}
     (nil)
 -> 185)
(barrier 682 681 87)
(code_label 87 682 88 12 106 (nil) [1 uses])
(note 88 87 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 10 [0xa]))) "drivers/chr_drv/console.c":442:21 9 {*cmpqi_1}
     (nil))
(jump_insn 90 89 91 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "drivers/chr_drv/console.c":442:21 806 {*jcc}
     (nil)
 -> 97)
(note 91 90 92 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 11 [0xb]))) "drivers/chr_drv/console.c":442:30 9 {*cmpqi_1}
     (nil))
(jump_insn 93 92 94 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "drivers/chr_drv/console.c":442:30 806 {*jcc}
     (nil)
 -> 97)
(note 94 93 95 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 12 [0xc]))) "drivers/chr_drv/console.c":442:41 9 {*cmpqi_1}
     (nil))
(jump_insn 96 95 97 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) "drivers/chr_drv/console.c":442:41 806 {*jcc}
     (nil)
 -> 102)
(code_label 97 96 98 15 107 (nil) [2 uses])
(note 98 97 99 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(call_insn 99 98 683 15 (call (mem:QI (symbol_ref:SI ("lf") [flags 0x3]  <function_decl 0x71960af50c00 lf>) [0 lf S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":443:17 812 {*call}
     (nil)
    (nil))
(jump_insn 683 99 684 15 (set (pc)
        (label_ref 185)) "drivers/chr_drv/console.c":443:17 807 {jump}
     (nil)
 -> 185)
(barrier 684 683 102)
(code_label 102 684 103 16 108 (nil) [1 uses])
(note 103 102 104 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 13 [0xd]))) "drivers/chr_drv/console.c":444:21 9 {*cmpqi_1}
     (nil))
(jump_insn 105 104 106 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) "drivers/chr_drv/console.c":444:21 806 {*jcc}
     (nil)
 -> 110)
(note 106 105 107 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(call_insn 107 106 685 17 (call (mem:QI (symbol_ref:SI ("cr") [flags 0x3]  <function_decl 0x71960af50e00 cr>) [0 cr S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":445:17 812 {*call}
     (nil)
    (nil))
(jump_insn 685 107 686 17 (set (pc)
        (label_ref 185)) 807 {jump}
     (nil)
 -> 185)
(barrier 686 685 110)
(code_label 110 686 111 18 109 (nil) [1 uses])
(note 111 110 112 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 18 (set (reg:SI 1 dx [orig:106 _24 ] [106])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8]))) "drivers/chr_drv/console.c":446:24 153 {extendqisi2}
     (nil))
(insn 113 112 114 18 (set (reg/f:SI 0 ax [248])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 tty+0 S4 A32])) "drivers/chr_drv/console.c":446:27 75 {*movsi_internal}
     (nil))
(insn 114 113 115 18 (set (reg:QI 0 ax [orig:107 _25 ] [107])
        (mem:QI (plus:SI (reg/f:SI 0 ax [248])
                (const_int 19 [0x13])) [0 tty_175(D)->termios.c_cc[2]+0 S1 A8])) "drivers/chr_drv/console.c":446:27 77 {*movqi_internal}
     (nil))
(insn 115 114 116 18 (set (reg:SI 0 ax [orig:108 _26 ] [108])
        (zero_extend:SI (reg:QI 0 ax [orig:107 _25 ] [107]))) "drivers/chr_drv/console.c":446:27 143 {*zero_extendqisi2}
     (nil))
(insn 116 115 117 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:106 _24 ] [106])
            (reg:SI 0 ax [orig:108 _26 ] [108]))) "drivers/chr_drv/console.c":446:21 11 {*cmpsi_1}
     (nil))
(jump_insn 117 116 118 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) "drivers/chr_drv/console.c":446:21 806 {*jcc}
     (nil)
 -> 122)
(note 118 117 119 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(call_insn 119 118 687 19 (call (mem:QI (symbol_ref:SI ("del") [flags 0x3]  <function_decl 0x71960af5a000 del>) [0 del S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":447:17 812 {*call}
     (nil)
    (nil))
(jump_insn 687 119 688 19 (set (pc)
        (label_ref 185)) 807 {jump}
     (nil)
 -> 185)
(barrier 688 687 122)
(code_label 122 688 123 20 110 (nil) [1 uses])
(note 123 122 124 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 8 [0x8]))) "drivers/chr_drv/console.c":448:21 9 {*cmpqi_1}
     (nil))
(jump_insn 125 124 126 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) "drivers/chr_drv/console.c":448:21 806 {*jcc}
     (nil)
 -> 139)
(note 126 125 127 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 21 (set (reg:SI 0 ax [orig:109 x.179_27 ] [109])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":449:21 75 {*movsi_internal}
     (nil))
(insn 128 127 129 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:109 x.179_27 ] [109])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":449:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 129 128 130 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 185)
            (pc))) "drivers/chr_drv/console.c":449:20 806 {*jcc}
     (nil)
 -> 185)
(note 130 129 131 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 22 (set (reg:SI 0 ax [orig:110 x.180_28 ] [110])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":450:22 75 {*movsi_internal}
     (nil))
(insn 132 131 133 22 (parallel [
            (set (reg:SI 0 ax [orig:111 _29 ] [111])
                (plus:SI (reg:SI 0 ax [orig:110 x.180_28 ] [110])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":450:22 209 {*addsi_1}
     (nil))
(insn 133 132 134 22 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])
        (reg:SI 0 ax [orig:111 _29 ] [111])) "drivers/chr_drv/console.c":450:22 75 {*movsi_internal}
     (nil))
(insn 134 133 135 22 (set (reg:SI 0 ax [orig:112 pos.181_30 ] [112])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":451:25 75 {*movsi_internal}
     (nil))
(insn 135 134 136 22 (parallel [
            (set (reg:SI 0 ax [orig:113 _31 ] [113])
                (plus:SI (reg:SI 0 ax [orig:112 pos.181_30 ] [112])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":451:25 209 {*addsi_1}
     (nil))
(insn 136 135 689 22 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])
        (reg:SI 0 ax [orig:113 _31 ] [113])) "drivers/chr_drv/console.c":451:25 75 {*movsi_internal}
     (nil))
(jump_insn 689 136 690 22 (set (pc)
        (label_ref 185)) 807 {jump}
     (nil)
 -> 185)
(barrier 690 689 139)
(code_label 139 690 140 23 111 (nil) [1 uses])
(note 140 139 141 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 9 [0x9]))) "drivers/chr_drv/console.c":453:23 9 {*cmpqi_1}
     (nil))
(jump_insn 142 141 143 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) "drivers/chr_drv/console.c":453:23 806 {*jcc}
     (nil)
 -> 179)
(note 143 142 144 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 146 24 (set (reg:SI 0 ax [orig:114 x.182_32 ] [114])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":454:28 75 {*movsi_internal}
     (nil))
(insn 146 144 764 24 (parallel [
            (set (reg:QI 0 ax [orig:115 _33 ] [115])
                (and:QI (reg:QI 0 ax [orig:115 _33 ] [115])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":454:28 491 {*andqi_1}
     (nil))
(insn 764 146 147 24 (set (reg:QI 1 dx [orig:116 _34 ] [116])
        (reg:QI 0 ax [orig:115 _33 ] [115])) "drivers/chr_drv/console.c":454:28 77 {*movqi_internal}
     (nil))
(insn 147 764 148 24 (set (reg:QI 0 ax [249])
        (const_int 8 [0x8])) "drivers/chr_drv/console.c":454:23 77 {*movqi_internal}
     (nil))
(insn 148 147 149 24 (parallel [
            (set (reg:QI 0 ax [orig:117 _35 ] [117])
                (minus:QI (reg:QI 0 ax [249])
                    (reg:QI 1 dx [orig:116 _34 ] [116])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":454:23 280 {*subqi_1}
     (nil))
(insn 149 148 150 24 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 11 [0xb])) [0 c+0 S1 A8])
        (reg:QI 0 ax [orig:117 _35 ] [117])) "drivers/chr_drv/console.c":454:19 77 {*movqi_internal}
     (nil))
(insn 150 149 151 24 (set (reg:SI 1 dx [orig:118 _36 ] [118])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8]))) "drivers/chr_drv/console.c":455:19 153 {extendqisi2}
     (nil))
(insn 151 150 152 24 (set (reg:SI 0 ax [orig:119 x.183_37 ] [119])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":455:19 75 {*movsi_internal}
     (nil))
(insn 152 151 153 24 (parallel [
            (set (reg:SI 0 ax [orig:120 _38 ] [120])
                (plus:SI (reg:SI 0 ax [orig:119 x.183_37 ] [119])
                    (reg:SI 1 dx [orig:118 _36 ] [118])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":455:19 209 {*addsi_1}
     (nil))
(insn 153 152 154 24 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])
        (reg:SI 0 ax [orig:120 _38 ] [120])) "drivers/chr_drv/console.c":455:19 75 {*movsi_internal}
     (nil))
(insn 154 153 155 24 (set (reg:SI 0 ax [orig:121 _39 ] [121])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8]))) "drivers/chr_drv/console.c":456:26 153 {extendqisi2}
     (nil))
(insn 155 154 156 24 (parallel [
            (set (reg:SI 0 ax [orig:122 _40 ] [122])
                (ashift:SI (reg:SI 0 ax [orig:121 _39 ] [121])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":456:26 655 {*ashlsi3_1}
     (nil))
(insn 156 155 157 24 (set (reg:SI 1 dx [orig:123 _41 ] [123])
        (reg:SI 0 ax [orig:122 _40 ] [122])) "drivers/chr_drv/console.c":456:26 75 {*movsi_internal}
     (nil))
(insn 157 156 158 24 (set (reg:SI 0 ax [orig:124 pos.184_42 ] [124])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":456:21 75 {*movsi_internal}
     (nil))
(insn 158 157 159 24 (parallel [
            (set (reg:SI 0 ax [orig:125 _43 ] [125])
                (plus:SI (reg:SI 0 ax [orig:124 pos.184_42 ] [124])
                    (reg:SI 1 dx [orig:123 _41 ] [123])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":456:21 209 {*addsi_1}
     (nil))
(insn 159 158 160 24 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])
        (reg:SI 0 ax [orig:125 _43 ] [125])) "drivers/chr_drv/console.c":456:21 75 {*movsi_internal}
     (nil))
(insn 160 159 161 24 (set (reg:SI 1 dx [orig:126 x.185_44 ] [126])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":457:23 75 {*movsi_internal}
     (nil))
(insn 161 160 162 24 (set (reg:SI 0 ax [orig:127 video_num_columns.186_45 ] [127])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":457:23 75 {*movsi_internal}
     (nil))
(insn 162 161 163 24 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:126 x.185_44 ] [126])
            (reg:SI 0 ax [orig:127 video_num_columns.186_45 ] [127]))) "drivers/chr_drv/console.c":457:20 11 {*cmpsi_1}
     (nil))
(jump_insn 163 162 164 24 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) "drivers/chr_drv/console.c":457:20 806 {*jcc}
     (nil)
 -> 174)
(note 164 163 165 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 25 (set (reg:SI 0 ax [orig:128 x.187_46 ] [128])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":458:23 75 {*movsi_internal}
     (nil))
(insn 166 165 167 25 (set (reg:SI 1 dx [orig:129 video_num_columns.188_47 ] [129])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":458:23 75 {*movsi_internal}
     (nil))
(insn 167 166 168 25 (parallel [
            (set (reg:SI 0 ax [orig:130 _48 ] [130])
                (minus:SI (reg:SI 0 ax [orig:128 x.187_46 ] [128])
                    (reg:SI 1 dx [orig:129 video_num_columns.188_47 ] [129])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":458:23 282 {*subsi_1}
     (nil))
(insn 168 167 169 25 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])
        (reg:SI 0 ax [orig:130 _48 ] [130])) "drivers/chr_drv/console.c":458:23 75 {*movsi_internal}
     (nil))
(insn 169 168 170 25 (set (reg:SI 0 ax [orig:131 pos.189_49 ] [131])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])) "drivers/chr_drv/console.c":459:25 75 {*movsi_internal}
     (nil))
(insn 170 169 171 25 (set (reg:SI 1 dx [orig:132 video_size_row.190_50 ] [132])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":459:25 75 {*movsi_internal}
     (nil))
(insn 171 170 172 25 (parallel [
            (set (reg:SI 0 ax [orig:133 _51 ] [133])
                (minus:SI (reg:SI 0 ax [orig:131 pos.189_49 ] [131])
                    (reg:SI 1 dx [orig:132 video_size_row.190_50 ] [132])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":459:25 282 {*subsi_1}
     (nil))
(insn 172 171 173 25 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pos") [flags 0x2]  <var_decl 0x71960af2ee10 pos>)
                        ] UNSPEC_GOTOFF))) [3 pos+0 S4 A32])
        (reg:SI 0 ax [orig:133 _51 ] [133])) "drivers/chr_drv/console.c":459:25 75 {*movsi_internal}
     (nil))
(call_insn 173 172 174 25 (call (mem:QI (symbol_ref:SI ("lf") [flags 0x3]  <function_decl 0x71960af50c00 lf>) [0 lf S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":460:21 812 {*call}
     (nil)
    (nil))
(code_label 174 173 175 26 113 (nil) [1 uses])
(note 175 174 176 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 691 26 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 11 [0xb])) [0 c+0 S1 A8])
        (const_int 9 [0x9])) "drivers/chr_drv/console.c":462:19 77 {*movqi_internal}
     (nil))
(jump_insn 691 176 692 26 (set (pc)
        (label_ref 185)) 807 {jump}
     (nil)
 -> 185)
(barrier 692 691 179)
(code_label 179 692 180 27 112 (nil) [1 uses])
(note 180 179 181 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 7 [0x7]))) "drivers/chr_drv/console.c":463:23 9 {*cmpqi_1}
     (nil))
(jump_insn 182 181 183 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 185)
            (pc))) "drivers/chr_drv/console.c":463:23 806 {*jcc}
     (nil)
 -> 185)
(note 183 182 184 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(call_insn 184 183 185 28 (call (mem:QI (symbol_ref:SI ("sysbeep") [flags 0x3]  <function_decl 0x71960af50500 sysbeep>) [0 sysbeep S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":464:17 812 {*call}
     (nil)
    (nil))
(code_label 185 184 186 29 105 (nil) [9 uses])
(note 186 185 693 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(jump_insn 693 186 694 29 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":465:17 807 {jump}
     (nil)
 -> 662)
(barrier 694 693 189)
(code_label 189 694 190 30 101 (nil) [1 uses])
(note 190 189 191 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 30 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("state") [flags 0x2]  <var_decl 0x71960af552d0 state>)
                        ] UNSPEC_GOTOFF))) [3 state+0 S4 A32])
        (const_int 0 [0])) "drivers/chr_drv/console.c":467:19 75 {*movsi_internal}
     (nil))
(insn 192 191 193 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 91 [0x5b]))) "drivers/chr_drv/console.c":468:16 9 {*cmpqi_1}
     (nil))
(jump_insn 193 192 194 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) "drivers/chr_drv/console.c":468:16 806 {*jcc}
     (nil)
 -> 198)
(note 194 193 195 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 695 31 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("state") [flags 0x2]  <var_decl 0x71960af552d0 state>)
                        ] UNSPEC_GOTOFF))) [3 state+0 S4 A32])
        (const_int 2 [0x2])) "drivers/chr_drv/console.c":469:23 75 {*movsi_internal}
     (nil))
(jump_insn 695 195 696 31 (set (pc)
        (label_ref 255)) 807 {jump}
     (nil)
 -> 255)
(barrier 696 695 198)
(code_label 198 696 199 32 114 (nil) [1 uses])
(note 199 198 200 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 69 [0x45]))) "drivers/chr_drv/console.c":470:21 9 {*cmpqi_1}
     (nil))
(jump_insn 201 200 202 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 212)
            (pc))) "drivers/chr_drv/console.c":470:21 806 {*jcc}
     (nil)
 -> 212)
(note 202 201 203 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 204 33 (set (reg:SI 0 ax [orig:134 y.191_52 ] [134])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])) "drivers/chr_drv/console.c":471:17 75 {*movsi_internal}
     (nil))
(insn 204 203 205 33 (parallel [
            (set (reg:SI 0 ax [orig:135 _53 ] [135])
                (plus:SI (reg:SI 0 ax [orig:134 y.191_52 ] [134])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":471:29 209 {*addsi_1}
     (nil))
(insn 205 204 206 33 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":471:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 206 205 207 33 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:135 _53 ] [135])) "drivers/chr_drv/console.c":471:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 207 206 208 33 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (const_int 0 [0])) "drivers/chr_drv/console.c":471:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 208 207 209 33 (call (mem:QI (symbol_ref:SI ("gotoxy") [flags 0x3]  <function_decl 0x71960af5a200 gotoxy>) [0 gotoxy S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":471:17 812 {*call}
     (nil)
    (nil))
(insn 209 208 697 33 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":471:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 697 209 698 33 (set (pc)
        (label_ref 255)) 807 {jump}
     (nil)
 -> 255)
(barrier 698 697 212)
(code_label 212 698 213 34 116 (nil) [1 uses])
(note 213 212 214 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 77 [0x4d]))) "drivers/chr_drv/console.c":472:21 9 {*cmpqi_1}
     (nil))
(jump_insn 215 214 216 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 220)
            (pc))) "drivers/chr_drv/console.c":472:21 806 {*jcc}
     (nil)
 -> 220)
(note 216 215 217 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(call_insn 217 216 699 35 (call (mem:QI (symbol_ref:SI ("ri") [flags 0x3]  <function_decl 0x71960af5f600 ri>) [0 ri S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":473:17 812 {*call}
     (nil)
    (nil))
(jump_insn 699 217 700 35 (set (pc)
        (label_ref 255)) 807 {jump}
     (nil)
 -> 255)
(barrier 700 699 220)
(code_label 220 700 221 36 117 (nil) [1 uses])
(note 221 220 222 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 68 [0x44]))) "drivers/chr_drv/console.c":474:21 9 {*cmpqi_1}
     (nil))
(jump_insn 223 222 224 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 228)
            (pc))) "drivers/chr_drv/console.c":474:21 806 {*jcc}
     (nil)
 -> 228)
(note 224 223 225 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(call_insn 225 224 701 37 (call (mem:QI (symbol_ref:SI ("lf") [flags 0x3]  <function_decl 0x71960af50c00 lf>) [0 lf S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":475:17 812 {*call}
     (nil)
    (nil))
(jump_insn 701 225 702 37 (set (pc)
        (label_ref 255)) 807 {jump}
     (nil)
 -> 255)
(barrier 702 701 228)
(code_label 228 702 229 38 118 (nil) [1 uses])
(note 229 228 230 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 231 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 90 [0x5a]))) "drivers/chr_drv/console.c":476:21 9 {*cmpqi_1}
     (nil))
(jump_insn 231 230 232 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 239)
            (pc))) "drivers/chr_drv/console.c":476:21 806 {*jcc}
     (nil)
 -> 239)
(note 232 231 233 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 233 232 234 39 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":477:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 234 233 235 39 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [10 tty+0 S4 A32])) "drivers/chr_drv/console.c":477:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 235 234 236 39 (call (mem:QI (symbol_ref:SI ("respond") [flags 0x3]  <function_decl 0x71960af5ac00 respond>) [0 respond S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":477:17 812 {*call}
     (nil)
    (nil))
(insn 236 235 703 39 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":477:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 703 236 704 39 (set (pc)
        (label_ref 255)) 807 {jump}
     (nil)
 -> 255)
(barrier 704 703 239)
(code_label 239 704 240 40 119 (nil) [1 uses])
(note 240 239 241 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 40 (set (reg:SI 0 ax [orig:136 x.192_54 ] [136])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":478:24 75 {*movsi_internal}
     (nil))
(insn 242 241 243 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:136 x.192_54 ] [136])
            (const_int 55 [0x37]))) "drivers/chr_drv/console.c":478:21 11 {*cmpsi_1}
     (nil))
(jump_insn 243 242 244 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 248)
            (pc))) "drivers/chr_drv/console.c":478:21 806 {*jcc}
     (nil)
 -> 248)
(note 244 243 245 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(call_insn 245 244 705 41 (call (mem:QI (symbol_ref:SI ("save_cur") [flags 0x3]  <function_decl 0x71960af5a400 save_cur>) [0 save_cur S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":479:17 812 {*call}
     (nil)
    (nil))
(jump_insn 705 245 706 41 (set (pc)
        (label_ref 255)) 807 {jump}
     (nil)
 -> 255)
(barrier 706 705 248)
(code_label 248 706 249 42 120 (nil) [1 uses])
(note 249 248 250 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 42 (set (reg:SI 0 ax [orig:137 x.193_55 ] [137])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":480:24 75 {*movsi_internal}
     (nil))
(insn 251 250 252 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:137 x.193_55 ] [137])
            (const_int 56 [0x38]))) "drivers/chr_drv/console.c":480:21 11 {*cmpsi_1}
     (nil))
(jump_insn 252 251 253 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 255)
            (pc))) "drivers/chr_drv/console.c":480:21 806 {*jcc}
     (nil)
 -> 255)
(note 253 252 254 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(call_insn 254 253 255 43 (call (mem:QI (symbol_ref:SI ("restore_cur") [flags 0x3]  <function_decl 0x71960af5a600 restore_cur>) [0 restore_cur S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":481:17 812 {*call}
     (nil)
    (nil))
(code_label 255 254 256 44 115 (nil) [7 uses])
(note 256 255 707 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(jump_insn 707 256 708 44 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":482:17 807 {jump}
     (nil)
 -> 662)
(barrier 708 707 259)
(code_label 259 708 260 45 100 (nil) [1 uses])
(note 260 259 261 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 261 260 709 45 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("npar") [flags 0x2]  <var_decl 0x71960af55090 npar>)
                        ] UNSPEC_GOTOFF))) [3 npar+0 S4 A32])
        (const_int 0 [0])) "drivers/chr_drv/console.c":484:23 75 {*movsi_internal}
     (nil))
(jump_insn 709 261 710 45 (set (pc)
        (label_ref 270)) "drivers/chr_drv/console.c":484:13 807 {jump}
     (nil)
 -> 270)
(barrier 710 709 273)
(code_label 273 710 264 46 122 (nil) [1 uses])
(note 264 273 265 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 46 (set (reg:SI 0 ax [orig:138 npar.194_56 ] [138])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("npar") [flags 0x2]  <var_decl 0x71960af55090 npar>)
                        ] UNSPEC_GOTOFF))) [3 npar+0 S4 A32])) "drivers/chr_drv/console.c":485:20 75 {*movsi_internal}
     (nil))
(insn 266 265 267 46 (set (mem:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [orig:138 npar.194_56 ] [138])
                        (const_int 4 [0x4]))
                    (reg:SI 3 bx [82]))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[npar.194_56]+0 S4 A32])
        (const_int 0 [0])) "drivers/chr_drv/console.c":485:27 75 {*movsi_internal}
     (nil))
(insn 267 266 268 46 (set (reg:SI 0 ax [orig:139 npar.195_57 ] [139])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("npar") [flags 0x2]  <var_decl 0x71960af55090 npar>)
                        ] UNSPEC_GOTOFF))) [3 npar+0 S4 A32])) "drivers/chr_drv/console.c":484:45 75 {*movsi_internal}
     (nil))
(insn 268 267 269 46 (parallel [
            (set (reg:SI 0 ax [orig:140 _58 ] [140])
                (plus:SI (reg:SI 0 ax [orig:139 npar.195_57 ] [139])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":484:45 209 {*addsi_1}
     (nil))
(insn 269 268 270 46 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("npar") [flags 0x2]  <var_decl 0x71960af55090 npar>)
                        ] UNSPEC_GOTOFF))) [3 npar+0 S4 A32])
        (reg:SI 0 ax [orig:140 _58 ] [140])) "drivers/chr_drv/console.c":484:45 75 {*movsi_internal}
     (nil))
(code_label 270 269 271 47 121 (nil) [1 uses])
(note 271 270 272 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 276 47 (set (reg:SI 0 ax [orig:141 npar.196_59 ] [141])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("npar") [flags 0x2]  <var_decl 0x71960af55090 npar>)
                        ] UNSPEC_GOTOFF))) [3 npar+0 S4 A32])) "drivers/chr_drv/console.c":484:33 75 {*movsi_internal}
     (nil))
(insn 276 272 277 47 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:141 npar.196_59 ] [141])
            (const_int 15 [0xf]))) "drivers/chr_drv/console.c":484:33 11 {*cmpsi_1}
     (nil))
(jump_insn 277 276 278 47 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 273)
            (pc))) "drivers/chr_drv/console.c":484:33 806 {*jcc}
     (nil)
 -> 273)
(note 278 277 279 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 280 48 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("npar") [flags 0x2]  <var_decl 0x71960af55090 npar>)
                        ] UNSPEC_GOTOFF))) [3 npar+0 S4 A32])
        (const_int 0 [0])) "drivers/chr_drv/console.c":486:18 75 {*movsi_internal}
     (nil))
(insn 280 279 281 48 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("state") [flags 0x2]  <var_decl 0x71960af552d0 state>)
                        ] UNSPEC_GOTOFF))) [3 state+0 S4 A32])
        (const_int 3 [0x3])) "drivers/chr_drv/console.c":487:19 75 {*movsi_internal}
     (nil))
(insn 281 280 282 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 63 [0x3f]))) "drivers/chr_drv/console.c":488:28 9 {*cmpqi_1}
     (nil))
(insn 282 281 283 48 (set (reg:QI 0 ax [orig:142 _60 ] [142])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) "drivers/chr_drv/console.c":488:28 802 {*setcc_qi}
     (nil))
(insn 283 282 284 48 (set (reg:SI 0 ax [orig:143 _61 ] [143])
        (zero_extend:SI (reg:QI 0 ax [orig:142 _60 ] [142]))) "drivers/chr_drv/console.c":488:28 143 {*zero_extendqisi2}
     (nil))
(insn 284 283 285 48 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("ques") [flags 0x2]  <var_decl 0x71960af551b0 ques>)
                        ] UNSPEC_GOTOFF))) [3 ques+0 S4 A32])
        (reg:SI 0 ax [orig:143 _61 ] [143])) "drivers/chr_drv/console.c":488:23 75 {*movsi_internal}
     (nil))
(insn 285 284 286 48 (set (reg:SI 0 ax [orig:144 ques.197_62 ] [144])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("ques") [flags 0x2]  <var_decl 0x71960af551b0 ques>)
                        ] UNSPEC_GOTOFF))) [3 ques+0 S4 A32])) "drivers/chr_drv/console.c":488:23 75 {*movsi_internal}
     (nil))
(insn 286 285 287 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:144 ques.197_62 ] [144])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":488:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 287 286 288 48 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) "drivers/chr_drv/console.c":488:16 806 {*jcc}
     (nil)
 -> 291)
(note 288 287 711 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(jump_insn 711 288 712 49 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":489:17 807 {jump}
     (nil)
 -> 662)
(barrier 712 711 291)
(code_label 291 712 292 50 99 (nil) [2 uses])
(note 292 291 293 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 59 [0x3b]))) "drivers/chr_drv/console.c":491:16 9 {*cmpqi_1}
     (nil))
(jump_insn 294 293 295 50 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 307)
            (pc))) "drivers/chr_drv/console.c":491:16 806 {*jcc}
     (nil)
 -> 307)
(note 295 294 296 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 296 295 299 51 (set (reg:SI 0 ax [orig:145 npar.198_63 ] [145])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("npar") [flags 0x2]  <var_decl 0x71960af55090 npar>)
                        ] UNSPEC_GOTOFF))) [3 npar+0 S4 A32])) "drivers/chr_drv/console.c":491:34 75 {*movsi_internal}
     (nil))
(insn 299 296 300 51 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:145 npar.198_63 ] [145])
            (const_int 14 [0xe]))) "drivers/chr_drv/console.c":491:26 11 {*cmpsi_1}
     (nil))
(jump_insn 300 299 301 51 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 307)
            (pc))) "drivers/chr_drv/console.c":491:26 806 {*jcc}
     (nil)
 -> 307)
(note 301 300 302 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 302 301 303 52 (set (reg:SI 0 ax [orig:146 npar.199_64 ] [146])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("npar") [flags 0x2]  <var_decl 0x71960af55090 npar>)
                        ] UNSPEC_GOTOFF))) [3 npar+0 S4 A32])) "drivers/chr_drv/console.c":492:21 75 {*movsi_internal}
     (nil))
(insn 303 302 304 52 (parallel [
            (set (reg:SI 0 ax [orig:147 _65 ] [147])
                (plus:SI (reg:SI 0 ax [orig:146 npar.199_64 ] [146])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":492:21 209 {*addsi_1}
     (nil))
(insn 304 303 713 52 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("npar") [flags 0x2]  <var_decl 0x71960af55090 npar>)
                        ] UNSPEC_GOTOFF))) [3 npar+0 S4 A32])
        (reg:SI 0 ax [orig:147 _65 ] [147])) "drivers/chr_drv/console.c":492:21 75 {*movsi_internal}
     (nil))
(jump_insn 713 304 714 52 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":493:17 807 {jump}
     (nil)
 -> 662)
(barrier 714 713 307)
(code_label 307 714 308 53 123 (nil) [2 uses])
(note 308 307 311 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 311 308 312 53 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 47 [0x2f]))) "drivers/chr_drv/console.c":494:23 9 {*cmpqi_1}
     (nil))
(jump_insn 312 311 313 53 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 334)
            (pc))) "drivers/chr_drv/console.c":494:23 806 {*jcc}
     (nil)
 -> 334)
(note 313 312 316 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 316 313 317 54 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8])
            (const_int 57 [0x39]))) "drivers/chr_drv/console.c":494:33 9 {*cmpqi_1}
     (nil))
(jump_insn 317 316 318 54 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 334)
            (pc))) "drivers/chr_drv/console.c":494:33 806 {*jcc}
     (nil)
 -> 334)
(note 318 317 319 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 319 318 320 55 (set (reg:SI 0 ax [orig:148 npar.200_66 ] [148])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("npar") [flags 0x2]  <var_decl 0x71960af55090 npar>)
                        ] UNSPEC_GOTOFF))) [3 npar+0 S4 A32])) "drivers/chr_drv/console.c":495:37 75 {*movsi_internal}
     (nil))
(insn 320 319 321 55 (set (reg:SI 1 dx [orig:149 _67 ] [149])
        (mem:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [orig:148 npar.200_66 ] [148])
                        (const_int 4 [0x4]))
                    (reg:SI 3 bx [82]))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[npar.200_66]+0 S4 A32])) "drivers/chr_drv/console.c":495:37 75 {*movsi_internal}
     (nil))
(insn 321 320 322 55 (set (reg:SI 0 ax [250])
        (reg:SI 1 dx [orig:149 _67 ] [149])) "drivers/chr_drv/console.c":495:32 75 {*movsi_internal}
     (nil))
(insn 322 321 323 55 (parallel [
            (set (reg:SI 0 ax [250])
                (ashift:SI (reg:SI 0 ax [250])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":495:32 655 {*ashlsi3_1}
     (nil))
(insn 323 322 324 55 (parallel [
            (set (reg:SI 0 ax [250])
                (plus:SI (reg:SI 0 ax [250])
                    (reg:SI 1 dx [orig:149 _67 ] [149])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":495:32 209 {*addsi_1}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 1 dx [orig:149 _67 ] [149])
            (const_int 5 [0x5]))
        (nil)))
(insn 324 323 326 55 (parallel [
            (set (reg:SI 0 ax [251])
                (ashift:SI (reg:SI 0 ax [250])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":495:32 655 {*ashlsi3_1}
     (nil))
(insn 326 324 327 55 (set (reg:SI 1 dx [orig:150 _68 ] [150])
        (reg:SI 0 ax [250])) "drivers/chr_drv/console.c":495:32 75 {*movsi_internal}
     (nil))
(insn 327 326 328 55 (set (reg:SI 0 ax [orig:151 _69 ] [151])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8]))) "drivers/chr_drv/console.c":495:44 153 {extendqisi2}
     (nil))
(insn 328 327 329 55 (parallel [
            (set (reg:SI 1 dx [orig:152 _70 ] [152])
                (plus:SI (reg:SI 1 dx [orig:150 _68 ] [150])
                    (reg:SI 0 ax [orig:151 _69 ] [151])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":495:44 209 {*addsi_1}
     (nil))
(insn 329 328 330 55 (set (reg:SI 0 ax [orig:153 npar.201_71 ] [153])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("npar") [flags 0x2]  <var_decl 0x71960af55090 npar>)
                        ] UNSPEC_GOTOFF))) [3 npar+0 S4 A32])) "drivers/chr_drv/console.c":495:20 75 {*movsi_internal}
     (nil))
(insn 330 329 331 55 (parallel [
            (set (reg:SI 1 dx [orig:154 _72 ] [154])
                (plus:SI (reg:SI 1 dx [orig:152 _70 ] [152])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":495:48 209 {*addsi_1}
     (nil))
(insn 331 330 715 55 (set (mem:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [orig:153 npar.201_71 ] [153])
                        (const_int 4 [0x4]))
                    (reg:SI 3 bx [82]))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[npar.201_71]+0 S4 A32])
        (reg:SI 1 dx [orig:154 _72 ] [154])) "drivers/chr_drv/console.c":495:27 75 {*movsi_internal}
     (nil))
(jump_insn 715 331 716 55 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":496:17 807 {jump}
     (nil)
 -> 662)
(barrier 716 715 334)
(code_label 334 716 335 56 124 (nil) [2 uses])
(note 335 334 336 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 336 335 337 56 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("state") [flags 0x2]  <var_decl 0x71960af552d0 state>)
                        ] UNSPEC_GOTOFF))) [3 state+0 S4 A32])
        (const_int 4 [0x4])) "drivers/chr_drv/console.c":498:23 75 {*movsi_internal}
     (nil))
(code_label 337 336 338 57 97 (nil) [1 uses])
(note 338 337 339 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 57 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("state") [flags 0x2]  <var_decl 0x71960af552d0 state>)
                        ] UNSPEC_GOTOFF))) [3 state+0 S4 A32])
        (const_int 0 [0])) "drivers/chr_drv/console.c":500:19 75 {*movsi_internal}
     (nil))
(insn 340 339 341 57 (set (reg:SI 0 ax [orig:155 _73 ] [155])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 11 [0xb])) [0 c+0 S1 A8]))) "drivers/chr_drv/console.c":501:13 153 {extendqisi2}
     (nil))
(insn 341 340 344 57 (parallel [
            (set (reg:SI 0 ax [252])
                (plus:SI (reg:SI 0 ax [orig:155 _73 ] [155])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) 209 {*addsi_1}
     (nil))
(insn 344 341 345 57 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [252])
            (const_int 53 [0x35]))) 11 {*cmpsi_1}
     (nil))
(jump_insn 345 344 675 57 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 662)
            (pc))) 806 {*jcc}
     (nil)
 -> 662)
(note 675 345 346 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 346 675 347 58 (parallel [
            (set (reg:SI 0 ax [253])
                (ashift:SI (reg:SI 0 ax [252])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 655 {*ashlsi3_1}
     (nil))
(insn 347 346 348 58 (set (reg:SI 0 ax [254])
        (mem/u/c:SI (plus:SI (plus:SI (reg:SI 0 ax [253])
                    (reg:SI 3 bx [82]))
                (const:SI (unspec:SI [
                            (label_ref:SI 350)
                        ] UNSPEC_GOTOFF))) [0  S4 A8])) 75 {*movsi_internal}
     (insn_list:REG_LABEL_OPERAND 350 (nil)))
(insn 348 347 349 58 (parallel [
            (set (reg:SI 0 ax [255])
                (plus:SI (reg:SI 0 ax [254])
                    (reg:SI 3 bx [82])))
            (clobber (reg:CC 17 flags))
        ]) 209 {*addsi_1}
     (nil))
(jump_insn 349 348 350 58 (parallel [
            (set (pc)
                (reg:SI 0 ax [255]))
            (use (label_ref 350))
        ]) 810 {*tablejump_1}
     (nil)
 -> 350)
(code_label 350 349 351 126 (nil) [2 uses])
(jump_table_data 351 350 352 (addr_diff_vec:SI (label_ref:SI 350)
         [
            (label_ref:SI 599)
            (label_ref:SI 373)
            (label_ref:SI 395)
            (label_ref:SI 417)
            (label_ref:SI 439)
            (label_ref:SI 461)
            (label_ref:SI 482)
            (label_ref:SI 353)
            (label_ref:SI 523)
            (label_ref:SI 662)
            (label_ref:SI 552)
            (label_ref:SI 562)
            (label_ref:SI 572)
            (label_ref:SI 581)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 590)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 353)
            (label_ref:SI 417)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 503)
            (label_ref:SI 395)
            (label_ref:SI 523)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 608)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 662)
            (label_ref:SI 613)
            (label_ref:SI 650)
            (label_ref:SI 662)
            (label_ref:SI 655)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 352 351 353)
(code_label 353 352 354 59 134 (nil) [2 uses])
(note 354 353 355 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 59 (set (reg:SI 0 ax [orig:156 _74 ] [156])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":504:24 75 {*movsi_internal}
     (nil))
(insn 356 355 357 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:156 _74 ] [156])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":504:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 357 356 358 59 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 362)
            (pc))) "drivers/chr_drv/console.c":504:20 806 {*jcc}
     (nil)
 -> 362)
(note 358 357 359 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 359 358 360 60 (set (reg:SI 0 ax [orig:157 _75 ] [157])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":505:24 75 {*movsi_internal}
     (nil))
(insn 360 359 361 60 (parallel [
            (set (reg:SI 0 ax [orig:158 _76 ] [158])
                (plus:SI (reg:SI 0 ax [orig:157 _75 ] [157])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":505:27 209 {*addsi_1}
     (nil))
(insn 361 360 362 60 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])
        (reg:SI 0 ax [orig:158 _76 ] [158])) "drivers/chr_drv/console.c":505:27 75 {*movsi_internal}
     (nil))
(code_label 362 361 363 61 145 (nil) [1 uses])
(note 363 362 364 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 364 363 365 61 (set (reg:SI 1 dx [orig:159 y.202_77 ] [159])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])) "drivers/chr_drv/console.c":506:17 75 {*movsi_internal}
     (nil))
(insn 365 364 366 61 (set (reg:SI 0 ax [orig:160 _78 ] [160])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":506:27 75 {*movsi_internal}
     (nil))
(insn 366 365 367 61 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":506:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 367 366 368 61 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 1 dx [orig:159 y.202_77 ] [159])) "drivers/chr_drv/console.c":506:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 368 367 369 61 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:160 _78 ] [160])) "drivers/chr_drv/console.c":506:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 369 368 370 61 (call (mem:QI (symbol_ref:SI ("gotoxy") [flags 0x3]  <function_decl 0x71960af5a200 gotoxy>) [0 gotoxy S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":506:17 812 {*call}
     (nil)
    (nil))
(insn 370 369 717 61 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":506:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 717 370 718 61 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":507:17 807 {jump}
     (nil)
 -> 662)
(barrier 718 717 373)
(code_label 373 718 374 62 143 (nil) [1 uses])
(note 374 373 375 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 375 374 376 62 (set (reg:SI 0 ax [orig:161 _79 ] [161])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":509:25 75 {*movsi_internal}
     (nil))
(insn 376 375 377 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:161 _79 ] [161])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":509:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 377 376 378 62 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 382)
            (pc))) "drivers/chr_drv/console.c":509:20 806 {*jcc}
     (nil)
 -> 382)
(note 378 377 379 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 379 378 380 63 (set (reg:SI 0 ax [orig:162 _80 ] [162])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":510:24 75 {*movsi_internal}
     (nil))
(insn 380 379 381 63 (parallel [
            (set (reg:SI 0 ax [orig:163 _81 ] [163])
                (plus:SI (reg:SI 0 ax [orig:162 _80 ] [162])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":510:27 209 {*addsi_1}
     (nil))
(insn 381 380 382 63 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])
        (reg:SI 0 ax [orig:163 _81 ] [163])) "drivers/chr_drv/console.c":510:27 75 {*movsi_internal}
     (nil))
(code_label 382 381 383 64 146 (nil) [1 uses])
(note 383 382 384 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 384 383 385 64 (set (reg:SI 0 ax [orig:164 y.203_82 ] [164])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])) "drivers/chr_drv/console.c":511:21 75 {*movsi_internal}
     (nil))
(insn 385 384 386 64 (set (reg:SI 2 cx [orig:165 _83 ] [165])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":511:38 75 {*movsi_internal}
     (nil))
(insn 386 385 766 64 (parallel [
            (set (reg:SI 0 ax [orig:164 y.203_82 ] [164])
                (minus:SI (reg:SI 0 ax [orig:164 y.203_82 ] [164])
                    (reg:SI 2 cx [orig:165 _83 ] [165])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":511:33 282 {*subsi_1}
     (nil))
(insn 766 386 387 64 (set (reg:SI 1 dx [orig:166 _84 ] [166])
        (reg:SI 0 ax [orig:164 y.203_82 ] [164])) "drivers/chr_drv/console.c":511:33 75 {*movsi_internal}
     (nil))
(insn 387 766 388 64 (set (reg:SI 0 ax [orig:167 x.204_85 ] [167])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":511:21 75 {*movsi_internal}
     (nil))
(insn 388 387 389 64 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":511:21 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 389 388 390 64 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 1 dx [orig:166 _84 ] [166])) "drivers/chr_drv/console.c":511:21 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 390 389 391 64 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:167 x.204_85 ] [167])) "drivers/chr_drv/console.c":511:21 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 391 390 392 64 (call (mem:QI (symbol_ref:SI ("gotoxy") [flags 0x3]  <function_decl 0x71960af5a200 gotoxy>) [0 gotoxy S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":511:21 812 {*call}
     (nil)
    (nil))
(insn 392 391 719 64 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":511:21 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 719 392 720 64 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":512:21 807 {jump}
     (nil)
 -> 662)
(barrier 720 719 395)
(code_label 395 720 396 65 131 (nil) [2 uses])
(note 396 395 397 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 397 396 398 65 (set (reg:SI 0 ax [orig:168 _86 ] [168])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":515:25 75 {*movsi_internal}
     (nil))
(insn 398 397 399 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:168 _86 ] [168])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":515:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 399 398 400 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 404)
            (pc))) "drivers/chr_drv/console.c":515:20 806 {*jcc}
     (nil)
 -> 404)
(note 400 399 401 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 401 400 402 66 (set (reg:SI 0 ax [orig:169 _87 ] [169])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":516:24 75 {*movsi_internal}
     (nil))
(insn 402 401 403 66 (parallel [
            (set (reg:SI 0 ax [orig:170 _88 ] [170])
                (plus:SI (reg:SI 0 ax [orig:169 _87 ] [169])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":516:27 209 {*addsi_1}
     (nil))
(insn 403 402 404 66 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])
        (reg:SI 0 ax [orig:170 _88 ] [170])) "drivers/chr_drv/console.c":516:27 75 {*movsi_internal}
     (nil))
(code_label 404 403 405 67 147 (nil) [1 uses])
(note 405 404 406 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 406 405 407 67 (set (reg:SI 1 dx [orig:171 _89 ] [171])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":517:34 75 {*movsi_internal}
     (nil))
(insn 407 406 408 67 (set (reg:SI 0 ax [orig:172 y.205_90 ] [172])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])) "drivers/chr_drv/console.c":517:17 75 {*movsi_internal}
     (nil))
(insn 408 407 409 67 (parallel [
            (set (reg:SI 1 dx [orig:173 _91 ] [173])
                (plus:SI (reg:SI 1 dx [orig:171 _89 ] [171])
                    (reg:SI 0 ax [orig:172 y.205_90 ] [172])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":517:29 209 {*addsi_1}
     (nil))
(insn 409 408 410 67 (set (reg:SI 0 ax [orig:174 x.206_92 ] [174])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":517:17 75 {*movsi_internal}
     (nil))
(insn 410 409 411 67 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":517:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 411 410 412 67 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 1 dx [orig:173 _91 ] [173])) "drivers/chr_drv/console.c":517:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 412 411 413 67 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:174 x.206_92 ] [174])) "drivers/chr_drv/console.c":517:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 413 412 414 67 (call (mem:QI (symbol_ref:SI ("gotoxy") [flags 0x3]  <function_decl 0x71960af5a200 gotoxy>) [0 gotoxy S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":517:17 812 {*call}
     (nil)
    (nil))
(insn 414 413 721 67 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":517:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 721 414 722 67 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":518:17 807 {jump}
     (nil)
 -> 662)
(barrier 722 721 417)
(code_label 417 722 418 68 133 (nil) [2 uses])
(note 418 417 419 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 419 418 420 68 (set (reg:SI 0 ax [orig:175 _93 ] [175])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":521:25 75 {*movsi_internal}
     (nil))
(insn 420 419 421 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:175 _93 ] [175])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":521:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 421 420 422 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 426)
            (pc))) "drivers/chr_drv/console.c":521:20 806 {*jcc}
     (nil)
 -> 426)
(note 422 421 423 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 423 422 424 69 (set (reg:SI 0 ax [orig:176 _94 ] [176])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":522:24 75 {*movsi_internal}
     (nil))
(insn 424 423 425 69 (parallel [
            (set (reg:SI 0 ax [orig:177 _95 ] [177])
                (plus:SI (reg:SI 0 ax [orig:176 _94 ] [176])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":522:27 209 {*addsi_1}
     (nil))
(insn 425 424 426 69 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])
        (reg:SI 0 ax [orig:177 _95 ] [177])) "drivers/chr_drv/console.c":522:27 75 {*movsi_internal}
     (nil))
(code_label 426 425 427 70 148 (nil) [1 uses])
(note 427 426 428 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 428 427 429 70 (set (reg:SI 0 ax [orig:178 y.207_96 ] [178])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])) "drivers/chr_drv/console.c":523:17 75 {*movsi_internal}
     (nil))
(insn 429 428 430 70 (set (reg:SI 2 cx [orig:179 _97 ] [179])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":523:31 75 {*movsi_internal}
     (nil))
(insn 430 429 431 70 (set (reg:SI 1 dx [orig:180 x.208_98 ] [180])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":523:17 75 {*movsi_internal}
     (nil))
(insn 431 430 432 70 (parallel [
            (set (reg:SI 1 dx [orig:181 _99 ] [181])
                (plus:SI (reg:SI 1 dx [orig:180 x.208_98 ] [180])
                    (reg:SI 2 cx [orig:179 _97 ] [179])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":523:26 209 {*addsi_1}
     (nil))
(insn 432 431 433 70 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":523:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 433 432 434 70 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:178 y.207_96 ] [178])) "drivers/chr_drv/console.c":523:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 434 433 435 70 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 1 dx [orig:181 _99 ] [181])) "drivers/chr_drv/console.c":523:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 435 434 436 70 (call (mem:QI (symbol_ref:SI ("gotoxy") [flags 0x3]  <function_decl 0x71960af5a200 gotoxy>) [0 gotoxy S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":523:17 812 {*call}
     (nil)
    (nil))
(insn 436 435 723 70 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":523:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 723 436 724 70 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":524:17 807 {jump}
     (nil)
 -> 662)
(barrier 724 723 439)
(code_label 439 724 440 71 142 (nil) [1 uses])
(note 440 439 441 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 441 440 442 71 (set (reg:SI 0 ax [orig:182 _100 ] [182])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":526:25 75 {*movsi_internal}
     (nil))
(insn 442 441 443 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:182 _100 ] [182])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":526:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 443 442 444 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 448)
            (pc))) "drivers/chr_drv/console.c":526:20 806 {*jcc}
     (nil)
 -> 448)
(note 444 443 445 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 445 444 446 72 (set (reg:SI 0 ax [orig:183 _101 ] [183])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":527:24 75 {*movsi_internal}
     (nil))
(insn 446 445 447 72 (parallel [
            (set (reg:SI 0 ax [orig:184 _102 ] [184])
                (plus:SI (reg:SI 0 ax [orig:183 _101 ] [183])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":527:27 209 {*addsi_1}
     (nil))
(insn 447 446 448 72 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])
        (reg:SI 0 ax [orig:184 _102 ] [184])) "drivers/chr_drv/console.c":527:27 75 {*movsi_internal}
     (nil))
(code_label 448 447 449 73 149 (nil) [1 uses])
(note 449 448 450 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 450 449 451 73 (set (reg:SI 0 ax [orig:185 y.209_103 ] [185])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])) "drivers/chr_drv/console.c":528:17 75 {*movsi_internal}
     (nil))
(insn 451 450 452 73 (set (reg:SI 1 dx [orig:186 x.210_104 ] [186])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":528:17 75 {*movsi_internal}
     (nil))
(insn 452 451 453 73 (set (reg:SI 2 cx [orig:187 _105 ] [187])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":528:31 75 {*movsi_internal}
     (nil))
(insn 453 452 454 73 (parallel [
            (set (reg:SI 1 dx [orig:188 _106 ] [188])
                (minus:SI (reg:SI 1 dx [orig:186 x.210_104 ] [186])
                    (reg:SI 2 cx [orig:187 _105 ] [187])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":528:26 282 {*subsi_1}
     (nil))
(insn 454 453 455 73 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":528:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 455 454 456 73 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:185 y.209_103 ] [185])) "drivers/chr_drv/console.c":528:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 456 455 457 73 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 1 dx [orig:188 _106 ] [188])) "drivers/chr_drv/console.c":528:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 457 456 458 73 (call (mem:QI (symbol_ref:SI ("gotoxy") [flags 0x3]  <function_decl 0x71960af5a200 gotoxy>) [0 gotoxy S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":528:17 812 {*call}
     (nil)
    (nil))
(insn 458 457 725 73 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":528:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 725 458 726 73 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":529:17 807 {jump}
     (nil)
 -> 662)
(barrier 726 725 461)
(code_label 461 726 462 74 141 (nil) [1 uses])
(note 462 461 463 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 463 462 464 74 (set (reg:SI 0 ax [orig:189 _107 ] [189])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":531:25 75 {*movsi_internal}
     (nil))
(insn 464 463 465 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:189 _107 ] [189])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":531:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 465 464 466 74 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 470)
            (pc))) "drivers/chr_drv/console.c":531:20 806 {*jcc}
     (nil)
 -> 470)
(note 466 465 467 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 467 466 468 75 (set (reg:SI 0 ax [orig:190 _108 ] [190])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":532:24 75 {*movsi_internal}
     (nil))
(insn 468 467 469 75 (parallel [
            (set (reg:SI 0 ax [orig:191 _109 ] [191])
                (plus:SI (reg:SI 0 ax [orig:190 _108 ] [190])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":532:27 209 {*addsi_1}
     (nil))
(insn 469 468 470 75 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])
        (reg:SI 0 ax [orig:191 _109 ] [191])) "drivers/chr_drv/console.c":532:27 75 {*movsi_internal}
     (nil))
(code_label 470 469 471 76 150 (nil) [1 uses])
(note 471 470 472 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 472 471 473 76 (set (reg:SI 1 dx [orig:192 _110 ] [192])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":533:34 75 {*movsi_internal}
     (nil))
(insn 473 472 474 76 (set (reg:SI 0 ax [orig:193 y.211_111 ] [193])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])) "drivers/chr_drv/console.c":533:17 75 {*movsi_internal}
     (nil))
(insn 474 473 475 76 (parallel [
            (set (reg:SI 0 ax [orig:194 _112 ] [194])
                (plus:SI (reg:SI 0 ax [orig:193 y.211_111 ] [193])
                    (reg:SI 1 dx [orig:192 _110 ] [192])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":533:29 209 {*addsi_1}
     (nil))
(insn 475 474 476 76 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":533:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 476 475 477 76 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:194 _112 ] [194])) "drivers/chr_drv/console.c":533:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 477 476 478 76 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (const_int 0 [0])) "drivers/chr_drv/console.c":533:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 478 477 479 76 (call (mem:QI (symbol_ref:SI ("gotoxy") [flags 0x3]  <function_decl 0x71960af5a200 gotoxy>) [0 gotoxy S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":533:17 812 {*call}
     (nil)
    (nil))
(insn 479 478 727 76 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":533:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 727 479 728 76 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":534:17 807 {jump}
     (nil)
 -> 662)
(barrier 728 727 482)
(code_label 482 728 483 77 140 (nil) [1 uses])
(note 483 482 484 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 484 483 485 77 (set (reg:SI 0 ax [orig:195 _113 ] [195])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":536:25 75 {*movsi_internal}
     (nil))
(insn 485 484 486 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:195 _113 ] [195])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":536:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 486 485 487 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 491)
            (pc))) "drivers/chr_drv/console.c":536:20 806 {*jcc}
     (nil)
 -> 491)
(note 487 486 488 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 488 487 489 78 (set (reg:SI 0 ax [orig:196 _114 ] [196])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":537:24 75 {*movsi_internal}
     (nil))
(insn 489 488 490 78 (parallel [
            (set (reg:SI 0 ax [orig:197 _115 ] [197])
                (plus:SI (reg:SI 0 ax [orig:196 _114 ] [196])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":537:27 209 {*addsi_1}
     (nil))
(insn 490 489 491 78 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])
        (reg:SI 0 ax [orig:197 _115 ] [197])) "drivers/chr_drv/console.c":537:27 75 {*movsi_internal}
     (nil))
(code_label 491 490 492 79 151 (nil) [1 uses])
(note 492 491 493 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 493 492 494 79 (set (reg:SI 0 ax [orig:198 y.212_116 ] [198])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("y") [flags 0x2]  <var_decl 0x71960af2ef30 y>)
                        ] UNSPEC_GOTOFF))) [3 y+0 S4 A32])) "drivers/chr_drv/console.c":538:17 75 {*movsi_internal}
     (nil))
(insn 494 493 495 79 (set (reg:SI 1 dx [orig:199 _117 ] [199])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":538:34 75 {*movsi_internal}
     (nil))
(insn 495 494 496 79 (parallel [
            (set (reg:SI 0 ax [orig:200 _118 ] [200])
                (minus:SI (reg:SI 0 ax [orig:198 y.212_116 ] [198])
                    (reg:SI 1 dx [orig:199 _117 ] [199])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":538:29 282 {*subsi_1}
     (nil))
(insn 496 495 497 79 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":538:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 497 496 498 79 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:200 _118 ] [200])) "drivers/chr_drv/console.c":538:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 498 497 499 79 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (const_int 0 [0])) "drivers/chr_drv/console.c":538:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 499 498 500 79 (call (mem:QI (symbol_ref:SI ("gotoxy") [flags 0x3]  <function_decl 0x71960af5a200 gotoxy>) [0 gotoxy S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":538:17 812 {*call}
     (nil)
    (nil))
(insn 500 499 729 79 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":538:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 729 500 730 79 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":539:17 807 {jump}
     (nil)
 -> 662)
(barrier 730 729 503)
(code_label 503 730 504 80 132 (nil) [1 uses])
(note 504 503 505 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 505 504 506 80 (set (reg:SI 0 ax [orig:201 _119 ] [201])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":541:24 75 {*movsi_internal}
     (nil))
(insn 506 505 507 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:201 _119 ] [201])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":541:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 507 506 508 80 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 512)
            (pc))) "drivers/chr_drv/console.c":541:20 806 {*jcc}
     (nil)
 -> 512)
(note 508 507 509 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 509 508 510 81 (set (reg:SI 0 ax [orig:202 _120 ] [202])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":542:24 75 {*movsi_internal}
     (nil))
(insn 510 509 511 81 (parallel [
            (set (reg:SI 0 ax [orig:203 _121 ] [203])
                (plus:SI (reg:SI 0 ax [orig:202 _120 ] [202])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":542:27 209 {*addsi_1}
     (nil))
(insn 511 510 512 81 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])
        (reg:SI 0 ax [orig:203 _121 ] [203])) "drivers/chr_drv/console.c":542:27 75 {*movsi_internal}
     (nil))
(code_label 512 511 513 82 152 (nil) [1 uses])
(note 513 512 514 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 514 513 515 82 (set (reg:SI 1 dx [orig:204 _122 ] [204])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":543:30 75 {*movsi_internal}
     (nil))
(insn 515 514 516 82 (set (reg:SI 0 ax [orig:205 x.213_123 ] [205])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("x") [flags 0x2]  <var_decl 0x71960af2eea0 x>)
                        ] UNSPEC_GOTOFF))) [3 x+0 S4 A32])) "drivers/chr_drv/console.c":543:17 75 {*movsi_internal}
     (nil))
(insn 516 515 517 82 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":543:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 517 516 518 82 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 1 dx [orig:204 _122 ] [204])) "drivers/chr_drv/console.c":543:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 518 517 519 82 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:205 x.213_123 ] [205])) "drivers/chr_drv/console.c":543:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 519 518 520 82 (call (mem:QI (symbol_ref:SI ("gotoxy") [flags 0x3]  <function_decl 0x71960af5a200 gotoxy>) [0 gotoxy S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":543:17 812 {*call}
     (nil)
    (nil))
(insn 520 519 731 82 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":543:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 731 520 732 82 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":544:17 807 {jump}
     (nil)
 -> 662)
(barrier 732 731 523)
(code_label 523 732 524 83 130 (nil) [2 uses])
(note 524 523 525 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 525 524 526 83 (set (reg:SI 0 ax [orig:206 _124 ] [206])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":547:24 75 {*movsi_internal}
     (nil))
(insn 526 525 527 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:206 _124 ] [206])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":547:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 527 526 528 83 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 532)
            (pc))) "drivers/chr_drv/console.c":547:20 806 {*jcc}
     (nil)
 -> 532)
(note 528 527 529 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 529 528 530 84 (set (reg:SI 0 ax [orig:207 _125 ] [207])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":548:24 75 {*movsi_internal}
     (nil))
(insn 530 529 531 84 (parallel [
            (set (reg:SI 0 ax [orig:208 _126 ] [208])
                (plus:SI (reg:SI 0 ax [orig:207 _125 ] [207])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":548:27 209 {*addsi_1}
     (nil))
(insn 531 530 532 84 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])
        (reg:SI 0 ax [orig:208 _126 ] [208])) "drivers/chr_drv/console.c":548:27 75 {*movsi_internal}
     (nil))
(code_label 532 531 533 85 153 (nil) [1 uses])
(note 533 532 534 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 534 533 535 85 (set (reg:SI 0 ax [orig:209 _127 ] [209])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (plus:SI (unspec:SI [
                                (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                            ] UNSPEC_GOTOFF)
                        (const_int 4 [0x4])))) [3 par[1]+0 S4 A32])) "drivers/chr_drv/console.c":549:24 75 {*movsi_internal}
     (nil))
(insn 535 534 536 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:209 _127 ] [209])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":549:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 536 535 537 85 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 541)
            (pc))) "drivers/chr_drv/console.c":549:20 806 {*jcc}
     (nil)
 -> 541)
(note 537 536 538 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 538 537 539 86 (set (reg:SI 0 ax [orig:210 _128 ] [210])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (plus:SI (unspec:SI [
                                (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                            ] UNSPEC_GOTOFF)
                        (const_int 4 [0x4])))) [3 par[1]+0 S4 A32])) "drivers/chr_drv/console.c":550:24 75 {*movsi_internal}
     (nil))
(insn 539 538 540 86 (parallel [
            (set (reg:SI 0 ax [orig:211 _129 ] [211])
                (plus:SI (reg:SI 0 ax [orig:210 _128 ] [210])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":550:27 209 {*addsi_1}
     (nil))
(insn 540 539 541 86 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (plus:SI (unspec:SI [
                                (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                            ] UNSPEC_GOTOFF)
                        (const_int 4 [0x4])))) [3 par[1]+0 S4 A32])
        (reg:SI 0 ax [orig:211 _129 ] [211])) "drivers/chr_drv/console.c":550:27 75 {*movsi_internal}
     (nil))
(code_label 541 540 542 87 154 (nil) [1 uses])
(note 542 541 543 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 543 542 544 87 (set (reg:SI 1 dx [orig:212 _130 ] [212])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":551:35 75 {*movsi_internal}
     (nil))
(insn 544 543 545 87 (set (reg:SI 0 ax [orig:213 _131 ] [213])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (plus:SI (unspec:SI [
                                (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                            ] UNSPEC_GOTOFF)
                        (const_int 4 [0x4])))) [3 par[1]+0 S4 A32])) "drivers/chr_drv/console.c":551:27 75 {*movsi_internal}
     (nil))
(insn 545 544 546 87 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":551:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 546 545 547 87 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 1 dx [orig:212 _130 ] [212])) "drivers/chr_drv/console.c":551:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 547 546 548 87 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:213 _131 ] [213])) "drivers/chr_drv/console.c":551:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 548 547 549 87 (call (mem:QI (symbol_ref:SI ("gotoxy") [flags 0x3]  <function_decl 0x71960af5a200 gotoxy>) [0 gotoxy S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":551:17 812 {*call}
     (nil)
    (nil))
(insn 549 548 733 87 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":551:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 733 549 734 87 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":552:17 807 {jump}
     (nil)
 -> 662)
(barrier 734 733 552)
(code_label 552 734 553 88 139 (nil) [1 uses])
(note 553 552 554 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 554 553 556 88 (set (reg:SI 0 ax [orig:214 _132 ] [214])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":554:26 75 {*movsi_internal}
     (nil))
(insn 556 554 557 88 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":554:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 557 556 558 88 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg:SI 0 ax [orig:215 _133 ] [215])) "drivers/chr_drv/console.c":554:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 558 557 559 88 (call (mem:QI (symbol_ref:SI ("csi_J") [flags 0x3]  <function_decl 0x71960af5ae00 csi_J>) [0 csi_J S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":554:17 812 {*call}
     (nil)
    (nil))
(insn 559 558 735 88 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":554:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 735 559 736 88 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":555:17 807 {jump}
     (nil)
 -> 662)
(barrier 736 735 562)
(code_label 562 736 563 89 138 (nil) [1 uses])
(note 563 562 564 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 564 563 566 89 (set (reg:SI 0 ax [orig:216 _134 ] [216])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":557:26 75 {*movsi_internal}
     (nil))
(insn 566 564 567 89 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":557:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 567 566 568 89 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg:SI 0 ax [orig:217 _135 ] [217])) "drivers/chr_drv/console.c":557:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 568 567 569 89 (call (mem:QI (symbol_ref:SI ("csi_K") [flags 0x3]  <function_decl 0x71960af5f000 csi_K>) [0 csi_K S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":557:17 812 {*call}
     (nil)
    (nil))
(insn 569 568 737 89 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":557:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 737 569 738 89 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":558:17 807 {jump}
     (nil)
 -> 662)
(barrier 738 737 572)
(code_label 572 738 573 90 137 (nil) [1 uses])
(note 573 572 574 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 574 573 575 90 (set (reg:SI 0 ax [orig:218 _136 ] [218])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":560:26 75 {*movsi_internal}
     (nil))
(insn 575 574 576 90 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":560:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 576 575 577 90 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:218 _136 ] [218])) "drivers/chr_drv/console.c":560:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 577 576 578 90 (call (mem:QI (symbol_ref:SI ("csi_L") [flags 0x3]  <function_decl 0x71960af5f400 csi_L>) [0 csi_L S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":560:17 812 {*call}
     (nil)
    (nil))
(insn 578 577 739 90 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":560:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 739 578 740 90 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":561:17 807 {jump}
     (nil)
 -> 662)
(barrier 740 739 581)
(code_label 581 740 582 91 136 (nil) [1 uses])
(note 582 581 583 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 583 582 584 91 (set (reg:SI 0 ax [orig:219 _137 ] [219])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":563:26 75 {*movsi_internal}
     (nil))
(insn 584 583 585 91 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":563:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 585 584 586 91 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:219 _137 ] [219])) "drivers/chr_drv/console.c":563:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 586 585 587 91 (call (mem:QI (symbol_ref:SI ("csi_M") [flags 0x3]  <function_decl 0x71960af68100 csi_M>) [0 csi_M S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":563:17 812 {*call}
     (nil)
    (nil))
(insn 587 586 741 91 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":563:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 741 587 742 91 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":564:17 807 {jump}
     (nil)
 -> 662)
(barrier 742 741 590)
(code_label 590 742 591 92 135 (nil) [1 uses])
(note 591 590 592 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 592 591 593 92 (set (reg:SI 0 ax [orig:220 _138 ] [220])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":566:26 75 {*movsi_internal}
     (nil))
(insn 593 592 594 92 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":566:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 594 593 595 92 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:220 _138 ] [220])) "drivers/chr_drv/console.c":566:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 595 594 596 92 (call (mem:QI (symbol_ref:SI ("csi_P") [flags 0x3]  <function_decl 0x71960af68500 csi_P>) [0 csi_P S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":566:17 812 {*call}
     (nil)
    (nil))
(insn 596 595 743 92 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":566:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 743 596 744 92 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":567:17 807 {jump}
     (nil)
 -> 662)
(barrier 744 743 599)
(code_label 599 744 600 93 144 (nil) [1 uses])
(note 600 599 601 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 601 600 602 93 (set (reg:SI 0 ax [orig:221 _139 ] [221])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":569:27 75 {*movsi_internal}
     (nil))
(insn 602 601 603 93 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":569:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 603 602 604 93 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:221 _139 ] [221])) "drivers/chr_drv/console.c":569:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 604 603 605 93 (call (mem:QI (symbol_ref:SI ("csi_at") [flags 0x3]  <function_decl 0x71960af68300 csi_at>) [0 csi_at S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":569:17 812 {*call}
     (nil)
    (nil))
(insn 605 604 745 93 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":569:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 745 605 746 93 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":570:17 807 {jump}
     (nil)
 -> 662)
(barrier 746 745 608)
(code_label 608 746 609 94 129 (nil) [1 uses])
(note 609 608 610 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(call_insn 610 609 747 94 (call (mem:QI (symbol_ref:SI ("csi_m") [flags 0x3]  <function_decl 0x71960af68700 csi_m>) [0 csi_m S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":572:17 812 {*call}
     (nil)
    (nil))
(jump_insn 747 610 748 94 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":573:17 807 {jump}
     (nil)
 -> 662)
(barrier 748 747 613)
(code_label 613 748 614 95 128 (nil) [1 uses])
(note 614 613 615 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 615 614 616 95 (set (reg:SI 0 ax [orig:222 _140 ] [222])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":575:24 75 {*movsi_internal}
     (nil))
(insn 616 615 617 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:222 _140 ] [222])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":575:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 617 616 618 95 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 622)
            (pc))) "drivers/chr_drv/console.c":575:20 806 {*jcc}
     (nil)
 -> 622)
(note 618 617 619 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 619 618 620 96 (set (reg:SI 0 ax [orig:223 _141 ] [223])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":576:24 75 {*movsi_internal}
     (nil))
(insn 620 619 621 96 (parallel [
            (set (reg:SI 0 ax [orig:224 _142 ] [224])
                (plus:SI (reg:SI 0 ax [orig:223 _141 ] [223])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":576:27 209 {*addsi_1}
     (nil))
(insn 621 620 622 96 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])
        (reg:SI 0 ax [orig:224 _142 ] [224])) "drivers/chr_drv/console.c":576:27 75 {*movsi_internal}
     (nil))
(code_label 622 621 623 97 155 (nil) [1 uses])
(note 623 622 624 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 624 623 625 97 (set (reg:SI 0 ax [orig:225 _143 ] [225])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (plus:SI (unspec:SI [
                                (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                            ] UNSPEC_GOTOFF)
                        (const_int 4 [0x4])))) [3 par[1]+0 S4 A32])) "drivers/chr_drv/console.c":577:25 75 {*movsi_internal}
     (nil))
(insn 625 624 626 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:225 _143 ] [225])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":577:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 626 625 627 97 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 630)
            (pc))) "drivers/chr_drv/console.c":577:20 806 {*jcc}
     (nil)
 -> 630)
(note 627 626 628 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 628 627 629 98 (set (reg:SI 0 ax [orig:226 video_num_lines.214_144 ] [226])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_lines") [flags 0x2]  <var_decl 0x71960af2e900 video_num_lines>)
                        ] UNSPEC_GOTOFF))) [3 video_num_lines+0 S4 A32])) "drivers/chr_drv/console.c":578:28 75 {*movsi_internal}
     (nil))
(insn 629 628 630 98 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (plus:SI (unspec:SI [
                                (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                            ] UNSPEC_GOTOFF)
                        (const_int 4 [0x4])))) [3 par[1]+0 S4 A32])
        (reg:SI 0 ax [orig:226 video_num_lines.214_144 ] [226])) "drivers/chr_drv/console.c":578:28 75 {*movsi_internal}
     (nil))
(code_label 630 629 631 99 156 (nil) [1 uses])
(note 631 630 632 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 632 631 633 99 (set (reg:SI 1 dx [orig:227 _145 ] [227])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":579:24 75 {*movsi_internal}
     (nil))
(insn 633 632 634 99 (set (reg:SI 0 ax [orig:228 _146 ] [228])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (plus:SI (unspec:SI [
                                (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                            ] UNSPEC_GOTOFF)
                        (const_int 4 [0x4])))) [3 par[1]+0 S4 A32])) "drivers/chr_drv/console.c":579:33 75 {*movsi_internal}
     (nil))
(insn 634 633 635 99 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:227 _145 ] [227])
            (reg:SI 0 ax [orig:228 _146 ] [228]))) "drivers/chr_drv/console.c":579:20 11 {*cmpsi_1}
     (nil))
(jump_insn 635 634 636 99 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 646)
            (pc))) "drivers/chr_drv/console.c":579:20 806 {*jcc}
     (nil)
 -> 646)
(note 636 635 637 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 637 636 638 100 (set (reg:SI 1 dx [orig:229 _147 ] [229])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (plus:SI (unspec:SI [
                                (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                            ] UNSPEC_GOTOFF)
                        (const_int 4 [0x4])))) [3 par[1]+0 S4 A32])) "drivers/chr_drv/console.c":579:43 75 {*movsi_internal}
     (nil))
(insn 638 637 639 100 (set (reg:SI 0 ax [orig:230 video_num_lines.215_148 ] [230])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_lines") [flags 0x2]  <var_decl 0x71960af2e900 video_num_lines>)
                        ] UNSPEC_GOTOFF))) [3 video_num_lines+0 S4 A32])) "drivers/chr_drv/console.c":579:47 75 {*movsi_internal}
     (nil))
(insn 639 638 640 100 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:229 _147 ] [229])
            (reg:SI 0 ax [orig:230 video_num_lines.215_148 ] [230]))) "drivers/chr_drv/console.c":579:37 11 {*cmpsi_1}
     (nil))
(jump_insn 640 639 641 100 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 646)
            (pc))) "drivers/chr_drv/console.c":579:37 806 {*jcc}
     (nil)
 -> 646)
(note 641 640 642 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 642 641 643 101 (set (reg:SI 0 ax [orig:231 _149 ] [231])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                        ] UNSPEC_GOTOFF))) [3 par[0]+0 S4 A256])) "drivers/chr_drv/console.c":580:30 75 {*movsi_internal}
     (nil))
(insn 643 642 644 101 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("top") [flags 0x2]  <var_decl 0x71960af2e2d0 top>)
                        ] UNSPEC_GOTOFF))) [3 top+0 S4 A32])
        (reg:SI 0 ax [orig:231 _149 ] [231])) "drivers/chr_drv/console.c":580:25 75 {*movsi_internal}
     (nil))
(insn 644 643 645 101 (set (reg:SI 0 ax [orig:232 _150 ] [232])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (plus:SI (unspec:SI [
                                (symbol_ref:SI ("par") [flags 0x2]  <var_decl 0x71960af55120 par>)
                            ] UNSPEC_GOTOFF)
                        (const_int 4 [0x4])))) [3 par[1]+0 S4 A32])) "drivers/chr_drv/console.c":581:33 75 {*movsi_internal}
     (nil))
(insn 645 644 646 101 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bottom") [flags 0x2]  <var_decl 0x71960af55000 bottom>)
                        ] UNSPEC_GOTOFF))) [3 bottom+0 S4 A32])
        (reg:SI 0 ax [orig:232 _150 ] [232])) "drivers/chr_drv/console.c":581:28 75 {*movsi_internal}
     (nil))
(code_label 646 645 647 102 157 (nil) [2 uses])
(note 647 646 749 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(jump_insn 749 647 750 102 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":583:17 807 {jump}
     (nil)
 -> 662)
(barrier 750 749 650)
(code_label 650 750 651 103 127 (nil) [1 uses])
(note 651 650 652 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(call_insn 652 651 751 103 (call (mem:QI (symbol_ref:SI ("save_cur") [flags 0x3]  <function_decl 0x71960af5a400 save_cur>) [0 save_cur S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":585:17 812 {*call}
     (nil)
    (nil))
(jump_insn 751 652 752 103 (set (pc)
        (label_ref 662)) "drivers/chr_drv/console.c":586:17 807 {jump}
     (nil)
 -> 662)
(barrier 752 751 655)
(code_label 655 752 656 104 125 (nil) [1 uses])
(note 656 655 657 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(call_insn 657 656 753 104 (call (mem:QI (symbol_ref:SI ("restore_cur") [flags 0x3]  <function_decl 0x71960af5a600 restore_cur>) [0 restore_cur S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":588:17 812 {*call}
     (nil)
    (nil))
(note 753 657 754 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 754 753 662 107 (const_int 0 [0]) "drivers/chr_drv/console.c":589:17 843 {nop}
     (nil))
(code_label 662 754 663 105 96 (nil) [57 uses])
(note 663 662 664 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 664 663 665 105 (set (reg:SI 0 ax [orig:233 nr.216_151 ] [233])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [4 nr+0 S4 A32])) "drivers/chr_drv/console.c":425:14 75 {*movsi_internal}
     (nil))
(insn 665 664 666 105 (parallel [
            (set (reg:SI 1 dx [256])
                (plus:SI (reg:SI 0 ax [orig:233 nr.216_151 ] [233])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":425:14 209 {*addsi_1}
     (nil))
(insn 666 665 668 105 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [4 nr+0 S4 A32])
        (reg:SI 1 dx [256])) "drivers/chr_drv/console.c":425:14 75 {*movsi_internal}
     (nil))
(insn 668 666 669 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:233 nr.216_151 ] [233])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":425:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 669 668 670 105 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 667)
            (pc))) "drivers/chr_drv/console.c":425:12 806 {*jcc}
     (nil)
 -> 667)
(note 670 669 671 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(call_insn 671 670 755 106 (call (mem:QI (symbol_ref:SI ("set_cursor") [flags 0x3]  <function_decl 0x71960af5a800 set_cursor>) [0 set_cursor S1 A8])
        (const_int 0 [0])) "drivers/chr_drv/console.c":593:5 812 {*call}
     (nil)
    (nil))
(note 755 671 756 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 756 755 758 108 (const_int 0 [0]) "drivers/chr_drv/console.c":594:1 843 {nop}
     (nil))
(note 758 756 0 NOTE_INSN_DELETED)

;; Function sysbeepstop (sysbeepstop, funcdef_no=25, decl_uid=1564, cgraph_uid=26, symbol_order=50)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 7:  (0) =a  (1) d
      Creating newreg=90 from oldreg=87, assigning class DREG to r90
    7: {r86:QI=asm_operands;clobber flags:CC;}
      REG_DEAD r87:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   19: r90:SI=r87:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 5:  (0) m  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 8:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) a  (1) d
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 16: point = 0, n_alt = -1
  BB 2
   Insn 12: point = 0, n_alt = 0
   Insn 11: point = 1, n_alt = 0
   Insn 10: point = 2, n_alt = 0
   Insn 9: point = 4, n_alt = 0
   Insn 8: point = 6, n_alt = 4
   Insn 5: point = 7, n_alt = 8
   Insn 7: point = 8, n_alt = 0
   Insn 19: point = 10, n_alt = -2
	Hard reg 0 is preferable by r90 with profit 1000
   Insn 6: point = 12, n_alt = 0
   Insn 17: point = 13, n_alt = 0
 r82: [13..13]
 r83: [3..4]
 r84: [0..2]
 r85: [5..6]
 r86: [7..8]
 r87: [11..12]
 r88: [0..1]
 r90: [9..10]
Compressing live ranges: from 14 to 13 - 92%
Ranges after the compression:
 r82: [12..12]
 r83: [2..3]
 r84: [0..1]
 r85: [4..5]
 r86: [6..7]
 r87: [10..11]
 r88: [0..1]
 r90: [8..9]

********** Assignment #1: **********

	 Assigning to 90 (cl=DREG, orig=87, freq=2000, tfirst=90, tfreq=2000)...
	   Assign 1 to reload r90 (freq=2000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 17
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 12
changing reg in insn 8
changing reg in insn 9
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 11
changing reg in insn 12
starting the processing of deferred insns
ending the processing of deferred insns


sysbeepstop

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 17 [flags]
;;  ref usage 	r0={7d,5u} r1={3d,2u} r2={1d} r7={1d,5u} r17={4d} 
;;    total ref usage 28{16d,12u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 17 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 17 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 17 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 19 2 (set (reg:SI 0 ax [87])
        (const_int 97 [0x61])) "drivers/chr_drv/console.c":599:2 75 {*movsi_internal}
     (nil))
(insn 19 6 7 2 (set (reg:SI 1 dx [87])
        (reg:SI 0 ax [87])) "drivers/chr_drv/console.c":599:2 75 {*movsi_internal}
     (nil))
(insn 7 19 5 2 (parallel [
            (set (reg:QI 0 ax [orig:86 _v ] [86])
                (asm_operands/v:QI ("inb %%dx, %%al
	jmp 1f
1:	jmp 1f
1:") ("=a") 0 [
                        (reg:SI 1 dx [87])
                    ]
                     [
                        (asm_input:SI ("d") drivers/chr_drv/console.c:599)
                    ]
                     [] drivers/chr_drv/console.c:599))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":599:2 -1
     (nil))
(insn 5 7 8 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 15 [0xf])) [0 _v+0 S1 A8])
        (reg:QI 0 ax [orig:86 _v ] [86])) "drivers/chr_drv/console.c":599:2 77 {*movqi_internal}
     (nil))
(insn 8 5 9 2 (set (reg:QI 0 ax [orig:85 _4 ] [85])
        (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 15 [0xf])) [0 _v+0 S1 A8])) "drivers/chr_drv/console.c":599:2 77 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (zero_extend:SI (reg:QI 0 ax [orig:85 _4 ] [85]))) "drivers/chr_drv/console.c":599:2 143 {*zero_extendqisi2}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 0 ax [orig:84 _2 ] [84])
                (and:SI (reg:SI 0 ax [orig:83 _1 ] [83])
                    (const_int 252 [0xfc])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":599:2 490 {*andsi_1}
     (nil))
(insn 11 10 12 2 (set (reg:SI 1 dx [88])
        (const_int 97 [0x61])) "drivers/chr_drv/console.c":599:2 75 {*movsi_internal}
     (nil))
(insn 12 11 15 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx") ("") 0 [
                    (reg:SI 0 ax [orig:84 _2 ] [84])
                    (reg:SI 1 dx [88])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/console.c:599)
                    (asm_input:SI ("d") drivers/chr_drv/console.c:599)
                ]
                 [] drivers/chr_drv/console.c:599)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":599:2 -1
     (nil))
(note 15 12 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 18 3 (const_int 0 [0]) "drivers/chr_drv/console.c":600:1 843 {nop}
     (nil))
(note 18 16 0 NOTE_INSN_DELETED)

;; Function sysbeep (sysbeep, funcdef_no=26, decl_uid=1386, cgraph_uid=27, symbol_order=51)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 7:  (0) =a  (1) d
      Creating newreg=96 from oldreg=87, assigning class DREG to r96
    7: {r86:QI=asm_operands;clobber flags:CC;}
      REG_DEAD r87:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   29: r96:SI=r87:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 5:  (0) m  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 8:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =qm  (1) %0  (2) qn {*iorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) a  (1) d
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) a  (1) d
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) a  (1) d
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) a  (1) d
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 26: point = 0, n_alt = -1
  BB 2
   Insn 22: point = 0, n_alt = 1
   Insn 21: point = 1, n_alt = 0
   Insn 20: point = 2, n_alt = 0
   Insn 19: point = 3, n_alt = 0
   Insn 18: point = 4, n_alt = 0
   Insn 17: point = 5, n_alt = 0
   Insn 16: point = 6, n_alt = 0
   Insn 15: point = 7, n_alt = 0
   Insn 14: point = 8, n_alt = 0
   Insn 13: point = 9, n_alt = 0
   Insn 12: point = 10, n_alt = 0
   Insn 11: point = 11, n_alt = 0
   Insn 10: point = 12, n_alt = 0
   Insn 9: point = 14, n_alt = 0
   Insn 8: point = 16, n_alt = 4
   Insn 5: point = 17, n_alt = 8
   Insn 7: point = 18, n_alt = 0
   Insn 29: point = 20, n_alt = -2
	Hard reg 0 is preferable by r96 with profit 1000
   Insn 6: point = 22, n_alt = 0
   Insn 27: point = 23, n_alt = 0
 r82: [0..23]
 r83: [13..14]
 r84: [10..12]
 r85: [15..16]
 r86: [17..18]
 r87: [21..22]
 r88: [10..11]
 r89: [7..9]
 r90: [7..8]
 r91: [4..6]
 r92: [4..5]
 r93: [1..3]
 r94: [1..2]
 r96: [19..20]
Compressing live ranges: from 24 to 18 - 75%
Ranges after the compression:
 r82: [0..17]
 r83: [8..9]
 r84: [6..7]
 r85: [10..11]
 r86: [12..13]
 r87: [16..17]
 r88: [6..7]
 r89: [4..5]
 r90: [4..5]
 r91: [2..3]
 r92: [2..3]
 r93: [0..1]
 r94: [0..1]
 r96: [14..15]

********** Assignment #1: **********

	 Assigning to 96 (cl=DREG, orig=87, freq=2000, tfirst=96, tfreq=2000)...
	   Assign 1 to reload r96 (freq=2000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 27
changing reg in insn 22
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 12
changing reg in insn 8
changing reg in insn 9
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 15
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 21
changing reg in insn 20
changing reg in insn 21
starting the processing of deferred insns
ending the processing of deferred insns


sysbeep

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={9d,8u} r1={6d,5u} r2={2d,1u} r7={1d,5u} r17={7d} 
;;    total ref usage 44{25d,19u,0e} in 21{21 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 27 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 27 3 2 2 (parallel [
            (set (reg:SI 2 cx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 27 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 29 2 (set (reg:SI 0 ax [87])
        (const_int 97 [0x61])) "drivers/chr_drv/console.c":605:2 75 {*movsi_internal}
     (nil))
(insn 29 6 7 2 (set (reg:SI 1 dx [87])
        (reg:SI 0 ax [87])) "drivers/chr_drv/console.c":605:2 75 {*movsi_internal}
     (nil))
(insn 7 29 5 2 (parallel [
            (set (reg:QI 0 ax [orig:86 _v ] [86])
                (asm_operands/v:QI ("inb %%dx, %%al
	jmp 1f
1:	jmp 1f
1:") ("=a") 0 [
                        (reg:SI 1 dx [87])
                    ]
                     [
                        (asm_input:SI ("d") drivers/chr_drv/console.c:605)
                    ]
                     [] drivers/chr_drv/console.c:605))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":605:2 -1
     (nil))
(insn 5 7 8 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 15 [0xf])) [0 _v+0 S1 A8])
        (reg:QI 0 ax [orig:86 _v ] [86])) "drivers/chr_drv/console.c":605:2 77 {*movqi_internal}
     (nil))
(insn 8 5 9 2 (set (reg:QI 0 ax [orig:85 _4 ] [85])
        (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 15 [0xf])) [0 _v+0 S1 A8])) "drivers/chr_drv/console.c":605:2 77 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:QI 0 ax [orig:83 _1 ] [83])
                (ior:QI (reg:QI 0 ax [orig:85 _4 ] [85])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":605:2 530 {*iorqi_1}
     (nil))
(insn 10 9 11 2 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (zero_extend:SI (reg:QI 0 ax [orig:83 _1 ] [83]))) "drivers/chr_drv/console.c":605:2 143 {*zero_extendqisi2}
     (nil))
(insn 11 10 12 2 (set (reg:SI 1 dx [88])
        (const_int 97 [0x61])) "drivers/chr_drv/console.c":605:2 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 0 ax [orig:84 _2 ] [84])
                    (reg:SI 1 dx [88])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/console.c:605)
                    (asm_input:SI ("d") drivers/chr_drv/console.c:605)
                ]
                 [] drivers/chr_drv/console.c:605)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":605:2 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 0 ax [89])
        (const_int 182 [0xb6])) "drivers/chr_drv/console.c":607:2 75 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SI 1 dx [90])
        (const_int 67 [0x43])) "drivers/chr_drv/console.c":607:2 75 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 0 ax [89])
                    (reg:SI 1 dx [90])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/console.c:607)
                    (asm_input:SI ("d") drivers/chr_drv/console.c:607)
                ]
                 [] drivers/chr_drv/console.c:607)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":607:2 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 0 ax [91])
        (const_int 55 [0x37])) "drivers/chr_drv/console.c":609:2 75 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 1 dx [92])
        (const_int 66 [0x42])) "drivers/chr_drv/console.c":609:2 75 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 0 ax [91])
                    (reg:SI 1 dx [92])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/console.c:609)
                    (asm_input:SI ("d") drivers/chr_drv/console.c:609)
                ]
                 [] drivers/chr_drv/console.c:609)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":609:2 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 0 ax [93])
        (const_int 6 [0x6])) "drivers/chr_drv/console.c":610:2 75 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 1 dx [94])
        (const_int 66 [0x42])) "drivers/chr_drv/console.c":610:2 75 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (parallel [
            (asm_operands/v ("outb %%al, %%dx") ("") 0 [
                    (reg:SI 0 ax [93])
                    (reg:SI 1 dx [94])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/console.c:610)
                    (asm_input:SI ("d") drivers/chr_drv/console.c:610)
                ]
                 [] drivers/chr_drv/console.c:610)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":610:2 -1
     (nil))
(insn 22 21 25 2 (set (mem/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("beepcount") [flags 0x2]  <var_decl 0x71960af55480 beepcount>)
                        ] UNSPEC_GOTOFF))) [4 beepcount+0 S4 A32])
        (const_int 12 [0xc])) "drivers/chr_drv/console.c":612:12 75 {*movsi_internal}
     (nil))
(note 25 22 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 28 3 (const_int 0 [0]) "drivers/chr_drv/console.c":613:1 843 {nop}
     (nil))
(note 28 26 0 NOTE_INSN_DELETED)

;; Function clear_line (clear_line, funcdef_no=27, decl_uid=1575, cgraph_uid=28, symbol_order=52)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 6:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =rm  (1) 0  (2) cI {*lshrhi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) rm {*zero_extendhisi2}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 9:  (0) r  (1) 0  (2) mr {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 16
	 Choosing alt 0 in insn 16:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 30:  (0) q  (1) m {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 31:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 32:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 36:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =rm  (1) 0  (2) cI {*lshrhi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) rm  (1) re {*cmpsi_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 6 5 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 51: point = 0, n_alt = -1
  BB 5
  BB 6
   Insn 49: point = 0, n_alt = -1
  BB 4
   Insn 42: point = 0, n_alt = -1
   Insn 41: point = 0, n_alt = 0
   Insn 39: point = 1, n_alt = 0
   Insn 38: point = 3, n_alt = 0
   Insn 37: point = 5, n_alt = 0
   Insn 36: point = 7, n_alt = 2
   Insn 35: point = 9, n_alt = 0
  BB 2
   Insn 46: point = 10, n_alt = -1
   Insn 20: point = 10, n_alt = 1
   Insn 19: point = 10, n_alt = 1
   Insn 18: point = 11, n_alt = 0
   Insn 17: point = 13, n_alt = 1
   Insn 16: point = 14, n_alt = 0
   Insn 15: point = 16, n_alt = 0
   Insn 11: point = 17, n_alt = -2
   Insn 10: point = 19, n_alt = 0
   Insn 9: point = 21, n_alt = 2
   Insn 8: point = 23, n_alt = 0
   Insn 7: point = 25, n_alt = 0
   Insn 6: point = 27, n_alt = 2
   Insn 5: point = 29, n_alt = 0
   Insn 52: point = 30, n_alt = 0
  BB 3
   Insn 32: point = 31, n_alt = 0
   Insn 31: point = 31, n_alt = 8
   Insn 30: point = 32, n_alt = 4
   Insn 29: point = 34, n_alt = 0
   Insn 28: point = 35, n_alt = 0
   Insn 27: point = 37, n_alt = 0
   Insn 26: point = 38, n_alt = -2
   Insn 25: point = 40, n_alt = 0
   Insn 24: point = 42, n_alt = 0
 r82: [12..30]
 r83: [28..29]
 r84: [26..27]
 r85: [24..25]
 r86: [22..23]
 r87: [20..21]
 r88: [18..19]
 r89: [15..17]
 r90: [39..40]
 r91: [36..38]
 r92: [31..35]
 r93: [31..32]
 r94: [8..9]
 r95: [6..7]
 r96: [4..5]
 r97: [2..3]
 r98: [0..1]
 r101: [13..14]
 r102: [15..16]
 r103: [10..11]
 r104: [41..42]
 r105: [36..37]
 r106: [33..34]
Compressing live ranges: from 43 to 38 - 88%
Ranges after the compression:
 r82: [12..27]
 r83: [26..27]
 r84: [24..25]
 r85: [22..23]
 r86: [20..21]
 r87: [18..19]
 r88: [16..17]
 r89: [14..15]
 r90: [34..35]
 r91: [32..33]
 r92: [28..31]
 r93: [28..29]
 r94: [8..9]
 r95: [6..7]
 r96: [4..5]
 r97: [2..3]
 r98: [0..1]
 r101: [12..13]
 r102: [14..15]
 r103: [10..11]
 r104: [36..37]
 r105: [32..33]
 r106: [30..31]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 52
changing reg in insn 18
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 16
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 28
changing reg in insn 28
changing reg in insn 28
changing reg in insn 31
changing reg in insn 30
changing reg in insn 31
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 37
changing reg in insn 37
changing reg in insn 38
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 41
changing reg in insn 16
changing reg in insn 17
changing reg in insn 15
changing reg in insn 18
changing reg in insn 19
changing reg in insn 24
changing reg in insn 25
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
starting the processing of deferred insns
ending the processing of deferred insns


clear_line

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={13d,12u} r1={11d,10u,1e} r2={2d,1u,1e} r7={1d,18u} r16={1e} r17={11d,1u} r19={2e} 
;;    total ref usage 85{38d,42u,5e} in 33{33 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 52 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 52 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 52 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 1 dx [orig:83 _1 ] [83])
        (const_int 589830 [0x90006])) "drivers/chr_drv/console.c":623:27 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:HI 1 dx [orig:84 _2 ] [84])
        (mem:HI (reg/f:SI 1 dx [orig:83 _1 ] [83]) [8 *_1+0 S2 A16])) "drivers/chr_drv/console.c":623:27 76 {*movhi_internal}
     (nil))
(insn 7 6 8 2 (parallel [
            (set (reg:HI 1 dx [orig:85 _3 ] [85])
                (lshiftrt:HI (reg:HI 1 dx [orig:84 _2 ] [84])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":623:27 711 {*lshrhi3_1}
     (nil))
(insn 8 7 9 2 (set (reg:SI 1 dx [orig:86 _4 ] [86])
        (zero_extend:SI (reg:HI 1 dx [orig:85 _3 ] [85]))) "drivers/chr_drv/console.c":623:27 144 {*zero_extendhisi2}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:SI 1 dx [orig:87 _5 ] [87])
                (mult:SI (reg:SI 1 dx [orig:86 _4 ] [86])
                    (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 24 [0x18])) [4 n+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":623:25 408 {*mulsi3_1}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 1 dx [orig:88 _6 ] [88])
                (ashift:SI (reg:SI 1 dx [orig:87 _5 ] [87])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":623:43 655 {*ashlsi3_1}
     (nil))
(insn 11 10 15 2 (set (reg:SI 2 cx [orig:89 _7 ] [89])
        (reg:SI 1 dx [orig:88 _6 ] [88])) "drivers/chr_drv/console.c":623:43 75 {*movsi_internal}
     (nil))
(insn 15 11 16 2 (set (reg/f:SI 1 dx [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [9 buffer+0 S4 A32])) "drivers/chr_drv/console.c":623:8 75 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg:SI 1 dx [101])
                (plus:SI (reg/f:SI 1 dx [102])
                    (reg:SI 2 cx [orig:89 _7 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":623:8 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [9 buffer+0 S4 A32])
            (reg:SI 2 cx [orig:89 _7 ] [89]))
        (nil)))
(insn 17 16 18 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 ptr+0 S4 A32])
        (reg:SI 1 dx [101])) "drivers/chr_drv/console.c":623:8 75 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg/f:SI 0 ax [103])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x71960ac37510 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "drivers/chr_drv/console.c":624:8 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x71960ac37510 *.LC1>)
        (nil)))
(insn 19 18 20 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [9 cont+0 S4 A32])
        (reg/f:SI 0 ax [103])) "drivers/chr_drv/console.c":624:8 75 {*movsi_internal}
     (nil))
(insn 20 19 46 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [4 i+0 S4 A32])
        (const_int 0 [0])) "drivers/chr_drv/console.c":626:9 75 {*movsi_internal}
     (nil))
(jump_insn 46 20 47 2 (set (pc)
        (label_ref 33)) "drivers/chr_drv/console.c":626:2 807 {jump}
     (nil)
 -> 33)
(barrier 47 46 40)
(code_label 40 47 23 3 163 (nil) [1 uses])
(note 23 40 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 3 (set (reg:SI 0 ax [104])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [4 i+0 S4 A32])) "drivers/chr_drv/console.c":627:9 75 {*movsi_internal}
     (nil))
(insn 25 24 26 3 (parallel [
            (set (reg:SI 0 ax [orig:90 _8 ] [90])
                (ashift:SI (reg:SI 0 ax [104])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":627:9 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [4 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 26 25 27 3 (set (reg:SI 1 dx [orig:91 _9 ] [91])
        (reg:SI 0 ax [orig:90 _8 ] [90])) "drivers/chr_drv/console.c":627:9 75 {*movsi_internal}
     (nil))
(insn 27 26 28 3 (set (reg/f:SI 0 ax [105])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 ptr+0 S4 A32])) "drivers/chr_drv/console.c":627:6 75 {*movsi_internal}
     (nil))
(insn 28 27 29 3 (parallel [
            (set (reg/f:SI 1 dx [orig:92 _10 ] [92])
                (plus:SI (reg:SI 1 dx [orig:91 _9 ] [91])
                    (reg/f:SI 0 ax [105])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":627:6 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 ptr+0 S4 A32])
            (reg:SI 1 dx [orig:91 _9 ] [91]))
        (nil)))
(insn 29 28 30 3 (set (reg/f:SI 0 ax [106])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [9 cont+0 S4 A32])) "drivers/chr_drv/console.c":627:16 75 {*movsi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:QI 0 ax [orig:93 _11 ] [93])
        (mem:QI (reg/f:SI 0 ax [106]) [0 *cont_23+0 S1 A8])) "drivers/chr_drv/console.c":627:16 77 {*movqi_internal}
     (nil))
(insn 31 30 32 3 (set (mem:QI (reg/f:SI 1 dx [orig:92 _10 ] [92]) [0 *_10+0 S1 A8])
        (reg:QI 0 ax [orig:93 _11 ] [93])) "drivers/chr_drv/console.c":627:14 77 {*movqi_internal}
     (nil))
(insn 32 31 33 3 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [4 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [4 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":626:40 209 {*addsi_1}
     (nil))
(code_label 33 32 34 4 162 (nil) [1 uses])
(note 34 33 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 4 (set (reg/f:SI 0 ax [orig:94 _12 ] [94])
        (const_int 589830 [0x90006])) "drivers/chr_drv/console.c":626:18 75 {*movsi_internal}
     (nil))
(insn 36 35 37 4 (set (reg:HI 0 ax [orig:95 _13 ] [95])
        (mem:HI (reg/f:SI 0 ax [orig:94 _12 ] [94]) [8 *_12+0 S2 A16])) "drivers/chr_drv/console.c":626:18 76 {*movhi_internal}
     (nil))
(insn 37 36 38 4 (parallel [
            (set (reg:HI 0 ax [orig:96 _14 ] [96])
                (lshiftrt:HI (reg:HI 0 ax [orig:95 _13 ] [95])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":626:18 711 {*lshrhi3_1}
     (nil))
(insn 38 37 39 4 (set (reg:SI 0 ax [orig:97 _15 ] [97])
        (zero_extend:SI (reg:HI 0 ax [orig:96 _14 ] [96]))) "drivers/chr_drv/console.c":626:18 144 {*zero_extendhisi2}
     (nil))
(insn 39 38 41 4 (parallel [
            (set (reg:SI 0 ax [orig:98 _16 ] [98])
                (ashift:SI (reg:SI 0 ax [orig:97 _15 ] [97])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":626:34 655 {*ashlsi3_1}
     (nil))
(insn 41 39 42 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [4 i+0 S4 A32])
            (reg:SI 0 ax [orig:98 _16 ] [98]))) "drivers/chr_drv/console.c":626:16 11 {*cmpsi_1}
     (nil))
(jump_insn 42 41 48 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "drivers/chr_drv/console.c":626:16 806 {*jcc}
     (nil)
 -> 40)
(note 48 42 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 43 6 (const_int 0 [0]) "drivers/chr_drv/console.c":628:1 843 {nop}
     (nil))
(note 43 49 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 50 43 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 53 7 (const_int 0 [0]) "drivers/chr_drv/console.c":628:1 843 {nop}
     (nil))
(note 53 51 0 NOTE_INSN_DELETED)

;; Function BicuitOS_version (BicuitOS_version, funcdef_no=28, decl_uid=1586, cgraph_uid=29, symbol_order=53)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=52, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 28
	 Choosing alt 0 in insn 28:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) lBwBz {*call} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 32:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 36:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 53:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =rm  (1) 0  (2) cI {*lshrhi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) rm {*zero_extendhisi2}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 56
	 Choosing alt 2 in insn 56:  (0) r  (1) 0  (2) mr {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 63
	 Choosing alt 0 in insn 63:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 64:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 69:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 70:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 72:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 73:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 74:  (0) q  (1) m {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 75:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 76:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 80:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 85:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) rm  (1) re {*cmpsi_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5
EBB 6
EBB 7
EBB 8 9
EBB 10 12 11 13

********** Pseudo live ranges #1: **********

  BB 13
   Insn 105: point = 0, n_alt = -1
  BB 11
  BB 12
   Insn 103: point = 0, n_alt = -1
  BB 10
   Insn 92: point = 0, n_alt = -1
   Insn 91: point = 0, n_alt = 0
  BB 5
   Insn 98: point = 0, n_alt = -1
   Insn 42: point = 0, n_alt = 1
  BB 4
   Insn 40: point = 0, n_alt = -1
   Insn 39: point = 0, n_alt = 0
   Insn 37: point = 1, n_alt = 1
   Insn 36: point = 2, n_alt = 3
   Insn 35: point = 3, n_alt = 0
  BB 2
   Insn 96: point = 4, n_alt = -1
   Insn 22: point = 4, n_alt = 1
   Insn 21: point = 4, n_alt = 1
   Insn 20: point = 4, n_alt = 1
   Insn 19: point = 5, n_alt = 0
   Insn 18: point = 7, n_alt = 1
   Insn 17: point = 8, n_alt = 0
   Insn 16: point = 9, n_alt = 1
   Insn 15: point = 10, n_alt = 0
   Insn 14: point = 11, n_alt = 1
   Insn 13: point = 12, n_alt = 0
   Insn 12: point = 13, n_alt = 1
   Insn 11: point = 14, n_alt = 0
   Insn 10: point = 15, n_alt = 1
   Insn 9: point = 16, n_alt = 0
   Insn 8: point = 17, n_alt = 1
   Insn 7: point = 18, n_alt = 0
   Insn 6: point = 19, n_alt = 1
   Insn 5: point = 20, n_alt = 0
   Insn 106: point = 21, n_alt = 0
  BB 3
   Insn 32: point = 22, n_alt = 0
   Insn 31: point = 22, n_alt = 0
   Insn 30: point = 22, n_alt = 0
   Insn 29: point = 22, n_alt = 0
   Insn 28: point = 23, n_alt = 0
   Insn 27: point = 25, n_alt = 0
   Insn 26: point = 26, n_alt = 0
  BB 9
   Insn 85: point = 27, n_alt = 0
  BB 8
   Insn 83: point = 27, n_alt = -1
   Insn 82: point = 27, n_alt = 0
   Insn 80: point = 28, n_alt = 4
   Insn 79: point = 30, n_alt = 0
  BB 6
   Insn 100: point = 31, n_alt = -1
   Insn 64: point = 31, n_alt = 1
   Insn 63: point = 32, n_alt = 0
   Insn 62: point = 34, n_alt = 0
   Insn 58: point = 35, n_alt = -2
   Insn 57: point = 37, n_alt = 0
   Insn 56: point = 39, n_alt = 2
   Insn 55: point = 41, n_alt = 0
   Insn 54: point = 43, n_alt = 0
   Insn 53: point = 45, n_alt = 2
   Insn 52: point = 47, n_alt = 0
   Insn 51: point = 48, n_alt = 0
   Insn 50: point = 50, n_alt = 0
   Insn 49: point = 51, n_alt = 0
   Insn 48: point = 52, n_alt = 1
   Insn 47: point = 53, n_alt = 0
   Insn 46: point = 55, n_alt = 0
  BB 7
   Insn 76: point = 56, n_alt = 0
   Insn 75: point = 56, n_alt = 8
   Insn 74: point = 57, n_alt = 4
   Insn 73: point = 59, n_alt = 1
   Insn 72: point = 60, n_alt = 3
   Insn 71: point = 61, n_alt = 0
   Insn 70: point = 62, n_alt = 1
   Insn 69: point = 63, n_alt = 3
   Insn 68: point = 64, n_alt = 0
 r82: [6..21]
 r83: [22..23]
 r84: [0..3]
 r85: [40..48]
 r86: [46..47]
 r87: [44..45]
 r88: [42..43]
 r89: [40..41]
 r90: [38..39]
 r91: [36..37]
 r92: [33..35]
 r93: [58..64]
 r94: [56..61]
 r95: [56..57]
 r96: [27..28]
 r97: [19..20]
 r98: [17..18]
 r99: [15..16]
 r100: [13..14]
 r101: [11..12]
 r102: [9..10]
 r103: [7..8]
 r104: [4..5]
 r105: [24..26]
 r106: [24..25]
 r107: [1..2]
 r108: [54..55]
 r109: [52..53]
 r110: [49..51]
 r111: [49..50]
 r114: [31..32]
 r115: [33..34]
 r116: [62..63]
 r117: [59..60]
 r118: [29..30]
Compressing live ranges: from 65 to 54 - 83%
Ranges after the compression:
 r82: [4..17]
 r83: [18..19]
 r84: [0..1]
 r85: [34..41]
 r86: [40..41]
 r87: [38..39]
 r88: [36..37]
 r89: [34..35]
 r90: [32..33]
 r91: [30..31]
 r92: [28..29]
 r93: [50..53]
 r94: [48..51]
 r95: [48..49]
 r96: [22..23]
 r97: [16..17]
 r98: [14..15]
 r99: [12..13]
 r100: [10..11]
 r101: [8..9]
 r102: [6..7]
 r103: [4..5]
 r104: [2..3]
 r105: [20..21]
 r106: [20..21]
 r107: [0..1]
 r108: [46..47]
 r109: [44..45]
 r110: [42..43]
 r111: [42..43]
 r114: [26..27]
 r115: [28..29]
 r116: [52..53]
 r117: [50..51]
 r118: [24..25]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=52, prev_offset=52)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=48, prev_offset=48)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 106
changing reg in insn 19
changing reg in insn 17
changing reg in insn 15
changing reg in insn 13
changing reg in insn 11
changing reg in insn 9
changing reg in insn 7
changing reg in insn 5
changing reg in insn 28
changing reg in insn 29
changing reg in insn 35
changing reg in insn 39
changing reg in insn 36
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 53
changing reg in insn 54
changing reg in insn 54
changing reg in insn 55
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 57
changing reg in insn 58
changing reg in insn 58
changing reg in insn 63
changing reg in insn 68
changing reg in insn 74
changing reg in insn 69
changing reg in insn 71
changing reg in insn 75
changing reg in insn 72
changing reg in insn 74
changing reg in insn 75
changing reg in insn 80
changing reg in insn 82
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 26
changing reg in insn 27
changing reg in insn 36
changing reg in insn 37
changing reg in insn 46
changing reg in insn 47
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 51
changing reg in insn 50
changing reg in insn 51
changing reg in insn 63
changing reg in insn 64
changing reg in insn 62
changing reg in insn 69
changing reg in insn 70
changing reg in insn 72
changing reg in insn 73
changing reg in insn 79
changing reg in insn 80
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 31.


BicuitOS_version

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 17 [flags]
;;  ref usage 	r0={22d,29u} r1={16d,15u,1e} r2={3d,1u} r7={4d,51u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={3e} r17={17d,3u} r18={1d} r19={2e} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 232{127d,99u,6e} in 69{68 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 106 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 106 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 106 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 1 dx [97])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x71960ac375a0 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "drivers/chr_drv/console.c":637:8 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x71960ac375a0 *.LC2>)
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:SI (reg/f:SI 7 sp) [9 version[0]+0 S4 A32])
        (reg/f:SI 1 dx [97])) "drivers/chr_drv/console.c":637:8 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 1 dx [98])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x71960ac37630 *.LC3>)
                    ] UNSPEC_GOTOFF)))) "drivers/chr_drv/console.c":637:8 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x71960ac37630 *.LC3>)
        (nil)))
(insn 8 7 9 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [9 version[1]+0 S4 A32])
        (reg/f:SI 1 dx [98])) "drivers/chr_drv/console.c":637:8 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 1 dx [99])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x71960ac376c0 *.LC4>)
                    ] UNSPEC_GOTOFF)))) "drivers/chr_drv/console.c":637:8 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x71960ac376c0 *.LC4>)
        (nil)))
(insn 10 9 11 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 version[2]+0 S4 A32])
        (reg/f:SI 1 dx [99])) "drivers/chr_drv/console.c":637:8 75 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 1 dx [100])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x71960ac37750 *.LC5>)
                    ] UNSPEC_GOTOFF)))) "drivers/chr_drv/console.c":637:8 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x71960ac37750 *.LC5>)
        (nil)))
(insn 12 11 13 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 version[3]+0 S4 A32])
        (reg/f:SI 1 dx [100])) "drivers/chr_drv/console.c":637:8 75 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 1 dx [101])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x71960ac377e0 *.LC6>)
                    ] UNSPEC_GOTOFF)))) "drivers/chr_drv/console.c":637:8 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x71960ac377e0 *.LC6>)
        (nil)))
(insn 14 13 15 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [9 version[4]+0 S4 A32])
        (reg/f:SI 1 dx [101])) "drivers/chr_drv/console.c":637:8 75 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg/f:SI 1 dx [102])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x71960ac37870 *.LC7>)
                    ] UNSPEC_GOTOFF)))) "drivers/chr_drv/console.c":637:8 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x71960ac37870 *.LC7>)
        (nil)))
(insn 16 15 17 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [9 version[5]+0 S4 A32])
        (reg/f:SI 1 dx [102])) "drivers/chr_drv/console.c":637:8 75 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 1 dx [103])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x71960ac37900 *.LC8>)
                    ] UNSPEC_GOTOFF)))) "drivers/chr_drv/console.c":637:8 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x71960ac37900 *.LC8>)
        (nil)))
(insn 18 17 19 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 version[6]+0 S4 A32])
        (reg/f:SI 1 dx [103])) "drivers/chr_drv/console.c":637:8 75 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (reg/f:SI 0 ax [104])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x71960ac37990 *.LC9>)
                    ] UNSPEC_GOTOFF)))) "drivers/chr_drv/console.c":637:8 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x71960ac37990 *.LC9>)
        (nil)))
(insn 20 19 21 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 version[7]+0 S4 A32])
        (reg/f:SI 0 ax [104])) "drivers/chr_drv/console.c":637:8 75 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [9 version[8]+0 S4 A32])
        (const_int 0 [0])) "drivers/chr_drv/console.c":637:8 75 {*movsi_internal}
     (nil))
(insn 22 21 96 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [4 i+0 S4 A32])
        (const_int 8 [0x8])) "drivers/chr_drv/console.c":648:6 75 {*movsi_internal}
     (nil))
(jump_insn 96 22 97 2 (set (pc)
        (label_ref 33)) "drivers/chr_drv/console.c":651:8 807 {jump}
     (nil)
 -> 33)
(barrier 97 96 38)
(code_label 38 97 25 3 166 (nil) [1 uses])
(note 25 38 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 3 (set (reg:SI 1 dx [105])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [4 i+0 S4 A32])) "drivers/chr_drv/console.c":652:3 75 {*movsi_internal}
     (nil))
(insn 27 26 28 3 (set (reg:SI 0 ax [106])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [4 n+0 S4 A32])) "drivers/chr_drv/console.c":652:3 75 {*movsi_internal}
     (nil))
(insn 28 27 29 3 (parallel [
            (set (reg:SI 0 ax [orig:83 _1 ] [83])
                (plus:SI (reg:SI 0 ax [106])
                    (reg:SI 1 dx [105])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":652:3 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [4 i+0 S4 A32])
            (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [4 n+0 S4 A32]))
        (nil)))
(insn 29 28 30 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg:SI 0 ax [orig:83 _1 ] [83])) "drivers/chr_drv/console.c":652:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 30 29 31 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [9 buffer+0 S4 A32])) "drivers/chr_drv/console.c":652:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(call_insn 31 30 32 3 (call (mem:QI (symbol_ref:SI ("clear_line") [flags 0x3]  <function_decl 0x71960af79100 clear_line>) [0 clear_line S1 A8])
        (const_int 8 [0x8])) "drivers/chr_drv/console.c":652:3 812 {*call}
     (nil)
    (nil))
(insn 32 31 33 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":652:3 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 33 32 34 4 165 (nil) [1 uses])
(note 34 33 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 4 (set (reg:SI 0 ax [orig:84 i.225_2 ] [84])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [4 i+0 S4 A32])) "drivers/chr_drv/console.c":651:10 75 {*movsi_internal}
     (nil))
(insn 36 35 37 4 (parallel [
            (set (reg:SI 1 dx [107])
                (plus:SI (reg:SI 0 ax [orig:84 i.225_2 ] [84])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":651:10 209 {*addsi_1}
     (nil))
(insn 37 36 39 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [4 i+0 S4 A32])
        (reg:SI 1 dx [107])) "drivers/chr_drv/console.c":651:10 75 {*movsi_internal}
     (nil))
(insn 39 37 40 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 i.225_2 ] [84])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":651:9 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 40 39 41 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "drivers/chr_drv/console.c":651:9 806 {*jcc}
     (nil)
 -> 38)
(note 41 40 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 98 5 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [4 i+0 S4 A32])
        (const_int 0 [0])) "drivers/chr_drv/console.c":655:9 75 {*movsi_internal}
     (nil))
(jump_insn 98 42 99 5 (set (pc)
        (label_ref 86)) "drivers/chr_drv/console.c":655:2 807 {jump}
     (nil)
 -> 86)
(barrier 99 98 88)
(code_label 88 99 45 6 170 (nil) [1 uses])
(note 45 88 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 6 (set (reg:SI 0 ax [108])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [4 i+0 S4 A32])) "drivers/chr_drv/console.c":656:15 75 {*movsi_internal}
     (nil))
(insn 47 46 48 6 (set (reg/f:SI 0 ax [109])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 0 ax [108])
                    (const_int 4 [0x4]))
                (reg/f:SI 7 sp)) [9 version[i_16]+0 S4 A32])) "drivers/chr_drv/console.c":656:15 75 {*movsi_internal}
     (nil))
(insn 48 47 49 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 tmp+0 S4 A32])
        (reg/f:SI 0 ax [109])) "drivers/chr_drv/console.c":656:15 75 {*movsi_internal}
     (nil))
(insn 49 48 50 6 (set (reg:SI 1 dx [110])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [4 i+0 S4 A32])) "drivers/chr_drv/console.c":657:27 75 {*movsi_internal}
     (nil))
(insn 50 49 51 6 (set (reg:SI 0 ax [111])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [4 n+0 S4 A32])) "drivers/chr_drv/console.c":657:27 75 {*movsi_internal}
     (nil))
(insn 51 50 52 6 (parallel [
            (set (reg:SI 1 dx [orig:85 _3 ] [85])
                (plus:SI (reg:SI 1 dx [110])
                    (reg:SI 0 ax [111])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":657:27 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [4 i+0 S4 A32])
            (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [4 n+0 S4 A32]))
        (nil)))
(insn 52 51 53 6 (set (reg/f:SI 0 ax [orig:86 _4 ] [86])
        (const_int 589830 [0x90006])) "drivers/chr_drv/console.c":657:34 75 {*movsi_internal}
     (nil))
(insn 53 52 54 6 (set (reg:HI 0 ax [orig:87 _5 ] [87])
        (mem:HI (reg/f:SI 0 ax [orig:86 _4 ] [86]) [8 *_4+0 S2 A16])) "drivers/chr_drv/console.c":657:34 76 {*movhi_internal}
     (nil))
(insn 54 53 55 6 (parallel [
            (set (reg:HI 0 ax [orig:88 _6 ] [88])
                (lshiftrt:HI (reg:HI 0 ax [orig:87 _5 ] [87])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":657:34 711 {*lshrhi3_1}
     (nil))
(insn 55 54 56 6 (set (reg:SI 0 ax [orig:89 _7 ] [89])
        (zero_extend:SI (reg:HI 0 ax [orig:88 _6 ] [88]))) "drivers/chr_drv/console.c":657:34 144 {*zero_extendhisi2}
     (nil))
(insn 56 55 57 6 (parallel [
            (set (reg:SI 0 ax [orig:90 _8 ] [90])
                (mult:SI (reg:SI 0 ax [orig:89 _7 ] [89])
                    (reg:SI 1 dx [orig:85 _3 ] [85])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":657:32 408 {*mulsi3_1}
     (nil))
(insn 57 56 58 6 (parallel [
            (set (reg:SI 0 ax [orig:91 _9 ] [91])
                (ashift:SI (reg:SI 0 ax [orig:90 _8 ] [90])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":657:50 655 {*ashlsi3_1}
     (nil))
(insn 58 57 62 6 (set (reg:SI 1 dx [orig:92 _10 ] [92])
        (reg:SI 0 ax [orig:91 _9 ] [91])) "drivers/chr_drv/console.c":657:50 75 {*movsi_internal}
     (nil))
(insn 62 58 63 6 (set (reg/f:SI 0 ax [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [9 buffer+0 S4 A32])) "drivers/chr_drv/console.c":657:9 75 {*movsi_internal}
     (nil))
(insn 63 62 64 6 (parallel [
            (set (reg:SI 0 ax [114])
                (plus:SI (reg/f:SI 0 ax [115])
                    (reg:SI 1 dx [orig:92 _10 ] [92])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":657:9 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [9 buffer+0 S4 A32])
            (reg:SI 1 dx [orig:92 _10 ] [92]))
        (nil)))
(insn 64 63 100 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 mem+0 S4 A32])
        (reg:SI 0 ax [114])) "drivers/chr_drv/console.c":657:9 75 {*movsi_internal}
     (nil))
(jump_insn 100 64 101 6 (set (pc)
        (label_ref 77)) "drivers/chr_drv/console.c":659:9 807 {jump}
     (nil)
 -> 77)
(barrier 101 100 81)
(code_label 81 101 67 7 169 (nil) [1 uses])
(note 67 81 68 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 7 (set (reg/f:SI 1 dx [orig:93 tmp.226_11 ] [93])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 tmp+0 S4 A32])) "drivers/chr_drv/console.c":660:17 75 {*movsi_internal}
     (nil))
(insn 69 68 70 7 (parallel [
            (set (reg:SI 0 ax [116])
                (plus:SI (reg/f:SI 1 dx [orig:93 tmp.226_11 ] [93])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":660:17 209 {*addsi_1}
     (nil))
(insn 70 69 71 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 tmp+0 S4 A32])
        (reg:SI 0 ax [116])) "drivers/chr_drv/console.c":660:17 75 {*movsi_internal}
     (nil))
(insn 71 70 72 7 (set (reg/f:SI 0 ax [orig:94 mem.227_12 ] [94])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 mem+0 S4 A32])) "drivers/chr_drv/console.c":660:8 75 {*movsi_internal}
     (nil))
(insn 72 71 73 7 (parallel [
            (set (reg:SI 2 cx [117])
                (plus:SI (reg/f:SI 0 ax [orig:94 mem.227_12 ] [94])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":660:8 209 {*addsi_1}
     (nil))
(insn 73 72 74 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 mem+0 S4 A32])
        (reg:SI 2 cx [117])) "drivers/chr_drv/console.c":660:8 75 {*movsi_internal}
     (nil))
(insn 74 73 75 7 (set (reg:QI 1 dx [orig:95 _13 ] [95])
        (mem:QI (reg/f:SI 1 dx [orig:93 tmp.226_11 ] [93]) [0 *tmp.226_11+0 S1 A8])) "drivers/chr_drv/console.c":660:13 77 {*movqi_internal}
     (nil))
(insn 75 74 76 7 (set (mem:QI (reg/f:SI 0 ax [orig:94 mem.227_12 ] [94]) [0 *mem.227_12+0 S1 A8])
        (reg:QI 1 dx [orig:95 _13 ] [95])) "drivers/chr_drv/console.c":660:11 77 {*movqi_internal}
     (nil))
(insn 76 75 77 7 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 36 [0x24])) [9 mem+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 36 [0x24])) [9 mem+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":661:7 209 {*addsi_1}
     (nil))
(code_label 77 76 78 8 168 (nil) [1 uses])
(note 78 77 79 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 8 (set (reg/f:SI 0 ax [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 tmp+0 S4 A32])) "drivers/chr_drv/console.c":659:10 75 {*movsi_internal}
     (nil))
(insn 80 79 82 8 (set (reg:QI 0 ax [orig:96 _14 ] [96])
        (mem:QI (reg/f:SI 0 ax [118]) [0 *tmp_17+0 S1 A8])) "drivers/chr_drv/console.c":659:10 77 {*movqi_internal}
     (nil))
(insn 82 80 83 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:96 _14 ] [96])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":659:10 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 83 82 84 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) "drivers/chr_drv/console.c":659:10 806 {*jcc}
     (nil)
 -> 81)
(note 84 83 85 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 9 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 44 [0x2c])) [4 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 44 [0x2c])) [4 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":655:35 209 {*addsi_1}
     (nil))
(code_label 86 85 87 10 167 (nil) [1 uses])
(note 87 86 91 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 91 87 92 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 44 [0x2c])) [4 i+0 S4 A32])
            (const_int 7 [0x7]))) "drivers/chr_drv/console.c":655:16 11 {*cmpsi_1}
     (nil))
(jump_insn 92 91 102 10 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) "drivers/chr_drv/console.c":655:16 806 {*jcc}
     (nil)
 -> 88)
(note 102 92 103 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 93 12 (const_int 0 [0]) "drivers/chr_drv/console.c":664:1 843 {nop}
     (nil))
(note 93 103 104 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 104 93 105 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 107 13 (const_int 0 [0]) "drivers/chr_drv/console.c":664:1 843 {nop}
     (nil))
(note 107 105 0 NOTE_INSN_DELETED)

;; Function con_init (con_init, funcdef_no=29, decl_uid=1353, cgraph_uid=30, symbol_order=54)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=28, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 8:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =rm  (1) 0  (2) cI {*lshrhi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 17:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =Q  (1) Q {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 19:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 20:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 22:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 29:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 30:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 32:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 38:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 39:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 46:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 55:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 56:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 58:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 64:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 72:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 73:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 75:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) lBwBz {*call} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 83:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 86
	 Choosing alt 0 in insn 86:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 87:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 88:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 93:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 94:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 96:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 97:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 98:  (0) q  (1) m {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 99:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 100:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 104:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 110:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 113:  (0) r  (1) 0  (2) mr {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 115
	 Choosing alt 0 in insn 115:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 116:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 117:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 119:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 121:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 124:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) lBwBz {*call} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 129:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 140:  (0) =a  (1) d
      Creating newreg=157 from oldreg=150, assigning class DREG to r157
  140: {r149:QI=asm_operands;clobber flags:CC;}
      REG_DEAD r150:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  171: r157:SI=r150:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 138:  (0) m  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 141:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 143:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) a  (1) d
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 148:  (0) =a  (1) d
      Creating newreg=158 from oldreg=153, assigning class DREG to r158
  148: {r152:QI=asm_operands;clobber flags:CC;}
      REG_DEAD r153:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  172: r158:SI=r153:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 146:  (0) m  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 149:  (0) q  (1) m {*movqi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 151:  (0) =qm  (1) %0  (2) qn {*iorqi_1}
      Creating newreg=159 from oldreg=131, assigning class Q_REGS to r159
  151: {r159:QI=r159:QI|0xffffffffffffff80;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  173: r159:QI=r135:QI
    Inserting insn reload after:
  174: r131:QI=r159:QI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) a  (1) d
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
            0 Small class reload: reject+=3
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 156:  (0) a  (1) d
      Creating newreg=160 from oldreg=135, assigning class AREG to r160
  156: {asm_operands;clobber flags:CC;}
      REG_DEAD r155:SI
      REG_DEAD r135:QI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  175: r160:QI=r135:QI

	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5
EBB 6 7
EBB 8
EBB 9
EBB 10
EBB 11 12 13

********** Pseudo live ranges #1: **********

  BB 13
   Insn 168: point = 0, n_alt = -1
  BB 12
   Insn 156: point = 0, n_alt = 0
   Insn 175: point = 1, n_alt = -2
	Hard reg 3 is preferable by r160 with profit 1000
   Insn 155: point = 3, n_alt = 0
   Insn 154: point = 4, n_alt = 0
   Insn 153: point = 5, n_alt = 0
   Insn 152: point = 6, n_alt = 0
   Insn 174: point = 8, n_alt = -2
	Hard reg 0 is preferable by r159 with profit 1000
   Insn 151: point = 10, n_alt = 0
   Insn 173: point = 11, n_alt = -2
	Hard reg 0 is preferable by r159 with profit 1000
	Hard reg 3 is preferable by r159 with profit 1000
   Insn 150: point = 12, n_alt = -2
   Insn 149: point = 14, n_alt = 4
   Insn 146: point = 15, n_alt = 8
   Insn 148: point = 16, n_alt = 0
   Insn 172: point = 18, n_alt = -2
	Hard reg 0 is preferable by r158 with profit 1000
   Insn 147: point = 20, n_alt = 0
   Insn 145: point = 21, n_alt = 0
   Insn 144: point = 22, n_alt = 0
   Insn 143: point = 23, n_alt = 0
   Insn 142: point = 25, n_alt = 0
   Insn 141: point = 27, n_alt = 4
   Insn 138: point = 28, n_alt = 8
   Insn 140: point = 29, n_alt = 0
   Insn 171: point = 31, n_alt = -2
	Hard reg 0 is preferable by r157 with profit 1000
   Insn 139: point = 33, n_alt = 0
   Insn 137: point = 34, n_alt = 0
   Insn 136: point = 35, n_alt = 0
   Insn 135: point = 36, n_alt = -2
   Insn 134: point = 38, n_alt = 0
   Insn 133: point = 40, n_alt = 0
   Insn 132: point = 42, n_alt = 0
   Insn 131: point = 43, n_alt = 0
   Insn 130: point = 45, n_alt = 0
   Insn 129: point = 46, n_alt = 0
   Insn 128: point = 46, n_alt = 0
   Insn 127: point = 46, n_alt = 0
   Insn 126: point = 47, n_alt = 0
   Insn 125: point = 48, n_alt = 0
   Insn 124: point = 50, n_alt = 4
   Insn 123: point = 52, n_alt = 0
   Insn 122: point = 53, n_alt = 0
   Insn 121: point = 55, n_alt = 4
   Insn 120: point = 57, n_alt = 0
   Insn 119: point = 58, n_alt = 1
   Insn 118: point = 59, n_alt = 0
   Insn 117: point = 60, n_alt = 1
   Insn 116: point = 60, n_alt = 1
   Insn 115: point = 61, n_alt = 0
   Insn 114: point = 63, n_alt = 0
   Insn 113: point = 64, n_alt = 2
   Insn 112: point = 66, n_alt = 0
   Insn 111: point = 67, n_alt = 0
   Insn 110: point = 68, n_alt = 1
   Insn 109: point = 69, n_alt = 0
  BB 11
   Insn 107: point = 71, n_alt = -1
   Insn 106: point = 71, n_alt = 0
   Insn 104: point = 72, n_alt = 4
   Insn 103: point = 74, n_alt = 0
  BB 9
   Insn 165: point = 76, n_alt = -1
   Insn 88: point = 76, n_alt = 1
   Insn 87: point = 77, n_alt = 0
   Insn 86: point = 79, n_alt = 0
   Insn 85: point = 81, n_alt = 0
   Insn 84: point = 82, n_alt = 0
   Insn 83: point = 83, n_alt = 0
   Insn 82: point = 83, n_alt = 0
   Insn 81: point = 83, n_alt = 0
   Insn 80: point = 84, n_alt = 0
   Insn 79: point = 84, n_alt = -2
   Insn 78: point = 86, n_alt = 0
  BB 7
   Insn 163: point = 88, n_alt = -1
   Insn 67: point = 88, n_alt = 1
   Insn 66: point = 89, n_alt = 0
   Insn 65: point = 90, n_alt = 1
   Insn 64: point = 90, n_alt = 8
  BB 8
   Insn 75: point = 91, n_alt = 1
   Insn 74: point = 92, n_alt = 0
   Insn 73: point = 93, n_alt = 1
   Insn 72: point = 93, n_alt = 8
  BB 6
   Insn 62: point = 94, n_alt = -1
   Insn 61: point = 94, n_alt = 0
   Insn 60: point = 95, n_alt = 0
   Insn 59: point = 97, n_alt = 0
   Insn 58: point = 99, n_alt = 2
   Insn 57: point = 101, n_alt = 0
   Insn 56: point = 102, n_alt = 3
   Insn 55: point = 102, n_alt = 3
   Insn 54: point = 102, n_alt = 1
  BB 5
   Insn 161: point = 103, n_alt = -1
   Insn 49: point = 103, n_alt = 1
   Insn 48: point = 104, n_alt = 0
   Insn 47: point = 105, n_alt = 1
   Insn 46: point = 105, n_alt = 8
  BB 4
   Insn 159: point = 106, n_alt = -1
   Insn 41: point = 106, n_alt = 1
   Insn 40: point = 107, n_alt = 0
   Insn 39: point = 108, n_alt = 1
   Insn 38: point = 108, n_alt = 8
  BB 3
   Insn 36: point = 109, n_alt = -1
   Insn 35: point = 109, n_alt = 0
   Insn 34: point = 110, n_alt = 0
   Insn 33: point = 112, n_alt = 0
   Insn 32: point = 114, n_alt = 2
   Insn 31: point = 116, n_alt = 0
   Insn 30: point = 117, n_alt = 3
   Insn 29: point = 117, n_alt = 3
   Insn 28: point = 117, n_alt = 1
  BB 2
   Insn 26: point = 118, n_alt = -1
   Insn 25: point = 118, n_alt = 0
   Insn 24: point = 119, n_alt = 0
   Insn 23: point = 121, n_alt = 0
   Insn 22: point = 123, n_alt = 2
   Insn 21: point = 125, n_alt = 0
   Insn 20: point = 126, n_alt = 3
   Insn 19: point = 126, n_alt = 8
   Insn 18: point = 127, n_alt = 0
   Insn 17: point = 129, n_alt = 2
   Insn 16: point = 131, n_alt = 0
   Insn 15: point = 132, n_alt = 1
   Insn 14: point = 132, n_alt = 1
   Insn 13: point = 133, n_alt = 0
   Insn 12: point = 135, n_alt = 0
   Insn 11: point = 136, n_alt = 1
   Insn 10: point = 137, n_alt = 0
   Insn 9: point = 139, n_alt = 0
   Insn 8: point = 141, n_alt = 2
   Insn 7: point = 143, n_alt = 0
   Insn 6: point = 144, n_alt = 1
   Insn 5: point = 145, n_alt = 0
   Insn 169: point = 146, n_alt = 0
  BB 10
   Insn 100: point = 147, n_alt = 0
   Insn 99: point = 147, n_alt = 8
   Insn 98: point = 148, n_alt = 4
   Insn 97: point = 150, n_alt = 1
   Insn 96: point = 151, n_alt = 3
   Insn 95: point = 152, n_alt = 0
   Insn 94: point = 153, n_alt = 1
   Insn 93: point = 154, n_alt = 3
   Insn 92: point = 155, n_alt = 0
 r82: [39..156]
 r83: [142..143]
 r84: [140..141]
 r85: [138..139]
 r86: [136..137]
 r87: [134..135]
 r88: [132..133]
 r89: [130..131]
 r90: [128..129]
 r91: [126..127]
 r92: [124..125]
 r93: [122..123]
 r94: [120..121]
 r95: [118..119]
 r96: [115..116]
 r97: [113..114]
 r98: [111..112]
 r99: [109..110]
 r100: [100..101]
 r101: [98..99]
 r102: [96..97]
 r103: [94..95]
 r104: [85..86]
 r105: [83..84]
 r106: [80..82]
 r107: [80..81]
 r108: [78..79]
 r109: [76..77]
 r110: [149..155]
 r111: [147..152]
 r112: [147..148]
 r113: [71..72]
 r114: [68..69]
 r115: [65..67]
 r116: [65..66]
 r117: [62..64]
 r118: [62..63]
 r119: [60..61]
 r120: [58..59]
 r121: [56..57]
 r122: [54..55]
 r123: [47..53]
 r124: [51..52]
 r125: [49..50]
 r126: [46..48]
 r127: [34..43]
 r128: [34..40]
 r129: [24..25]
 r130: [21..23]
 r131: [7..8]
 r132: [4..6]
 r133: [26..27]
 r134: [13..14]
 r135: [2..12]
 r136: [144..145]
 r137: [106..107]
 r138: [103..104]
 r139: [88..89]
 r140: [91..92]
 r141: [153..154]
 r142: [150..151]
 r143: [73..74]
 r144: [44..45]
 r145: [41..42]
 r146: [34..36]
 r147: [37..38]
 r148: [34..35]
 r149: [28..29]
 r150: [32..33]
 r151: [21..22]
 r152: [15..16]
 r153: [19..20]
 r154: [4..5]
 r155: [0..3]
 r157: [30..31]
 r158: [17..18]
 r159: [9..11]
 r160: [0..1]
Compressing live ranges: from 157 to 132 - 84%
Ranges after the compression:
 r82: [34..131]
 r83: [122..123]
 r84: [120..121]
 r85: [118..119]
 r86: [116..117]
 r87: [114..115]
 r88: [112..113]
 r89: [110..111]
 r90: [108..109]
 r91: [106..107]
 r92: [104..105]
 r93: [102..103]
 r94: [100..101]
 r95: [98..99]
 r96: [96..97]
 r97: [94..95]
 r98: [92..93]
 r99: [90..91]
 r100: [84..85]
 r101: [82..83]
 r102: [80..81]
 r103: [78..79]
 r104: [72..73]
 r105: [70..71]
 r106: [68..69]
 r107: [68..69]
 r108: [66..67]
 r109: [64..65]
 r110: [128..131]
 r111: [126..129]
 r112: [126..127]
 r113: [60..61]
 r114: [58..59]
 r115: [56..57]
 r116: [56..57]
 r117: [54..55]
 r118: [54..55]
 r119: [52..53]
 r120: [50..51]
 r121: [48..49]
 r122: [46..47]
 r123: [40..45]
 r124: [44..45]
 r125: [42..43]
 r126: [40..41]
 r127: [30..37]
 r128: [30..35]
 r129: [20..21]
 r130: [18..19]
 r131: [6..7]
 r132: [4..5]
 r133: [22..23]
 r134: [10..11]
 r135: [2..9]
 r136: [124..125]
 r137: [88..89]
 r138: [86..87]
 r139: [74..75]
 r140: [76..77]
 r141: [130..131]
 r142: [128..129]
 r143: [62..63]
 r144: [38..39]
 r145: [36..37]
 r146: [30..31]
 r147: [32..33]
 r148: [30..31]
 r149: [24..25]
 r150: [28..29]
 r151: [18..19]
 r152: [12..13]
 r153: [16..17]
 r154: [4..5]
 r155: [0..3]
 r157: [26..27]
 r158: [14..15]
 r159: [8..9]
 r160: [0..1]

********** Assignment #1: **********

	 Assigning to 157 (cl=DREG, orig=150, freq=2000, tfirst=157, tfreq=2000)...
	   Assign 1 to reload r157 (freq=2000)
	 Assigning to 158 (cl=DREG, orig=153, freq=2000, tfirst=158, tfreq=2000)...
	   Assign 1 to reload r158 (freq=2000)
	 Assigning to 160 (cl=AREG, orig=135, freq=2000, tfirst=160, tfreq=2000)...
	   Assign 0 to reload r160 (freq=2000)
	 Assigning to 159 (cl=Q_REGS, orig=131, freq=3000, tfirst=159, tfreq=3000)...
	   Assign 0 to reload r159 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=28, prev_offset=28)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
changing reg in insn 169
changing reg in insn 134
changing reg in insn 132
changing reg in insn 130
changing reg in insn 119
changing reg in insn 118
changing reg in insn 117
changing reg in insn 116
changing reg in insn 114
changing reg in insn 112
changing reg in insn 111
changing reg in insn 110
changing reg in insn 109
changing reg in insn 85
changing reg in insn 84
changing reg in insn 78
changing reg in insn 74
changing reg in insn 73
changing reg in insn 72
changing reg in insn 66
changing reg in insn 65
changing reg in insn 64
changing reg in insn 56
changing reg in insn 55
changing reg in insn 54
changing reg in insn 48
changing reg in insn 47
changing reg in insn 46
changing reg in insn 40
changing reg in insn 39
changing reg in insn 38
changing reg in insn 30
changing reg in insn 29
changing reg in insn 28
changing reg in insn 20
changing reg in insn 19
changing reg in insn 15
changing reg in insn 14
changing reg in insn 12
changing reg in insn 11
changing reg in insn 5
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 57
changing reg in insn 58
changing reg in insn 58
changing reg in insn 59
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 78
changing reg in insn 79
changing reg in insn 79
changing reg in insn 81
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 87
changing reg in insn 88
changing reg in insn 92
changing reg in insn 98
changing reg in insn 93
changing reg in insn 95
changing reg in insn 99
changing reg in insn 96
changing reg in insn 98
changing reg in insn 99
changing reg in insn 104
changing reg in insn 106
changing reg in insn 109
changing reg in insn 110
changing reg in insn 111
changing reg in insn 113
changing reg in insn 112
changing reg in insn 113
changing reg in insn 113
changing reg in insn 114
changing reg in insn 115
changing reg in insn 116
changing reg in insn 118
changing reg in insn 119
changing reg in insn 120
changing reg in insn 121
changing reg in insn 121
changing reg in insn 122
changing reg in insn 122
changing reg in insn 126
changing reg in insn 123
changing reg in insn 124
changing reg in insn 124
changing reg in insn 125
changing reg in insn 125
changing reg in insn 127
changing reg in insn 131
changing reg in insn 137
changing reg in insn 133
changing reg in insn 137
changing reg in insn 142
changing reg in insn 143
changing reg in insn 143
changing reg in insn 145
changing reg in insn 152
changing reg in insn 152
changing reg in insn 154
changing reg in insn 141
changing reg in insn 142
changing reg in insn 149
changing reg in insn 150
changing reg in insn 150
changing reg in insn 5
changing reg in insn 6
changing reg in insn 40
changing reg in insn 41
changing reg in insn 48
changing reg in insn 49
changing reg in insn 66
changing reg in insn 67
changing reg in insn 74
changing reg in insn 75
changing reg in insn 93
changing reg in insn 94
changing reg in insn 96
changing reg in insn 97
changing reg in insn 103
changing reg in insn 104
changing reg in insn 130
changing reg in insn 131
changing reg in insn 132
changing reg in insn 133
changing reg in insn 135
changing reg in insn 137
changing reg in insn 134
changing reg in insn 135
changing reg in insn 136
changing reg in insn 137
changing reg in insn 140
changing reg in insn 138
changing reg in insn 139
changing reg in insn 144
changing reg in insn 145
changing reg in insn 148
changing reg in insn 146
changing reg in insn 147
changing reg in insn 153
changing reg in insn 154
changing reg in insn 155
changing reg in insn 156
deleting insn with uid = 18.
deleting insn with uid = 79.
deleting insn with uid = 174.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 82.
verify found no changes in insn with uid = 128.


con_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;;  ref usage 	r0={62d,60u} r1={15d,13u} r2={5d,2u} r3={2d,42u} r4={1d,1u} r7={7d,40u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={26d,4u} r18={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 410{248d,162u,0e} in 136{134 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 169 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 169 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 169 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [136])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x71960ac37a20 *.LC10>)
                    ] UNSPEC_GOTOFF)))) "drivers/chr_drv/console.c":677:11 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x71960ac37a20 *.LC10>)
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 display_desc+0 S4 A32])
        (reg/f:SI 0 ax [136])) "drivers/chr_drv/console.c":677:11 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
        (const_int 589830 [0x90006])) "drivers/chr_drv/console.c":680:25 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:HI 0 ax [orig:84 _2 ] [84])
        (mem:HI (reg/f:SI 0 ax [orig:83 _1 ] [83]) [8 *_1+0 S2 A16])) "drivers/chr_drv/console.c":680:25 76 {*movhi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:HI 0 ax [orig:85 _3 ] [85])
                (lshiftrt:HI (reg:HI 0 ax [orig:84 _2 ] [84])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":680:25 711 {*lshrhi3_1}
     (nil))
(insn 10 9 11 2 (set (reg:SI 0 ax [orig:86 _4 ] [86])
        (zero_extend:SI (reg:HI 0 ax [orig:85 _3 ] [85]))) "drivers/chr_drv/console.c":680:25 144 {*zero_extendhisi2}
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])
        (reg:SI 0 ax [orig:86 _4 ] [86])) "drivers/chr_drv/console.c":680:23 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 0 ax [orig:87 video_num_columns.228_5 ] [87])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_columns") [flags 0x2]  <var_decl 0x71960af2e870 video_num_columns>)
                        ] UNSPEC_GOTOFF))) [3 video_num_columns+0 S4 A32])) "drivers/chr_drv/console.c":681:40 75 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 0 ax [orig:88 _6 ] [88])
                (ashift:SI (reg:SI 0 ax [orig:87 video_num_columns.228_5 ] [87])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":681:40 655 {*ashlsi3_1}
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])
        (reg:SI 0 ax [orig:88 _6 ] [88])) "drivers/chr_drv/console.c":681:20 75 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_lines") [flags 0x2]  <var_decl 0x71960af2e900 video_num_lines>)
                        ] UNSPEC_GOTOFF))) [3 video_num_lines+0 S4 A32])
        (const_int 25 [0x19])) "drivers/chr_drv/console.c":682:21 75 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 0 ax [orig:89 _7 ] [89])
        (const_int 589828 [0x90004])) "drivers/chr_drv/console.c":683:18 75 {*movsi_internal}
     (nil))
(insn 17 16 19 2 (set (reg:HI 0 ax [orig:90 _8 ] [90])
        (mem:HI (reg/f:SI 0 ax [orig:89 _7 ] [89]) [8 *_7+0 S2 A16])) "drivers/chr_drv/console.c":683:18 76 {*movhi_internal}
     (nil))
(insn 19 17 20 2 (set (mem/c:QI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_page") [flags 0x2]  <var_decl 0x71960af2e990 video_page>)
                        ] UNSPEC_GOTOFF))) [0 video_page+0 S1 A8])
        (reg:QI 0 ax [orig:91 _9 ] [91])) "drivers/chr_drv/console.c":683:16 77 {*movqi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/c:HI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_erase_char") [flags 0x2]  <var_decl 0x71960af2ec60 video_erase_char>)
                        ] UNSPEC_GOTOFF))) [8 video_erase_char+0 S2 A16])
        (const_int 1824 [0x720])) "drivers/chr_drv/console.c":684:22 76 {*movhi_internal}
     (nil))
(insn 21 20 22 2 (set (reg/f:SI 0 ax [orig:92 _10 ] [92])
        (const_int 589830 [0x90006])) "drivers/chr_drv/console.c":687:9 75 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:HI 0 ax [orig:93 _11 ] [93])
        (mem:HI (reg/f:SI 0 ax [orig:92 _10 ] [92]) [8 *_10+0 S2 A16])) "drivers/chr_drv/console.c":687:9 76 {*movhi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:SI 0 ax [orig:94 _12 ] [94])
        (zero_extend:SI (reg:HI 0 ax [orig:93 _11 ] [93]))) "drivers/chr_drv/console.c":687:9 144 {*zero_extendhisi2}
     (nil))
(insn 24 23 25 2 (set (reg:SI 0 ax [orig:95 _13 ] [95])
        (zero_extend:SI (reg:QI 0 ax [orig:94 _12 ] [94]))) "drivers/chr_drv/console.c":687:9 143 {*zero_extendqisi2}
     (nil))
(insn 25 24 26 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:95 _13 ] [95])
            (const_int 7 [0x7]))) "drivers/chr_drv/console.c":687:8 11 {*cmpsi_1}
     (nil))
(jump_insn 26 25 27 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) "drivers/chr_drv/console.c":687:8 806 {*jcc}
     (nil)
 -> 52)
(note 27 26 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 3 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_start") [flags 0x2]  <var_decl 0x71960af2ea20 video_mem_start>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_start+0 S4 A32])
        (const_int 720896 [0xb0000])) "drivers/chr_drv/console.c":688:25 75 {*movsi_internal}
     (nil))
(insn 29 28 30 3 (set (mem/c:HI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_port_reg") [flags 0x2]  <var_decl 0x71960af2eb40 video_port_reg>)
                        ] UNSPEC_GOTOFF))) [8 video_port_reg+0 S2 A16])
        (const_int 948 [0x3b4])) "drivers/chr_drv/console.c":689:24 76 {*movhi_internal}
     (nil))
(insn 30 29 31 3 (set (mem/c:HI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_port_val") [flags 0x2]  <var_decl 0x71960af2ebd0 video_port_val>)
                        ] UNSPEC_GOTOFF))) [8 video_port_val+0 S2 A16])
        (const_int 949 [0x3b5])) "drivers/chr_drv/console.c":690:24 76 {*movhi_internal}
     (nil))
(insn 31 30 32 3 (set (reg/f:SI 0 ax [orig:96 _14 ] [96])
        (const_int 589834 [0x9000a])) "drivers/chr_drv/console.c":691:7 75 {*movsi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:HI 0 ax [orig:97 _15 ] [97])
        (mem:HI (reg/f:SI 0 ax [orig:96 _14 ] [96]) [8 *_14+0 S2 A16])) "drivers/chr_drv/console.c":691:7 76 {*movhi_internal}
     (nil))
(insn 33 32 34 3 (set (reg:SI 0 ax [orig:98 _16 ] [98])
        (zero_extend:SI (reg:HI 0 ax [orig:97 _15 ] [97]))) "drivers/chr_drv/console.c":691:25 144 {*zero_extendhisi2}
     (nil))
(insn 34 33 35 3 (set (reg:SI 0 ax [orig:99 _17 ] [99])
        (zero_extend:SI (reg:QI 0 ax [orig:98 _16 ] [98]))) "drivers/chr_drv/console.c":691:25 143 {*zero_extendqisi2}
     (nil))
(insn 35 34 36 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:99 _17 ] [99])
            (const_int 16 [0x10]))) "drivers/chr_drv/console.c":691:5 11 {*cmpsi_1}
     (nil))
(jump_insn 36 35 37 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "drivers/chr_drv/console.c":691:5 806 {*jcc}
     (nil)
 -> 44)
(note 37 36 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 4 (set (mem/c:QI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_type") [flags 0x2]  <var_decl 0x71960af2e750 video_type>)
                        ] UNSPEC_GOTOFF))) [0 video_type+0 S1 A8])
        (const_int 32 [0x20])) "drivers/chr_drv/console.c":693:24 77 {*movqi_internal}
     (nil))
(insn 39 38 40 4 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_end") [flags 0x2]  <var_decl 0x71960af2eab0 video_mem_end>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_end+0 S4 A32])
        (const_int 753664 [0xb8000])) "drivers/chr_drv/console.c":694:27 75 {*movsi_internal}
     (nil))
(insn 40 39 41 4 (set (reg/f:SI 0 ax [137])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0x71960ac37ab0 *.LC11>)
                    ] UNSPEC_GOTOFF)))) "drivers/chr_drv/console.c":695:26 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0x71960ac37ab0 *.LC11>)
        (nil)))
(insn 41 40 159 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 display_desc+0 S4 A32])
        (reg/f:SI 0 ax [137])) "drivers/chr_drv/console.c":695:26 75 {*movsi_internal}
     (nil))
(jump_insn 159 41 160 4 (set (pc)
        (label_ref 76)) 807 {jump}
     (nil)
 -> 76)
(barrier 160 159 44)
(code_label 44 160 45 5 173 (nil) [1 uses])
(note 45 44 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 5 (set (mem/c:QI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_type") [flags 0x2]  <var_decl 0x71960af2e750 video_type>)
                        ] UNSPEC_GOTOFF))) [0 video_type+0 S1 A8])
        (const_int 16 [0x10])) "drivers/chr_drv/console.c":698:24 77 {*movqi_internal}
     (nil))
(insn 47 46 48 5 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_end") [flags 0x2]  <var_decl 0x71960af2eab0 video_mem_end>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_end+0 S4 A32])
        (const_int 729088 [0xb2000])) "drivers/chr_drv/console.c":699:27 75 {*movsi_internal}
     (nil))
(insn 48 47 49 5 (set (reg/f:SI 0 ax [138])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC12") [flags 0x2]  <var_decl 0x71960ac37b40 *.LC12>)
                    ] UNSPEC_GOTOFF)))) "drivers/chr_drv/console.c":700:26 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC12") [flags 0x2]  <var_decl 0x71960ac37b40 *.LC12>)
        (nil)))
(insn 49 48 161 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 display_desc+0 S4 A32])
        (reg/f:SI 0 ax [138])) "drivers/chr_drv/console.c":700:26 75 {*movsi_internal}
     (nil))
(jump_insn 161 49 162 5 (set (pc)
        (label_ref 76)) 807 {jump}
     (nil)
 -> 76)
(barrier 162 161 52)
(code_label 52 162 53 6 172 (nil) [1 uses])
(note 53 52 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 6 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_start") [flags 0x2]  <var_decl 0x71960af2ea20 video_mem_start>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_start+0 S4 A32])
        (const_int 753664 [0xb8000])) "drivers/chr_drv/console.c":704:25 75 {*movsi_internal}
     (nil))
(insn 55 54 56 6 (set (mem/c:HI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_port_reg") [flags 0x2]  <var_decl 0x71960af2eb40 video_port_reg>)
                        ] UNSPEC_GOTOFF))) [8 video_port_reg+0 S2 A16])
        (const_int 980 [0x3d4])) "drivers/chr_drv/console.c":705:24 76 {*movhi_internal}
     (nil))
(insn 56 55 57 6 (set (mem/c:HI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_port_val") [flags 0x2]  <var_decl 0x71960af2ebd0 video_port_val>)
                        ] UNSPEC_GOTOFF))) [8 video_port_val+0 S2 A16])
        (const_int 981 [0x3d5])) "drivers/chr_drv/console.c":706:24 76 {*movhi_internal}
     (nil))
(insn 57 56 58 6 (set (reg/f:SI 0 ax [orig:100 _18 ] [100])
        (const_int 589834 [0x9000a])) "drivers/chr_drv/console.c":707:14 75 {*movsi_internal}
     (nil))
(insn 58 57 59 6 (set (reg:HI 0 ax [orig:101 _19 ] [101])
        (mem:HI (reg/f:SI 0 ax [orig:100 _18 ] [100]) [8 *_18+0 S2 A16])) "drivers/chr_drv/console.c":707:14 76 {*movhi_internal}
     (nil))
(insn 59 58 60 6 (set (reg:SI 0 ax [orig:102 _20 ] [102])
        (zero_extend:SI (reg:HI 0 ax [orig:101 _19 ] [101]))) "drivers/chr_drv/console.c":707:32 144 {*zero_extendhisi2}
     (nil))
(insn 60 59 61 6 (set (reg:SI 0 ax [orig:103 _21 ] [103])
        (zero_extend:SI (reg:QI 0 ax [orig:102 _20 ] [102]))) "drivers/chr_drv/console.c":707:32 143 {*zero_extendqisi2}
     (nil))
(insn 61 60 62 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:103 _21 ] [103])
            (const_int 16 [0x10]))) "drivers/chr_drv/console.c":707:12 11 {*cmpsi_1}
     (nil))
(jump_insn 62 61 63 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) "drivers/chr_drv/console.c":707:12 806 {*jcc}
     (nil)
 -> 70)
(note 63 62 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 7 (set (mem/c:QI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_type") [flags 0x2]  <var_decl 0x71960af2e750 video_type>)
                        ] UNSPEC_GOTOFF))) [0 video_type+0 S1 A8])
        (const_int 33 [0x21])) "drivers/chr_drv/console.c":709:24 77 {*movqi_internal}
     (nil))
(insn 65 64 66 7 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_end") [flags 0x2]  <var_decl 0x71960af2eab0 video_mem_end>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_end+0 S4 A32])
        (const_int 770048 [0xbc000])) "drivers/chr_drv/console.c":710:27 75 {*movsi_internal}
     (nil))
(insn 66 65 67 7 (set (reg/f:SI 0 ax [139])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC13") [flags 0x2]  <var_decl 0x71960ac37bd0 *.LC13>)
                    ] UNSPEC_GOTOFF)))) "drivers/chr_drv/console.c":711:26 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC13") [flags 0x2]  <var_decl 0x71960ac37bd0 *.LC13>)
        (nil)))
(insn 67 66 163 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 display_desc+0 S4 A32])
        (reg/f:SI 0 ax [139])) "drivers/chr_drv/console.c":711:26 75 {*movsi_internal}
     (nil))
(jump_insn 163 67 164 7 (set (pc)
        (label_ref 76)) 807 {jump}
     (nil)
 -> 76)
(barrier 164 163 70)
(code_label 70 164 71 8 175 (nil) [1 uses])
(note 71 70 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 8 (set (mem/c:QI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_type") [flags 0x2]  <var_decl 0x71960af2e750 video_type>)
                        ] UNSPEC_GOTOFF))) [0 video_type+0 S1 A8])
        (const_int 17 [0x11])) "drivers/chr_drv/console.c":714:24 77 {*movqi_internal}
     (nil))
(insn 73 72 74 8 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_end") [flags 0x2]  <var_decl 0x71960af2eab0 video_mem_end>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_end+0 S4 A32])
        (const_int 761856 [0xba000])) "drivers/chr_drv/console.c":715:27 75 {*movsi_internal}
     (nil))
(insn 74 73 75 8 (set (reg/f:SI 0 ax [140])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC14") [flags 0x2]  <var_decl 0x71960ac37c60 *.LC14>)
                    ] UNSPEC_GOTOFF)))) "drivers/chr_drv/console.c":716:26 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC14") [flags 0x2]  <var_decl 0x71960ac37c60 *.LC14>)
        (nil)))
(insn 75 74 76 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 display_desc+0 S4 A32])
        (reg/f:SI 0 ax [140])) "drivers/chr_drv/console.c":716:26 75 {*movsi_internal}
     (nil))
(code_label 76 75 77 9 174 (nil) [3 uses])
(note 77 76 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 80 9 (set (reg:SI 0 ax [orig:104 video_mem_start.229_22 ] [104])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_start") [flags 0x2]  <var_decl 0x71960af2ea20 video_mem_start>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_start+0 S4 A32])) "drivers/chr_drv/console.c":721:5 75 {*movsi_internal}
     (nil))
(insn 80 78 81 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (const_int 0 [0])) "drivers/chr_drv/console.c":721:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 81 80 82 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg/f:SI 0 ax [orig:105 video_mem_start.230_23 ] [105])) "drivers/chr_drv/console.c":721:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(call_insn 82 81 83 9 (call (mem:QI (symbol_ref:SI ("BicuitOS_version") [flags 0x3]  <function_decl 0x71960af79300 BicuitOS_version>) [0 BicuitOS_version S1 A8])
        (const_int 8 [0x8])) "drivers/chr_drv/console.c":721:5 812 {*call}
     (nil)
    (nil))
(insn 83 82 84 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":721:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 84 83 85 9 (set (reg:SI 1 dx [orig:106 video_size_row.231_24 ] [106])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":725:45 75 {*movsi_internal}
     (nil))
(insn 85 84 86 9 (set (reg:SI 0 ax [orig:107 video_mem_start.232_25 ] [107])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_start") [flags 0x2]  <var_decl 0x71960af2ea20 video_mem_start>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_start+0 S4 A32])) "drivers/chr_drv/console.c":725:45 75 {*movsi_internal}
     (nil))
(insn 86 85 87 9 (parallel [
            (set (reg:SI 0 ax [orig:108 _26 ] [108])
                (plus:SI (reg:SI 0 ax [orig:107 video_mem_start.232_25 ] [107])
                    (reg:SI 1 dx [orig:106 video_size_row.231_24 ] [106])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":725:45 209 {*addsi_1}
     (nil))
(insn 87 86 88 9 (parallel [
            (set (reg:SI 0 ax [orig:109 _27 ] [109])
                (plus:SI (reg:SI 0 ax [orig:108 _26 ] [108])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":725:62 209 {*addsi_1}
     (nil))
(insn 88 87 165 9 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 display_ptr+0 S4 A32])
        (reg:SI 0 ax [orig:109 _27 ] [109])) "drivers/chr_drv/console.c":725:17 75 {*movsi_internal}
     (nil))
(jump_insn 165 88 166 9 (set (pc)
        (label_ref 101)) "drivers/chr_drv/console.c":726:11 807 {jump}
     (nil)
 -> 101)
(barrier 166 165 105)
(code_label 105 166 91 10 177 (nil) [1 uses])
(note 91 105 92 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 10 (set (reg/f:SI 1 dx [orig:110 display_desc.233_28 ] [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 display_desc+0 S4 A32])) "drivers/chr_drv/console.c":727:39 75 {*movsi_internal}
     (nil))
(insn 93 92 94 10 (parallel [
            (set (reg:SI 0 ax [141])
                (plus:SI (reg/f:SI 1 dx [orig:110 display_desc.233_28 ] [110])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":727:39 209 {*addsi_1}
     (nil))
(insn 94 93 95 10 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 display_desc+0 S4 A32])
        (reg:SI 0 ax [141])) "drivers/chr_drv/console.c":727:39 75 {*movsi_internal}
     (nil))
(insn 95 94 96 10 (set (reg/f:SI 0 ax [orig:111 display_ptr.234_29 ] [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 display_ptr+0 S4 A32])) "drivers/chr_drv/console.c":727:21 75 {*movsi_internal}
     (nil))
(insn 96 95 97 10 (parallel [
            (set (reg:SI 2 cx [142])
                (plus:SI (reg/f:SI 0 ax [orig:111 display_ptr.234_29 ] [111])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":727:21 209 {*addsi_1}
     (nil))
(insn 97 96 98 10 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 display_ptr+0 S4 A32])
        (reg:SI 2 cx [142])) "drivers/chr_drv/console.c":727:21 75 {*movsi_internal}
     (nil))
(insn 98 97 99 10 (set (reg:QI 1 dx [orig:112 _30 ] [112])
        (mem:QI (reg/f:SI 1 dx [orig:110 display_desc.233_28 ] [110]) [0 *display_desc.233_28+0 S1 A8])) "drivers/chr_drv/console.c":727:26 77 {*movqi_internal}
     (nil))
(insn 99 98 100 10 (set (mem:QI (reg/f:SI 0 ax [orig:111 display_ptr.234_29 ] [111]) [0 *display_ptr.234_29+0 S1 A8])
        (reg:QI 1 dx [orig:112 _30 ] [112])) "drivers/chr_drv/console.c":727:24 77 {*movqi_internal}
     (nil))
(insn 100 99 101 10 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [9 display_ptr+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [9 display_ptr+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":728:20 209 {*addsi_1}
     (nil))
(code_label 101 100 102 11 176 (nil) [1 uses])
(note 102 101 103 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 11 (set (reg/f:SI 0 ax [143])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 display_desc+0 S4 A32])) "drivers/chr_drv/console.c":726:12 75 {*movsi_internal}
     (nil))
(insn 104 103 106 11 (set (reg:QI 0 ax [orig:113 _31 ] [113])
        (mem:QI (reg/f:SI 0 ax [143]) [0 *display_desc_52+0 S1 A8])) "drivers/chr_drv/console.c":726:12 77 {*movqi_internal}
     (nil))
(insn 106 104 107 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:113 _31 ] [113])
            (const_int 0 [0]))) "drivers/chr_drv/console.c":726:12 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 107 106 108 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) "drivers/chr_drv/console.c":726:12 806 {*jcc}
     (nil)
 -> 105)
(note 108 107 109 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 12 (set (reg:SI 0 ax [orig:114 video_mem_start.235_32 ] [114])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_start") [flags 0x2]  <var_decl 0x71960af2ea20 video_mem_start>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_start+0 S4 A32])) "drivers/chr_drv/console.c":734:12 75 {*movsi_internal}
     (nil))
(insn 110 109 111 12 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("origin") [flags 0x2]  <var_decl 0x71960af2ecf0 origin>)
                        ] UNSPEC_GOTOFF))) [3 origin+0 S4 A32])
        (reg:SI 0 ax [orig:114 video_mem_start.235_32 ] [114])) "drivers/chr_drv/console.c":734:12 75 {*movsi_internal}
     (nil))
(insn 111 110 112 12 (set (reg:SI 1 dx [orig:115 video_num_lines.236_33 ] [115])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_lines") [flags 0x2]  <var_decl 0x71960af2e900 video_num_lines>)
                        ] UNSPEC_GOTOFF))) [3 video_num_lines+0 S4 A32])) "drivers/chr_drv/console.c":735:49 75 {*movsi_internal}
     (nil))
(insn 112 111 113 12 (set (reg:SI 0 ax [orig:116 video_size_row.237_34 ] [116])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_size_row") [flags 0x2]  <var_decl 0x71960af2e7e0 video_size_row>)
                        ] UNSPEC_GOTOFF))) [3 video_size_row+0 S4 A32])) "drivers/chr_drv/console.c":735:49 75 {*movsi_internal}
     (nil))
(insn 113 112 114 12 (parallel [
            (set (reg:SI 1 dx [orig:117 _35 ] [117])
                (mult:SI (reg:SI 1 dx [orig:115 video_num_lines.236_33 ] [115])
                    (reg:SI 0 ax [orig:116 video_size_row.237_34 ] [116])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":735:49 408 {*mulsi3_1}
     (nil))
(insn 114 113 115 12 (set (reg:SI 0 ax [orig:118 video_mem_start.238_36 ] [118])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_mem_start") [flags 0x2]  <var_decl 0x71960af2ea20 video_mem_start>)
                        ] UNSPEC_GOTOFF))) [3 video_mem_start+0 S4 A32])) "drivers/chr_drv/console.c":735:31 75 {*movsi_internal}
     (nil))
(insn 115 114 116 12 (parallel [
            (set (reg:SI 0 ax [orig:119 _37 ] [119])
                (plus:SI (reg:SI 0 ax [orig:118 video_mem_start.238_36 ] [118])
                    (reg:SI 1 dx [orig:117 _35 ] [117])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":735:31 209 {*addsi_1}
     (nil))
(insn 116 115 117 12 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("scr_end") [flags 0x2]  <var_decl 0x71960af2ed80 scr_end>)
                        ] UNSPEC_GOTOFF))) [3 scr_end+0 S4 A32])
        (reg:SI 0 ax [orig:119 _37 ] [119])) "drivers/chr_drv/console.c":735:13 75 {*movsi_internal}
     (nil))
(insn 117 116 118 12 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("top") [flags 0x2]  <var_decl 0x71960af2e2d0 top>)
                        ] UNSPEC_GOTOFF))) [3 top+0 S4 A32])
        (const_int 0 [0])) "drivers/chr_drv/console.c":736:9 75 {*movsi_internal}
     (nil))
(insn 118 117 119 12 (set (reg:SI 0 ax [orig:120 video_num_lines.239_38 ] [120])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("video_num_lines") [flags 0x2]  <var_decl 0x71960af2e900 video_num_lines>)
                        ] UNSPEC_GOTOFF))) [3 video_num_lines+0 S4 A32])) "drivers/chr_drv/console.c":737:12 75 {*movsi_internal}
     (nil))
(insn 119 118 120 12 (set (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bottom") [flags 0x2]  <var_decl 0x71960af55000 bottom>)
                        ] UNSPEC_GOTOFF))) [3 bottom+0 S4 A32])
        (reg:SI 0 ax [orig:120 video_num_lines.239_38 ] [120])) "drivers/chr_drv/console.c":737:12 75 {*movsi_internal}
     (nil))
(insn 120 119 121 12 (set (reg/f:SI 0 ax [orig:121 _39 ] [121])
        (const_int 589825 [0x90001])) "drivers/chr_drv/console.c":739:20 75 {*movsi_internal}
     (nil))
(insn 121 120 122 12 (set (reg:QI 0 ax [orig:122 _40 ] [122])
        (mem:QI (reg/f:SI 0 ax [orig:121 _39 ] [121]) [0 *_39+0 S1 A8])) "drivers/chr_drv/console.c":739:20 77 {*movqi_internal}
     (nil))
(insn 122 121 123 12 (set (reg:SI 1 dx [orig:123 _41 ] [123])
        (zero_extend:SI (reg:QI 0 ax [orig:122 _40 ] [122]))) "drivers/chr_drv/console.c":739:5 143 {*zero_extendqisi2}
     (nil))
(insn 123 122 124 12 (set (reg/f:SI 0 ax [orig:124 _42 ] [124])
        (const_int 589824 [0x90000])) "drivers/chr_drv/console.c":739:12 75 {*movsi_internal}
     (nil))
(insn 124 123 125 12 (set (reg:QI 0 ax [orig:125 _43 ] [125])
        (mem:QI (reg/f:SI 0 ax [orig:124 _42 ] [124]) [0 *_42+0 S1 A8])) "drivers/chr_drv/console.c":739:12 77 {*movqi_internal}
     (nil))
(insn 125 124 126 12 (set (reg:SI 0 ax [orig:126 _44 ] [126])
        (zero_extend:SI (reg:QI 0 ax [orig:125 _43 ] [125]))) "drivers/chr_drv/console.c":739:5 143 {*zero_extendqisi2}
     (nil))
(insn 126 125 127 12 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg:SI 1 dx [orig:123 _41 ] [123])) "drivers/chr_drv/console.c":739:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 127 126 128 12 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg:SI 0 ax [orig:126 _44 ] [126])) "drivers/chr_drv/console.c":739:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(call_insn 128 127 129 12 (call (mem:QI (symbol_ref:SI ("gotoxy") [flags 0x3]  <function_decl 0x71960af5a200 gotoxy>) [0 gotoxy S1 A8])
        (const_int 8 [0x8])) "drivers/chr_drv/console.c":739:5 812 {*call}
     (nil)
    (nil))
(insn 129 128 130 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":739:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 130 129 131 12 (set (reg:SI 0 ax [144])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x71960c4dfbd0 idt>)
                        ] UNSPEC_GOT))) [13  S4 A8])) "drivers/chr_drv/console.c":741:5 75 {*movsi_internal}
     (nil))
(insn 131 130 132 12 (set (reg/f:SI 2 cx [orig:127 _45 ] [127])
        (plus:SI (reg:SI 0 ax [144])
            (const_int 264 [0x108]))) "drivers/chr_drv/console.c":741:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x71960c4dfbd0 idt>)
                (const_int 264 [0x108])))
        (nil)))
(insn 132 131 133 12 (set (reg:SI 0 ax [145])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x71960c4dfbd0 idt>)
                        ] UNSPEC_GOT))) [13  S4 A8])) "drivers/chr_drv/console.c":741:5 75 {*movsi_internal}
     (nil))
(insn 133 132 134 12 (set (reg/f:SI 4 si [orig:128 _46 ] [128])
        (plus:SI (reg:SI 0 ax [145])
            (const_int 268 [0x10c]))) "drivers/chr_drv/console.c":741:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x71960c4dfbd0 idt>)
                (const_int 268 [0x10c])))
        (nil)))
(insn 134 133 135 12 (set (reg:SI 0 ax [147])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("keyboard_interrupt") [flags 0x41]  <function_decl 0x71960af50700 keyboard_interrupt>)
                        ] UNSPEC_GOT))) [13  S4 A8])) "drivers/chr_drv/console.c":741:5 75 {*movsi_internal}
     (nil))
(insn 135 134 136 12 (set (reg/f:SI 1 dx [146])
        (reg:SI 0 ax [147])) "drivers/chr_drv/console.c":741:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("keyboard_interrupt") [flags 0x41]  <function_decl 0x71960af50700 keyboard_interrupt>)
        (nil)))
(insn 136 135 137 12 (set (reg:SI 0 ax [148])
        (const_int 524288 [0x80000])) "drivers/chr_drv/console.c":741:5 75 {*movsi_internal}
     (nil))
(insn 137 136 139 12 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 2 cx [orig:127 _45 ] [127]) [0 MEM[(char *)_45]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:128 _46 ] [128]) [0 *_46+0 S1 A8])
                    (reg/f:SI 1 dx [146])
                    (reg:SI 0 ax [148])
                ]
                 [
                    (asm_input:HI ("i") drivers/chr_drv/console.c:741)
                    (asm_input:QI ("o") drivers/chr_drv/console.c:741)
                    (asm_input:QI ("o") drivers/chr_drv/console.c:741)
                    (asm_input:SI ("d") drivers/chr_drv/console.c:741)
                    (asm_input:SI ("a") drivers/chr_drv/console.c:741)
                ]
                 [] drivers/chr_drv/console.c:741)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":741:5 -1
     (nil))
(insn 139 137 171 12 (set (reg:SI 0 ax [150])
        (const_int 33 [0x21])) "drivers/chr_drv/console.c":742:5 75 {*movsi_internal}
     (nil))
(insn 171 139 140 12 (set (reg:SI 1 dx [150])
        (reg:SI 0 ax [150])) "drivers/chr_drv/console.c":742:5 75 {*movsi_internal}
     (nil))
(insn 140 171 138 12 (parallel [
            (set (reg:QI 0 ax [orig:149 _v ] [149])
                (asm_operands/v:QI ("inb %%dx, %%al
	jmp 1f
1:	jmp 1f
1:") ("=a") 0 [
                        (reg:SI 1 dx [150])
                    ]
                     [
                        (asm_input:SI ("d") drivers/chr_drv/console.c:742)
                    ]
                     [] drivers/chr_drv/console.c:742))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":742:5 -1
     (nil))
(insn 138 140 141 12 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 7 [0x7])) [0 _v+0 S1 A8])
        (reg:QI 0 ax [orig:149 _v ] [149])) "drivers/chr_drv/console.c":742:5 77 {*movqi_internal}
     (nil))
(insn 141 138 142 12 (set (reg:QI 0 ax [orig:133 _89 ] [133])
        (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 7 [0x7])) [0 _v+0 S1 A8])) "drivers/chr_drv/console.c":742:5 77 {*movqi_internal}
     (nil))
(insn 142 141 143 12 (set (reg:SI 0 ax [orig:129 _47 ] [129])
        (zero_extend:SI (reg:QI 0 ax [orig:133 _89 ] [133]))) "drivers/chr_drv/console.c":742:5 143 {*zero_extendqisi2}
     (nil))
(insn 143 142 144 12 (parallel [
            (set (reg:SI 0 ax [orig:130 _48 ] [130])
                (and:SI (reg:SI 0 ax [orig:129 _47 ] [129])
                    (const_int 253 [0xfd])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":742:5 490 {*andsi_1}
     (nil))
(insn 144 143 145 12 (set (reg:SI 1 dx [151])
        (const_int 33 [0x21])) "drivers/chr_drv/console.c":742:5 75 {*movsi_internal}
     (nil))
(insn 145 144 147 12 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 0 ax [orig:130 _48 ] [130])
                    (reg:SI 1 dx [151])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/console.c:742)
                    (asm_input:SI ("d") drivers/chr_drv/console.c:742)
                ]
                 [] drivers/chr_drv/console.c:742)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":742:5 -1
     (nil))
(insn 147 145 172 12 (set (reg:SI 0 ax [153])
        (const_int 97 [0x61])) "drivers/chr_drv/console.c":743:9 75 {*movsi_internal}
     (nil))
(insn 172 147 148 12 (set (reg:SI 1 dx [153])
        (reg:SI 0 ax [153])) "drivers/chr_drv/console.c":743:9 75 {*movsi_internal}
     (nil))
(insn 148 172 146 12 (parallel [
            (set (reg:QI 0 ax [orig:152 _v ] [152])
                (asm_operands/v:QI ("inb %%dx, %%al
	jmp 1f
1:	jmp 1f
1:") ("=a") 0 [
                        (reg:SI 1 dx [153])
                    ]
                     [
                        (asm_input:SI ("d") drivers/chr_drv/console.c:743)
                    ]
                     [] drivers/chr_drv/console.c:743))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":743:9 -1
     (nil))
(insn 146 148 149 12 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 6 [0x6])) [0 _v+0 S1 A16])
        (reg:QI 0 ax [orig:152 _v ] [152])) "drivers/chr_drv/console.c":743:9 77 {*movqi_internal}
     (nil))
(insn 149 146 150 12 (set (reg:QI 0 ax [orig:134 _91 ] [134])
        (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 6 [0x6])) [0 _v+0 S1 A16])) "drivers/chr_drv/console.c":743:9 77 {*movqi_internal}
     (nil))
(insn 150 149 173 12 (set (reg/v:QI 3 bx [orig:135 a ] [135])
        (reg:QI 0 ax [orig:134 _91 ] [134])) "drivers/chr_drv/console.c":743:7 77 {*movqi_internal}
     (nil))
(insn 173 150 151 12 (set (reg:QI 0 ax [orig:131 _49 ] [131])
        (reg/v:QI 3 bx [orig:135 a ] [135])) "drivers/chr_drv/console.c":744:5 77 {*movqi_internal}
     (nil))
(insn 151 173 152 12 (parallel [
            (set (reg:QI 0 ax [orig:131 _49 ] [131])
                (ior:QI (reg:QI 0 ax [orig:131 _49 ] [131])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":744:5 530 {*iorqi_1}
     (nil))
(insn 152 151 153 12 (set (reg:SI 0 ax [orig:132 _50 ] [132])
        (zero_extend:SI (reg:QI 0 ax [orig:131 _49 ] [131]))) "drivers/chr_drv/console.c":744:5 143 {*zero_extendqisi2}
     (nil))
(insn 153 152 154 12 (set (reg:SI 1 dx [154])
        (const_int 97 [0x61])) "drivers/chr_drv/console.c":744:5 75 {*movsi_internal}
     (nil))
(insn 154 153 155 12 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 0 ax [orig:132 _50 ] [132])
                    (reg:SI 1 dx [154])
                ]
                 [
                    (asm_input:SI ("a") drivers/chr_drv/console.c:744)
                    (asm_input:SI ("d") drivers/chr_drv/console.c:744)
                ]
                 [] drivers/chr_drv/console.c:744)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":744:5 -1
     (nil))
(insn 155 154 175 12 (set (reg:SI 1 dx [155])
        (const_int 97 [0x61])) "drivers/chr_drv/console.c":745:5 75 {*movsi_internal}
     (nil))
(insn 175 155 156 12 (set (reg/v:QI 0 ax [orig:135 a ] [135])
        (reg/v:QI 3 bx [orig:135 a ] [135])) "drivers/chr_drv/console.c":745:5 77 {*movqi_internal}
     (nil))
(insn 156 175 167 12 (parallel [
            (asm_operands/v ("outb %%al, %%dx") ("") 0 [
                    (reg/v:QI 0 ax [orig:135 a ] [135])
                    (reg:SI 1 dx [155])
                ]
                 [
                    (asm_input:QI ("a") drivers/chr_drv/console.c:745)
                    (asm_input:SI ("d") drivers/chr_drv/console.c:745)
                ]
                 [] drivers/chr_drv/console.c:745)
            (clobber (reg:CC 17 flags))
        ]) "drivers/chr_drv/console.c":745:5 -1
     (nil))
(note 167 156 168 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 170 13 (const_int 0 [0]) "drivers/chr_drv/console.c":746:1 843 {nop}
     (nil))
(note 170 168 0 NOTE_INSN_DELETED)
