
;; Function oom (oom, funcdef_no=1, decl_uid=1336, cgraph_uid=2, symbol_order=3)

scanning new insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:24000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 19(l0): point = 0
   Insn 15(l0): point = 3
   Insn 14(l0): point = 5
   Insn 13(l0): point = 7
   Insn 12(l0): point = 9
   Insn 11(l0): point = 11
   Insn 10(l0): point = 13
   Insn 9(l0): point = 15
   Insn 8(l0): point = 17
   Insn 7(l0): point = 19
   Insn 6(l0): point = 21
   Insn 5(l0): point = 23
   Insn 20(l0): point = 25
 a0(r82): [8..25]
 a1(r83): [20..21]
Compressing live ranges: from 28 to 2 - 7%
Ranges after the compression:
 a0(r82): [0..1]
 a1(r83): [0..1]
  pref0:a0(r82)<-hr3@1500
  regions=1, blocks=4, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    0:r82  l0     3    1:r83  l0     0
+++Costs: overall 1000, reg 1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


oom

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r3={2d,2u} r6={1d,3u} r7={7d,15u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,2u} r17={7d} r18={2d} r19={1d,3u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,3u} r83={1d,1u} 
;;    total ref usage 189{160d,29u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 20 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 20 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 20 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":34:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 6 5 7 2 (set (reg/f:SI 83)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x739b83b9d480 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":34:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x739b83b9d480 *.LC0>)
        (nil)))
(insn 7 6 8 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [15  S4 A32])
        (reg/f:SI 83)) "mm/memory.c":34:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 8 7 9 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "mm/memory.c":34:2 75 {*movsi_internal}
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x739b83ad2700 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "mm/memory.c":34:2 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":34:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 11 10 12 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":35:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 12 11 13 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (const_int 11 [0xb])) "mm/memory.c":35:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 13 12 14 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "mm/memory.c":35:2 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref:SI ("do_exit") [flags 0x41]  <function_decl 0x739b83b37e00 do_exit>) [0 do_exit S1 A8])
        (const_int 16 [0x10])) "mm/memory.c":35:2 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 15 14 18 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":35:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 18 15 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 0 3 (const_int 0 [0]) "mm/memory.c":36:1 843 {nop}
     (nil))

;; Function mem_init (mem_init, funcdef_no=2, decl_uid=1340, cgraph_uid=3, symbol_order=4)

scanning new insn with uid = 59.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 11 n_edges 12 count 13 (  1.2)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 9 8 10
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 9 }
;; 9 succs { 8 }
;; 8 succs { 10 }
;; 10 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a1(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:24000
  a3(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a4(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a8(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a10(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a11(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a12(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 58(l0): point = 0
   Insn 56(l0): point = 4
   Insn 37(l0): point = 7
   Insn 36(l0): point = 9
   Insn 35(l0): point = 11
   Insn 34(l0): point = 13
   Insn 47(l0): point = 16
   Insn 46(l0): point = 18
   Insn 42(l0): point = 20
   Insn 41(l0): point = 22
   Insn 40(l0): point = 24
   Insn 53(l0): point = 27
   Insn 30(l0): point = 29
   Insn 29(l0): point = 31
   Insn 28(l0): point = 33
   Insn 27(l0): point = 35
   Insn 26(l0): point = 37
   Insn 25(l0): point = 39
   Insn 24(l0): point = 41
   Insn 15(l0): point = 44
   Insn 14(l0): point = 46
   Insn 13(l0): point = 48
   Insn 12(l0): point = 50
   Insn 11(l0): point = 52
   Insn 22(l0): point = 55
   Insn 21(l0): point = 57
   Insn 51(l0): point = 60
   Insn 7(l0): point = 62
   Insn 6(l0): point = 64
   Insn 5(l0): point = 66
   Insn 59(l0): point = 68
 a0(r85): [19..24]
 a1(r94): [21..22]
 a2(r82): [7..68]
 a3(r84): [8..13]
 a4(r93): [10..11]
 a5(r92): [32..33]
 a6(r91): [36..37]
 a7(r83): [38..39]
 a8(r90): [40..41]
 a9(r89): [47..48]
 a10(r88): [49..50]
 a11(r87): [49..52]
 a12(r86): [65..66]
Compressing live ranges: from 71 to 18 - 25%
Ranges after the compression:
 a0(r85): [2..3]
 a1(r94): [2..3]
 a2(r82): [0..17]
 a3(r84): [0..1]
 a4(r93): [0..1]
 a5(r92): [4..5]
 a6(r91): [6..7]
 a7(r83): [8..9]
 a8(r90): [10..11]
 a9(r89): [12..13]
 a10(r88): [14..15]
 a11(r87): [14..15]
 a12(r86): [16..17]
  regions=1, blocks=11, points=18
    allocnos=13 (big 0), copies=0, conflicts=0, ranges=13
Disposition:
    2:r82  l0     0    7:r83  l0     1    3:r84  l0     1    0:r85  l0     1
   12:r86  l0     1   11:r87  l0     2   10:r88  l0     1    9:r89  l0     1
    8:r90  l0     1    6:r91  l0     1    5:r92  l0     1    4:r93  l0     2
    1:r94  l0     2
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


mem_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 17 [flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r6={1d,10u} r7={1d,10u} r16={1d,18u,1e} r17={11d,2u} r19={1d,18u} r82={1d,3u} r83={1d,1u} r84={1d,2u} r85={1d,2u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 107{31d,75u,1e} in 31{31 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 59 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 59 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 59 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 86)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 end_mem+0 S4 A32])) "mm/memory.c":45:17 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("HIGH_MEMORY") [flags 0x2]  <var_decl 0x739b83b2f510 HIGH_MEMORY>)
                        ] UNSPEC_GOTOFF))) [1 HIGH_MEMORY+0 S4 A32])
        (reg:SI 86)) "mm/memory.c":45:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86)
        (nil)))
(insn 7 6 51 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (const_int 0 [0])) "mm/memory.c":47:12 75 {*movsi_internal}
     (nil))
(jump_insn 51 7 52 2 (set (pc)
        (label_ref 16)) "mm/memory.c":47:5 807 {jump}
     (nil)
 -> 16)
(barrier 52 51 18)
(code_label 18 52 10 3 4 (nil) [1 uses])
(note 10 18 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:SI 87)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("mem_map") [flags 0x2]  <var_decl 0x739b83b2f5a0 mem_map>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":49:20 205 {*leasi}
     (nil))
(insn 12 11 13 3 (set (reg:SI 88)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "mm/memory.c":49:20 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (parallel [
            (set (reg/f:SI 89)
                (plus:SI (reg:SI 87)
                    (reg:SI 88)))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":49:20 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 88)
        (expr_list:REG_DEAD (reg:SI 87)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 14 13 15 3 (set (mem:QI (reg/f:SI 89) [0 mem_map[i_5]+0 S1 A8])
        (const_int 100 [0x64])) "mm/memory.c":49:20 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":47:36 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 16 15 17 4 3 (nil) [1 uses])
(note 17 16 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 17 22 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
            (const_int 3839 [0xeff]))) "mm/memory.c":47:19 11 {*cmpsi_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "mm/memory.c":47:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 18)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg:SI 90)
        (mem/c:SI (reg/f:SI 16 argp) [1 start_mem+0 S4 A32])) "mm/memory.c":51:9 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg:SI 83 [ _1 ])
                (plus:SI (reg:SI 90)
                    (const_int -1048576 [0xfffffffffff00000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":51:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 90)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [1 start_mem+0 S4 A32])
                    (const_int -1048576 [0xfffffffffff00000]))
                (nil)))))
(insn 26 25 27 5 (parallel [
            (set (reg:SI 91)
                (ashiftrt:SI (reg:SI 83 [ _1 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":51:7 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 27 26 28 5 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 91)) "mm/memory.c":51:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(insn 28 27 29 5 (set (reg:SI 92)
        (mem/c:SI (reg/f:SI 16 argp) [1 start_mem+0 S4 A32])) "mm/memory.c":53:13 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 4 [0x4])) [1 end_mem+0 S4 A32])
                (minus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [1 end_mem+0 S4 A32])
                    (reg:SI 92)))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":53:13 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 92)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 30 29 53 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 4 [0x4])) [1 end_mem+0 S4 A32])
                (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [1 end_mem+0 S4 A32])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":55:13 702 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 53 30 54 5 (set (pc)
        (label_ref 38)) "mm/memory.c":56:11 807 {jump}
     (nil)
 -> 38)
(barrier 54 53 43)
(code_label 43 54 33 6 6 (nil) [1 uses])
(note 33 43 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg:SI 84 [ i.0_2 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "mm/memory.c":58:18 75 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (parallel [
            (set (reg:SI 93)
                (plus:SI (reg:SI 84 [ i.0_2 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":58:18 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 36 35 37 6 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 93)) "mm/memory.c":58:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(insn 37 36 38 6 (set (mem:QI (plus:SI (plus:SI (reg:SI 82)
                    (reg:SI 84 [ i.0_2 ]))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("mem_map") [flags 0x2]  <var_decl 0x739b83b2f5a0 mem_map>)
                        ] UNSPEC_GOTOFF))) [0 mem_map[i.0_2]+0 S1 A8])
        (const_int 0 [0])) "mm/memory.c":58:22 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ i.0_2 ])
        (nil)))
(code_label 38 37 39 7 5 (nil) [1 uses])
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (set (reg:SI 85 [ end_mem.1_3 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 end_mem+0 S4 A32])) "mm/memory.c":56:19 75 {*movsi_internal}
     (nil))
(insn 41 40 42 7 (parallel [
            (set (reg:SI 94)
                (plus:SI (reg:SI 85 [ end_mem.1_3 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":56:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 42 41 46 7 (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 end_mem+0 S4 A32])
        (reg:SI 94)) "mm/memory.c":56:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(insn 46 42 47 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 85 [ end_mem.1_3 ])
            (const_int 0 [0]))) "mm/memory.c":56:22 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 85 [ end_mem.1_3 ])
        (nil)))
(jump_insn 47 46 55 7 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "mm/memory.c":56:22 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 43)
(note 55 47 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 48 9 (const_int 0 [0]) "mm/memory.c":59:1 843 {nop}
     (nil))
(note 48 56 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 57 48 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 0 10 (const_int 0 [0]) "mm/memory.c":59:1 843 {nop}
     (nil))

;; Function get_free_page (get_free_page, funcdef_no=3, decl_uid=1351, cgraph_uid=4, symbol_order=5)

scanning new insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best CREG, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a2(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a3(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a4(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a5(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 19(l0): point = 10
   Insn 7(l0): point = 12
   Insn 6(l0): point = 14
   Insn 5(l0): point = 16
   Insn 20(l0): point = 18
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r87): [9..12]
 a3(r83): [9..16]
 a4(r86): [11..14]
 a5(r82): [17..18]
Compressing live ranges: from 21 to 8 - 38%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r87): [4..5]
 a3(r83): [4..5]
 a4(r86): [4..5]
 a5(r82): [6..7]
  pref0:a2(r87)<-hr2@1000
  pref1:a4(r86)<-hr0@1500
  pref2:a0(r85)<-hr0@1500
  pref3:a1(r84)<-hr0@1500
  pref4:a3(r83)<-hr5@1000
  regions=1, blocks=3, points=8
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    5:r82  l0     0    3:r83  l0     1    1:r84  l0     0    0:r85  l0     0
    4:r86  l0     0    2:r87  l0     2
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


get_free_page

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={4d,4u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={2d} r19={1d,2u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 35{18d,17u,0e} in 10{10 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 20 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 20 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 20 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 83 [ _1 ])
        (plus:SI (reg:SI 82)
            (const:SI (plus:SI (unspec:SI [
                            (symbol_ref:SI ("mem_map") [flags 0x2]  <var_decl 0x739b83b2f5a0 mem_map>)
                        ] UNSPEC_GOTOFF)
                    (const_int 3839 [0xeff]))))) "mm/memory.c":137:34 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("mem_map") [flags 0x2]  <var_decl 0x739b83b2f5a0 mem_map>)
                    (const_int 3839 [0xeff])))
            (nil))))
(insn 6 5 7 2 (set (reg:SI 86)
        (const_int 0 [0])) "mm/memory.c":119:2 75 {*movsi_internal}
     (nil))
(insn 7 6 19 2 (set (reg:SI 87)
        (const_int 3840 [0xf00])) "mm/memory.c":119:2 75 {*movsi_internal}
     (nil))
(insn 19 7 8 2 (set (reg/v:SI 0 ax [ __res ])
        (reg:SI 86)) "mm/memory.c":119:2 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86)
        (nil)))
(insn 8 19 9 2 (parallel [
            (set (reg/v:SI 0 ax [ __res ])
                (asm_operands:SI ("std ; repne ; scasb
	jne 1f
	movb $1, 1(%%edi)
	sall $12, %%ecx
	addl %2, %%ecx
	movl %%ecx, %%edx
	movl $1024, %%ecx
	leal 4092(%%edx), %%edi
	rep ; stosl
	movl %%edx, %%eax
1:cld") ("=a") 0 [
                        (reg/v:SI 0 ax [ __res ])
                        (const_int 1048576 [0x100000])
                        (reg:SI 87)
                        (reg/f:SI 83 [ _1 ])
                    ]
                     [
                        (asm_input:SI ("0") mm/memory.c:119)
                        (asm_input:SI ("i") mm/memory.c:119)
                        (asm_input:SI ("c") mm/memory.c:119)
                        (asm_input:SI ("D") mm/memory.c:119)
                    ]
                     [] mm/memory.c:119))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":119:2 -1
     (expr_list:REG_DEAD (reg:SI 87)
        (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 9 8 12 2 (set (reg:SI 84 [ _4 ])
        (reg/v:SI 0 ax [ __res ])) "mm/memory.c":139:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [ __res ])
        (nil)))
(insn 12 9 16 2 (set (reg:SI 85 [ <retval> ])
        (reg:SI 84 [ _4 ])) "mm/memory.c":139:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ _4 ])
        (nil)))
(insn 16 12 17 2 (set (reg/i:SI 0 ax)
        (reg:SI 85 [ <retval> ])) "mm/memory.c":140:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ <retval> ])
        (nil)))
(insn 17 16 0 2 (use (reg/i:SI 0 ax)) "mm/memory.c":140:1 -1
     (nil))

;; Function free_page (free_page, funcdef_no=4, decl_uid=1355, cgraph_uid=5, symbol_order=6)

scanning new insn with uid = 69.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 8 9 7
;; 2 succs { 8 3 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 9 6 }
;; 6 succs { 7 }
;; 8 succs { 7 }
;; 9 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a7 (r86,l0) best Q_REGS, allocno Q_REGS
    r85: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a5 (r85,l0) best Q_REGS, allocno Q_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:54000
  a1(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a3(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a4(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a5(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:17000
  a6(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:13000
  a8(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a9(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a10(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a12(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a13(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a15(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 68(l0): point = 1
   Insn 64(l0): point = 4
   Insn 63(l0): point = 6
   Insn 59(l0): point = 9
   Insn 54(l0): point = 11
   Insn 53(l0): point = 13
   Insn 52(l0): point = 15
   Insn 51(l0): point = 17
   Insn 50(l0): point = 19
   Insn 49(l0): point = 21
   Insn 48(l0): point = 23
   Insn 47(l0): point = 25
   Insn 46(l0): point = 27
   Insn 45(l0): point = 29
   Insn 39(l0): point = 32
   Insn 38(l0): point = 34
   Insn 37(l0): point = 36
   Insn 36(l0): point = 38
   Insn 35(l0): point = 40
   Insn 34(l0): point = 42
   Insn 33(l0): point = 44
   Insn 32(l0): point = 46
   Insn 31(l0): point = 48
   Insn 30(l0): point = 50
   Insn 29(l0): point = 52
   Insn 28(l0): point = 54
   Insn 27(l0): point = 56
   Insn 24(l0): point = 59
   Insn 23(l0): point = 61
   Insn 22(l0): point = 63
   Insn 21(l0): point = 65
   Insn 20(l0): point = 67
   Insn 19(l0): point = 69
   Insn 17(l0): point = 72
   Insn 16(l0): point = 74
   Insn 15(l0): point = 76
   Insn 14(l0): point = 78
   Insn 8(l0): point = 81
   Insn 7(l0): point = 83
   Insn 69(l0): point = 85
 a0(r82): [16..85]
 a1(r97): [18..19]
 a2(r96): [24..25]
 a3(r95): [26..27]
 a4(r94): [26..29]
 a5(r85): [35..46]
 a6(r93): [37..38]
 a7(r86): [37..44]
 a8(r92): [39..40]
 a9(r91): [39..42]
 a10(r90): [47..48]
 a11(r89): [49..50]
 a12(r88): [49..52]
 a13(r87): [66..67]
 a14(r84): [75..76]
 a15(r83): [77..78]
Compressing live ranges: from 88 to 20 - 22%
Ranges after the compression:
 a0(r82): [0..19]
 a1(r97): [0..1]
 a2(r96): [2..3]
 a3(r95): [4..5]
 a4(r94): [4..5]
 a5(r85): [6..9]
 a6(r93): [6..7]
 a7(r86): [6..9]
 a8(r92): [8..9]
 a9(r91): [8..9]
 a10(r90): [10..11]
 a11(r89): [12..13]
 a12(r88): [12..13]
 a13(r87): [14..15]
 a14(r84): [16..17]
 a15(r83): [18..19]
  pref0:a0(r82)<-hr3@1500
  regions=1, blocks=10, points=20
    allocnos=16 (big 0), copies=0, conflicts=0, ranges=16
Disposition:
    0:r82  l0     3   15:r83  l0     0   14:r84  l0     0    5:r85  l0     0
    7:r86  l0     1   13:r87  l0     0   12:r88  l0     1   11:r89  l0     0
   10:r90  l0     0    9:r91  l0     4    8:r92  l0     2    6:r93  l0     2
    4:r94  l0     1    3:r95  l0     0    2:r96  l0     0    1:r97  l0     0
+++Costs: overall 1000, reg 1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


free_page

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r3={2d,2u} r6={1d,9u} r7={7d,21u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,17u} r17={16d,3u} r18={2d} r19={1d,9u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,8u} r83={1d,1u} r84={1d,1u} r85={1d,2u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} 
;;    total ref usage 268{183d,85u,0e} in 40{38 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 69 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 69 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 69 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (reg/f:SI 16 argp) [1 addr+0 S4 A32])
            (const_int 1048575 [0xfffff]))) "mm/memory.c":148:5 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 13 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 62)
            (pc))) "mm/memory.c":148:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 62)
(note 13 8 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:SI 83 [ HIGH_MEMORY.2_1 ])
        (mem/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("HIGH_MEMORY") [flags 0x2]  <var_decl 0x739b83b2f510 HIGH_MEMORY>)
                        ] UNSPEC_GOTOFF))) [1 HIGH_MEMORY+0 S4 A32])) "mm/memory.c":150:11 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:SI 84 [ HIGH_MEMORY.3_2 ])
        (reg:SI 83 [ HIGH_MEMORY.2_1 ])) "mm/memory.c":150:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ HIGH_MEMORY.2_1 ])
        (nil)))
(insn 16 15 17 3 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (reg/f:SI 16 argp) [1 addr+0 S4 A32])
            (reg:SI 84 [ HIGH_MEMORY.3_2 ]))) "mm/memory.c":150:5 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ HIGH_MEMORY.3_2 ])
        (nil)))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "mm/memory.c":150:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 25)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":151:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 20 19 21 4 (set (reg/f:SI 87)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x739b83b9d5a0 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":151:3 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x739b83b9d5a0 *.LC1>)
        (nil)))
(insn 21 20 22 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [15  S4 A32])
        (reg/f:SI 87)) "mm/memory.c":151:3 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 87)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 22 21 23 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "mm/memory.c":151:3 75 {*movsi_internal}
     (nil))
(call_insn 23 22 24 4 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x739b83ad2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "mm/memory.c":151:3 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 24 23 25 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":151:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 25 24 26 5 12 (nil) [1 uses])
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (parallel [
            (set (mem/c:SI (reg/f:SI 16 argp) [1 addr+0 S4 A32])
                (plus:SI (mem/c:SI (reg/f:SI 16 argp) [1 addr+0 S4 A32])
                    (const_int -1048576 [0xfffffffffff00000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":152:7 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 28 27 29 5 (parallel [
            (set (mem/c:SI (reg/f:SI 16 argp) [1 addr+0 S4 A32])
                (lshiftrt:SI (mem/c:SI (reg/f:SI 16 argp) [1 addr+0 S4 A32])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":153:7 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 29 28 30 5 (set (reg:SI 88)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("mem_map") [flags 0x2]  <var_decl 0x739b83b2f5a0 mem_map>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":154:13 205 {*leasi}
     (nil))
(insn 30 29 31 5 (set (reg:SI 89)
        (mem/c:SI (reg/f:SI 16 argp) [1 addr+0 S4 A32])) "mm/memory.c":154:13 75 {*movsi_internal}
     (nil))
(insn 31 30 32 5 (parallel [
            (set (reg/f:SI 90)
                (plus:SI (reg:SI 88)
                    (reg:SI 89)))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":154:13 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 89)
        (expr_list:REG_DEAD (reg:SI 88)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 32 31 33 5 (set (reg:QI 85 [ _3 ])
        (mem:QI (reg/f:SI 90) [0 mem_map[addr_12]+0 S1 A8])) "mm/memory.c":154:13 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (nil)))
(insn 33 32 34 5 (parallel [
            (set (reg:QI 86 [ _5 ])
                (plus:QI (reg:QI 85 [ _3 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":154:19 213 {*addqi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 34 33 35 5 (set (reg:SI 91)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("mem_map") [flags 0x2]  <var_decl 0x739b83b2f5a0 mem_map>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":154:19 205 {*leasi}
     (nil))
(insn 35 34 36 5 (set (reg:SI 92)
        (mem/c:SI (reg/f:SI 16 argp) [1 addr+0 S4 A32])) "mm/memory.c":154:19 75 {*movsi_internal}
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg/f:SI 93)
                (plus:SI (reg:SI 91)
                    (reg:SI 92)))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":154:19 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 92)
        (expr_list:REG_DEAD (reg:SI 91)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 37 36 38 5 (set (mem:QI (reg/f:SI 93) [0 mem_map[addr_12]+0 S1 A8])
        (reg:QI 86 [ _5 ])) "mm/memory.c":154:19 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (expr_list:REG_DEAD (reg:QI 86 [ _5 ])
            (nil))))
(insn 38 37 39 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 85 [ _3 ])
            (const_int 0 [0]))) "mm/memory.c":154:5 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 85 [ _3 ])
        (nil)))
(jump_insn 39 38 44 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 67)
            (pc))) "mm/memory.c":154:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 67)
(note 44 39 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 6 (set (reg:SI 94)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("mem_map") [flags 0x2]  <var_decl 0x739b83b2f5a0 mem_map>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":156:16 205 {*leasi}
     (nil))
(insn 46 45 47 6 (set (reg:SI 95)
        (mem/c:SI (reg/f:SI 16 argp) [1 addr+0 S4 A32])) "mm/memory.c":156:16 75 {*movsi_internal}
     (nil))
(insn 47 46 48 6 (parallel [
            (set (reg/f:SI 96)
                (plus:SI (reg:SI 94)
                    (reg:SI 95)))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":156:16 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_DEAD (reg:SI 94)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 48 47 49 6 (set (mem:QI (reg/f:SI 96) [0 mem_map[addr_12]+0 S1 A8])
        (const_int 0 [0])) "mm/memory.c":156:16 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96)
        (nil)))
(insn 49 48 50 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":157:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 50 49 51 6 (set (reg/f:SI 97)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x739b83b9d630 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":157:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x739b83b9d630 *.LC2>)
        (nil)))
(insn 51 50 52 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [15  S4 A32])
        (reg/f:SI 97)) "mm/memory.c":157:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 97)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 52 51 53 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "mm/memory.c":157:2 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 53 52 54 6 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x739b83ad2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "mm/memory.c":157:2 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 54 53 59 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":157:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 59 54 60 6 (set (pc)
        (label_ref 57)) 807 {jump}
     (nil)
 -> 57)
(barrier 60 59 62)
(code_label 62 60 61 8 14 (nil) [1 uses])
(note 61 62 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 63 61 64 8 (const_int 0 [0]) "mm/memory.c":149:3 843 {nop}
     (nil))
(jump_insn 64 63 65 8 (set (pc)
        (label_ref 57)) 807 {jump}
     (nil)
 -> 57)
(barrier 65 64 67)
(code_label 67 65 66 9 15 (nil) [1 uses])
(note 66 67 68 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 68 66 57 9 (const_int 0 [0]) "mm/memory.c":155:3 843 {nop}
     (nil))
(code_label 57 68 58 7 9 (nil) [2 uses])
(note 58 57 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

;; Function copy_page_tables (copy_page_tables, funcdef_no=5, decl_uid=1320, cgraph_uid=6, symbol_order=7)

scanning new insn with uid = 191.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 27 n_edges 36 count 37 (  1.4)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 26 18 19 24 25 20 21 22 23
;;
;; Loop 1
;;  header 21, latch 20
;;  depth 1, outer 0
;;  nodes: 21 20 25 24 19 18 14 13 12 11 9 8 6 7 26 16 17 15
;;
;; Loop 2
;;  header 19, latch 18
;;  depth 2, outer 1
;;  nodes: 19 18 26 16 17 15
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 21 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 25 9 }
;; 9 succs { 10 11 }
;; 10 succs { 23 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 19 }
;; 15 succs { 26 16 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 26 succs { 18 }
;; 18 succs { 19 }
;; 19 succs { 15 24 }
;; 24 succs { 20 }
;; 25 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 6 22 }
;; 22 succs { 23 }
;; 23 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r135: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r135,l0) best AREG, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r108,l0) best AREG, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a9 (r103,l0) best Q_REGS, allocno Q_REGS
    r102: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a12 (r102,l0) best Q_REGS, allocno Q_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r108,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a2(r135,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a3(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a4(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:42000
  a6(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a7(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a10(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a11(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a12(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a13(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a15(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a16(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a21(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a22(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:8000
  a25(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a27(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a28(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a29(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a30(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a31(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a33(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a34(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a36(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a37(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a38(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a40(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a41(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a42(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a43(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a44(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a45(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a46(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a47(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a48(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a49(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a51(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a52(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a53(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 170(l0): point = 0
   Insn 169(l0): point = 2
   Insn 165(l0): point = 4
   Insn 162(l0): point = 7
   Insn 161(l0): point = 9
   Insn 160(l0): point = 11
   Insn 174(l0): point = 14
   Insn 74(l0): point = 16
   Insn 44(l0): point = 19
   Insn 43(l0): point = 21
   Insn 42(l0): point = 23
   Insn 41(l0): point = 25
   Insn 40(l0): point = 27
   Insn 158(l0): point = 30
   Insn 157(l0): point = 32
   Insn 153(l0): point = 34
   Insn 152(l0): point = 36
   Insn 151(l0): point = 38
   Insn 148(l0): point = 41
   Insn 147(l0): point = 43
   Insn 185(l0): point = 46
   Insn 181(l0): point = 49
   Insn 144(l0): point = 52
   Insn 143(l0): point = 54
   Insn 141(l0): point = 56
   Insn 140(l0): point = 58
   Insn 139(l0): point = 60
   Insn 136(l0): point = 63
   Insn 135(l0): point = 65
   Insn 190(l0): point = 68
   Insn 117(l0): point = 71
   Insn 116(l0): point = 73
   Insn 113(l0): point = 75
   Insn 112(l0): point = 77
   Insn 111(l0): point = 79
   Insn 110(l0): point = 81
   Insn 104(l0): point = 84
   Insn 103(l0): point = 86
   Insn 102(l0): point = 88
   Insn 101(l0): point = 90
   Insn 100(l0): point = 92
   Insn 99(l0): point = 94
   Insn 98(l0): point = 96
   Insn 186(l0): point = 99
   Insn 132(l0): point = 101
   Insn 131(l0): point = 103
   Insn 130(l0): point = 105
   Insn 129(l0): point = 107
   Insn 128(l0): point = 109
   Insn 127(l0): point = 111
   Insn 126(l0): point = 113
   Insn 125(l0): point = 115
   Insn 124(l0): point = 117
   Insn 123(l0): point = 119
   Insn 122(l0): point = 121
   Insn 121(l0): point = 123
   Insn 120(l0): point = 125
   Insn 119(l0): point = 127
   Insn 178(l0): point = 130
   Insn 94(l0): point = 132
   Insn 91(l0): point = 135
   Insn 176(l0): point = 138
   Insn 86(l0): point = 140
   Insn 84(l0): point = 143
   Insn 83(l0): point = 145
   Insn 82(l0): point = 147
   Insn 81(l0): point = 149
   Insn 80(l0): point = 151
   Insn 79(l0): point = 153
   Insn 72(l0): point = 156
   Insn 71(l0): point = 158
   Insn 70(l0): point = 160
   Insn 69(l0): point = 162
   Insn 68(l0): point = 164
   Insn 67(l0): point = 166
   Insn 66(l0): point = 168
   Insn 65(l0): point = 170
   Insn 64(l0): point = 172
   Insn 58(l0): point = 175
   Insn 57(l0): point = 177
   Insn 56(l0): point = 179
   Insn 55(l0): point = 181
   Insn 54(l0): point = 183
   Insn 51(l0): point = 186
   Insn 50(l0): point = 188
   Insn 49(l0): point = 190
   Insn 48(l0): point = 192
   Insn 47(l0): point = 194
   Insn 46(l0): point = 196
   Insn 172(l0): point = 199
   Insn 36(l0): point = 201
   Insn 35(l0): point = 203
   Insn 34(l0): point = 205
   Insn 33(l0): point = 207
   Insn 32(l0): point = 209
   Insn 31(l0): point = 211
   Insn 30(l0): point = 213
   Insn 29(l0): point = 215
   Insn 28(l0): point = 217
   Insn 27(l0): point = 219
   Insn 26(l0): point = 221
   Insn 25(l0): point = 223
   Insn 24(l0): point = 225
   Insn 21(l0): point = 228
   Insn 20(l0): point = 230
   Insn 19(l0): point = 232
   Insn 18(l0): point = 234
   Insn 17(l0): point = 236
   Insn 16(l0): point = 238
   Insn 13(l0): point = 241
   Insn 12(l0): point = 243
   Insn 11(l0): point = 245
   Insn 10(l0): point = 247
   Insn 8(l0): point = 250
   Insn 7(l0): point = 252
   Insn 6(l0): point = 254
   Insn 5(l0): point = 256
   Insn 191(l0): point = 258
 a0(r108): [3..4]
 a1(r106): [14..16] [5..7]
 a2(r135): [10..11]
 a3(r105): [33..38]
 a4(r134): [35..36]
 a5(r82): [19..258]
 a6(r104): [55..60]
 a7(r133): [57..58]
 a8(r132): [102..103]
 a9(r103): [102..109]
 a10(r131): [104..105]
 a11(r130): [104..107]
 a12(r102): [110..111]
 a13(r129): [112..113]
 a14(r128): [114..115]
 a15(r127): [114..117]
 a16(r125): [124..127]
 a17(r126): [124..125]
 a18(r123): [76..79]
 a19(r124): [76..77]
 a20(r101): [87..88]
 a21(r122): [89..90]
 a22(r121): [93..94]
 a23(r120): [95..96]
 a24(r107): [138..140] [133..135]
 a25(r119): [148..149]
 a26(r100): [148..151]
 a27(r99): [152..153]
 a28(r98): [161..162]
 a29(r97): [167..168]
 a30(r96): [169..170]
 a31(r118): [171..172]
 a32(r95): [178..179]
 a33(r94): [180..181]
 a34(r117): [182..183]
 a35(r116): [193..194]
 a36(r93): [22..23]
 a37(r92): [24..25]
 a38(r115): [26..27]
 a39(r91): [202..203]
 a40(r90): [204..205]
 a41(r89): [206..207]
 a42(r114): [208..209]
 a43(r88): [212..213]
 a44(r87): [214..215]
 a45(r113): [216..217]
 a46(r86): [220..221]
 a47(r85): [222..223]
 a48(r112): [224..225]
 a49(r111): [235..236]
 a50(r84): [244..245]
 a51(r110): [246..247]
 a52(r83): [253..254]
 a53(r109): [255..256]
Compressing live ranges: from 261 to 94 - 36%
Ranges after the compression:
 a0(r108): [0..1]
 a1(r106): [6..7] [2..3]
 a2(r135): [4..5]
 a3(r105): [14..15]
 a4(r134): [14..15]
 a5(r82): [8..93]
 a6(r104): [16..17]
 a7(r133): [16..17]
 a8(r132): [28..29]
 a9(r103): [28..31]
 a10(r131): [30..31]
 a11(r130): [30..31]
 a12(r102): [32..33]
 a13(r129): [34..35]
 a14(r128): [36..37]
 a15(r127): [36..37]
 a16(r125): [38..39]
 a17(r126): [38..39]
 a18(r123): [18..19]
 a19(r124): [18..19]
 a20(r101): [20..21]
 a21(r122): [22..23]
 a22(r121): [24..25]
 a23(r120): [26..27]
 a24(r107): [40..43]
 a25(r119): [44..45]
 a26(r100): [44..45]
 a27(r99): [46..47]
 a28(r98): [48..49]
 a29(r97): [50..51]
 a30(r96): [52..53]
 a31(r118): [54..55]
 a32(r95): [56..57]
 a33(r94): [58..59]
 a34(r117): [60..61]
 a35(r116): [62..63]
 a36(r93): [8..9]
 a37(r92): [10..11]
 a38(r115): [12..13]
 a39(r91): [64..65]
 a40(r90): [66..67]
 a41(r89): [68..69]
 a42(r114): [70..71]
 a43(r88): [72..73]
 a44(r87): [74..75]
 a45(r113): [76..77]
 a46(r86): [78..79]
 a47(r85): [80..81]
 a48(r112): [82..83]
 a49(r111): [84..85]
 a50(r84): [86..87]
 a51(r110): [88..89]
 a52(r83): [90..91]
 a53(r109): [92..93]
  pref0:a2(r135)<-hr0@1000
  pref1:a0(r108)<-hr0@1500
  pref2:a28(r98)<-hr0@1500
  regions=1, blocks=27, points=94
    allocnos=54 (big 0), copies=0, conflicts=0, ranges=55
Disposition:
    5:r82  l0     3   52:r83  l0     0   50:r84  l0     0   47:r85  l0     0
   46:r86  l0     0   44:r87  l0     0   43:r88  l0     0   41:r89  l0     0
   40:r90  l0     0   39:r91  l0     0   37:r92  l0     0   36:r93  l0     0
   33:r94  l0     0   32:r95  l0     0   30:r96  l0     0   29:r97  l0     0
   28:r98  l0     0   27:r99  l0     0   26:r100 l0     1   20:r101 l0     0
   12:r102 l0     0    9:r103 l0     1    6:r104 l0     0    3:r105 l0     0
    1:r106 l0     0   24:r107 l0     0    0:r108 l0     0   53:r109 l0     0
   51:r110 l0     0   49:r111 l0     0   48:r112 l0     0   45:r113 l0     0
   42:r114 l0     0   38:r115 l0     0   35:r116 l0     0   34:r117 l0     0
   31:r118 l0     0   25:r119 l0     0   23:r120 l0     0   22:r121 l0     0
   21:r122 l0     0   18:r123 l0     0   19:r124 l0     1   16:r125 l0     0
   17:r126 l0     1   15:r127 l0     1   14:r128 l0     0   13:r129 l0     0
   11:r130 l0     2   10:r131 l0     0    8:r132 l0     0    7:r133 l0     1
    4:r134 l0     1    2:r135 l0     0
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


copy_page_tables

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,3u} r1={4d} r2={4d} r3={2d,2u} r6={1d,26u} r7={7d,39u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,34u,5e} r17={44d,10u} r18={3d} r19={1d,63u,1e} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,6u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,2u} r105={1d,2u} r106={2d,1u} r107={2d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} 
;;    total ref usage 564{320d,238u,6e} in 118{115 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 191 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 191 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 191 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 109)
        (mem/c:SI (reg/f:SI 16 argp) [1 from+0 S4 A32])) "mm/memory.c":186:15 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 83 [ _1 ])
                (and:SI (reg:SI 109)
                    (const_int 4194303 [0x3fffff])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":186:15 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 109)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (reg/f:SI 16 argp) [1 from+0 S4 A32])
                    (const_int 4194303 [0x3fffff]))
                (nil)))))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 83 [ _1 ])
            (const_int 0 [0]))) "mm/memory.c":186:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (nil)))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "mm/memory.c":186:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 14)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:SI 110)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 to+0 S4 A32])) "mm/memory.c":186:34 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (parallel [
            (set (reg:SI 84 [ _2 ])
                (and:SI (reg:SI 110)
                    (const_int 4194303 [0x3fffff])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":186:34 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 110)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [1 to+0 S4 A32])
                    (const_int 4194303 [0x3fffff]))
                (nil)))))
(insn 12 11 13 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _2 ])
            (const_int 0 [0]))) "mm/memory.c":186:27 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "mm/memory.c":186:27 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 22)
(code_label 14 13 15 4 17 (nil) [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":187:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 17 16 18 4 (set (reg/f:SI 111)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x739b83b9d7e0 *.LC3>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":187:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x739b83b9d7e0 *.LC3>)
        (nil)))
(insn 18 17 19 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [15  S4 A32])
        (reg/f:SI 111)) "mm/memory.c":187:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 19 18 20 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "mm/memory.c":187:9 75 {*movsi_internal}
     (nil))
(call_insn 20 19 21 4 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x739b83ad2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "mm/memory.c":187:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 21 20 22 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":187:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 22 21 23 5 18 (nil) [1 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg:SI 112)
        (mem/c:SI (reg/f:SI 16 argp) [1 from+0 S4 A32])) "mm/memory.c":188:41 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg:SI 85 [ _3 ])
                (lshiftrt:SI (reg:SI 112)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":188:41 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 112)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (reg/f:SI 16 argp) [1 from+0 S4 A32])
                    (const_int 20 [0x14]))
                (nil)))))
(insn 26 25 27 5 (parallel [
            (set (reg:SI 86 [ _4 ])
                (and:SI (reg:SI 85 [ _3 ])
                    (const_int 4092 [0xffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":188:48 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 27 26 28 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [16 from_dir+0 S4 A32])
        (reg:SI 86 [ _4 ])) "mm/memory.c":188:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(insn 28 27 29 5 (set (reg:SI 113)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 to+0 S4 A32])) "mm/memory.c":189:37 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg:SI 87 [ _5 ])
                (lshiftrt:SI (reg:SI 113)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":189:37 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 113)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [1 to+0 S4 A32])
                    (const_int 20 [0x14]))
                (nil)))))
(insn 30 29 31 5 (parallel [
            (set (reg:SI 88 [ _6 ])
                (and:SI (reg:SI 87 [ _5 ])
                    (const_int 4092 [0xffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":189:44 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 31 30 32 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [16 to_dir+0 S4 A32])
        (reg:SI 88 [ _6 ])) "mm/memory.c":189:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (nil)))
(insn 32 31 33 5 (set (reg:SI 114)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 size+0 S4 A32])) "mm/memory.c":190:30 75 {*movsi_internal}
     (nil))
(insn 33 32 34 5 (parallel [
            (set (reg:SI 89 [ _7 ])
                (plus:SI (reg:SI 114)
                    (const_int 4194303 [0x3fffff])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":190:30 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 114)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [1 size+0 S4 A32])
                    (const_int 4194303 [0x3fffff]))
                (nil)))))
(insn 34 33 35 5 (set (reg:SI 90 [ _8 ])
        (reg:SI 89 [ _7 ])) "mm/memory.c":190:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (nil)))
(insn 35 34 36 5 (parallel [
            (set (reg:SI 91 [ _9 ])
                (lshiftrt:SI (reg:SI 90 [ _8 ])
                    (const_int 22 [0x16])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":190:43 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 36 35 172 5 (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 size+0 S4 A32])
        (reg:SI 91 [ _9 ])) "mm/memory.c":190:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (nil)))
(jump_insn 172 36 173 5 (set (pc)
        (label_ref 149)) "mm/memory.c":191:5 807 {jump}
     (nil)
 -> 149)
(barrier 173 172 154)
(code_label 154 173 39 6 31 (nil) [1 uses])
(note 39 154 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 6 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [16 to_dir+0 S4 A32])) "mm/memory.c":193:17 75 {*movsi_internal}
     (nil))
(insn 41 40 42 6 (set (reg:SI 92 [ _10 ])
        (mem:SI (reg/f:SI 115) [1 *to_dir_29+0 S4 A32])) "mm/memory.c":193:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 42 41 43 6 (parallel [
            (set (reg:SI 93 [ _11 ])
                (and:SI (reg:SI 92 [ _10 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":193:15 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 43 42 44 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ _11 ])
            (const_int 0 [0]))) "mm/memory.c":193:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
        (nil)))
(jump_insn 44 43 45 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) "mm/memory.c":193:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 52)
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":194:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 47 46 48 7 (set (reg/f:SI 116)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x739b83b9d870 *.LC4>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":194:13 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x739b83b9d870 *.LC4>)
        (nil)))
(insn 48 47 49 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [15  S4 A32])
        (reg/f:SI 116)) "mm/memory.c":194:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 49 48 50 7 (set (reg:SI 3 bx)
        (reg:SI 82)) "mm/memory.c":194:13 75 {*movsi_internal}
     (nil))
(call_insn 50 49 51 7 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x739b83ad2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "mm/memory.c":194:13 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 51 50 52 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":194:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 52 51 53 8 20 (nil) [1 uses])
(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 8 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [16 from_dir+0 S4 A32])) "mm/memory.c":195:19 75 {*movsi_internal}
     (nil))
(insn 55 54 56 8 (set (reg:SI 94 [ _12 ])
        (mem:SI (reg/f:SI 117) [1 *from_dir_28+0 S4 A32])) "mm/memory.c":195:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 56 55 57 8 (parallel [
            (set (reg:SI 95 [ _13 ])
                (and:SI (reg:SI 94 [ _12 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":195:17 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 57 56 58 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ _13 ])
            (const_int 0 [0]))) "mm/memory.c":195:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _13 ])
        (nil)))
(jump_insn 58 57 63 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 184)
            (pc))) "mm/memory.c":195:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 184)
(note 63 58 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 9 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [16 from_dir+0 S4 A32])) "mm/memory.c":197:59 75 {*movsi_internal}
     (nil))
(insn 65 64 66 9 (set (reg:SI 96 [ _14 ])
        (mem:SI (reg/f:SI 118) [1 *from_dir_28+0 S4 A32])) "mm/memory.c":197:59 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 66 65 67 9 (parallel [
            (set (reg:SI 97 [ _15 ])
                (and:SI (reg:SI 96 [ _14 ])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":197:57 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 67 66 68 9 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [16 from_page_table+0 S4 A32])
        (reg:SI 97 [ _15 ])) "mm/memory.c":197:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97 [ _15 ])
        (nil)))
(call_insn 68 67 69 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_free_page") [flags 0x3]  <function_decl 0x739b83b3b100 get_free_page>) [0 get_free_page S1 A8])
            (const_int 0 [0]))) "mm/memory.c":198:49 823 {*call_value}
     (nil)
    (nil))
(insn 69 68 70 9 (set (reg:SI 98 [ _16 ])
        (reg:SI 0 ax)) "mm/memory.c":198:49 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 70 69 71 9 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [16 to_page_table+0 S4 A32])
        (reg:SI 98 [ _16 ])) "mm/memory.c":198:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98 [ _16 ])
        (nil)))
(insn 71 70 72 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [16 to_page_table+0 S4 A32])
            (const_int 0 [0]))) "mm/memory.c":198:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 72 71 73 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "mm/memory.c":198:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 77)
(note 73 72 74 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 174 10 (set (reg:SI 106 [ _31 ])
        (const_int -1 [0xffffffffffffffff])) "mm/memory.c":199:20 75 {*movsi_internal}
     (nil))
(jump_insn 174 74 175 10 (set (pc)
        (label_ref 163)) "mm/memory.c":199:20 807 {jump}
     (nil)
 -> 163)
(barrier 175 174 77)
(code_label 77 175 78 11 23 (nil) [1 uses])
(note 78 77 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 11 (set (reg:SI 99 [ to_page_table.4_17 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [16 to_page_table+0 S4 A32])) "mm/memory.c":201:20 75 {*movsi_internal}
     (nil))
(insn 80 79 81 11 (parallel [
            (set (reg:SI 100 [ _18 ])
                (ior:SI (reg:SI 99 [ to_page_table.4_17 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":201:51 520 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ to_page_table.4_17 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 81 80 82 11 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [16 to_dir+0 S4 A32])) "mm/memory.c":201:17 75 {*movsi_internal}
     (nil))
(insn 82 81 83 11 (set (mem:SI (reg/f:SI 119) [1 *to_dir_29+0 S4 A32])
        (reg:SI 100 [ _18 ])) "mm/memory.c":201:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (expr_list:REG_DEAD (reg:SI 100 [ _18 ])
            (nil))))
(insn 83 82 84 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [1 from+0 S4 A32])
            (const_int 0 [0]))) "mm/memory.c":202:33 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 84 83 85 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "mm/memory.c":202:33 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 89)
(note 85 84 86 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 176 12 (set (reg:SI 107 [ iftmp.5_32 ])
        (const_int 160 [0xa0])) "mm/memory.c":202:33 75 {*movsi_internal}
     (nil))
(jump_insn 176 86 177 12 (set (pc)
        (label_ref 92)) 807 {jump}
     (nil)
 -> 92)
(barrier 177 176 89)
(code_label 89 177 90 13 25 (nil) [1 uses])
(note 90 89 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 13 (set (reg:SI 107 [ iftmp.5_32 ])
        (const_int 1024 [0x400])) "mm/memory.c":202:33 75 {*movsi_internal}
     (nil))
(code_label 92 91 93 14 26 (nil) [1 uses])
(note 93 92 94 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 178 14 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [1 nr+0 S4 A32])
        (reg:SI 107 [ iftmp.5_32 ])) "mm/memory.c":202:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 107 [ iftmp.5_32 ])
        (nil)))
(jump_insn 178 94 179 14 (set (pc)
        (label_ref 137)) "mm/memory.c":204:9 807 {jump}
     (nil)
 -> 137)
(barrier 179 178 142)
(code_label 142 179 97 15 30 (nil) [1 uses])
(note 97 142 98 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 15 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [16 from_page_table+0 S4 A32])) "mm/memory.c":205:23 75 {*movsi_internal}
     (nil))
(insn 99 98 100 15 (set (reg:SI 121)
        (mem:SI (reg/f:SI 120) [1 *from_page_table_26+0 S4 A32])) "mm/memory.c":205:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (nil)))
(insn 100 99 101 15 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 this_page+0 S4 A32])
        (reg:SI 121)) "mm/memory.c":205:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 121)
        (nil)))
(insn 101 100 102 15 (set (reg:SI 122)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 this_page+0 S4 A32])) "mm/memory.c":206:21 75 {*movsi_internal}
     (nil))
(insn 102 101 103 15 (parallel [
            (set (reg:SI 101 [ _19 ])
                (and:SI (reg:SI 122)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":206:21 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 122)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -24 [0xffffffffffffffe8])) [1 this_page+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 103 102 104 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ _19 ])
            (const_int 0 [0]))) "mm/memory.c":206:16 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 101 [ _19 ])
        (nil)))
(jump_insn 104 103 109 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 189)
            (pc))) "mm/memory.c":206:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 189)
(note 109 104 110 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 16 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -24 [0xffffffffffffffe8])) [1 this_page+0 S4 A32])
                (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -24 [0xffffffffffffffe8])) [1 this_page+0 S4 A32])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":209:23 490 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 111 110 112 16 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [16 to_page_table+0 S4 A32])) "mm/memory.c":210:28 75 {*movsi_internal}
     (nil))
(insn 112 111 113 16 (set (reg:SI 124)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 this_page+0 S4 A32])) "mm/memory.c":210:28 75 {*movsi_internal}
     (nil))
(insn 113 112 116 16 (set (mem:SI (reg/f:SI 123) [1 *to_page_table_27+0 S4 A32])
        (reg:SI 124)) "mm/memory.c":210:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 124)
        (expr_list:REG_DEAD (reg/f:SI 123)
            (nil))))
(insn 116 113 117 16 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])) [1 this_page+0 S4 A32])
            (const_int 1048576 [0x100000]))) "mm/memory.c":211:16 11 {*cmpsi_1}
     (nil))
(jump_insn 117 116 118 16 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 133)
            (pc))) "mm/memory.c":211:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 133)
(note 118 117 119 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 17 (set (reg/f:SI 125)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [16 from_page_table+0 S4 A32])) "mm/memory.c":212:34 75 {*movsi_internal}
     (nil))
(insn 120 119 121 17 (set (reg:SI 126)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 this_page+0 S4 A32])) "mm/memory.c":212:34 75 {*movsi_internal}
     (nil))
(insn 121 120 122 17 (set (mem:SI (reg/f:SI 125) [1 *from_page_table_26+0 S4 A32])
        (reg:SI 126)) "mm/memory.c":212:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 126)
        (expr_list:REG_DEAD (reg/f:SI 125)
            (nil))))
(insn 122 121 123 17 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -24 [0xffffffffffffffe8])) [1 this_page+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -24 [0xffffffffffffffe8])) [1 this_page+0 S4 A32])
                    (const_int -1048576 [0xfffffffffff00000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":213:27 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 123 122 124 17 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -24 [0xffffffffffffffe8])) [1 this_page+0 S4 A32])
                (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -24 [0xffffffffffffffe8])) [1 this_page+0 S4 A32])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":214:27 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 124 123 125 17 (set (reg:SI 127)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("mem_map") [flags 0x2]  <var_decl 0x739b83b2f5a0 mem_map>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":215:24 205 {*leasi}
     (nil))
(insn 125 124 126 17 (set (reg:SI 128)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 this_page+0 S4 A32])) "mm/memory.c":215:24 75 {*movsi_internal}
     (nil))
(insn 126 125 127 17 (parallel [
            (set (reg/f:SI 129)
                (plus:SI (reg:SI 127)
                    (reg:SI 128)))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":215:24 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 128)
        (expr_list:REG_DEAD (reg:SI 127)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 127 126 128 17 (set (reg:QI 102 [ _20 ])
        (mem:QI (reg/f:SI 129) [0 mem_map[this_page_64]+0 S1 A8])) "mm/memory.c":215:24 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 129)
        (nil)))
(insn 128 127 129 17 (parallel [
            (set (reg:QI 103 [ _22 ])
                (plus:QI (reg:QI 102 [ _20 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":215:35 213 {*addqi_1}
     (expr_list:REG_DEAD (reg:QI 102 [ _20 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 129 128 130 17 (set (reg:SI 130)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("mem_map") [flags 0x2]  <var_decl 0x739b83b2f5a0 mem_map>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":215:35 205 {*leasi}
     (nil))
(insn 130 129 131 17 (set (reg:SI 131)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 this_page+0 S4 A32])) "mm/memory.c":215:35 75 {*movsi_internal}
     (nil))
(insn 131 130 132 17 (parallel [
            (set (reg/f:SI 132)
                (plus:SI (reg:SI 130)
                    (reg:SI 131)))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":215:35 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 131)
        (expr_list:REG_DEAD (reg:SI 130)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 132 131 186 17 (set (mem:QI (reg/f:SI 132) [0 mem_map[this_page_64]+0 S1 A8])
        (reg:QI 103 [ _22 ])) "mm/memory.c":215:35 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 132)
        (expr_list:REG_DEAD (reg:QI 103 [ _22 ])
            (nil))))
(jump_insn 186 132 187 17 (set (pc)
        (label_ref 133)) 807 {jump}
     (nil)
 -> 133)
(barrier 187 186 189)
(code_label 189 187 188 26 33 (nil) [1 uses])
(note 188 189 190 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 190 188 133 26 (const_int 0 [0]) "mm/memory.c":207:17 843 {nop}
     (nil))
(code_label 133 190 134 18 29 (nil) [2 uses])
(note 134 133 135 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 18 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [16 from_page_table+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [16 from_page_table+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":204:42 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 136 135 137 18 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [16 to_page_table+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [16 to_page_table+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":204:59 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 137 136 138 19 27 (nil) [1 uses])
(note 138 137 139 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 19 (set (reg:SI 104 [ nr.6_23 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [1 nr+0 S4 A32])) "mm/memory.c":204:19 75 {*movsi_internal}
     (nil))
(insn 140 139 141 19 (parallel [
            (set (reg:SI 133)
                (plus:SI (reg:SI 104 [ nr.6_23 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":204:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 141 140 143 19 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [1 nr+0 S4 A32])
        (reg:SI 133)) "mm/memory.c":204:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(insn 143 141 144 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ nr.6_23 ])
            (const_int 0 [0]))) "mm/memory.c":204:22 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 104 [ nr.6_23 ])
        (nil)))
(jump_insn 144 143 180 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) "mm/memory.c":204:22 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 142)
(note 180 144 181 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 181 180 182 24 (set (pc)
        (label_ref 145)) 807 {jump}
     (nil)
 -> 145)
(barrier 182 181 184)
(code_label 184 182 183 25 32 (nil) [1 uses])
(note 183 184 185 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 185 183 145 25 (const_int 0 [0]) "mm/memory.c":196:13 843 {nop}
     (nil))
(code_label 145 185 146 20 22 (nil) [1 uses])
(note 146 145 147 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 20 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [16 from_dir+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [16 from_dir+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":191:33 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 148 147 149 20 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -16 [0xfffffffffffffff0])) [16 to_dir+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [16 to_dir+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":191:43 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 149 148 150 21 19 (nil) [1 uses])
(note 150 149 151 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 21 (set (reg:SI 105 [ size.7_24 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 size+0 S4 A32])) "mm/memory.c":191:17 75 {*movsi_internal}
     (nil))
(insn 152 151 153 21 (parallel [
            (set (reg:SI 134)
                (plus:SI (reg:SI 105 [ size.7_24 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":191:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 153 152 157 21 (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 size+0 S4 A32])
        (reg:SI 134)) "mm/memory.c":191:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 134)
        (nil)))
(insn 157 153 158 21 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 105 [ size.7_24 ])
            (const_int 0 [0]))) "mm/memory.c":191:20 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 105 [ size.7_24 ])
        (nil)))
(jump_insn 158 157 159 21 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 154)
            (pc))) "mm/memory.c":191:20 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 154)
(note 159 158 160 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 22 (set (reg:SI 135)
        (const_int 0 [0])) "mm/memory.c":219:5 75 {*movsi_internal}
     (nil))
(insn 161 160 162 22 (parallel [
            (asm_operands/v ("movl %%eax, %%cr3") ("") 0 [
                    (reg:SI 135)
                ]
                 [
                    (asm_input:SI ("a") mm/memory.c:219)
                ]
                 [] mm/memory.c:219)
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":219:5 -1
     (expr_list:REG_DEAD (reg:SI 135)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 162 161 163 22 (set (reg:SI 106 [ _31 ])
        (const_int 0 [0])) "mm/memory.c":220:12 75 {*movsi_internal}
     (nil))
(code_label 163 162 164 23 24 (nil) [1 uses])
(note 164 163 165 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 169 23 (set (reg:SI 108 [ <retval> ])
        (reg:SI 106 [ _31 ])) "mm/memory.c":221:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 106 [ _31 ])
        (nil)))
(insn 169 165 170 23 (set (reg/i:SI 0 ax)
        (reg:SI 108 [ <retval> ])) "mm/memory.c":221:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108 [ <retval> ])
        (nil)))
(insn 170 169 0 23 (use (reg/i:SI 0 ax)) "mm/memory.c":221:1 -1
     (nil))

;; Function free_page_tables (free_page_tables, funcdef_no=6, decl_uid=1323, cgraph_uid=7, symbol_order=8)

scanning new insn with uid = 127.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 18 n_edges 23 count 18 (    1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 17 14 15 16
;;
;; Loop 1
;;  header 15, latch 14
;;  depth 1, outer 0
;;  nodes: 15 14 17 13 12 11 8 7 9 10
;;
;; Loop 2
;;  header 12, latch 11
;;  depth 2, outer 1
;;  nodes: 12 11 9 10
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 15 }
;; 7 succs { 17 8 }
;; 8 succs { 12 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 9 13 }
;; 13 succs { 14 }
;; 17 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 7 16 }
;; 16 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r114: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r114,l0) best AREG, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a2(r114,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a3(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a4(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a12(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a15(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a18(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a20(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a21(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a23(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a24(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a25(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a26(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a27(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a28(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:30000
  a29(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a30(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a32(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 116(l0): point = 0
   Insn 115(l0): point = 2
   Insn 111(l0): point = 4
   Insn 108(l0): point = 6
   Insn 107(l0): point = 8
   Insn 106(l0): point = 10
   Insn 44(l0): point = 13
   Insn 43(l0): point = 15
   Insn 42(l0): point = 17
   Insn 41(l0): point = 19
   Insn 40(l0): point = 21
   Insn 104(l0): point = 24
   Insn 103(l0): point = 26
   Insn 101(l0): point = 28
   Insn 100(l0): point = 30
   Insn 99(l0): point = 32
   Insn 96(l0): point = 35
   Insn 126(l0): point = 38
   Insn 122(l0): point = 41
   Insn 93(l0): point = 43
   Insn 92(l0): point = 45
   Insn 91(l0): point = 47
   Insn 90(l0): point = 49
   Insn 89(l0): point = 51
   Insn 88(l0): point = 53
   Insn 87(l0): point = 55
   Insn 86(l0): point = 57
   Insn 85(l0): point = 59
   Insn 83(l0): point = 62
   Insn 82(l0): point = 64
   Insn 76(l0): point = 67
   Insn 75(l0): point = 69
   Insn 74(l0): point = 71
   Insn 73(l0): point = 73
   Insn 62(l0): point = 76
   Insn 61(l0): point = 78
   Insn 60(l0): point = 80
   Insn 59(l0): point = 82
   Insn 58(l0): point = 84
   Insn 70(l0): point = 87
   Insn 69(l0): point = 89
   Insn 68(l0): point = 91
   Insn 67(l0): point = 93
   Insn 66(l0): point = 95
   Insn 65(l0): point = 97
   Insn 64(l0): point = 99
   Insn 120(l0): point = 102
   Insn 54(l0): point = 104
   Insn 53(l0): point = 106
   Insn 52(l0): point = 108
   Insn 51(l0): point = 110
   Insn 50(l0): point = 112
   Insn 118(l0): point = 115
   Insn 36(l0): point = 117
   Insn 35(l0): point = 119
   Insn 34(l0): point = 121
   Insn 33(l0): point = 123
   Insn 32(l0): point = 125
   Insn 31(l0): point = 127
   Insn 30(l0): point = 129
   Insn 29(l0): point = 131
   Insn 26(l0): point = 134
   Insn 25(l0): point = 136
   Insn 24(l0): point = 138
   Insn 23(l0): point = 140
   Insn 22(l0): point = 142
   Insn 21(l0): point = 144
   Insn 19(l0): point = 147
   Insn 18(l0): point = 149
   Insn 15(l0): point = 152
   Insn 14(l0): point = 154
   Insn 13(l0): point = 156
   Insn 12(l0): point = 158
   Insn 11(l0): point = 160
   Insn 10(l0): point = 162
   Insn 8(l0): point = 165
   Insn 7(l0): point = 167
   Insn 6(l0): point = 169
   Insn 5(l0): point = 171
   Insn 127(l0): point = 173
 a0(r99): [3..4]
 a1(r98): [5..6]
 a2(r114): [9..10]
 a3(r97): [27..32]
 a4(r113): [29..30]
 a5(r112): [44..45]
 a6(r96): [52..55]
 a7(r95): [56..57]
 a8(r111): [58..59]
 a9(r110): [72..73]
 a10(r94): [92..95]
 a11(r93): [96..97]
 a12(r109): [98..99]
 a13(r92): [79..80]
 a14(r91): [81..82]
 a15(r108): [83..84]
 a16(r90): [107..108]
 a17(r89): [109..110]
 a18(r107): [111..112]
 a19(r88): [16..17]
 a20(r87): [18..19]
 a21(r106): [20..21]
 a22(r86): [118..119]
 a23(r85): [120..121]
 a24(r105): [122..123]
 a25(r104): [126..127]
 a26(r84): [128..129]
 a27(r103): [130..131]
 a28(r82): [139..173]
 a29(r102): [141..142]
 a30(r101): [159..160]
 a31(r83): [168..169]
 a32(r100): [170..171]
Compressing live ranges: from 176 to 62 - 35%
Ranges after the compression:
 a0(r99): [0..1]
 a1(r98): [2..3]
 a2(r114): [4..5]
 a3(r97): [12..13]
 a4(r113): [12..13]
 a5(r112): [14..15]
 a6(r96): [16..17]
 a7(r95): [18..19]
 a8(r111): [20..21]
 a9(r110): [22..23]
 a10(r94): [30..31]
 a11(r93): [32..33]
 a12(r109): [34..35]
 a13(r92): [24..25]
 a14(r91): [26..27]
 a15(r108): [28..29]
 a16(r90): [36..37]
 a17(r89): [38..39]
 a18(r107): [40..41]
 a19(r88): [6..7]
 a20(r87): [8..9]
 a21(r106): [10..11]
 a22(r86): [42..43]
 a23(r85): [44..45]
 a24(r105): [46..47]
 a25(r104): [48..49]
 a26(r84): [50..51]
 a27(r103): [52..53]
 a28(r82): [54..61]
 a29(r102): [54..55]
 a30(r101): [56..57]
 a31(r83): [58..59]
 a32(r100): [60..61]
  pref0:a2(r114)<-hr0@1000
  pref1:a0(r99)<-hr0@1500
  pref2:a28(r82)<-hr3@1500
  regions=1, blocks=18, points=62
    allocnos=33 (big 0), copies=0, conflicts=0, ranges=33
Disposition:
   28:r82  l0     3   31:r83  l0     0   26:r84  l0     0   23:r85  l0     0
   22:r86  l0     0   20:r87  l0     0   19:r88  l0     0   17:r89  l0     0
   16:r90  l0     0   14:r91  l0     0   13:r92  l0     0   11:r93  l0     0
   10:r94  l0     0    7:r95  l0     0    6:r96  l0     0    3:r97  l0     0
    1:r98  l0     0    0:r99  l0     0   32:r100 l0     0   30:r101 l0     0
   29:r102 l0     0   27:r103 l0     0   25:r104 l0     0   24:r105 l0     0
   21:r106 l0     0   18:r107 l0     0   15:r108 l0     0   12:r109 l0     0
    9:r110 l0     0    8:r111 l0     0    5:r112 l0     0    4:r113 l0     1
    2:r114 l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


free_page_tables

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,2u} r1={5d} r2={5d} r3={2d,2u} r6={1d,17u} r7={13d,41u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,23u,3e} r17={34d,6u} r18={4d} r19={1d,34u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d,4u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,2u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} 
;;    total ref usage 526{361d,162u,3e} in 80{76 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 127 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 127 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 127 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 100)
        (mem/c:SI (reg/f:SI 16 argp) [1 from+0 S4 A32])) "mm/memory.c":232:14 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 83 [ _1 ])
                (and:SI (reg:SI 100)
                    (const_int 4194303 [0x3fffff])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":232:14 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 100)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (reg/f:SI 16 argp) [1 from+0 S4 A32])
                    (const_int 4194303 [0x3fffff]))
                (nil)))))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 83 [ _1 ])
            (const_int 0 [0]))) "mm/memory.c":232:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (nil)))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) "mm/memory.c":232:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 16)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":233:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 11 10 12 3 (set (reg/f:SI 101)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x739b83b9d990 *.LC5>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":233:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x739b83b9d990 *.LC5>)
        (nil)))
(insn 12 11 13 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [15  S4 A32])
        (reg/f:SI 101)) "mm/memory.c":233:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 13 12 14 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "mm/memory.c":233:9 75 {*movsi_internal}
     (nil))
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x739b83ad2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "mm/memory.c":233:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":233:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 16 15 17 4 35 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [1 from+0 S4 A32])
            (const_int 0 [0]))) "mm/memory.c":234:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "mm/memory.c":234:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 27)
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":235:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 22 21 23 5 (set (reg/f:SI 102)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x739b83b9da20 *.LC6>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":235:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x739b83b9da20 *.LC6>)
        (nil)))
(insn 23 22 24 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [15  S4 A32])
        (reg/f:SI 102)) "mm/memory.c":235:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 24 23 25 5 (set (reg:SI 3 bx)
        (reg:SI 82)) "mm/memory.c":235:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 25 24 26 5 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x739b83ad2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "mm/memory.c":235:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 26 25 27 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":235:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 27 26 28 6 36 (nil) [1 uses])
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg:SI 103)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 size+0 S4 A32])) "mm/memory.c":236:18 75 {*movsi_internal}
     (nil))
(insn 30 29 31 6 (parallel [
            (set (reg:SI 84 [ _2 ])
                (plus:SI (reg:SI 103)
                    (const_int 4194303 [0x3fffff])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":236:18 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 103)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [1 size+0 S4 A32])
                    (const_int 4194303 [0x3fffff]))
                (nil)))))
(insn 31 30 32 6 (parallel [
            (set (reg:SI 104)
                (lshiftrt:SI (reg:SI 84 [ _2 ])
                    (const_int 22 [0x16])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":236:10 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 32 31 33 6 (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 size+0 S4 A32])
        (reg:SI 104)) "mm/memory.c":236:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 104)
        (nil)))
(insn 33 32 34 6 (set (reg:SI 105)
        (mem/c:SI (reg/f:SI 16 argp) [1 from+0 S4 A32])) "mm/memory.c":237:36 75 {*movsi_internal}
     (nil))
(insn 34 33 35 6 (parallel [
            (set (reg:SI 85 [ _3 ])
                (lshiftrt:SI (reg:SI 105)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":237:36 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 105)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (reg/f:SI 16 argp) [1 from+0 S4 A32])
                    (const_int 20 [0x14]))
                (nil)))))
(insn 35 34 36 6 (parallel [
            (set (reg:SI 86 [ _4 ])
                (and:SI (reg:SI 85 [ _3 ])
                    (const_int 4092 [0xffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":237:43 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 36 35 118 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [16 dir+0 S4 A32])
        (reg:SI 86 [ _4 ])) "mm/memory.c":237:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(jump_insn 118 36 119 6 (set (pc)
        (label_ref 97)) "mm/memory.c":238:5 807 {jump}
     (nil)
 -> 97)
(barrier 119 118 102)
(code_label 102 119 39 7 43 (nil) [1 uses])
(note 39 102 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [16 dir+0 S4 A32])) "mm/memory.c":239:19 75 {*movsi_internal}
     (nil))
(insn 41 40 42 7 (set (reg:SI 87 [ _5 ])
        (mem:SI (reg/f:SI 106) [1 *dir_18+0 S4 A32])) "mm/memory.c":239:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 42 41 43 7 (parallel [
            (set (reg:SI 88 [ _6 ])
                (and:SI (reg:SI 87 [ _5 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":239:17 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 43 42 44 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ _6 ])
            (const_int 0 [0]))) "mm/memory.c":239:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (nil)))
(jump_insn 44 43 49 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 125)
            (pc))) "mm/memory.c":239:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 125)
(note 49 44 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [16 dir+0 S4 A32])) "mm/memory.c":241:52 75 {*movsi_internal}
     (nil))
(insn 51 50 52 8 (set (reg:SI 89 [ _7 ])
        (mem:SI (reg/f:SI 107) [1 *dir_18+0 S4 A32])) "mm/memory.c":241:52 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 52 51 53 8 (parallel [
            (set (reg:SI 90 [ _8 ])
                (and:SI (reg:SI 89 [ _7 ])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":241:50 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 53 52 54 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [16 pg_table+0 S4 A32])
        (reg:SI 90 [ _8 ])) "mm/memory.c":241:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (nil)))
(insn 54 53 120 8 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 nr+0 S4 A32])
        (const_int 0 [0])) "mm/memory.c":242:17 75 {*movsi_internal}
     (nil))
(jump_insn 120 54 121 8 (set (pc)
        (label_ref 77)) "mm/memory.c":242:9 807 {jump}
     (nil)
 -> 77)
(barrier 121 120 79)
(code_label 79 121 57 9 42 (nil) [1 uses])
(note 57 79 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 9 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [16 pg_table+0 S4 A32])) "mm/memory.c":243:21 75 {*movsi_internal}
     (nil))
(insn 59 58 60 9 (set (reg:SI 91 [ _9 ])
        (mem:SI (reg/f:SI 108) [1 *pg_table_17+0 S4 A32])) "mm/memory.c":243:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (nil)))
(insn 60 59 61 9 (parallel [
            (set (reg:SI 92 [ _10 ])
                (and:SI (reg:SI 91 [ _9 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":243:19 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 61 60 62 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ _10 ])
            (const_int 0 [0]))) "mm/memory.c":243:16 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (nil)))
(jump_insn 62 61 63 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) "mm/memory.c":243:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 71)
(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 10 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [16 pg_table+0 S4 A32])) "mm/memory.c":244:40 75 {*movsi_internal}
     (nil))
(insn 65 64 66 10 (set (reg:SI 93 [ _11 ])
        (mem:SI (reg/f:SI 109) [1 *pg_table_17+0 S4 A32])) "mm/memory.c":244:40 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 66 65 67 10 (parallel [
            (set (reg:SI 94 [ _12 ])
                (and:SI (reg:SI 93 [ _11 ])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":244:17 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 67 66 68 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":244:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 68 67 69 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 94 [ _12 ])) "mm/memory.c":244:17 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 69 68 70 10 (call (mem:QI (symbol_ref:SI ("free_page") [flags 0x3]  <function_decl 0x739b83b3b400 free_page>) [0 free_page S1 A8])
        (const_int 16 [0x10])) "mm/memory.c":244:17 812 {*call}
     (nil)
    (nil))
(insn 70 69 71 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":244:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 71 70 72 11 41 (nil) [1 uses])
(note 72 71 73 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 11 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [16 pg_table+0 S4 A32])) "mm/memory.c":245:23 75 {*movsi_internal}
     (nil))
(insn 74 73 75 11 (set (mem:SI (reg/f:SI 110) [1 *pg_table_17+0 S4 A32])
        (const_int 0 [0])) "mm/memory.c":245:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (nil)))
(insn 75 74 76 11 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [16 pg_table+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [16 pg_table+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":246:21 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 76 75 77 11 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [1 nr+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 nr+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":242:36 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 77 76 78 12 40 (nil) [1 uses])
(note 78 77 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 82 78 83 12 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 nr+0 S4 A32])
            (const_int 1023 [0x3ff]))) "mm/memory.c":242:25 11 {*cmpsi_1}
     (nil))
(jump_insn 83 82 84 12 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "mm/memory.c":242:25 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 79)
(note 84 83 85 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 13 (set (reg/f:SI 111)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [16 dir+0 S4 A32])) "mm/memory.c":248:32 75 {*movsi_internal}
     (nil))
(insn 86 85 87 13 (set (reg:SI 95 [ _13 ])
        (mem:SI (reg/f:SI 111) [1 *dir_18+0 S4 A32])) "mm/memory.c":248:32 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
(insn 87 86 88 13 (parallel [
            (set (reg:SI 96 [ _14 ])
                (and:SI (reg:SI 95 [ _13 ])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":248:9 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _13 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 88 87 89 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":248:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 89 88 90 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 96 [ _14 ])) "mm/memory.c":248:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 90 89 91 13 (call (mem:QI (symbol_ref:SI ("free_page") [flags 0x3]  <function_decl 0x739b83b3b400 free_page>) [0 free_page S1 A8])
        (const_int 16 [0x10])) "mm/memory.c":248:9 812 {*call}
     (nil)
    (nil))
(insn 91 90 92 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":248:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 92 91 93 13 (set (reg/f:SI 112)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [16 dir+0 S4 A32])) "mm/memory.c":249:14 75 {*movsi_internal}
     (nil))
(insn 93 92 122 13 (set (mem:SI (reg/f:SI 112) [1 *dir_18+0 S4 A32])
        (const_int 0 [0])) "mm/memory.c":249:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(jump_insn 122 93 123 13 (set (pc)
        (label_ref 94)) 807 {jump}
     (nil)
 -> 94)
(barrier 123 122 125)
(code_label 125 123 124 17 45 (nil) [1 uses])
(note 124 125 126 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 126 124 94 17 (const_int 0 [0]) "mm/memory.c":240:13 843 {nop}
     (nil))
(code_label 94 126 95 14 39 (nil) [1 uses])
(note 95 94 96 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 14 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [16 dir+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [16 dir+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":238:28 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 97 96 98 15 37 (nil) [1 uses])
(note 98 97 99 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 15 (set (reg:SI 97 [ size.8_15 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 size+0 S4 A32])) "mm/memory.c":238:17 75 {*movsi_internal}
     (nil))
(insn 100 99 101 15 (parallel [
            (set (reg:SI 113)
                (plus:SI (reg:SI 97 [ size.8_15 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":238:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 101 100 103 15 (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 size+0 S4 A32])
        (reg:SI 113)) "mm/memory.c":238:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113)
        (nil)))
(insn 103 101 104 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ size.8_15 ])
            (const_int 0 [0]))) "mm/memory.c":238:20 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 97 [ size.8_15 ])
        (nil)))
(jump_insn 104 103 105 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) "mm/memory.c":238:20 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 102)
(note 105 104 106 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 16 (set (reg:SI 114)
        (const_int 0 [0])) "mm/memory.c":251:5 75 {*movsi_internal}
     (nil))
(insn 107 106 108 16 (parallel [
            (asm_operands/v ("movl %%eax, %%cr3") ("") 0 [
                    (reg:SI 114)
                ]
                 [
                    (asm_input:SI ("a") mm/memory.c:251)
                ]
                 [] mm/memory.c:251)
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":251:5 -1
     (expr_list:REG_DEAD (reg:SI 114)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 108 107 111 16 (set (reg:SI 98 [ _34 ])
        (const_int 0 [0])) "mm/memory.c":252:12 75 {*movsi_internal}
     (nil))
(insn 111 108 115 16 (set (reg:SI 99 [ <retval> ])
        (reg:SI 98 [ _34 ])) "mm/memory.c":252:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98 [ _34 ])
        (nil)))
(insn 115 111 116 16 (set (reg/i:SI 0 ax)
        (reg:SI 99 [ <retval> ])) "mm/memory.c":253:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99 [ <retval> ])
        (nil)))
(insn 116 115 0 16 (use (reg/i:SI 0 ax)) "mm/memory.c":253:1 -1
     (nil))

;; Function free_table (free_table, funcdef_no=7, decl_uid=1392, cgraph_uid=8, symbol_order=9)

scanning new insn with uid = 65.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 8 9 7
;; 2 succs { 8 3 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 9 6 }
;; 6 succs { 7 }
;; 8 succs { 7 }
;; 9 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a4 (r86,l0) best Q_REGS, allocno Q_REGS
    r85: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a2 (r85,l0) best Q_REGS, allocno Q_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:48000
  a1(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:17000
  a3(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:13000
  a5(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a6(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a7(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a9(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a10(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a12(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 64(l0): point = 1
   Insn 60(l0): point = 4
   Insn 59(l0): point = 6
   Insn 55(l0): point = 9
   Insn 50(l0): point = 11
   Insn 49(l0): point = 13
   Insn 48(l0): point = 15
   Insn 47(l0): point = 17
   Insn 46(l0): point = 19
   Insn 45(l0): point = 21
   Insn 39(l0): point = 24
   Insn 38(l0): point = 26
   Insn 37(l0): point = 28
   Insn 36(l0): point = 30
   Insn 35(l0): point = 32
   Insn 34(l0): point = 34
   Insn 33(l0): point = 36
   Insn 32(l0): point = 38
   Insn 31(l0): point = 40
   Insn 30(l0): point = 42
   Insn 29(l0): point = 44
   Insn 28(l0): point = 46
   Insn 27(l0): point = 48
   Insn 24(l0): point = 51
   Insn 23(l0): point = 53
   Insn 22(l0): point = 55
   Insn 21(l0): point = 57
   Insn 20(l0): point = 59
   Insn 19(l0): point = 61
   Insn 17(l0): point = 64
   Insn 16(l0): point = 66
   Insn 15(l0): point = 68
   Insn 14(l0): point = 70
   Insn 8(l0): point = 73
   Insn 7(l0): point = 75
   Insn 65(l0): point = 77
 a0(r82): [16..77]
 a1(r94): [18..19]
 a2(r85): [27..38]
 a3(r93): [29..30]
 a4(r86): [29..36]
 a5(r92): [31..32]
 a6(r91): [31..34]
 a7(r90): [39..40]
 a8(r89): [41..42]
 a9(r88): [41..44]
 a10(r87): [58..59]
 a11(r84): [67..68]
 a12(r83): [69..70]
Compressing live ranges: from 80 to 16 - 20%
Ranges after the compression:
 a0(r82): [0..15]
 a1(r94): [0..1]
 a2(r85): [2..5]
 a3(r93): [2..3]
 a4(r86): [2..5]
 a5(r92): [4..5]
 a6(r91): [4..5]
 a7(r90): [6..7]
 a8(r89): [8..9]
 a9(r88): [8..9]
 a10(r87): [10..11]
 a11(r84): [12..13]
 a12(r83): [14..15]
  pref0:a0(r82)<-hr3@1500
  regions=1, blocks=10, points=16
    allocnos=13 (big 0), copies=0, conflicts=0, ranges=13
Disposition:
    0:r82  l0     3   12:r83  l0     0   11:r84  l0     0    2:r85  l0     0
    4:r86  l0     1   10:r87  l0     0    9:r88  l0     1    8:r89  l0     0
    7:r90  l0     0    6:r91  l0     4    5:r92  l0     2    3:r93  l0     2
    1:r94  l0     0
+++Costs: overall 1000, reg 1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


free_table

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r3={2d,2u} r6={1d,9u} r7={7d,21u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,16u} r17={15d,3u} r18={2d} r19={1d,9u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,7u} r83={1d,1u} r84={1d,1u} r85={1d,2u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 259{179d,80u,0e} in 36{34 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 65 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 65 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 65 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (reg/f:SI 16 argp) [1 addr+0 S4 A32])
            (const_int 1048575 [0xfffff]))) "mm/memory.c":261:5 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 13 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 58)
            (pc))) "mm/memory.c":261:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 58)
(note 13 8 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:SI 83 [ HIGH_MEMORY.9_1 ])
        (mem/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("HIGH_MEMORY") [flags 0x2]  <var_decl 0x739b83b2f510 HIGH_MEMORY>)
                        ] UNSPEC_GOTOFF))) [1 HIGH_MEMORY+0 S4 A32])) "mm/memory.c":263:11 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:SI 84 [ HIGH_MEMORY.10_2 ])
        (reg:SI 83 [ HIGH_MEMORY.9_1 ])) "mm/memory.c":263:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ HIGH_MEMORY.9_1 ])
        (nil)))
(insn 16 15 17 3 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (reg/f:SI 16 argp) [1 addr+0 S4 A32])
            (reg:SI 84 [ HIGH_MEMORY.10_2 ]))) "mm/memory.c":263:5 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ HIGH_MEMORY.10_2 ])
        (nil)))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "mm/memory.c":263:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 25)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":264:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 20 19 21 4 (set (reg/f:SI 87)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x739b83b9d5a0 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":264:3 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x739b83b9d5a0 *.LC1>)
        (nil)))
(insn 21 20 22 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [15  S4 A32])
        (reg/f:SI 87)) "mm/memory.c":264:3 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 87)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 22 21 23 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "mm/memory.c":264:3 75 {*movsi_internal}
     (nil))
(call_insn 23 22 24 4 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x739b83ad2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "mm/memory.c":264:3 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 24 23 25 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":264:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 25 24 26 5 49 (nil) [1 uses])
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (parallel [
            (set (mem/c:SI (reg/f:SI 16 argp) [1 addr+0 S4 A32])
                (plus:SI (mem/c:SI (reg/f:SI 16 argp) [1 addr+0 S4 A32])
                    (const_int -1048576 [0xfffffffffff00000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":265:7 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 28 27 29 5 (parallel [
            (set (mem/c:SI (reg/f:SI 16 argp) [1 addr+0 S4 A32])
                (lshiftrt:SI (mem/c:SI (reg/f:SI 16 argp) [1 addr+0 S4 A32])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":266:7 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 29 28 30 5 (set (reg:SI 88)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("mem_map") [flags 0x2]  <var_decl 0x739b83b2f5a0 mem_map>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":267:13 205 {*leasi}
     (nil))
(insn 30 29 31 5 (set (reg:SI 89)
        (mem/c:SI (reg/f:SI 16 argp) [1 addr+0 S4 A32])) "mm/memory.c":267:13 75 {*movsi_internal}
     (nil))
(insn 31 30 32 5 (parallel [
            (set (reg/f:SI 90)
                (plus:SI (reg:SI 88)
                    (reg:SI 89)))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":267:13 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 89)
        (expr_list:REG_DEAD (reg:SI 88)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 32 31 33 5 (set (reg:QI 85 [ _3 ])
        (mem:QI (reg/f:SI 90) [0 mem_map[addr_12]+0 S1 A8])) "mm/memory.c":267:13 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (nil)))
(insn 33 32 34 5 (parallel [
            (set (reg:QI 86 [ _5 ])
                (plus:QI (reg:QI 85 [ _3 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":267:19 213 {*addqi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 34 33 35 5 (set (reg:SI 91)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("mem_map") [flags 0x2]  <var_decl 0x739b83b2f5a0 mem_map>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":267:19 205 {*leasi}
     (nil))
(insn 35 34 36 5 (set (reg:SI 92)
        (mem/c:SI (reg/f:SI 16 argp) [1 addr+0 S4 A32])) "mm/memory.c":267:19 75 {*movsi_internal}
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg/f:SI 93)
                (plus:SI (reg:SI 91)
                    (reg:SI 92)))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":267:19 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 92)
        (expr_list:REG_DEAD (reg:SI 91)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 37 36 38 5 (set (mem:QI (reg/f:SI 93) [0 mem_map[addr_12]+0 S1 A8])
        (reg:QI 86 [ _5 ])) "mm/memory.c":267:19 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (expr_list:REG_DEAD (reg:QI 86 [ _5 ])
            (nil))))
(insn 38 37 39 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 85 [ _3 ])
            (const_int 0 [0]))) "mm/memory.c":267:5 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 85 [ _3 ])
        (nil)))
(jump_insn 39 38 44 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 63)
            (pc))) "mm/memory.c":267:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 63)
(note 44 39 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":269:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 46 45 47 6 (set (reg/f:SI 94)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x739b83b9d630 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":269:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x739b83b9d630 *.LC2>)
        (nil)))
(insn 47 46 48 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [15  S4 A32])
        (reg/f:SI 94)) "mm/memory.c":269:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 48 47 49 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "mm/memory.c":269:2 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 49 48 50 6 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x739b83ad2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "mm/memory.c":269:2 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 50 49 55 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":269:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 55 50 56 6 (set (pc)
        (label_ref 53)) 807 {jump}
     (nil)
 -> 53)
(barrier 56 55 58)
(code_label 58 56 57 8 51 (nil) [1 uses])
(note 57 58 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 59 57 60 8 (const_int 0 [0]) "mm/memory.c":262:3 843 {nop}
     (nil))
(jump_insn 60 59 61 8 (set (pc)
        (label_ref 53)) 807 {jump}
     (nil)
 -> 53)
(barrier 61 60 63)
(code_label 63 61 62 9 52 (nil) [1 uses])
(note 62 63 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 62 53 9 (const_int 0 [0]) "mm/memory.c":268:3 843 {nop}
     (nil))
(code_label 53 64 54 7 46 (nil) [2 uses])
(note 54 53 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

;; Function put_page (put_page, funcdef_no=8, decl_uid=1396, cgraph_uid=9, symbol_order=10)

scanning new insn with uid = 103.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 14 n_edges 18 count 14 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 12 }
;; 9 succs { 10 11 }
;; 10 succs { 13 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r108,l0) best AREG, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r101,l0) best AREG, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a26 (r87,l0) best Q_REGS, allocno Q_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r101,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a3(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a6(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a7(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a8(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a9(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a10(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a13(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r108,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a15(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a16(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a19(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a20(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a22(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a23(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:42000
  a25(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a27(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a28(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a29(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a30(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a32(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 97(l0): point = 0
   Insn 96(l0): point = 2
   Insn 92(l0): point = 4
   Insn 89(l0): point = 7
   Insn 88(l0): point = 9
   Insn 87(l0): point = 11
   Insn 86(l0): point = 13
   Insn 85(l0): point = 15
   Insn 84(l0): point = 17
   Insn 83(l0): point = 19
   Insn 82(l0): point = 21
   Insn 81(l0): point = 23
   Insn 80(l0): point = 25
   Insn 77(l0): point = 28
   Insn 76(l0): point = 30
   Insn 75(l0): point = 32
   Insn 74(l0): point = 34
   Insn 73(l0): point = 36
   Insn 72(l0): point = 38
   Insn 101(l0): point = 41
   Insn 67(l0): point = 43
   Insn 65(l0): point = 46
   Insn 64(l0): point = 48
   Insn 63(l0): point = 50
   Insn 62(l0): point = 52
   Insn 61(l0): point = 54
   Insn 99(l0): point = 57
   Insn 56(l0): point = 59
   Insn 55(l0): point = 61
   Insn 54(l0): point = 63
   Insn 53(l0): point = 65
   Insn 51(l0): point = 68
   Insn 50(l0): point = 70
   Insn 49(l0): point = 72
   Insn 48(l0): point = 74
   Insn 47(l0): point = 76
   Insn 46(l0): point = 78
   Insn 45(l0): point = 80
   Insn 44(l0): point = 82
   Insn 43(l0): point = 84
   Insn 40(l0): point = 87
   Insn 39(l0): point = 89
   Insn 38(l0): point = 91
   Insn 37(l0): point = 93
   Insn 36(l0): point = 95
   Insn 35(l0): point = 97
   Insn 34(l0): point = 99
   Insn 33(l0): point = 101
   Insn 31(l0): point = 104
   Insn 30(l0): point = 106
   Insn 29(l0): point = 108
   Insn 28(l0): point = 110
   Insn 27(l0): point = 112
   Insn 26(l0): point = 114
   Insn 23(l0): point = 117
   Insn 22(l0): point = 119
   Insn 21(l0): point = 121
   Insn 20(l0): point = 123
   Insn 19(l0): point = 125
   Insn 18(l0): point = 127
   Insn 17(l0): point = 129
   Insn 16(l0): point = 131
   Insn 13(l0): point = 134
   Insn 12(l0): point = 136
   Insn 11(l0): point = 138
   Insn 10(l0): point = 140
   Insn 8(l0): point = 143
   Insn 7(l0): point = 145
   Insn 103(l0): point = 147
 a0(r101): [3..4]
 a1(r100): [41..43] [5..7]
 a2(r98): [10..15]
 a3(r99): [10..11]
 a4(r114): [12..13]
 a5(r113): [16..17]
 a6(r97): [16..19]
 a7(r96): [20..21]
 a8(r95): [22..23]
 a9(r112): [24..25]
 a10(r111): [29..30]
 a11(r110): [33..34]
 a12(r94): [33..36]
 a13(r109): [37..38]
 a14(r108): [51..52]
 a15(r93): [60..61]
 a16(r92): [62..63]
 a17(r107): [64..65]
 a18(r91): [71..72]
 a19(r90): [73..74]
 a20(r106): [75..76]
 a21(r89): [79..80]
 a22(r88): [81..82]
 a23(r105): [83..84]
 a24(r82): [92..147]
 a25(r104): [94..95]
 a26(r87): [107..108]
 a27(r86): [109..110]
 a28(r85): [111..112]
 a29(r103): [113..114]
 a30(r102): [124..125]
 a31(r84): [137..138]
 a32(r83): [139..140]
Compressing live ranges: from 150 to 60 - 40%
Ranges after the compression:
 a0(r101): [0..1]
 a1(r100): [22..23] [2..3]
 a2(r98): [4..7]
 a3(r99): [4..5]
 a4(r114): [6..7]
 a5(r113): [8..9]
 a6(r97): [8..9]
 a7(r96): [10..11]
 a8(r95): [12..13]
 a9(r112): [14..15]
 a10(r111): [16..17]
 a11(r110): [18..19]
 a12(r94): [18..19]
 a13(r109): [20..21]
 a14(r108): [24..25]
 a15(r93): [26..27]
 a16(r92): [28..29]
 a17(r107): [30..31]
 a18(r91): [32..33]
 a19(r90): [34..35]
 a20(r106): [36..37]
 a21(r89): [38..39]
 a22(r88): [40..41]
 a23(r105): [42..43]
 a24(r82): [44..59]
 a25(r104): [44..45]
 a26(r87): [46..47]
 a27(r86): [48..49]
 a28(r85): [50..51]
 a29(r103): [52..53]
 a30(r102): [54..55]
 a31(r84): [56..57]
 a32(r83): [58..59]
  pref0:a14(r108)<-hr0@1500
  pref1:a0(r101)<-hr0@1500
  pref2:a24(r82)<-hr3@1500
  regions=1, blocks=14, points=60
    allocnos=33 (big 0), copies=0, conflicts=0, ranges=34
Disposition:
   24:r82  l0     3   32:r83  l0     0   31:r84  l0     0   28:r85  l0     0
   27:r86  l0     0   26:r87  l0     0   22:r88  l0     0   21:r89  l0     0
   19:r90  l0     0   18:r91  l0     0   16:r92  l0     0   15:r93  l0     0
   12:r94  l0     1    8:r95  l0     0    7:r96  l0     0    6:r97  l0     1
    2:r98  l0     0    3:r99  l0     1    1:r100 l0     0    0:r101 l0     0
   30:r102 l0     0   29:r103 l0     0   25:r104 l0     0   23:r105 l0     0
   20:r106 l0     0   17:r107 l0     0   14:r108 l0     0   13:r109 l0     0
   11:r110 l0     0   10:r111 l0     0    9:r112 l0     0    5:r113 l0     0
    4:r114 l0     1
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


put_page

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,3u} r1={4d} r2={4d} r3={2d,2u} r6={1d,13u} r7={11d,30u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,23u,4e} r17={25d,5u} r18={3d} r19={1d,24u,2e} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,6u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u,1e} r98={1d,1u} r99={1d,1u} r100={2d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} 
;;    total ref usage 428{283d,138u,7e} in 69{66 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 103 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 103 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 103 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (reg/f:SI 16 argp) [1 page+0 S4 A32])
            (const_int 1048575 [0xfffff]))) "mm/memory.c":283:5 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "mm/memory.c":283:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 14)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:SI 83 [ HIGH_MEMORY.11_1 ])
        (mem/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("HIGH_MEMORY") [flags 0x2]  <var_decl 0x739b83b2f510 HIGH_MEMORY>)
                        ] UNSPEC_GOTOFF))) [1 HIGH_MEMORY+0 S4 A32])) "mm/memory.c":283:29 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:SI 84 [ HIGH_MEMORY.12_2 ])
        (reg:SI 83 [ HIGH_MEMORY.11_1 ])) "mm/memory.c":283:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ HIGH_MEMORY.11_1 ])
        (nil)))
(insn 12 11 13 3 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (reg/f:SI 16 argp) [1 page+0 S4 A32])
            (reg:SI 84 [ HIGH_MEMORY.12_2 ]))) "mm/memory.c":283:21 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ HIGH_MEMORY.12_2 ])
        (nil)))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) "mm/memory.c":283:21 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 24)
(code_label 14 13 15 4 54 (nil) [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":284:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 17 16 18 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 address+0 S4 A32])) "mm/memory.c":284:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 18 17 19 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 page+0 S4 A32])) "mm/memory.c":284:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 19 18 20 4 (set (reg/f:SI 102)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x739b83b9dbd0 *.LC7>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":284:3 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x739b83b9dbd0 *.LC7>)
        (nil)))
(insn 20 19 21 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [15  S4 A32])
        (reg/f:SI 102)) "mm/memory.c":284:3 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 21 20 22 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "mm/memory.c":284:3 75 {*movsi_internal}
     (nil))
(call_insn 22 21 23 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x739b83ad2700 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "mm/memory.c":284:3 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 23 22 24 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":284:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 24 23 25 5 55 (nil) [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:SI 103)
        (mem/c:SI (reg/f:SI 16 argp) [1 page+0 S4 A32])) "mm/memory.c":285:20 75 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (parallel [
            (set (reg:SI 85 [ _3 ])
                (plus:SI (reg:SI 103)
                    (const_int -1048576 [0xfffffffffff00000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":285:20 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 103)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [1 page+0 S4 A32])
                    (const_int -1048576 [0xfffffffffff00000]))
                (nil)))))
(insn 28 27 29 5 (parallel [
            (set (reg:SI 86 [ _4 ])
                (lshiftrt:SI (reg:SI 85 [ _3 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":285:31 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 29 28 30 5 (set (reg:QI 87 [ _5 ])
        (mem:QI (plus:SI (plus:SI (reg:SI 82)
                    (reg:SI 86 [ _4 ]))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("mem_map") [flags 0x2]  <var_decl 0x739b83b2f5a0 mem_map>)
                        ] UNSPEC_GOTOFF))) [0 mem_map[_4]+0 S1 A8])) "mm/memory.c":285:13 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(insn 30 29 31 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ _5 ])
            (const_int 1 [0x1]))) "mm/memory.c":285:5 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 87 [ _5 ])
        (nil)))
(jump_insn 31 30 32 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) "mm/memory.c":285:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 41)
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":286:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 34 33 35 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 address+0 S4 A32])) "mm/memory.c":286:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 35 34 36 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 page+0 S4 A32])) "mm/memory.c":286:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 36 35 37 6 (set (reg/f:SI 104)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x739b83b9dc60 *.LC8>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":286:3 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x739b83b9dc60 *.LC8>)
        (nil)))
(insn 37 36 38 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [15  S4 A32])
        (reg/f:SI 104)) "mm/memory.c":286:3 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 38 37 39 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "mm/memory.c":286:3 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 39 38 40 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x739b83ad2700 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "mm/memory.c":286:3 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 40 39 41 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":286:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 41 40 42 7 56 (nil) [1 uses])
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 7 (set (reg:SI 105)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 address+0 S4 A32])) "mm/memory.c":287:42 75 {*movsi_internal}
     (nil))
(insn 44 43 45 7 (parallel [
            (set (reg:SI 88 [ _6 ])
                (lshiftrt:SI (reg:SI 105)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":287:42 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 105)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [1 address+0 S4 A32])
                    (const_int 20 [0x14]))
                (nil)))))
(insn 45 44 46 7 (parallel [
            (set (reg:SI 89 [ _7 ])
                (and:SI (reg:SI 88 [ _6 ])
                    (const_int 4092 [0xffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":287:49 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 46 45 47 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [16 page_table+0 S4 A32])
        (reg:SI 89 [ _7 ])) "mm/memory.c":287:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (nil)))
(insn 47 46 48 7 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [16 page_table+0 S4 A32])) "mm/memory.c":288:7 75 {*movsi_internal}
     (nil))
(insn 48 47 49 7 (set (reg:SI 90 [ _8 ])
        (mem:SI (reg/f:SI 106) [1 *page_table_29+0 S4 A32])) "mm/memory.c":288:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 49 48 50 7 (parallel [
            (set (reg:SI 91 [ _9 ])
                (and:SI (reg:SI 90 [ _8 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":288:20 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 50 49 51 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ _9 ])
            (const_int 0 [0]))) "mm/memory.c":288:5 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (nil)))
(jump_insn 51 50 52 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) "mm/memory.c":288:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 59)
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [16 page_table+0 S4 A32])) "mm/memory.c":289:47 75 {*movsi_internal}
     (nil))
(insn 54 53 55 8 (set (reg:SI 92 [ _10 ])
        (mem:SI (reg/f:SI 107) [1 *page_table_29+0 S4 A32])) "mm/memory.c":289:47 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 55 54 56 8 (parallel [
            (set (reg:SI 93 [ _11 ])
                (and:SI (reg:SI 92 [ _10 ])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":289:45 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 56 55 99 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [16 page_table+0 S4 A32])
        (reg:SI 93 [ _11 ])) "mm/memory.c":289:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
        (nil)))
(jump_insn 99 56 100 8 (set (pc)
        (label_ref 78)) 807 {jump}
     (nil)
 -> 78)
(barrier 100 99 59)
(code_label 59 100 60 9 57 (nil) [1 uses])
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 61 60 62 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_free_page") [flags 0x3]  <function_decl 0x739b83b3b100 get_free_page>) [0 get_free_page S1 A8])
            (const_int 0 [0]))) "mm/memory.c":291:15 823 {*call_value}
     (nil)
    (nil))
(insn 62 61 63 9 (set (reg:SI 108)
        (reg:SI 0 ax)) "mm/memory.c":291:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 63 62 64 9 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 tmp+0 S4 A32])
        (reg:SI 108)) "mm/memory.c":291:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108)
        (nil)))
(insn 64 63 65 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 tmp+0 S4 A32])
            (const_int 0 [0]))) "mm/memory.c":291:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 65 64 66 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) "mm/memory.c":291:6 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 70)
(note 66 65 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 101 10 (set (reg:SI 100 [ _19 ])
        (const_int 0 [0])) "mm/memory.c":292:11 75 {*movsi_internal}
     (nil))
(jump_insn 101 67 102 10 (set (pc)
        (label_ref 90)) "mm/memory.c":292:11 807 {jump}
     (nil)
 -> 90)
(barrier 102 101 70)
(code_label 70 102 71 11 59 (nil) [1 uses])
(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 11 (set (reg:SI 109)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 tmp+0 S4 A32])) "mm/memory.c":293:21 75 {*movsi_internal}
     (nil))
(insn 73 72 74 11 (parallel [
            (set (reg:SI 94 [ _12 ])
                (ior:SI (reg:SI 109)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":293:21 520 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 109)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ior:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 tmp+0 S4 A32])
                    (const_int 7 [0x7]))
                (nil)))))
(insn 74 73 75 11 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [16 page_table+0 S4 A32])) "mm/memory.c":293:15 75 {*movsi_internal}
     (nil))
(insn 75 74 76 11 (set (mem:SI (reg/f:SI 110) [1 *page_table_29+0 S4 A32])
        (reg:SI 94 [ _12 ])) "mm/memory.c":293:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
            (nil))))
(insn 76 75 77 11 (set (reg:SI 111)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 tmp+0 S4 A32])) "mm/memory.c":294:14 75 {*movsi_internal}
     (nil))
(insn 77 76 78 11 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [16 page_table+0 S4 A32])
        (reg:SI 111)) "mm/memory.c":294:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111)
        (nil)))
(code_label 78 77 79 12 58 (nil) [1 uses])
(note 79 78 80 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 12 (set (reg:SI 112)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 address+0 S4 A32])) "mm/memory.c":296:22 75 {*movsi_internal}
     (nil))
(insn 81 80 82 12 (parallel [
            (set (reg:SI 95 [ _13 ])
                (lshiftrt:SI (reg:SI 112)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":296:22 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 112)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [1 address+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 82 81 83 12 (parallel [
            (set (reg:SI 96 [ _14 ])
                (and:SI (reg:SI 95 [ _13 ])
                    (const_int 1023 [0x3ff])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":296:29 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _13 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 83 82 84 12 (parallel [
            (set (reg:SI 97 [ _15 ])
                (ashift:SI (reg:SI 96 [ _14 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":296:12 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 84 83 85 12 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [16 page_table+0 S4 A32])) "mm/memory.c":296:12 75 {*movsi_internal}
     (nil))
(insn 85 84 86 12 (parallel [
            (set (reg/f:SI 98 [ _16 ])
                (plus:SI (reg:SI 97 [ _15 ])
                    (reg/f:SI 113)))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":296:12 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (expr_list:REG_DEAD (reg:SI 97 [ _15 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                                (const_int -4 [0xfffffffffffffffc])) [16 page_table+0 S4 A32])
                        (reg:SI 97 [ _15 ]))
                    (nil))))))
(insn 86 85 87 12 (set (reg:SI 114)
        (mem/c:SI (reg/f:SI 16 argp) [1 page+0 S4 A32])) "mm/memory.c":296:45 75 {*movsi_internal}
     (nil))
(insn 87 86 88 12 (parallel [
            (set (reg:SI 99 [ _17 ])
                (ior:SI (reg:SI 114)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":296:45 520 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 114)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ior:SI (mem/c:SI (reg/f:SI 16 argp) [1 page+0 S4 A32])
                    (const_int 7 [0x7]))
                (nil)))))
(insn 88 87 89 12 (set (mem:SI (reg/f:SI 98 [ _16 ]) [1 *_16+0 S4 A32])
        (reg:SI 99 [ _17 ])) "mm/memory.c":296:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99 [ _17 ])
        (expr_list:REG_DEAD (reg/f:SI 98 [ _16 ])
            (nil))))
(insn 89 88 90 12 (set (reg:SI 100 [ _19 ])
        (mem/c:SI (reg/f:SI 16 argp) [1 page+0 S4 A32])) "mm/memory.c":298:9 75 {*movsi_internal}
     (nil))
(code_label 90 89 91 13 60 (nil) [1 uses])
(note 91 90 92 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 96 13 (set (reg:SI 101 [ <retval> ])
        (reg:SI 100 [ _19 ])) "mm/memory.c":299:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100 [ _19 ])
        (nil)))
(insn 96 92 97 13 (set (reg/i:SI 0 ax)
        (reg:SI 101 [ <retval> ])) "mm/memory.c":299:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 101 [ <retval> ])
        (nil)))
(insn 97 96 0 13 (use (reg/i:SI 0 ax)) "mm/memory.c":299:1 -1
     (nil))

;; Function get_empty_page (get_empty_page, funcdef_no=9, decl_uid=1401, cgraph_uid=10, symbol_order=11)

scanning new insn with uid = 35.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 7 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 6 5
;; 2 succs { 4 3 }
;; 3 succs { 4 6 }
;; 4 succs { 6 }
;; 6 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a1(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a2(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 34(l0): point = 1
   Insn 25(l0): point = 4
   Insn 24(l0): point = 6
   Insn 23(l0): point = 8
   Insn 22(l0): point = 10
   Insn 21(l0): point = 12
   Insn 18(l0): point = 15
   Insn 17(l0): point = 17
   Insn 16(l0): point = 19
   Insn 15(l0): point = 21
   Insn 14(l0): point = 23
   Insn 13(l0): point = 25
   Insn 12(l0): point = 27
   Insn 11(l0): point = 29
   Insn 9(l0): point = 32
   Insn 8(l0): point = 34
   Insn 7(l0): point = 36
   Insn 6(l0): point = 38
   Insn 5(l0): point = 40
   Insn 35(l0): point = 42
 a0(r83): [18..19]
 a1(r84): [37..38]
 a2(r82): [42..42]
Compressing live ranges: from 45 to 5 - 11%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r84): [2..3]
 a2(r82): [4..4]
  pref0:a1(r84)<-hr0@1500
  pref1:a0(r83)<-hr0@1500
  regions=1, blocks=7, points=5
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r82  l0     0    0:r83  l0     0    1:r84  l0     0
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


get_empty_page

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,2u} r1={5d} r2={5d} r6={1d,6u} r7={8d,21u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,6u} r17={11d,2u} r18={4d} r19={1d,10u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 349{300d,49u,0e} in 20{16 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 35 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 35 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 35 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 6 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_free_page") [flags 0x3]  <function_decl 0x739b83b3b100 get_free_page>) [0 get_free_page S1 A8])
            (const_int 0 [0]))) "mm/memory.c":305:14 823 {*call_value}
     (nil)
    (nil))
(insn 6 5 7 2 (set (reg:SI 84)
        (reg:SI 0 ax)) "mm/memory.c":305:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 7 6 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])
        (reg:SI 84)) "mm/memory.c":305:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84)
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])
            (const_int 0 [0]))) "mm/memory.c":305:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "mm/memory.c":305:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 19)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":305:35 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 12 11 13 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 address+0 S4 A32])) "mm/memory.c":305:35 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 13 12 14 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])) "mm/memory.c":305:35 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 14 13 15 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("put_page") [flags 0x3]  <function_decl 0x739b83b3bc00 put_page>) [0 put_page S1 A8])
            (const_int 16 [0x10]))) "mm/memory.c":305:35 823 {*call_value}
     (nil)
    (nil))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":305:35 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 16 15 17 3 (set (reg:SI 83 [ _1 ])
        (reg:SI 0 ax)) "mm/memory.c":305:35 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 17 16 18 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 83 [ _1 ])
            (const_int 0 [0]))) "mm/memory.c":305:31 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (nil)))
(jump_insn 18 17 19 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 33)
            (pc))) "mm/memory.c":305:31 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 33)
(code_label 19 18 20 4 62 (nil) [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":306:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 22 21 23 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])) "mm/memory.c":306:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 23 22 24 4 (call (mem:QI (symbol_ref:SI ("free_page") [flags 0x3]  <function_decl 0x739b83b3b400 free_page>) [0 free_page S1 A8])
        (const_int 16 [0x10])) "mm/memory.c":306:3 812 {*call}
     (nil)
    (nil))
(insn 24 23 25 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":306:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(call_insn 25 24 33 4 (call (mem:QI (symbol_ref:SI ("oom") [flags 0x3]  <function_decl 0x739b83b37f00 oom>) [0 oom S1 A8])
        (const_int 0 [0])) "mm/memory.c":307:3 812 {*call}
     (nil)
    (nil))
(code_label 33 25 32 6 64 (nil) [1 uses])
(note 32 33 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 32 28 6 (const_int 0 [0]) "mm/memory.c":309:1 843 {nop}
     (nil))
(code_label 28 34 29 5 61 (nil) [0 uses])
(note 29 28 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

;; Function try_to_share (try_to_share, funcdef_no=10, decl_uid=1406, cgraph_uid=11, symbol_order=12)

scanning new insn with uid = 164.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 17 n_edges 23 count 17 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;; 2 succs { 3 4 }
;; 3 succs { 16 }
;; 4 succs { 5 6 }
;; 5 succs { 16 }
;; 6 succs { 8 7 }
;; 7 succs { 8 9 }
;; 8 succs { 16 }
;; 9 succs { 10 13 }
;; 10 succs { 11 12 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r143,l0) best AREG, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r135,l0) best AREG, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r118,l0) best AREG, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a3 (r116,l0) best Q_REGS, allocno Q_REGS
    r115: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a7 (r115,l0) best Q_REGS, allocno Q_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r118,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:9000
  a2(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a3(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a4(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a5(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a6(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:42000
  a7(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a8(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a10(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a11(r143,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a12(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a18(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a21(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a22(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a25(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a26(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a27(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a28(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a30(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a31(r135,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a32(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a33(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a34(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a36(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a37(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a38(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a39(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a40(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a41(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a42(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a43(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a44(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a45(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a46(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a47(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a48(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a49(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a51(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a52(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a53(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a54(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a55(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a56(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a57(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a58(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a59(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a60(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a61(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a62(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a63(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 154(l0): point = 0
   Insn 153(l0): point = 2
   Insn 149(l0): point = 4
   Insn 146(l0): point = 7
   Insn 145(l0): point = 9
   Insn 144(l0): point = 11
   Insn 143(l0): point = 13
   Insn 142(l0): point = 15
   Insn 141(l0): point = 17
   Insn 140(l0): point = 19
   Insn 139(l0): point = 21
   Insn 138(l0): point = 23
   Insn 137(l0): point = 25
   Insn 136(l0): point = 27
   Insn 135(l0): point = 29
   Insn 134(l0): point = 31
   Insn 133(l0): point = 33
   Insn 132(l0): point = 35
   Insn 131(l0): point = 37
   Insn 130(l0): point = 39
   Insn 129(l0): point = 41
   Insn 128(l0): point = 43
   Insn 127(l0): point = 45
   Insn 126(l0): point = 47
   Insn 125(l0): point = 49
   Insn 124(l0): point = 51
   Insn 121(l0): point = 54
   Insn 120(l0): point = 56
   Insn 119(l0): point = 58
   Insn 118(l0): point = 60
   Insn 117(l0): point = 62
   Insn 116(l0): point = 64
   Insn 114(l0): point = 67
   Insn 113(l0): point = 69
   Insn 112(l0): point = 71
   Insn 111(l0): point = 73
   Insn 110(l0): point = 75
   Insn 109(l0): point = 77
   Insn 108(l0): point = 79
   Insn 107(l0): point = 81
   Insn 103(l0): point = 83
   Insn 102(l0): point = 85
   Insn 101(l0): point = 87
   Insn 100(l0): point = 89
   Insn 97(l0): point = 92
   Insn 162(l0): point = 95
   Insn 92(l0): point = 97
   Insn 91(l0): point = 99
   Insn 90(l0): point = 101
   Insn 89(l0): point = 103
   Insn 87(l0): point = 106
   Insn 86(l0): point = 108
   Insn 85(l0): point = 110
   Insn 84(l0): point = 112
   Insn 83(l0): point = 114
   Insn 81(l0): point = 117
   Insn 80(l0): point = 119
   Insn 79(l0): point = 121
   Insn 78(l0): point = 123
   Insn 77(l0): point = 125
   Insn 76(l0): point = 127
   Insn 75(l0): point = 129
   Insn 160(l0): point = 132
   Insn 70(l0): point = 134
   Insn 67(l0): point = 137
   Insn 66(l0): point = 139
   Insn 62(l0): point = 142
   Insn 61(l0): point = 144
   Insn 60(l0): point = 146
   Insn 59(l0): point = 148
   Insn 58(l0): point = 150
   Insn 158(l0): point = 153
   Insn 53(l0): point = 155
   Insn 51(l0): point = 158
   Insn 50(l0): point = 160
   Insn 49(l0): point = 162
   Insn 48(l0): point = 164
   Insn 47(l0): point = 166
   Insn 46(l0): point = 168
   Insn 45(l0): point = 170
   Insn 44(l0): point = 172
   Insn 43(l0): point = 174
   Insn 42(l0): point = 176
   Insn 38(l0): point = 178
   Insn 37(l0): point = 180
   Insn 36(l0): point = 182
   Insn 35(l0): point = 184
   Insn 156(l0): point = 187
   Insn 30(l0): point = 189
   Insn 28(l0): point = 192
   Insn 27(l0): point = 194
   Insn 26(l0): point = 196
   Insn 25(l0): point = 198
   Insn 24(l0): point = 200
   Insn 23(l0): point = 202
   Insn 22(l0): point = 204
   Insn 21(l0): point = 206
   Insn 20(l0): point = 208
   Insn 19(l0): point = 210
   Insn 18(l0): point = 212
   Insn 17(l0): point = 214
   Insn 16(l0): point = 216
   Insn 15(l0): point = 218
   Insn 14(l0): point = 220
   Insn 13(l0): point = 222
   Insn 12(l0): point = 224
   Insn 11(l0): point = 226
   Insn 10(l0): point = 228
   Insn 9(l0): point = 230
   Insn 8(l0): point = 232
   Insn 7(l0): point = 234
   Insn 6(l0): point = 236
   Insn 5(l0): point = 238
   Insn 164(l0): point = 240
 a0(r118): [3..4]
 a1(r117): [187..189] [153..155] [132..134] [5..7]
 a2(r149): [10..11]
 a3(r116): [10..17]
 a4(r148): [12..13]
 a5(r147): [12..15]
 a6(r82): [192..240] [158..186] [137..152] [16..131]
 a7(r115): [18..19]
 a8(r146): [20..21]
 a9(r145): [22..23]
 a10(r144): [22..25]
 a11(r143): [32..33]
 a12(r113): [36..39]
 a13(r114): [36..37]
 a14(r112): [38..41]
 a15(r110): [44..47]
 a16(r111): [44..45]
 a17(r109): [46..49]
 a18(r108): [50..51]
 a19(r142): [61..62]
 a20(r107): [70..71]
 a21(r106): [72..73]
 a22(r105): [74..75]
 a23(r140): [78..79]
 a24(r141): [80..81]
 a25(r104): [80..83]
 a26(r103): [84..85]
 a27(r137): [86..87]
 a28(r101): [98..103]
 a29(r102): [98..99]
 a30(r136): [100..101]
 a31(r135): [111..112]
 a32(r100): [120..121]
 a33(r134): [122..123]
 a34(r133): [126..127]
 a35(r99): [128..129]
 a36(r98): [145..146]
 a37(r97): [147..148]
 a38(r96): [161..162]
 a39(r132): [163..164]
 a40(r131): [167..168]
 a41(r95): [169..170]
 a42(r129): [173..174]
 a43(r130): [175..176]
 a44(r94): [175..178]
 a45(r93): [179..180]
 a46(r126): [181..182]
 a47(r92): [195..196]
 a48(r125): [197..198]
 a49(r124): [201..202]
 a50(r91): [203..204]
 a51(r90): [207..208]
 a52(r89): [209..210]
 a53(r88): [211..212]
 a54(r87): [213..214]
 a55(r123): [215..216]
 a56(r86): [219..220]
 a57(r85): [221..222]
 a58(r84): [223..224]
 a59(r122): [225..226]
 a60(r121): [229..230]
 a61(r120): [233..234]
 a62(r83): [235..236]
 a63(r119): [237..238]
Compressing live ranges: from 243 to 118 - 48%
Ranges after the compression:
 a0(r118): [0..1]
 a1(r117): [82..83] [64..65] [58..59] [2..3]
 a2(r149): [4..5]
 a3(r116): [4..9]
 a4(r148): [6..7]
 a5(r147): [6..7]
 a6(r82): [84..117] [66..81] [60..63] [8..57]
 a7(r115): [10..11]
 a8(r146): [12..13]
 a9(r145): [14..15]
 a10(r144): [14..15]
 a11(r143): [16..17]
 a12(r113): [18..21]
 a13(r114): [18..19]
 a14(r112): [20..21]
 a15(r110): [22..25]
 a16(r111): [22..23]
 a17(r109): [24..25]
 a18(r108): [26..27]
 a19(r142): [28..29]
 a20(r107): [30..31]
 a21(r106): [32..33]
 a22(r105): [34..35]
 a23(r140): [36..37]
 a24(r141): [38..39]
 a25(r104): [38..39]
 a26(r103): [40..41]
 a27(r137): [42..43]
 a28(r101): [44..47]
 a29(r102): [44..45]
 a30(r136): [46..47]
 a31(r135): [48..49]
 a32(r100): [50..51]
 a33(r134): [52..53]
 a34(r133): [54..55]
 a35(r99): [56..57]
 a36(r98): [60..61]
 a37(r97): [62..63]
 a38(r96): [66..67]
 a39(r132): [68..69]
 a40(r131): [70..71]
 a41(r95): [72..73]
 a42(r129): [74..75]
 a43(r130): [76..77]
 a44(r94): [76..77]
 a45(r93): [78..79]
 a46(r126): [80..81]
 a47(r92): [84..85]
 a48(r125): [86..87]
 a49(r124): [88..89]
 a50(r91): [90..91]
 a51(r90): [92..93]
 a52(r89): [94..95]
 a53(r88): [96..97]
 a54(r87): [98..99]
 a55(r123): [100..101]
 a56(r86): [102..103]
 a57(r85): [104..105]
 a58(r84): [106..107]
 a59(r122): [108..109]
 a60(r121): [110..111]
 a61(r120): [112..113]
 a62(r83): [114..115]
 a63(r119): [116..117]
  pref0:a11(r143)<-hr0@1000
  pref1:a31(r135)<-hr0@1500
  pref2:a0(r118)<-hr0@1500
  regions=1, blocks=17, points=118
    allocnos=64 (big 0), copies=0, conflicts=0, ranges=70
Disposition:
    6:r82  l0     3   62:r83  l0     0   58:r84  l0     0   57:r85  l0     0
   56:r86  l0     0   54:r87  l0     0   53:r88  l0     0   52:r89  l0     0
   51:r90  l0     0   50:r91  l0     0   47:r92  l0     0   45:r93  l0     0
   44:r94  l0     1   41:r95  l0     0   38:r96  l0     0   37:r97  l0     0
   36:r98  l0     0   35:r99  l0     0   32:r100 l0     0   28:r101 l0     0
   29:r102 l0     1   26:r103 l0     0   25:r104 l0     1   22:r105 l0     0
   21:r106 l0     0   20:r107 l0     0   18:r108 l0     0   17:r109 l0     1
   15:r110 l0     0   16:r111 l0     1   14:r112 l0     1   12:r113 l0     0
   13:r114 l0     1    7:r115 l0     0    3:r116 l0     1    1:r117 l0     0
    0:r118 l0     0   63:r119 l0     0   61:r120 l0     0   60:r121 l0     0
   59:r122 l0     0   55:r123 l0     0   49:r124 l0     0   48:r125 l0     0
   46:r126 l0     0   42:r129 l0     0   43:r130 l0     0   40:r131 l0     0
   39:r132 l0     0   34:r133 l0     0   33:r134 l0     0   31:r135 l0     0
   30:r136 l0     1   27:r137 l0     0   23:r140 l0     0   24:r141 l0     0
   19:r142 l0     0   11:r143 l0     0   10:r144 l0     1    9:r145 l0     0
    8:r146 l0     0    5:r147 l0     2    4:r148 l0     0    2:r149 l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


try_to_share

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,3u} r1={4d} r2={4d} r3={1d,1u} r6={1d,16u} r7={4d,24u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,19u,3e} r17={42d,7u} r18={3d} r19={1d,59u,6e} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,6u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u,1e} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u,1e} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={4d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} 
;;    total ref usage 534{325d,198u,11e} in 114{111 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 164 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 164 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 164 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 119)
        (mem/c:SI (reg/f:SI 16 argp) [1 address+0 S4 A32])) "mm/memory.c":327:34 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 83 [ _1 ])
                (lshiftrt:SI (reg:SI 119)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":327:34 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 119)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (reg/f:SI 16 argp) [1 address+0 S4 A32])
                    (const_int 20 [0x14]))
                (nil)))))
(insn 7 6 8 2 (parallel [
            (set (reg:SI 120)
                (and:SI (reg:SI 83 [ _1 ])
                    (const_int 4092 [0xffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":327:22 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 8 7 9 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 to_page+0 S4 A32])
        (reg:SI 120)) "mm/memory.c":327:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 120)
        (nil)))
(insn 9 8 10 2 (set (reg:SI 121)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 to_page+0 S4 A32])) "mm/memory.c":327:12 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 from_page+0 S4 A32])
        (reg:SI 121)) "mm/memory.c":327:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 121)
        (nil)))
(insn 11 10 12 2 (set (reg/f:SI 122)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [14 p+0 S4 A32])) "mm/memory.c":328:18 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 84 [ _2 ])
        (mem:SI (plus:SI (reg/f:SI 122)
                (const_int 536 [0x218])) [1 p_45(D)->start_code+0 S4 A32])) "mm/memory.c":328:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 122)
        (nil)))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 85 [ _3 ])
                (lshiftrt:SI (reg:SI 84 [ _2 ])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":328:31 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 14 13 15 2 (parallel [
            (set (reg:SI 86 [ _4 ])
                (and:SI (reg:SI 85 [ _3 ])
                    (const_int 4092 [0xffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":328:38 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 15 14 16 2 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [1 from_page+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 from_page+0 S4 A32])
                    (reg:SI 86 [ _4 ])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":328:12 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 16 15 17 2 (set (reg/f:SI 123)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x739b83b2f120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "mm/memory.c":329:24 75 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 87 [ current.13_5 ])
        (mem/f/c:SI (reg/f:SI 123) [14 current+0 S4 A32])) "mm/memory.c":329:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (nil)))
(insn 18 17 19 2 (set (reg:SI 88 [ _6 ])
        (mem:SI (plus:SI (reg/f:SI 87 [ current.13_5 ])
                (const_int 536 [0x218])) [1 current.13_5->start_code+0 S4 A32])) "mm/memory.c":329:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87 [ current.13_5 ])
        (nil)))
(insn 19 18 20 2 (parallel [
            (set (reg:SI 89 [ _7 ])
                (lshiftrt:SI (reg:SI 88 [ _6 ])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":329:37 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 20 19 21 2 (parallel [
            (set (reg:SI 90 [ _8 ])
                (and:SI (reg:SI 89 [ _7 ])
                    (const_int 4092 [0xffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":329:44 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 2 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 to_page+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 to_page+0 S4 A32])
                    (reg:SI 90 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":329:12 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 22 21 23 2 (set (reg/f:SI 91 [ from_page.14_9 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 from_page+0 S4 A32])) "mm/memory.c":331:10 75 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:SI 124)
        (mem:SI (reg/f:SI 91 [ from_page.14_9 ]) [1 *from_page.14_9+0 S4 A32])) "mm/memory.c":331:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ from_page.14_9 ])
        (nil)))
(insn 24 23 25 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 from+0 S4 A32])
        (reg:SI 124)) "mm/memory.c":331:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 124)
        (nil)))
(insn 25 24 26 2 (set (reg:SI 125)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 from+0 S4 A32])) "mm/memory.c":332:13 75 {*movsi_internal}
     (nil))
(insn 26 25 27 2 (parallel [
            (set (reg:SI 92 [ _10 ])
                (and:SI (reg:SI 125)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":332:13 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 125)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [1 from+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 27 26 28 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ _10 ])
            (const_int 0 [0]))) "mm/memory.c":332:5 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (nil)))
(jump_insn 28 27 29 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "mm/memory.c":332:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 33)
(note 29 28 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 156 3 (set (reg:SI 117 [ _37 ])
        (const_int 0 [0])) "mm/memory.c":333:10 75 {*movsi_internal}
     (nil))
(jump_insn 156 30 157 3 (set (pc)
        (label_ref 147)) "mm/memory.c":333:10 807 {jump}
     (nil)
 -> 147)
(barrier 157 156 33)
(code_label 33 157 34 4 66 (nil) [1 uses])
(note 34 33 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 4 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -16 [0xfffffffffffffff0])) [1 from+0 S4 A32])
                (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [1 from+0 S4 A32])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":334:7 490 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 36 35 37 4 (set (reg:SI 126)
        (mem/c:SI (reg/f:SI 16 argp) [1 address+0 S4 A32])) "mm/memory.c":335:31 75 {*movsi_internal}
     (nil))
(insn 37 36 38 4 (parallel [
            (set (reg:SI 93 [ _11 ])
                (lshiftrt:SI (reg:SI 126)
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":335:31 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 126)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (reg/f:SI 16 argp) [1 address+0 S4 A32])
                    (const_int 10 [0xa]))
                (nil)))))
(insn 38 37 42 4 (parallel [
            (set (reg:SI 94 [ _12 ])
                (and:SI (reg:SI 93 [ _11 ])
                    (const_int 4092 [0xffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":335:38 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 42 38 43 4 (set (reg:SI 130)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 from+0 S4 A32])) "mm/memory.c":335:12 75 {*movsi_internal}
     (nil))
(insn 43 42 44 4 (parallel [
            (set (reg:SI 129)
                (plus:SI (reg:SI 94 [ _12 ])
                    (reg:SI 130)))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":335:12 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 130)
        (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 94 [ _12 ])
                        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                                (const_int -16 [0xfffffffffffffff0])) [1 from+0 S4 A32]))
                    (nil))))))
(insn 44 43 45 4 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 from_page+0 S4 A32])
        (reg:SI 129)) "mm/memory.c":335:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 129)
        (nil)))
(insn 45 44 46 4 (set (reg/f:SI 95 [ from_page.15_13 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 from_page+0 S4 A32])) "mm/memory.c":336:15 75 {*movsi_internal}
     (nil))
(insn 46 45 47 4 (set (reg:SI 131)
        (mem:SI (reg/f:SI 95 [ from_page.15_13 ]) [1 *from_page.15_13+0 S4 A32])) "mm/memory.c":336:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95 [ from_page.15_13 ])
        (nil)))
(insn 47 46 48 4 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [1 phys_addr+0 S4 A32])
        (reg:SI 131)) "mm/memory.c":336:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 131)
        (nil)))
(insn 48 47 49 4 (set (reg:SI 132)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [1 phys_addr+0 S4 A32])) "mm/memory.c":338:17 75 {*movsi_internal}
     (nil))
(insn 49 48 50 4 (parallel [
            (set (reg:SI 96 [ _14 ])
                (and:SI (reg:SI 132)
                    (const_int 65 [0x41])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":338:17 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 132)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [1 phys_addr+0 S4 A32])
                    (const_int 65 [0x41]))
                (nil)))))
(insn 50 49 51 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ _14 ])
            (const_int 1 [0x1]))) "mm/memory.c":338:5 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
        (nil)))
(jump_insn 51 50 52 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "mm/memory.c":338:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 56)
(note 52 51 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 158 5 (set (reg:SI 117 [ _37 ])
        (const_int 0 [0])) "mm/memory.c":339:10 75 {*movsi_internal}
     (nil))
(jump_insn 158 53 159 5 (set (pc)
        (label_ref 147)) "mm/memory.c":339:10 807 {jump}
     (nil)
 -> 147)
(barrier 159 158 56)
(code_label 56 159 57 6 68 (nil) [1 uses])
(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 6 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -20 [0xffffffffffffffec])) [1 phys_addr+0 S4 A32])
                (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [1 phys_addr+0 S4 A32])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":340:12 490 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 59 58 60 6 (set (reg:SI 97 [ HIGH_MEMORY.16_15 ])
        (mem/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("HIGH_MEMORY") [flags 0x2]  <var_decl 0x739b83b2f510 HIGH_MEMORY>)
                        ] UNSPEC_GOTOFF))) [1 HIGH_MEMORY+0 S4 A32])) "mm/memory.c":341:16 75 {*movsi_internal}
     (nil))
(insn 60 59 61 6 (set (reg:SI 98 [ HIGH_MEMORY.17_16 ])
        (reg:SI 97 [ HIGH_MEMORY.16_15 ])) "mm/memory.c":341:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97 [ HIGH_MEMORY.16_15 ])
        (nil)))
(insn 61 60 62 6 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -20 [0xffffffffffffffec])) [1 phys_addr+0 S4 A32])
            (reg:SI 98 [ HIGH_MEMORY.17_16 ]))) "mm/memory.c":341:5 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 98 [ HIGH_MEMORY.17_16 ])
        (nil)))
(jump_insn 62 61 63 6 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "mm/memory.c":341:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 68)
(note 63 62 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 66 63 67 7 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -20 [0xffffffffffffffec])) [1 phys_addr+0 S4 A32])
            (const_int 1048575 [0xfffff]))) "mm/memory.c":341:31 11 {*cmpsi_1}
     (nil))
(jump_insn 67 66 68 7 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) "mm/memory.c":341:31 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 73)
(code_label 68 67 69 8 69 (nil) [1 uses])
(note 69 68 70 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 160 8 (set (reg:SI 117 [ _37 ])
        (const_int 0 [0])) "mm/memory.c":342:10 75 {*movsi_internal}
     (nil))
(jump_insn 160 70 161 8 (set (pc)
        (label_ref 147)) "mm/memory.c":342:10 807 {jump}
     (nil)
 -> 147)
(barrier 161 160 73)
(code_label 73 161 74 9 70 (nil) [1 uses])
(note 74 73 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 9 (set (reg/f:SI 99 [ to_page.18_17 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 to_page+0 S4 A32])) "mm/memory.c":343:8 75 {*movsi_internal}
     (nil))
(insn 76 75 77 9 (set (reg:SI 133)
        (mem:SI (reg/f:SI 99 [ to_page.18_17 ]) [1 *to_page.18_17+0 S4 A32])) "mm/memory.c":343:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99 [ to_page.18_17 ])
        (nil)))
(insn 77 76 78 9 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 to+0 S4 A32])
        (reg:SI 133)) "mm/memory.c":343:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(insn 78 77 79 9 (set (reg:SI 134)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 to+0 S4 A32])) "mm/memory.c":344:11 75 {*movsi_internal}
     (nil))
(insn 79 78 80 9 (parallel [
            (set (reg:SI 100 [ _18 ])
                (and:SI (reg:SI 134)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":344:11 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 134)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 to+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 80 79 81 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ _18 ])
            (const_int 0 [0]))) "mm/memory.c":344:5 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 100 [ _18 ])
        (nil)))
(jump_insn 81 80 82 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) "mm/memory.c":344:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 98)
(note 82 81 83 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 83 82 84 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_free_page") [flags 0x3]  <function_decl 0x739b83b3b100 get_free_page>) [0 get_free_page S1 A8])
            (const_int 0 [0]))) "mm/memory.c":345:13 823 {*call_value}
     (nil)
    (nil))
(insn 84 83 85 10 (set (reg:SI 135)
        (reg:SI 0 ax)) "mm/memory.c":345:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 85 84 86 10 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 to+0 S4 A32])
        (reg:SI 135)) "mm/memory.c":345:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 135)
        (nil)))
(insn 86 85 87 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 to+0 S4 A32])
            (const_int 0 [0]))) "mm/memory.c":345:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 87 86 88 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) "mm/memory.c":345:6 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 95)
(note 88 87 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 11 (set (reg/f:SI 101 [ to_page.19_19 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 to_page+0 S4 A32])) "mm/memory.c":346:5 75 {*movsi_internal}
     (nil))
(insn 90 89 91 11 (set (reg:SI 136)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 to+0 S4 A32])) "mm/memory.c":346:36 75 {*movsi_internal}
     (nil))
(insn 91 90 92 11 (parallel [
            (set (reg:SI 102 [ _20 ])
                (ior:SI (reg:SI 136)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":346:36 520 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ior:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 to+0 S4 A32])
                    (const_int 7 [0x7]))
                (nil)))))
(insn 92 91 162 11 (set (mem:SI (reg/f:SI 101 [ to_page.19_19 ]) [1 *to_page.19_19+0 S4 A32])
        (reg:SI 102 [ _20 ])) "mm/memory.c":346:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102 [ _20 ])
        (expr_list:REG_DEAD (reg/f:SI 101 [ to_page.19_19 ])
            (nil))))
(jump_insn 162 92 163 11 (set (pc)
        (label_ref 98)) 807 {jump}
     (nil)
 -> 98)
(barrier 163 162 95)
(code_label 95 163 96 12 72 (nil) [1 uses])
(note 96 95 97 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 97 96 98 12 (call (mem:QI (symbol_ref:SI ("oom") [flags 0x3]  <function_decl 0x739b83b37f00 oom>) [0 oom S1 A8])
        (const_int 0 [0])) "mm/memory.c":348:4 812 {*call}
     (nil)
    (nil))
(code_label 98 97 99 13 71 (nil) [2 uses])
(note 99 98 100 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 13 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 to+0 S4 A32])
                (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 to+0 S4 A32])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":350:5 490 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 101 100 102 13 (set (reg:SI 137)
        (mem/c:SI (reg/f:SI 16 argp) [1 address+0 S4 A32])) "mm/memory.c":351:27 75 {*movsi_internal}
     (nil))
(insn 102 101 103 13 (parallel [
            (set (reg:SI 103 [ _21 ])
                (lshiftrt:SI (reg:SI 137)
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":351:27 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (reg/f:SI 16 argp) [1 address+0 S4 A32])
                    (const_int 10 [0xa]))
                (nil)))))
(insn 103 102 107 13 (parallel [
            (set (reg:SI 104 [ _22 ])
                (and:SI (reg:SI 103 [ _21 ])
                    (const_int 4092 [0xffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":351:34 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 103 [ _21 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 107 103 108 13 (set (reg:SI 141)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 to+0 S4 A32])) "mm/memory.c":351:10 75 {*movsi_internal}
     (nil))
(insn 108 107 109 13 (parallel [
            (set (reg:SI 140)
                (plus:SI (reg:SI 104 [ _22 ])
                    (reg:SI 141)))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":351:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_DEAD (reg:SI 104 [ _22 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 104 [ _22 ])
                        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                                (const_int -4 [0xfffffffffffffffc])) [1 to+0 S4 A32]))
                    (nil))))))
(insn 109 108 110 13 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 to_page+0 S4 A32])
        (reg:SI 140)) "mm/memory.c":351:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 140)
        (nil)))
(insn 110 109 111 13 (set (reg/f:SI 105 [ to_page.20_23 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 to_page+0 S4 A32])) "mm/memory.c":352:11 75 {*movsi_internal}
     (nil))
(insn 111 110 112 13 (set (reg:SI 106 [ _24 ])
        (mem:SI (reg/f:SI 105 [ to_page.20_23 ]) [1 *to_page.20_23+0 S4 A32])) "mm/memory.c":352:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105 [ to_page.20_23 ])
        (nil)))
(insn 112 111 113 13 (parallel [
            (set (reg:SI 107 [ _25 ])
                (and:SI (reg:SI 106 [ _24 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":352:8 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 106 [ _24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 113 112 114 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ _25 ])
            (const_int 0 [0]))) "mm/memory.c":352:5 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 107 [ _25 ])
        (nil)))
(jump_insn 114 113 115 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) "mm/memory.c":352:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 122)
(note 115 114 116 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":353:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 117 116 118 14 (set (reg/f:SI 142)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x739b83b9dea0 *.LC9>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":353:3 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x739b83b9dea0 *.LC9>)
        (nil)))
(insn 118 117 119 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [15  S4 A32])
        (reg/f:SI 142)) "mm/memory.c":353:3 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 142)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 119 118 120 14 (set (reg:SI 3 bx)
        (reg:SI 82)) "mm/memory.c":353:3 75 {*movsi_internal}
     (nil))
(call_insn 120 119 121 14 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x739b83ad2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "mm/memory.c":353:3 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 121 120 122 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":353:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 122 121 123 15 73 (nil) [1 uses])
(note 123 122 124 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 15 (set (reg/f:SI 108 [ from_page.21_26 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 from_page+0 S4 A32])) "mm/memory.c":355:31 75 {*movsi_internal}
     (nil))
(insn 125 124 126 15 (set (reg:SI 109 [ _27 ])
        (mem:SI (reg/f:SI 108 [ from_page.21_26 ]) [1 *from_page.21_26+0 S4 A32])) "mm/memory.c":355:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108 [ from_page.21_26 ])
        (nil)))
(insn 126 125 127 15 (set (reg/f:SI 110 [ from_page.22_28 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 from_page+0 S4 A32])) "mm/memory.c":355:31 75 {*movsi_internal}
     (nil))
(insn 127 126 128 15 (parallel [
            (set (reg:SI 111 [ _29 ])
                (and:SI (reg:SI 109 [ _27 ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":355:31 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 109 [ _27 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 128 127 129 15 (set (mem:SI (reg/f:SI 110 [ from_page.22_28 ]) [1 *from_page.22_28+0 S4 A32])
        (reg:SI 111 [ _29 ])) "mm/memory.c":355:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111 [ _29 ])
        (expr_list:REG_DEAD (reg/f:SI 110 [ from_page.22_28 ])
            (nil))))
(insn 129 128 130 15 (set (reg/f:SI 112 [ from_page.23_30 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 from_page+0 S4 A32])) "mm/memory.c":356:32 75 {*movsi_internal}
     (nil))
(insn 130 129 131 15 (set (reg/f:SI 113 [ to_page.24_31 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 to_page+0 S4 A32])) "mm/memory.c":356:3 75 {*movsi_internal}
     (nil))
(insn 131 130 132 15 (set (reg:SI 114 [ _32 ])
        (mem:SI (reg/f:SI 112 [ from_page.23_30 ]) [1 *from_page.23_30+0 S4 A32])) "mm/memory.c":356:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112 [ from_page.23_30 ])
        (nil)))
(insn 132 131 133 15 (set (mem:SI (reg/f:SI 113 [ to_page.24_31 ]) [1 *to_page.24_31+0 S4 A32])
        (reg:SI 114 [ _32 ])) "mm/memory.c":356:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 114 [ _32 ])
        (expr_list:REG_DEAD (reg/f:SI 113 [ to_page.24_31 ])
            (nil))))
(insn 133 132 134 15 (set (reg:SI 143)
        (const_int 0 [0])) "mm/memory.c":357:2 75 {*movsi_internal}
     (nil))
(insn 134 133 135 15 (parallel [
            (asm_operands/v ("movl %%eax, %%cr3") ("") 0 [
                    (reg:SI 143)
                ]
                 [
                    (asm_input:SI ("a") mm/memory.c:357)
                ]
                 [] mm/memory.c:357)
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":357:2 -1
     (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 135 134 136 15 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -20 [0xffffffffffffffec])) [1 phys_addr+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [1 phys_addr+0 S4 A32])
                    (const_int -1048576 [0xfffffffffff00000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":358:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 136 135 137 15 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -20 [0xffffffffffffffec])) [1 phys_addr+0 S4 A32])
                (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [1 phys_addr+0 S4 A32])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":359:12 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 137 136 138 15 (set (reg:SI 144)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("mem_map") [flags 0x2]  <var_decl 0x739b83b2f5a0 mem_map>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":360:9 205 {*leasi}
     (nil))
(insn 138 137 139 15 (set (reg:SI 145)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [1 phys_addr+0 S4 A32])) "mm/memory.c":360:9 75 {*movsi_internal}
     (nil))
(insn 139 138 140 15 (parallel [
            (set (reg/f:SI 146)
                (plus:SI (reg:SI 144)
                    (reg:SI 145)))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":360:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_DEAD (reg:SI 144)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 140 139 141 15 (set (reg:QI 115 [ _33 ])
        (mem:QI (reg/f:SI 146) [0 mem_map[phys_addr_64]+0 S1 A8])) "mm/memory.c":360:9 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 146)
        (nil)))
(insn 141 140 142 15 (parallel [
            (set (reg:QI 116 [ _35 ])
                (plus:QI (reg:QI 115 [ _33 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":360:20 213 {*addqi_1}
     (expr_list:REG_DEAD (reg:QI 115 [ _33 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 142 141 143 15 (set (reg:SI 147)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("mem_map") [flags 0x2]  <var_decl 0x739b83b2f5a0 mem_map>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":360:20 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 143 142 144 15 (set (reg:SI 148)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [1 phys_addr+0 S4 A32])) "mm/memory.c":360:20 75 {*movsi_internal}
     (nil))
(insn 144 143 145 15 (parallel [
            (set (reg/f:SI 149)
                (plus:SI (reg:SI 147)
                    (reg:SI 148)))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":360:20 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_DEAD (reg:SI 147)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 145 144 146 15 (set (mem:QI (reg/f:SI 149) [0 mem_map[phys_addr_64]+0 S1 A8])
        (reg:QI 116 [ _35 ])) "mm/memory.c":360:20 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 149)
        (expr_list:REG_DEAD (reg:QI 116 [ _35 ])
            (nil))))
(insn 146 145 147 15 (set (reg:SI 117 [ _37 ])
        (const_int 1 [0x1])) "mm/memory.c":361:9 75 {*movsi_internal}
     (nil))
(code_label 147 146 148 16 67 (nil) [3 uses])
(note 148 147 149 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 153 16 (set (reg:SI 118 [ <retval> ])
        (reg:SI 117 [ _37 ])) "mm/memory.c":362:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 117 [ _37 ])
        (nil)))
(insn 153 149 154 16 (set (reg/i:SI 0 ax)
        (reg:SI 118 [ <retval> ])) "mm/memory.c":362:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 118 [ <retval> ])
        (nil)))
(insn 154 153 0 16 (use (reg/i:SI 0 ax)) "mm/memory.c":362:1 -1
     (nil))

;; Function share_page (share_page, funcdef_no=11, decl_uid=1414, cgraph_uid=12, symbol_order=13)

scanning new insn with uid = 125.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 19 n_edges 25 count 19 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 16 17 18 12 13 14 15
;;
;; Loop 1
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12 10 16 18 17 8 7 9
;; 2 succs { 3 4 }
;; 3 succs { 15 }
;; 4 succs { 5 6 }
;; 5 succs { 15 }
;; 6 succs { 13 }
;; 7 succs { 16 8 }
;; 8 succs { 17 9 }
;; 9 succs { 18 10 }
;; 10 succs { 11 12 }
;; 11 succs { 15 }
;; 16 succs { 12 }
;; 17 succs { 12 }
;; 18 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 7 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:9000
  a2(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a3(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:42000
  a5(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a6(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a10(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a15(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a16(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a23(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 102(l0): point = 0
   Insn 101(l0): point = 2
   Insn 97(l0): point = 4
   Insn 94(l0): point = 7
   Insn 110(l0): point = 10
   Insn 80(l0): point = 12
   Insn 39(l0): point = 15
   Insn 38(l0): point = 17
   Insn 37(l0): point = 19
   Insn 36(l0): point = 21
   Insn 92(l0): point = 24
   Insn 91(l0): point = 26
   Insn 90(l0): point = 28
   Insn 89(l0): point = 30
   Insn 85(l0): point = 33
   Insn 78(l0): point = 36
   Insn 77(l0): point = 38
   Insn 76(l0): point = 40
   Insn 75(l0): point = 42
   Insn 74(l0): point = 44
   Insn 73(l0): point = 46
   Insn 72(l0): point = 48
   Insn 71(l0): point = 50
   Insn 70(l0): point = 52
   Insn 69(l0): point = 54
   Insn 115(l0): point = 57
   Insn 114(l0): point = 59
   Insn 124(l0): point = 62
   Insn 63(l0): point = 65
   Insn 62(l0): point = 67
   Insn 61(l0): point = 69
   Insn 60(l0): point = 71
   Insn 59(l0): point = 73
   Insn 58(l0): point = 75
   Insn 57(l0): point = 77
   Insn 56(l0): point = 79
   Insn 120(l0): point = 82
   Insn 119(l0): point = 84
   Insn 50(l0): point = 87
   Insn 49(l0): point = 89
   Insn 48(l0): point = 91
   Insn 47(l0): point = 93
   Insn 46(l0): point = 95
   Insn 45(l0): point = 97
   Insn 108(l0): point = 100
   Insn 32(l0): point = 102
   Insn 31(l0): point = 104
   Insn 30(l0): point = 106
   Insn 106(l0): point = 109
   Insn 25(l0): point = 111
   Insn 23(l0): point = 114
   Insn 22(l0): point = 116
   Insn 19(l0): point = 118
   Insn 18(l0): point = 120
   Insn 17(l0): point = 122
   Insn 16(l0): point = 124
   Insn 104(l0): point = 127
   Insn 11(l0): point = 129
   Insn 9(l0): point = 132
   Insn 8(l0): point = 134
   Insn 7(l0): point = 136
   Insn 6(l0): point = 138
   Insn 5(l0): point = 140
   Insn 125(l0): point = 142
 a0(r98): [3..4]
 a1(r97): [127..129] [109..111] [10..12] [5..7]
 a2(r109): [27..28]
 a3(r110): [29..30]
 a4(r82): [132..142] [114..126] [15..108]
 a5(r96): [39..40]
 a6(r95): [49..52]
 a7(r108): [53..54]
 a8(r94): [68..69]
 a9(r92): [68..75]
 a10(r93): [70..71]
 a11(r107): [72..73]
 a12(r91): [76..77]
 a13(r106): [78..79]
 a14(r90): [90..91]
 a15(r89): [90..95]
 a16(r105): [92..93]
 a17(r104): [96..97]
 a18(r88): [18..19]
 a19(r103): [20..21]
 a20(r101): [103..104]
 a21(r102): [105..106]
 a22(r87): [117..118]
 a23(r86): [119..120]
 a24(r85): [121..122]
 a25(r100): [123..124]
 a26(r84): [135..136]
 a27(r83): [137..138]
 a28(r99): [139..140]
Compressing live ranges: from 145 to 58 - 40%
Ranges after the compression:
 a0(r98): [0..1]
 a1(r97): [50..51] [40..41] [2..5]
 a2(r109): [10..11]
 a3(r110): [12..13]
 a4(r82): [52..57] [42..49] [6..39]
 a5(r96): [14..15]
 a6(r95): [16..17]
 a7(r108): [18..19]
 a8(r94): [20..21]
 a9(r92): [20..25]
 a10(r93): [22..23]
 a11(r107): [24..25]
 a12(r91): [26..27]
 a13(r106): [28..29]
 a14(r90): [30..31]
 a15(r89): [30..33]
 a16(r105): [32..33]
 a17(r104): [34..35]
 a18(r88): [6..7]
 a19(r103): [8..9]
 a20(r101): [36..37]
 a21(r102): [38..39]
 a22(r87): [42..43]
 a23(r86): [44..45]
 a24(r85): [46..47]
 a25(r100): [48..49]
 a26(r84): [52..53]
 a27(r83): [54..55]
 a28(r99): [56..57]
  pref0:a0(r98)<-hr0@1500
  pref1:a5(r96)<-hr0@1500
  regions=1, blocks=19, points=58
    allocnos=29 (big 0), copies=0, conflicts=0, ranges=33
Disposition:
    4:r82  l0     3   27:r83  l0     0   26:r84  l0     0   24:r85  l0     0
   23:r86  l0     0   22:r87  l0     0   18:r88  l0     0   15:r89  l0     1
   14:r90  l0     0   12:r91  l0     0    9:r92  l0     1   10:r93  l0     0
    8:r94  l0     0    6:r95  l0     0    5:r96  l0     0    1:r97  l0     0
    0:r98  l0     0   28:r99  l0     0   25:r100 l0     0   20:r101 l0     0
   21:r102 l0     0   19:r103 l0     0   17:r104 l0     0   16:r105 l0     0
   13:r106 l0     0   11:r107 l0     0    7:r108 l0     0    2:r109 l0     0
    3:r110 l0     0
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


share_page

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r6={1d,18u} r7={5d,25u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,18u} r17={12d,7u} r18={1d} r19={1d,26u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,6u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={4d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} 
;;    total ref usage 255{124d,131u,0e} in 64{63 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 125 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 125 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 125 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 99)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x739b83b2f120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "mm/memory.c":376:14 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 83 [ current.25_1 ])
        (mem/f/c:SI (reg/f:SI 99) [14 current+0 S4 A32])) "mm/memory.c":376:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99)
        (nil)))
(insn 7 6 8 2 (set (reg/f:SI 84 [ _2 ])
        (mem/f:SI (plus:SI (reg/f:SI 83 [ current.25_1 ])
                (const_int 632 [0x278])) [8 current.25_1->executable+0 S4 A32])) "mm/memory.c":376:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ current.25_1 ])
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 84 [ _2 ])
            (const_int 0 [0]))) "mm/memory.c":376:5 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "mm/memory.c":376:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 14)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 104 3 (set (reg:SI 97 [ _16 ])
        (const_int 0 [0])) "mm/memory.c":377:10 75 {*movsi_internal}
     (nil))
(jump_insn 104 11 105 3 (set (pc)
        (label_ref 95)) "mm/memory.c":377:10 807 {jump}
     (nil)
 -> 95)
(barrier 105 104 14)
(code_label 14 105 15 4 75 (nil) [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg/f:SI 100)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x739b83b2f120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "mm/memory.c":378:13 75 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (set (reg/f:SI 85 [ current.26_3 ])
        (mem/f/c:SI (reg/f:SI 100) [14 current+0 S4 A32])) "mm/memory.c":378:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100)
        (nil)))
(insn 18 17 19 4 (set (reg/f:SI 86 [ _4 ])
        (mem/f:SI (plus:SI (reg/f:SI 85 [ current.26_3 ])
                (const_int 632 [0x278])) [8 current.26_3->executable+0 S4 A32])) "mm/memory.c":378:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ current.26_3 ])
        (nil)))
(insn 19 18 22 4 (set (reg:HI 87 [ _5 ])
        (mem:HI (plus:SI (reg/f:SI 86 [ _4 ])
                (const_int 48 [0x30])) [7 _4->i_count+0 S2 A32])) "mm/memory.c":378:25 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ _4 ])
        (nil)))
(insn 22 19 23 4 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 87 [ _5 ])
            (const_int 1 [0x1]))) "mm/memory.c":378:5 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 87 [ _5 ])
        (nil)))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "mm/memory.c":378:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 28)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 106 5 (set (reg:SI 97 [ _16 ])
        (const_int 0 [0])) "mm/memory.c":379:10 75 {*movsi_internal}
     (nil))
(jump_insn 106 25 107 5 (set (pc)
        (label_ref 95)) "mm/memory.c":379:10 807 {jump}
     (nil)
 -> 95)
(barrier 107 106 28)
(code_label 28 107 29 6 77 (nil) [1 uses])
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg:SI 102)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x739b83b2f1b0 task>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "mm/memory.c":380:9 75 {*movsi_internal}
     (nil))
(insn 31 30 32 6 (set (reg/f:SI 101)
        (plus:SI (reg:SI 102)
            (const_int 252 [0xfc]))) "mm/memory.c":380:9 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 102)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x739b83b2f1b0 task>)
                    (const_int 252 [0xfc])))
            (nil))))
(insn 32 31 108 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [18 p+0 S4 A32])
        (reg/f:SI 101)) "mm/memory.c":380:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(jump_insn 108 32 109 6 (set (pc)
        (label_ref 86)) "mm/memory.c":380:2 807 {jump}
     (nil)
 -> 86)
(barrier 109 108 88)
(code_label 88 109 35 7 83 (nil) [1 uses])
(note 35 88 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (set (reg/f:SI 103)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [18 p+0 S4 A32])) "mm/memory.c":381:8 75 {*movsi_internal}
     (nil))
(insn 37 36 38 7 (set (reg/f:SI 88 [ _6 ])
        (mem/f:SI (reg/f:SI 103) [14 *p_15+0 S4 A32])) "mm/memory.c":381:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (nil)))
(insn 38 37 39 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 88 [ _6 ])
            (const_int 0 [0]))) "mm/memory.c":381:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 88 [ _6 ])
        (nil)))
(jump_insn 39 38 44 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 113)
            (pc))) "mm/memory.c":381:6 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 113)
(note 44 39 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 8 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [18 p+0 S4 A32])) "mm/memory.c":383:18 75 {*movsi_internal}
     (nil))
(insn 46 45 47 8 (set (reg/f:SI 89 [ _7 ])
        (mem/f:SI (reg/f:SI 104) [14 *p_15+0 S4 A32])) "mm/memory.c":383:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (nil)))
(insn 47 46 48 8 (set (reg/f:SI 105)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x739b83b2f120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "mm/memory.c":383:15 75 {*movsi_internal}
     (nil))
(insn 48 47 49 8 (set (reg/f:SI 90 [ current.27_8 ])
        (mem/f/c:SI (reg/f:SI 105) [14 current+0 S4 A32])) "mm/memory.c":383:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (nil)))
(insn 49 48 50 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 89 [ _7 ])
            (reg/f:SI 90 [ current.27_8 ]))) "mm/memory.c":383:6 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 90 [ current.27_8 ])
        (expr_list:REG_DEAD (reg/f:SI 89 [ _7 ])
            (nil))))
(jump_insn 50 49 55 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 118)
            (pc))) "mm/memory.c":383:6 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 118)
(note 55 50 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [18 p+0 S4 A32])) "mm/memory.c":385:8 75 {*movsi_internal}
     (nil))
(insn 57 56 58 9 (set (reg/f:SI 91 [ _9 ])
        (mem/f:SI (reg/f:SI 106) [14 *p_15+0 S4 A32])) "mm/memory.c":385:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 58 57 59 9 (set (reg/f:SI 92 [ _10 ])
        (mem/f:SI (plus:SI (reg/f:SI 91 [ _9 ])
                (const_int 632 [0x278])) [8 _9->executable+0 S4 A32])) "mm/memory.c":385:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ _9 ])
        (nil)))
(insn 59 58 60 9 (set (reg/f:SI 107)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x739b83b2f120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "mm/memory.c":385:34 75 {*movsi_internal}
     (nil))
(insn 60 59 61 9 (set (reg/f:SI 93 [ current.28_11 ])
        (mem/f/c:SI (reg/f:SI 107) [14 current+0 S4 A32])) "mm/memory.c":385:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 61 60 62 9 (set (reg/f:SI 94 [ _12 ])
        (mem/f:SI (plus:SI (reg/f:SI 93 [ current.28_11 ])
                (const_int 632 [0x278])) [8 current.28_11->executable+0 S4 A32])) "mm/memory.c":385:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93 [ current.28_11 ])
        (nil)))
(insn 62 61 63 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 92 [ _10 ])
            (reg/f:SI 94 [ _12 ]))) "mm/memory.c":385:6 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 94 [ _12 ])
        (expr_list:REG_DEAD (reg/f:SI 92 [ _10 ])
            (nil))))
(jump_insn 63 62 68 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 123)
            (pc))) "mm/memory.c":385:6 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 123)
(note 68 63 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 10 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [18 p+0 S4 A32])) "mm/memory.c":387:7 75 {*movsi_internal}
     (nil))
(insn 70 69 71 10 (set (reg/f:SI 95 [ _13 ])
        (mem/f:SI (reg/f:SI 108) [14 *p_15+0 S4 A32])) "mm/memory.c":387:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (nil)))
(insn 71 70 72 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":387:7 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 72 71 73 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [14  S4 A32])
        (reg/f:SI 95 [ _13 ])) "mm/memory.c":387:7 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 95 [ _13 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 73 72 74 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [1 address+0 S4 A32])) "mm/memory.c":387:7 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 74 73 75 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("try_to_share") [flags 0x3]  <function_decl 0x739b83b3b600 try_to_share>) [0 try_to_share S1 A8])
            (const_int 16 [0x10]))) "mm/memory.c":387:7 823 {*call_value}
     (nil)
    (nil))
(insn 75 74 76 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":387:7 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 76 75 77 10 (set (reg:SI 96 [ _14 ])
        (reg:SI 0 ax)) "mm/memory.c":387:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 77 76 78 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ _14 ])
            (const_int 0 [0]))) "mm/memory.c":387:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
        (nil)))
(jump_insn 78 77 79 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "mm/memory.c":387:6 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 83)
(note 79 78 80 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 110 11 (set (reg:SI 97 [ _16 ])
        (const_int 1 [0x1])) "mm/memory.c":388:11 75 {*movsi_internal}
     (nil))
(jump_insn 110 80 111 11 (set (pc)
        (label_ref 95)) "mm/memory.c":388:11 807 {jump}
     (nil)
 -> 95)
(barrier 111 110 113)
(code_label 113 111 112 16 84 (nil) [1 uses])
(note 112 113 114 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 114 112 115 16 (const_int 0 [0]) "mm/memory.c":382:4 843 {nop}
     (nil))
(jump_insn 115 114 116 16 (set (pc)
        (label_ref 83)) 807 {jump}
     (nil)
 -> 83)
(barrier 116 115 118)
(code_label 118 116 117 17 85 (nil) [1 uses])
(note 117 118 119 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 119 117 120 17 (const_int 0 [0]) "mm/memory.c":384:4 843 {nop}
     (nil))
(jump_insn 120 119 121 17 (set (pc)
        (label_ref 83)) 807 {jump}
     (nil)
 -> 83)
(barrier 121 120 123)
(code_label 123 121 122 18 86 (nil) [1 uses])
(note 122 123 124 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 124 122 83 18 (const_int 0 [0]) "mm/memory.c":386:4 843 {nop}
     (nil))
(code_label 83 124 84 12 80 (nil) [3 uses])
(note 84 83 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 12 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [18 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [18 p+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":380:40 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 86 85 87 13 78 (nil) [1 uses])
(note 87 86 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 89 87 90 13 (set (reg:SI 110)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x739b83b2f1b0 task>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "mm/memory.c":380:25 75 {*movsi_internal}
     (nil))
(insn 90 89 91 13 (set (reg:SI 109)
        (reg:SI 110)) "mm/memory.c":380:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 110)
        (expr_list:REG_EQUAL (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x739b83b2f1b0 task>)
            (nil))))
(insn 91 90 92 13 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [18 p+0 S4 A32])
            (reg:SI 109))) "mm/memory.c":380:25 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 109)
        (nil)))
(jump_insn 92 91 93 13 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) "mm/memory.c":380:25 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 88)
(note 93 92 94 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 14 (set (reg:SI 97 [ _16 ])
        (const_int 0 [0])) "mm/memory.c":390:9 75 {*movsi_internal}
     (nil))
(code_label 95 94 96 15 76 (nil) [3 uses])
(note 96 95 97 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 101 15 (set (reg:SI 98 [ <retval> ])
        (reg:SI 97 [ _16 ])) "mm/memory.c":391:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97 [ _16 ])
        (nil)))
(insn 101 97 102 15 (set (reg/i:SI 0 ax)
        (reg:SI 98 [ <retval> ])) "mm/memory.c":391:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98 [ <retval> ])
        (nil)))
(insn 102 101 0 15 (use (reg/i:SI 0 ax)) "mm/memory.c":391:1 -1
     (nil))

;; Function do_no_page (do_no_page, funcdef_no=12, decl_uid=1423, cgraph_uid=13, symbol_order=14)

scanning new insn with uid = 172.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 19 n_edges 25 count 20 (  1.1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 17 18 16
;;
;; Loop 2
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 16 }
;; 5 succs { 17 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 9 11 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 12 14 }
;; 14 succs { 18 15 }
;; 15 succs { 16 }
;; 17 succs { 16 }
;; 18 succs { 16 }
;; 16 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r113,l0) best AREG, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r105,l0) best AREG, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r105,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a1(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a2(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a8(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a9(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a10(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:54000
  a13(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a16(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a21(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a25(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a26(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a27(r113,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a28(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a29(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a30(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a36(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a37(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a38(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 171(l0): point = 1
   Insn 167(l0): point = 4
   Insn 166(l0): point = 6
   Insn 162(l0): point = 9
   Insn 147(l0): point = 11
   Insn 146(l0): point = 13
   Insn 145(l0): point = 15
   Insn 144(l0): point = 17
   Insn 143(l0): point = 19
   Insn 137(l0): point = 22
   Insn 136(l0): point = 24
   Insn 135(l0): point = 26
   Insn 134(l0): point = 28
   Insn 133(l0): point = 30
   Insn 132(l0): point = 32
   Insn 131(l0): point = 34
   Insn 130(l0): point = 36
   Insn 118(l0): point = 39
   Insn 117(l0): point = 41
   Insn 116(l0): point = 43
   Insn 128(l0): point = 46
   Insn 127(l0): point = 48
   Insn 123(l0): point = 50
   Insn 122(l0): point = 52
   Insn 121(l0): point = 54
   Insn 160(l0): point = 57
   Insn 112(l0): point = 59
   Insn 111(l0): point = 61
   Insn 110(l0): point = 63
   Insn 106(l0): point = 65
   Insn 105(l0): point = 67
   Insn 104(l0): point = 69
   Insn 103(l0): point = 72
   Insn 102(l0): point = 74
   Insn 101(l0): point = 76
   Insn 100(l0): point = 78
   Insn 99(l0): point = 80
   Insn 98(l0): point = 82
   Insn 97(l0): point = 84
   Insn 96(l0): point = 86
   Insn 95(l0): point = 88
   Insn 94(l0): point = 90
   Insn 93(l0): point = 92
   Insn 92(l0): point = 94
   Insn 91(l0): point = 96
   Insn 90(l0): point = 98
   Insn 89(l0): point = 100
   Insn 88(l0): point = 102
   Insn 87(l0): point = 104
   Insn 78(l0): point = 107
   Insn 77(l0): point = 109
   Insn 76(l0): point = 111
   Insn 75(l0): point = 113
   Insn 74(l0): point = 115
   Insn 73(l0): point = 117
   Insn 72(l0): point = 119
   Insn 71(l0): point = 121
   Insn 70(l0): point = 123
   Insn 69(l0): point = 125
   Insn 68(l0): point = 127
   Insn 67(l0): point = 129
   Insn 66(l0): point = 131
   Insn 65(l0): point = 133
   Insn 85(l0): point = 136
   Insn 84(l0): point = 138
   Insn 158(l0): point = 141
   Insn 61(l0): point = 143
   Insn 60(l0): point = 145
   Insn 59(l0): point = 147
   Insn 58(l0): point = 149
   Insn 57(l0): point = 151
   Insn 54(l0): point = 154
   Insn 52(l0): point = 157
   Insn 51(l0): point = 159
   Insn 50(l0): point = 161
   Insn 49(l0): point = 163
   Insn 48(l0): point = 165
   Insn 42(l0): point = 168
   Insn 41(l0): point = 170
   Insn 40(l0): point = 172
   Insn 39(l0): point = 174
   Insn 38(l0): point = 176
   Insn 37(l0): point = 178
   Insn 36(l0): point = 180
   Insn 156(l0): point = 183
   Insn 31(l0): point = 185
   Insn 30(l0): point = 187
   Insn 29(l0): point = 189
   Insn 28(l0): point = 191
   Insn 25(l0): point = 194
   Insn 24(l0): point = 196
   Insn 23(l0): point = 198
   Insn 22(l0): point = 200
   Insn 21(l0): point = 202
   Insn 19(l0): point = 205
   Insn 18(l0): point = 207
   Insn 17(l0): point = 209
   Insn 16(l0): point = 211
   Insn 15(l0): point = 213
   Insn 14(l0): point = 215
   Insn 13(l0): point = 217
   Insn 12(l0): point = 220
   Insn 8(l0): point = 222
   Insn 7(l0): point = 224
   Insn 6(l0): point = 226
   Insn 5(l0): point = 228
   Insn 172(l0): point = 230
 a0(r105): [25..26]
 a1(r104): [49..54]
 a2(r125): [51..52]
 a3(r103): [40..41]
 a4(r123): [60..61]
 a5(r124): [62..63]
 a6(r102): [66..67]
 a7(r101): [68..70]
 a8(r100): [70..74]
 a9(r120): [71..72]
 a10(r99): [75..76]
 a11(r119): [77..78]
 a12(r82): [194..230] [79..182]
 a13(r98): [89..96]
 a14(r118): [91..92]
 a15(r97): [97..98]
 a16(r96): [99..100]
 a17(r95): [101..102]
 a18(r117): [103..104]
 a19(r116): [112..113]
 a20(r94): [112..115]
 a21(r93): [124..129]
 a22(r92): [130..131]
 a23(r115): [132..133]
 a24(r91): [146..147]
 a25(r90): [148..149]
 a26(r114): [150..151]
 a27(r113): [162..163]
 a28(r89): [171..172]
 a29(r88): [197..198]
 a30(r87): [199..200]
 a31(r112): [201..202]
 a32(r86): [208..209]
 a33(r85): [210..211]
 a34(r111): [212..213]
 a35(r109): [216..218]
 a36(r84): [218..222]
 a37(r110): [219..220]
 a38(r83): [223..224]
 a39(r106): [225..226]
Compressing live ranges: from 233 to 68 - 29%
Ranges after the compression:
 a0(r105): [0..1]
 a1(r104): [4..5]
 a2(r125): [4..5]
 a3(r103): [2..3]
 a4(r123): [6..7]
 a5(r124): [8..9]
 a6(r102): [10..11]
 a7(r101): [12..13]
 a8(r100): [13..15]
 a9(r120): [14..15]
 a10(r99): [16..17]
 a11(r119): [18..19]
 a12(r82): [20..67]
 a13(r98): [20..21]
 a14(r118): [20..21]
 a15(r97): [22..23]
 a16(r96): [24..25]
 a17(r95): [26..27]
 a18(r117): [28..29]
 a19(r116): [30..31]
 a20(r94): [30..31]
 a21(r93): [32..33]
 a22(r92): [34..35]
 a23(r115): [36..37]
 a24(r91): [38..39]
 a25(r90): [40..41]
 a26(r114): [42..43]
 a27(r113): [44..45]
 a28(r89): [46..47]
 a29(r88): [48..49]
 a30(r87): [50..51]
 a31(r112): [52..53]
 a32(r86): [54..55]
 a33(r85): [56..57]
 a34(r111): [58..59]
 a35(r109): [60..61]
 a36(r84): [61..63]
 a37(r110): [62..63]
 a38(r83): [64..65]
 a39(r106): [66..67]
  pref0:a27(r113)<-hr0@1500
  pref1:a0(r105)<-hr0@1500
  pref2:a20(r94)<-hr0@1500
  pref3:a28(r89)<-hr0@1500
  regions=1, blocks=19, points=68
    allocnos=40 (big 0), copies=0, conflicts=0, ranges=40
Disposition:
   12:r82  l0     3   38:r83  l0     0   36:r84  l0     1   33:r85  l0     0
   32:r86  l0     0   30:r87  l0     0   29:r88  l0     0   28:r89  l0     0
   25:r90  l0     0   24:r91  l0     0   22:r92  l0     0   21:r93  l0     0
   20:r94  l0     0   17:r95  l0     0   16:r96  l0     0   15:r97  l0     0
   13:r98  l0     0   10:r99  l0     0    8:r100 l0     1    7:r101 l0     0
    6:r102 l0     0    3:r103 l0     0    1:r104 l0     0    0:r105 l0     0
   39:r106 l0     0   35:r109 l0     0   37:r110 l0     0   34:r111 l0     0
   31:r112 l0     0   27:r113 l0     0   26:r114 l0     0   23:r115 l0     0
   19:r116 l0     1   18:r117 l0     0   14:r118 l0     1   11:r119 l0     0
    9:r120 l0     0    4:r123 l0     0    5:r124 l0     0    2:r125 l0     1
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_no_page

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={10d,4u} r1={10d} r2={10d} r3={2d,2u} r6={1d,18u} r7={23d,61u} r8={9d} r9={9d} r10={9d} r11={9d} r12={9d} r13={9d} r14={9d} r15={9d} r16={1d,22u,1e} r17={41d,7u} r18={9d} r19={1d,47u,2e} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r82={1d,8u} r83={1d,1u} r84={1d,1u,1e} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u,1e} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,2u} r105={1d,1u} r106={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u,1e} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} 
;;    total ref usage 939{724d,209u,6e} in 107{98 regular + 9 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 172 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 172 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 172 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 4 [0x4])) [1 address+0 S4 A32])
                (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [1 address+0 S4 A32])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":400:10 490 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 6 5 7 2 (set (reg/f:SI 106)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x739b83b2f120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "mm/memory.c":401:25 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 83 [ current.29_1 ])
        (mem/f/c:SI (reg/f:SI 106) [14 current+0 S4 A32])) "mm/memory.c":401:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 8 7 12 2 (set (reg:SI 84 [ _2 ])
        (mem:SI (plus:SI (reg/f:SI 83 [ current.29_1 ])
                (const_int 536 [0x218])) [1 current.29_1->start_code+0 S4 A32])) "mm/memory.c":401:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ current.29_1 ])
        (nil)))
(insn 12 8 13 2 (set (reg:SI 110)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 address+0 S4 A32])) "mm/memory.c":401:6 75 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 109)
                (minus:SI (reg:SI 110)
                    (reg:SI 84 [ _2 ])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":401:6 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 110)
        (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 4 [0x4])) [1 address+0 S4 A32])
                        (reg:SI 84 [ _2 ]))
                    (nil))))))
(insn 14 13 15 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])
        (reg:SI 109)) "mm/memory.c":401:6 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 109)
        (nil)))
(insn 15 14 16 2 (set (reg/f:SI 111)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x739b83b2f120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "mm/memory.c":402:14 75 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 85 [ current.30_3 ])
        (mem/f/c:SI (reg/f:SI 111) [14 current+0 S4 A32])) "mm/memory.c":402:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
(insn 17 16 18 2 (set (reg/f:SI 86 [ _4 ])
        (mem/f:SI (plus:SI (reg/f:SI 85 [ current.30_3 ])
                (const_int 632 [0x278])) [8 current.30_3->executable+0 S4 A32])) "mm/memory.c":402:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ current.30_3 ])
        (nil)))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 86 [ _4 ])
            (const_int 0 [0]))) "mm/memory.c":402:5 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 86 [ _4 ])
        (nil)))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "mm/memory.c":402:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 26)
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (set (reg/f:SI 112)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x739b83b2f120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "mm/memory.c":402:44 75 {*movsi_internal}
     (nil))
(insn 22 21 23 3 (set (reg/f:SI 87 [ current.31_5 ])
        (mem/f/c:SI (reg/f:SI 112) [14 current+0 S4 A32])) "mm/memory.c":402:44 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 23 22 24 3 (set (reg:SI 88 [ _6 ])
        (mem:SI (plus:SI (reg/f:SI 87 [ current.31_5 ])
                (const_int 544 [0x220])) [1 current.31_5->end_data+0 S4 A32])) "mm/memory.c":402:44 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87 [ current.31_5 ])
        (nil)))
(insn 24 23 25 3 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])
            (reg:SI 88 [ _6 ]))) "mm/memory.c":402:27 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (nil)))
(jump_insn 25 24 26 3 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "mm/memory.c":402:27 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 34)
(code_label 26 25 27 4 88 (nil) [1 uses])
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":403:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 29 28 30 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 address+0 S4 A32])) "mm/memory.c":403:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 30 29 31 4 (call (mem:QI (symbol_ref:SI ("get_empty_page") [flags 0x3]  <function_decl 0x739b83b3be00 get_empty_page>) [0 get_empty_page S1 A8])
        (const_int 16 [0x10])) "mm/memory.c":403:3 812 {*call}
     (nil)
    (nil))
(insn 31 30 156 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":403:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 156 31 157 4 (set (pc)
        (label_ref 154)) "mm/memory.c":404:3 807 {jump}
     (nil)
 -> 154)
(barrier 157 156 34)
(code_label 34 157 35 5 89 (nil) [1 uses])
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":406:6 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 37 36 38 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])) "mm/memory.c":406:6 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 38 37 39 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("share_page") [flags 0x3]  <function_decl 0x739b83b4c000 share_page>) [0 share_page S1 A8])
            (const_int 16 [0x10]))) "mm/memory.c":406:6 823 {*call_value}
     (nil)
    (nil))
(insn 39 38 40 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":406:6 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 40 39 41 5 (set (reg:SI 89 [ _7 ])
        (reg:SI 0 ax)) "mm/memory.c":406:6 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 41 40 42 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _7 ])
            (const_int 0 [0]))) "mm/memory.c":406:5 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (nil)))
(jump_insn 42 41 47 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 165)
            (pc))) "mm/memory.c":406:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 165)
(note 47 42 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 48 47 49 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_free_page") [flags 0x3]  <function_decl 0x739b83b3b100 get_free_page>) [0 get_free_page S1 A8])
            (const_int 0 [0]))) "mm/memory.c":408:15 823 {*call_value}
     (nil)
    (nil))
(insn 49 48 50 6 (set (reg:SI 113)
        (reg:SI 0 ax)) "mm/memory.c":408:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 50 49 51 6 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 page+0 S4 A32])
        (reg:SI 113)) "mm/memory.c":408:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113)
        (nil)))
(insn 51 50 52 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 page+0 S4 A32])
            (const_int 0 [0]))) "mm/memory.c":408:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 52 51 53 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) "mm/memory.c":408:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 55)
(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn 54 53 55 7 (call (mem:QI (symbol_ref:SI ("oom") [flags 0x3]  <function_decl 0x739b83b37f00 oom>) [0 oom S1 A8])
        (const_int 0 [0])) "mm/memory.c":409:3 812 {*call}
     (nil)
    (nil))
(code_label 55 54 56 8 92 (nil) [1 uses])
(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 8 (set (reg:SI 114)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])) "mm/memory.c":411:18 75 {*movsi_internal}
     (nil))
(insn 58 57 59 8 (parallel [
            (set (reg:SI 90 [ _8 ])
                (lshiftrt:SI (reg:SI 114)
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":411:18 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 114)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (udiv:SI (reg:SI 114)
                    (const_int 1024 [0x400]))
                (nil)))))
(insn 59 58 60 8 (parallel [
            (set (reg:SI 91 [ _9 ])
                (plus:SI (reg:SI 90 [ _8 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":411:12 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 60 59 61 8 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 block+0 S4 A32])
        (reg:SI 91 [ _9 ])) "mm/memory.c":411:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (nil)))
(insn 61 60 158 8 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (const_int 0 [0])) "mm/memory.c":412:9 75 {*movsi_internal}
     (nil))
(jump_insn 158 61 159 8 (set (pc)
        (label_ref 79)) "mm/memory.c":412:2 807 {jump}
     (nil)
 -> 79)
(barrier 159 158 81)
(code_label 81 159 64 9 94 (nil) [1 uses])
(note 64 81 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 9 (set (reg/f:SI 115)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x739b83b2f120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "mm/memory.c":413:23 75 {*movsi_internal}
     (nil))
(insn 66 65 67 9 (set (reg/f:SI 92 [ current.32_10 ])
        (mem/f/c:SI (reg/f:SI 115) [14 current+0 S4 A32])) "mm/memory.c":413:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 67 66 68 9 (set (reg/f:SI 93 [ _11 ])
        (mem/f:SI (plus:SI (reg/f:SI 92 [ current.32_10 ])
                (const_int 632 [0x278])) [8 current.32_10->executable+0 S4 A32])) "mm/memory.c":413:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92 [ current.32_10 ])
        (nil)))
(insn 68 67 69 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":413:11 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 69 68 70 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 block+0 S4 A32])) "mm/memory.c":413:11 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 70 69 71 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 93 [ _11 ])) "mm/memory.c":413:11 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 93 [ _11 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 71 70 72 9 (set (reg:SI 3 bx)
        (reg:SI 82)) "mm/memory.c":413:11 75 {*movsi_internal}
     (nil))
(call_insn 72 71 73 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bmap") [flags 0x41]  <function_decl 0x739b83b14100 bmap>) [0 bmap S1 A8])
            (const_int 16 [0x10]))) "mm/memory.c":413:11 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 73 72 74 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":413:11 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 74 73 75 9 (set (reg:SI 94 [ _12 ])
        (reg:SI 0 ax)) "mm/memory.c":413:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 75 74 76 9 (set (reg:SI 116)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "mm/memory.c":413:9 75 {*movsi_internal}
     (nil))
(insn 76 75 77 9 (set (mem:SI (plus:SI (plus:SI (mult:SI (reg:SI 116)
                        (const_int 4 [0x4]))
                    (reg/f:SI 19 frame))
                (const_int -32 [0xffffffffffffffe0])) [2 nr[i_26]+0 S4 A32])
        (reg:SI 94 [ _12 ])) "mm/memory.c":413:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 116)
        (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
            (nil))))
(insn 77 76 78 9 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [2 block+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [2 block+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":412:26 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 78 77 79 9 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":412:31 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 79 78 80 10 93 (nil) [1 uses])
(note 80 79 84 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 84 80 85 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
            (const_int 3 [0x3]))) "mm/memory.c":412:16 11 {*cmpsi_1}
     (nil))
(jump_insn 85 84 86 10 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) "mm/memory.c":412:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 81)
(note 86 85 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 11 (set (reg/f:SI 117)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x739b83b2f120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "mm/memory.c":414:26 75 {*movsi_internal}
     (nil))
(insn 88 87 89 11 (set (reg/f:SI 95 [ current.33_13 ])
        (mem/f/c:SI (reg/f:SI 117) [14 current+0 S4 A32])) "mm/memory.c":414:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 89 88 90 11 (set (reg/f:SI 96 [ _14 ])
        (mem/f:SI (plus:SI (reg/f:SI 95 [ current.33_13 ])
                (const_int 632 [0x278])) [8 current.33_13->executable+0 S4 A32])) "mm/memory.c":414:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95 [ current.33_13 ])
        (nil)))
(insn 90 89 91 11 (set (reg:HI 97 [ _15 ])
        (mem:HI (plus:SI (reg/f:SI 96 [ _14 ])
                (const_int 44 [0x2c])) [7 _14->i_dev+0 S2 A32])) "mm/memory.c":414:38 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96 [ _14 ])
        (nil)))
(insn 91 90 92 11 (set (reg:SI 98 [ _16 ])
        (zero_extend:SI (reg:HI 97 [ _15 ]))) "mm/memory.c":414:2 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 97 [ _15 ])
        (nil)))
(insn 92 91 93 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":414:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 93 92 94 11 (parallel [
            (set (reg:SI 118)
                (plus:SI (reg/f:SI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":414:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 94 93 95 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg:SI 118)) "mm/memory.c":414:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 95 94 96 11 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 98 [ _16 ])) "mm/memory.c":414:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 98 [ _16 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 96 95 97 11 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 page+0 S4 A32])) "mm/memory.c":414:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 97 96 98 11 (set (reg:SI 3 bx)
        (reg:SI 82)) "mm/memory.c":414:2 75 {*movsi_internal}
     (nil))
(call_insn 98 97 99 11 (call (mem:QI (symbol_ref:SI ("bread_page") [flags 0x41]  <function_decl 0x739b83b14b00 bread_page>) [0 bread_page S1 A8])
        (const_int 16 [0x10])) "mm/memory.c":414:2 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 99 98 100 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":414:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 100 99 101 11 (set (reg/f:SI 119)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x739b83b2f120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "mm/memory.c":415:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 101 100 102 11 (set (reg/f:SI 99 [ current.34_17 ])
        (mem/f/c:SI (reg/f:SI 119) [14 current+0 S4 A32])) "mm/memory.c":415:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (nil)))
(insn 102 101 103 11 (set (reg:SI 100 [ _18 ])
        (mem:SI (plus:SI (reg/f:SI 99 [ current.34_17 ])
                (const_int 544 [0x220])) [1 current.34_17->end_data+0 S4 A32])) "mm/memory.c":415:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99 [ current.34_17 ])
        (nil)))
(insn 103 102 104 11 (set (reg:SI 120)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])) "mm/memory.c":415:17 75 {*movsi_internal}
     (nil))
(insn 104 103 105 11 (parallel [
            (set (reg:SI 101 [ _19 ])
                (minus:SI (reg:SI 120)
                    (reg:SI 100 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":415:17 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 120)
        (expr_list:REG_DEAD (reg:SI 100 [ _18 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])
                        (reg:SI 100 [ _18 ]))
                    (nil))))))
(insn 105 104 106 11 (parallel [
            (set (reg:SI 102 [ _20 ])
                (plus:SI (reg:SI 101 [ _19 ])
                    (const_int 4096 [0x1000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":415:17 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 101 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 106 105 110 11 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (reg:SI 102 [ _20 ])) "mm/memory.c":415:4 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102 [ _20 ])
        (nil)))
(insn 110 106 111 11 (set (reg:SI 124)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 page+0 S4 A32])) "mm/memory.c":416:6 75 {*movsi_internal}
     (nil))
(insn 111 110 112 11 (parallel [
            (set (reg:SI 123)
                (plus:SI (reg:SI 124)
                    (const_int 4096 [0x1000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":416:6 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 124)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [1 page+0 S4 A32])
                    (const_int 4096 [0x1000]))
                (nil)))))
(insn 112 111 160 11 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])
        (reg:SI 123)) "mm/memory.c":416:6 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 123)
        (nil)))
(jump_insn 160 112 161 11 (set (pc)
        (label_ref 119)) "mm/memory.c":417:8 807 {jump}
     (nil)
 -> 119)
(barrier 161 160 124)
(code_label 124 161 115 12 96 (nil) [1 uses])
(note 115 124 116 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 12 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":418:6 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 117 116 118 12 (set (reg/f:SI 103 [ tmp.35_21 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])) "mm/memory.c":419:4 75 {*movsi_internal}
     (nil))
(insn 118 117 119 12 (set (mem:QI (reg/f:SI 103 [ tmp.35_21 ]) [0 *tmp.35_21+0 S1 A8])
        (const_int 0 [0])) "mm/memory.c":419:16 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103 [ tmp.35_21 ])
        (nil)))
(code_label 119 118 120 13 95 (nil) [1 uses])
(note 120 119 121 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 13 (set (reg:SI 104 [ i.36_22 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "mm/memory.c":417:10 75 {*movsi_internal}
     (nil))
(insn 122 121 123 13 (parallel [
            (set (reg:SI 125)
                (plus:SI (reg:SI 104 [ i.36_22 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":417:10 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 123 122 127 13 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (reg:SI 125)) "mm/memory.c":417:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 125)
        (nil)))
(insn 127 123 128 13 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 104 [ i.36_22 ])
            (const_int 0 [0]))) "mm/memory.c":417:13 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 104 [ i.36_22 ])
        (nil)))
(jump_insn 128 127 129 13 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 124)
            (pc))) "mm/memory.c":417:13 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 124)
(note 129 128 130 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":421:6 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 131 130 132 14 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 address+0 S4 A32])) "mm/memory.c":421:6 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 132 131 133 14 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 page+0 S4 A32])) "mm/memory.c":421:6 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 133 132 134 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("put_page") [flags 0x3]  <function_decl 0x739b83b3bc00 put_page>) [0 put_page S1 A8])
            (const_int 16 [0x10]))) "mm/memory.c":421:6 823 {*call_value}
     (nil)
    (nil))
(insn 134 133 135 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":421:6 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 135 134 136 14 (set (reg:SI 105 [ _23 ])
        (reg:SI 0 ax)) "mm/memory.c":421:6 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 136 135 137 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 105 [ _23 ])
            (const_int 0 [0]))) "mm/memory.c":421:5 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 105 [ _23 ])
        (nil)))
(jump_insn 137 136 142 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 170)
            (pc))) "mm/memory.c":421:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 170)
(note 142 137 143 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":423:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 144 143 145 15 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 page+0 S4 A32])) "mm/memory.c":423:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 145 144 146 15 (call (mem:QI (symbol_ref:SI ("free_page") [flags 0x3]  <function_decl 0x739b83b3b400 free_page>) [0 free_page S1 A8])
        (const_int 16 [0x10])) "mm/memory.c":423:2 812 {*call}
     (nil)
    (nil))
(insn 146 145 147 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":423:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(call_insn 147 146 162 15 (call (mem:QI (symbol_ref:SI ("oom") [flags 0x3]  <function_decl 0x739b83b37f00 oom>) [0 oom S1 A8])
        (const_int 0 [0])) "mm/memory.c":424:2 812 {*call}
     (nil)
    (nil))
(jump_insn 162 147 163 15 (set (pc)
        (label_ref 154)) 807 {jump}
     (nil)
 -> 154)
(barrier 163 162 165)
(code_label 165 163 164 17 99 (nil) [1 uses])
(note 164 165 166 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 166 164 167 17 (const_int 0 [0]) "mm/memory.c":407:3 843 {nop}
     (nil))
(jump_insn 167 166 168 17 (set (pc)
        (label_ref 154)) 807 {jump}
     (nil)
 -> 154)
(barrier 168 167 170)
(code_label 170 168 169 18 100 (nil) [1 uses])
(note 169 170 171 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 171 169 154 18 (const_int 0 [0]) "mm/memory.c":422:3 843 {nop}
     (nil))
(code_label 154 171 155 16 87 (nil) [3 uses])
(note 155 154 0 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

;; Function un_wp_page (un_wp_page, funcdef_no=13, decl_uid=1438, cgraph_uid=14, symbol_order=15)

scanning new insn with uid = 70.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 11 n_edges 14 count 11 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 10 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r107: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r107,l0) best CREG, allocno GENERAL_REGS
    r106: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r106,l0) best DIREG, allocno GENERAL_REGS
    r105: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r105,l0) best SIREG, allocno GENERAL_REGS
    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r104,l0) best AREG, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a9 (r92,l0) best Q_REGS, allocno Q_REGS
    r91: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a10 (r91,l0) best Q_REGS, allocno Q_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a19 (r86,l0) best Q_REGS, allocno Q_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r105,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a1(r106,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a2(r107,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a3(r104,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a4(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a8(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:24000
  a9(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a10(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a11(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a12(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a13(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a14(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a15(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a18(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a20(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a21(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a22(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a23(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a25(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 63(l0): point = 1
   Insn 62(l0): point = 3
   Insn 61(l0): point = 5
   Insn 60(l0): point = 7
   Insn 59(l0): point = 9
   Insn 58(l0): point = 11
   Insn 57(l0): point = 13
   Insn 56(l0): point = 15
   Insn 55(l0): point = 17
   Insn 54(l0): point = 19
   Insn 51(l0): point = 22
   Insn 50(l0): point = 24
   Insn 49(l0): point = 26
   Insn 48(l0): point = 28
   Insn 47(l0): point = 30
   Insn 46(l0): point = 32
   Insn 44(l0): point = 35
   Insn 43(l0): point = 37
   Insn 38(l0): point = 40
   Insn 36(l0): point = 43
   Insn 35(l0): point = 45
   Insn 34(l0): point = 47
   Insn 33(l0): point = 49
   Insn 32(l0): point = 51
   Insn 68(l0): point = 54
   Insn 27(l0): point = 56
   Insn 26(l0): point = 58
   Insn 25(l0): point = 60
   Insn 24(l0): point = 62
   Insn 23(l0): point = 64
   Insn 22(l0): point = 66
   Insn 21(l0): point = 68
   Insn 19(l0): point = 71
   Insn 18(l0): point = 73
   Insn 17(l0): point = 75
   Insn 16(l0): point = 77
   Insn 15(l0): point = 79
   Insn 14(l0): point = 81
   Insn 12(l0): point = 84
   Insn 11(l0): point = 86
   Insn 8(l0): point = 88
   Insn 7(l0): point = 90
   Insn 6(l0): point = 92
   Insn 5(l0): point = 94
   Insn 70(l0): point = 96
 a0(r105): [2..7]
 a1(r106): [2..5]
 a2(r107): [2..3]
 a3(r104): [10..11]
 a4(r103): [14..15]
 a5(r93): [14..17]
 a6(r102): [18..19]
 a7(r90): [23..28]
 a8(r82): [71..96] [23..53]
 a9(r92): [23..24]
 a10(r91): [25..26]
 a11(r89): [29..30]
 a12(r101): [31..32]
 a13(r100): [48..49]
 a14(r99): [57..58]
 a15(r98): [61..62]
 a16(r88): [61..64]
 a17(r87): [65..66]
 a18(r97): [67..68]
 a19(r86): [74..75]
 a20(r85): [76..77]
 a21(r84): [78..79]
 a22(r96): [80..81]
 a23(r95): [89..90]
 a24(r83): [91..92]
 a25(r94): [93..94]
Compressing live ranges: from 99 to 40 - 40%
Ranges after the compression:
 a0(r105): [0..1]
 a1(r106): [0..1]
 a2(r107): [0..1]
 a3(r104): [2..3]
 a4(r103): [4..5]
 a5(r93): [4..5]
 a6(r102): [6..7]
 a7(r90): [8..11]
 a8(r82): [26..39] [8..17]
 a9(r92): [8..9]
 a10(r91): [10..11]
 a11(r89): [12..13]
 a12(r101): [14..15]
 a13(r100): [16..17]
 a14(r99): [18..19]
 a15(r98): [20..21]
 a16(r88): [20..21]
 a17(r87): [22..23]
 a18(r97): [24..25]
 a19(r86): [26..27]
 a20(r85): [28..29]
 a21(r84): [30..31]
 a22(r96): [32..33]
 a23(r95): [34..35]
 a24(r83): [36..37]
 a25(r94): [38..39]
  pref0:a2(r107)<-hr2@1000
  pref1:a1(r106)<-hr5@1000
  pref2:a0(r105)<-hr4@1000
  pref3:a3(r104)<-hr0@1000
  pref4:a13(r100)<-hr0@1500
  pref5:a14(r99)<-hr0@1000
  regions=1, blocks=11, points=40
    allocnos=26 (big 0), copies=0, conflicts=0, ranges=27
Disposition:
    8:r82  l0     3   24:r83  l0     0   21:r84  l0     0   20:r85  l0     0
   19:r86  l0     0   17:r87  l0     0   16:r88  l0     1   11:r89  l0     0
    7:r90  l0     0   10:r91  l0     1    9:r92  l0     1    5:r93  l0     1
   25:r94  l0     0   23:r95  l0     0   22:r96  l0     0   18:r97  l0     0
   15:r98  l0     0   14:r99  l0     0   13:r100 l0     0   12:r101 l0     0
    6:r102 l0     0    4:r103 l0     0    3:r104 l0     0    0:r105 l0     0
    1:r106 l0     1    2:r107 l0     2
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


un_wp_page

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,1u} r1={3d} r2={3d} r6={1d,10u} r7={1d,12u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,13u} r17={18d,4u} r18={2d} r19={1d,20u,3e} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,3u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,2u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} 
;;    total ref usage 279{187d,89u,3e} in 45{43 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 70 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 70 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 70 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 94)
        (mem/f/c:SI (reg/f:SI 16 argp) [16 table_entry+0 S4 A32])) "mm/memory.c":431:26 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 83 [ _1 ])
        (mem:SI (reg/f:SI 94) [1 *table_entry_17(D)+0 S4 A32])) "mm/memory.c":431:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (nil)))
(insn 7 6 8 2 (parallel [
            (set (reg:SI 95)
                (and:SI (reg:SI 83 [ _1 ])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":431:11 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 8 7 11 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 old_page+0 S4 A32])
        (reg:SI 95)) "mm/memory.c":431:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95)
        (nil)))
(insn 11 8 12 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 old_page+0 S4 A32])
            (const_int 1048575 [0xfffff]))) "mm/memory.c":432:5 11 {*cmpsi_1}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "mm/memory.c":432:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 30)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:SI 96)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 old_page+0 S4 A32])) "mm/memory.c":432:37 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (parallel [
            (set (reg:SI 84 [ _2 ])
                (plus:SI (reg:SI 96)
                    (const_int -1048576 [0xfffffffffff00000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":432:37 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 96)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 old_page+0 S4 A32])
                    (const_int -1048576 [0xfffffffffff00000]))
                (nil)))))
(insn 16 15 17 3 (parallel [
            (set (reg:SI 85 [ _3 ])
                (lshiftrt:SI (reg:SI 84 [ _2 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":432:37 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 17 16 18 3 (set (reg:QI 86 [ _4 ])
        (mem:QI (plus:SI (plus:SI (reg:SI 82)
                    (reg:SI 85 [ _3 ]))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("mem_map") [flags 0x2]  <var_decl 0x739b83b2f5a0 mem_map>)
                        ] UNSPEC_GOTOFF))) [0 mem_map[_3]+0 S1 A8])) "mm/memory.c":432:36 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (nil)))
(insn 18 17 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 86 [ _4 ])
            (const_int 1 [0x1]))) "mm/memory.c":432:26 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 86 [ _4 ])
        (nil)))
(jump_insn 19 18 20 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "mm/memory.c":432:26 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 30)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg/f:SI 97)
        (mem/f/c:SI (reg/f:SI 16 argp) [16 table_entry+0 S4 A32])) "mm/memory.c":433:16 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:SI 87 [ _5 ])
        (mem:SI (reg/f:SI 97) [1 *table_entry_17(D)+0 S4 A32])) "mm/memory.c":433:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97)
        (nil)))
(insn 23 22 24 4 (parallel [
            (set (reg:SI 88 [ _6 ])
                (ior:SI (reg:SI 87 [ _5 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":433:16 520 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 24 23 25 4 (set (reg/f:SI 98)
        (mem/f/c:SI (reg/f:SI 16 argp) [16 table_entry+0 S4 A32])) "mm/memory.c":433:16 75 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (mem:SI (reg/f:SI 98) [1 *table_entry_17(D)+0 S4 A32])
        (reg:SI 88 [ _6 ])) "mm/memory.c":433:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 98)
        (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
            (nil))))
(insn 26 25 27 4 (set (reg:SI 99)
        (const_int 0 [0])) "mm/memory.c":434:3 75 {*movsi_internal}
     (nil))
(insn 27 26 68 4 (parallel [
            (asm_operands/v ("movl %%eax, %%cr3") ("") 0 [
                    (reg:SI 99)
                ]
                 [
                    (asm_input:SI ("a") mm/memory.c:434)
                ]
                 [] mm/memory.c:434)
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":434:3 -1
     (expr_list:REG_DEAD (reg:SI 99)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 68 27 69 4 (set (pc)
        (label_ref 66)) "mm/memory.c":435:3 807 {jump}
     (nil)
 -> 66)
(barrier 69 68 30)
(code_label 30 69 31 5 102 (nil) [2 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 32 31 33 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_free_page") [flags 0x3]  <function_decl 0x739b83b3b100 get_free_page>) [0 get_free_page S1 A8])
            (const_int 0 [0]))) "mm/memory.c":437:19 823 {*call_value}
     (nil)
    (nil))
(insn 33 32 34 5 (set (reg:SI 100)
        (reg:SI 0 ax)) "mm/memory.c":437:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 34 33 35 5 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 new_page+0 S4 A32])
        (reg:SI 100)) "mm/memory.c":437:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100)
        (nil)))
(insn 35 34 36 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 new_page+0 S4 A32])
            (const_int 0 [0]))) "mm/memory.c":437:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 36 35 37 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "mm/memory.c":437:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 39)
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 38 37 39 6 (call (mem:QI (symbol_ref:SI ("oom") [flags 0x3]  <function_decl 0x739b83b37f00 oom>) [0 oom S1 A8])
        (const_int 0 [0])) "mm/memory.c":438:3 812 {*call}
     (nil)
    (nil))
(code_label 39 38 40 7 104 (nil) [1 uses])
(note 40 39 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 40 44 7 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 old_page+0 S4 A32])
            (const_int 1048575 [0xfffff]))) "mm/memory.c":439:5 11 {*cmpsi_1}
     (nil))
(jump_insn 44 43 45 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) "mm/memory.c":439:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 52)
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (set (reg:SI 101)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 old_page+0 S4 A32])) "mm/memory.c":440:11 75 {*movsi_internal}
     (nil))
(insn 47 46 48 8 (parallel [
            (set (reg:SI 89 [ _7 ])
                (plus:SI (reg:SI 101)
                    (const_int -1048576 [0xfffffffffff00000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":440:11 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 101)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 old_page+0 S4 A32])
                    (const_int -1048576 [0xfffffffffff00000]))
                (nil)))))
(insn 48 47 49 8 (parallel [
            (set (reg:SI 90 [ _8 ])
                (lshiftrt:SI (reg:SI 89 [ _7 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":440:11 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 49 48 50 8 (set (reg:QI 91 [ _9 ])
        (mem:QI (plus:SI (plus:SI (reg:SI 82)
                    (reg:SI 90 [ _8 ]))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("mem_map") [flags 0x2]  <var_decl 0x739b83b2f5a0 mem_map>)
                        ] UNSPEC_GOTOFF))) [0 mem_map[_8]+0 S1 A8])) "mm/memory.c":440:10 77 {*movqi_internal}
     (nil))
(insn 50 49 51 8 (parallel [
            (set (reg:QI 92 [ _11 ])
                (plus:QI (reg:QI 91 [ _9 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":440:28 213 {*addqi_1}
     (expr_list:REG_DEAD (reg:QI 91 [ _9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 51 50 52 8 (set (mem:QI (plus:SI (plus:SI (reg:SI 82)
                    (reg:SI 90 [ _8 ]))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("mem_map") [flags 0x2]  <var_decl 0x739b83b2f5a0 mem_map>)
                        ] UNSPEC_GOTOFF))) [0 mem_map[_8]+0 S1 A8])
        (reg:QI 92 [ _11 ])) "mm/memory.c":440:28 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 92 [ _11 ])
        (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
            (expr_list:REG_DEAD (reg:SI 82)
                (nil)))))
(code_label 52 51 53 9 105 (nil) [1 uses])
(note 53 52 54 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 9 (set (reg:SI 102)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 new_page+0 S4 A32])) "mm/memory.c":441:26 75 {*movsi_internal}
     (nil))
(insn 55 54 56 9 (parallel [
            (set (reg:SI 93 [ _12 ])
                (ior:SI (reg:SI 102)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":441:26 520 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 102)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ior:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 new_page+0 S4 A32])
                    (const_int 7 [0x7]))
                (nil)))))
(insn 56 55 57 9 (set (reg/f:SI 103)
        (mem/f/c:SI (reg/f:SI 16 argp) [16 table_entry+0 S4 A32])) "mm/memory.c":441:15 75 {*movsi_internal}
     (nil))
(insn 57 56 58 9 (set (mem:SI (reg/f:SI 103) [1 *table_entry_17(D)+0 S4 A32])
        (reg:SI 93 [ _12 ])) "mm/memory.c":441:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (expr_list:REG_DEAD (reg:SI 93 [ _12 ])
            (nil))))
(insn 58 57 59 9 (set (reg:SI 104)
        (const_int 0 [0])) "mm/memory.c":442:2 75 {*movsi_internal}
     (nil))
(insn 59 58 60 9 (parallel [
            (asm_operands/v ("movl %%eax, %%cr3") ("") 0 [
                    (reg:SI 104)
                ]
                 [
                    (asm_input:SI ("a") mm/memory.c:442)
                ]
                 [] mm/memory.c:442)
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":442:2 -1
     (expr_list:REG_DEAD (reg:SI 104)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 60 59 61 9 (set (reg:SI 105)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 old_page+0 S4 A32])) "mm/memory.c":443:2 75 {*movsi_internal}
     (nil))
(insn 61 60 62 9 (set (reg:SI 106)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 new_page+0 S4 A32])) "mm/memory.c":443:2 75 {*movsi_internal}
     (nil))
(insn 62 61 63 9 (set (reg:SI 107)
        (const_int 1024 [0x400])) "mm/memory.c":443:2 75 {*movsi_internal}
     (nil))
(insn 63 62 66 9 (parallel [
            (asm_operands/v ("cld ; rep ; movsl") ("") 0 [
                    (reg:SI 105)
                    (reg:SI 106)
                    (reg:SI 107)
                ]
                 [
                    (asm_input:SI ("S") mm/memory.c:443)
                    (asm_input:SI ("D") mm/memory.c:443)
                    (asm_input:SI ("c") mm/memory.c:443)
                ]
                 [] mm/memory.c:443)
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":443:2 -1
     (expr_list:REG_DEAD (reg:SI 107)
        (expr_list:REG_DEAD (reg:SI 106)
            (expr_list:REG_DEAD (reg:SI 105)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(code_label 66 63 67 10 101 (nil) [1 uses])
(note 67 66 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

;; Function do_wp_page (do_wp_page, funcdef_no=14, decl_uid=1444, cgraph_uid=15, symbol_order=16)

scanning new insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a3(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a4(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a6(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a7(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a8(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a10(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 23(l0): point = 0
   Insn 19(l0): point = 3
   Insn 18(l0): point = 5
   Insn 17(l0): point = 7
   Insn 16(l0): point = 9
   Insn 15(l0): point = 11
   Insn 14(l0): point = 13
   Insn 13(l0): point = 15
   Insn 12(l0): point = 17
   Insn 11(l0): point = 19
   Insn 10(l0): point = 21
   Insn 9(l0): point = 23
   Insn 8(l0): point = 25
   Insn 7(l0): point = 27
   Insn 6(l0): point = 29
   Insn 5(l0): point = 31
   Insn 24(l0): point = 33
 a0(r91): [8..11]
 a1(r90): [12..13]
 a2(r89): [14..15]
 a3(r84): [14..27]
 a4(r88): [16..17]
 a5(r87): [18..19]
 a6(r86): [20..21]
 a7(r85): [22..23]
 a8(r93): [24..25]
 a9(r83): [28..29]
 a10(r92): [30..31]
 a11(r82): [33..33]
Compressing live ranges: from 36 to 21 - 58%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r90): [2..3]
 a2(r89): [4..5]
 a3(r84): [4..15]
 a4(r88): [6..7]
 a5(r87): [8..9]
 a6(r86): [10..11]
 a7(r85): [12..13]
 a8(r93): [14..15]
 a9(r83): [16..17]
 a10(r92): [18..19]
 a11(r82): [20..20]
  regions=1, blocks=4, points=21
    allocnos=12 (big 0), copies=0, conflicts=0, ranges=12
Disposition:
   11:r82  l0     0    9:r83  l0     0    3:r84  l0     1    7:r85  l0     0
    6:r86  l0     0    5:r87  l0     0    4:r88  l0     0    2:r89  l0     0
    1:r90  l0     0    0:r91  l0     0   10:r92  l0     0    8:r93  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_wp_page

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,3u} r7={4d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u,2e} r17={10d} r18={1d} r19={1d,3u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 132{100d,30u,2e} in 17{16 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 24 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 24 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 92)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 address+0 S4 A32])) "mm/memory.c":462:14 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 83 [ _1 ])
                (lshiftrt:SI (reg:SI 92)
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":462:14 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 92)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [1 address+0 S4 A32])
                    (const_int 10 [0xa]))
                (nil)))))
(insn 7 6 8 2 (parallel [
            (set (reg:SI 84 [ _2 ])
                (and:SI (reg:SI 83 [ _1 ])
                    (const_int 4092 [0xffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":462:21 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 8 7 9 2 (set (reg:SI 93)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 address+0 S4 A32])) "mm/memory.c":463:33 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:SI 85 [ _3 ])
                (lshiftrt:SI (reg:SI 93)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":463:33 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 93)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [1 address+0 S4 A32])
                    (const_int 20 [0x14]))
                (nil)))))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 86 [ _4 ])
                (and:SI (reg:SI 85 [ _3 ])
                    (const_int 4092 [0xffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":463:40 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 11 10 12 2 (set (reg/f:SI 87 [ _5 ])
        (reg:SI 86 [ _4 ])) "mm/memory.c":463:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(insn 12 11 13 2 (set (reg:SI 88 [ _6 ])
        (mem:SI (reg/f:SI 87 [ _5 ]) [1 *_5+0 S4 A32])) "mm/memory.c":463:3 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87 [ _5 ])
        (nil)))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 89 [ _7 ])
                (and:SI (reg:SI 88 [ _6 ])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":462:44 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 14 13 15 2 (parallel [
            (set (reg:SI 90 [ _8 ])
                (ior:SI (reg:SI 84 [ _2 ])
                    (reg:SI 89 [ _7 ])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":462:30 520 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 15 14 16 2 (set (reg/f:SI 91 [ _9 ])
        (reg:SI 90 [ _8 ])) "mm/memory.c":461:2 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":461:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 17 16 18 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [16  S4 A32])
        (reg/f:SI 91 [ _9 ])) "mm/memory.c":461:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 91 [ _9 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref:SI ("un_wp_page") [flags 0x3]  <function_decl 0x739b83b4c400 un_wp_page>) [0 un_wp_page S1 A8])
        (const_int 16 [0x10])) "mm/memory.c":461:2 812 {*call}
     (nil)
    (nil))
(insn 19 18 22 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":461:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 22 19 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 0 3 (const_int 0 [0]) "mm/memory.c":464:1 843 {nop}
     (nil))

;; Function calc_mem (calc_mem, funcdef_no=15, decl_uid=1447, cgraph_uid=16, symbol_order=17)

scanning new insn with uid = 111.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 20 n_edges 25 count 30 (  1.5)
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 18 17 19
;;
;; Loop 2
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15 8 14 13 12 9 10 11
;;
;; Loop 3
;;  header 13, latch 12
;;  depth 2, outer 2
;;  nodes: 13 12 10 11
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3 4
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 16 }
;; 8 succs { 9 15 }
;; 9 succs { 13 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 10 14 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 8 18 }
;; 18 succs { 17 }
;; 17 succs { 19 }
;; 19 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a18 (r83,l0) best Q_REGS, allocno Q_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:48000
  a1(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a3(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a7(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a10(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a15(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a19(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a20(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a21(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000

   Insn 110(l0): point = 0
   Insn 108(l0): point = 4
   Insn 46(l0): point = 7
   Insn 45(l0): point = 9
   Insn 44(l0): point = 11
   Insn 43(l0): point = 13
   Insn 42(l0): point = 15
   Insn 41(l0): point = 17
   Insn 97(l0): point = 20
   Insn 96(l0): point = 22
   Insn 90(l0): point = 25
   Insn 87(l0): point = 28
   Insn 86(l0): point = 30
   Insn 85(l0): point = 32
   Insn 84(l0): point = 34
   Insn 83(l0): point = 36
   Insn 82(l0): point = 38
   Insn 81(l0): point = 40
   Insn 80(l0): point = 42
   Insn 78(l0): point = 45
   Insn 77(l0): point = 47
   Insn 71(l0): point = 50
   Insn 66(l0): point = 53
   Insn 65(l0): point = 55
   Insn 64(l0): point = 57
   Insn 63(l0): point = 59
   Insn 62(l0): point = 61
   Insn 61(l0): point = 63
   Insn 60(l0): point = 65
   Insn 59(l0): point = 67
   Insn 68(l0): point = 70
   Insn 105(l0): point = 73
   Insn 55(l0): point = 75
   Insn 54(l0): point = 77
   Insn 53(l0): point = 79
   Insn 52(l0): point = 81
   Insn 51(l0): point = 83
   Insn 50(l0): point = 85
   Insn 49(l0): point = 87
   Insn 48(l0): point = 89
   Insn 103(l0): point = 92
   Insn 37(l0): point = 94
   Insn 36(l0): point = 96
   Insn 35(l0): point = 98
   Insn 34(l0): point = 100
   Insn 33(l0): point = 102
   Insn 32(l0): point = 104
   Insn 31(l0): point = 106
   Insn 30(l0): point = 108
   Insn 29(l0): point = 110
   Insn 15(l0): point = 113
   Insn 14(l0): point = 115
   Insn 13(l0): point = 117
   Insn 12(l0): point = 119
   Insn 11(l0): point = 121
   Insn 10(l0): point = 123
   Insn 27(l0): point = 126
   Insn 26(l0): point = 128
   Insn 20(l0): point = 131
   Insn 17(l0): point = 134
   Insn 101(l0): point = 137
   Insn 6(l0): point = 139
   Insn 5(l0): point = 141
   Insn 111(l0): point = 143
 a0(r82): [7..143]
 a1(r103): [35..36]
 a2(r92): [56..57]
 a3(r91): [58..59]
 a4(r90): [60..61]
 a5(r102): [62..63]
 a6(r89): [62..65]
 a7(r88): [66..67]
 a8(r101): [76..77]
 a9(r87): [82..83]
 a10(r86): [84..85]
 a11(r99): [86..89]
 a12(r100): [86..87]
 a13(r85): [10..11]
 a14(r84): [12..13]
 a15(r97): [14..17]
 a16(r98): [14..15]
 a17(r96): [103..104]
 a18(r83): [116..117]
 a19(r95): [118..119]
 a20(r94): [120..121]
 a21(r93): [120..123]
Compressing live ranges: from 146 to 34 - 23%
Ranges after the compression:
 a0(r82): [0..33]
 a1(r103): [6..7]
 a2(r92): [8..9]
 a3(r91): [10..11]
 a4(r90): [12..13]
 a5(r102): [14..15]
 a6(r89): [14..15]
 a7(r88): [16..17]
 a8(r101): [18..19]
 a9(r87): [20..21]
 a10(r86): [22..23]
 a11(r99): [24..25]
 a12(r100): [24..25]
 a13(r85): [0..1]
 a14(r84): [2..3]
 a15(r97): [4..5]
 a16(r98): [4..5]
 a17(r96): [26..27]
 a18(r83): [28..29]
 a19(r95): [30..31]
 a20(r94): [32..33]
 a21(r93): [32..33]
  regions=1, blocks=20, points=34
    allocnos=22 (big 0), copies=0, conflicts=0, ranges=22
Disposition:
    0:r82  l0     3   18:r83  l0     0   14:r84  l0     0   13:r85  l0     0
   10:r86  l0     0    9:r87  l0     0    7:r88  l0     0    6:r89  l0     1
    4:r90  l0     0    3:r91  l0     0    2:r92  l0     0   21:r93  l0     1
   20:r94  l0     0   19:r95  l0     0   17:r96  l0     0   15:r97  l0     0
   16:r98  l0     1   11:r99  l0     0   12:r100 l0     1    8:r101 l0     0
    5:r102 l0     0    1:r103 l0     0
+++Costs: overall 4000, reg 4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


calc_mem

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r3={2d,2u} r6={1d,19u} r7={11d,35u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,18u} r17={24d,6u} r18={2d} r19={1d,47u,1e} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,7u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u,1e} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} 
;;    total ref usage 358{201d,155u,2e} in 64{62 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 111 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 111 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 111 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 free+0 S4 A32])
        (const_int 0 [0])) "mm/memory.c":468:15 75 {*movsi_internal}
     (nil))
(insn 6 5 101 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (const_int 0 [0])) "mm/memory.c":471:9 75 {*movsi_internal}
     (nil))
(jump_insn 101 6 102 2 (set (pc)
        (label_ref 21)) "mm/memory.c":471:2 807 {jump}
     (nil)
 -> 21)
(barrier 102 101 23)
(code_label 23 102 9 3 110 (nil) [1 uses])
(note 9 23 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:SI 93)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("mem_map") [flags 0x2]  <var_decl 0x739b83b2f5a0 mem_map>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":472:15 205 {*leasi}
     (nil))
(insn 11 10 12 3 (set (reg:SI 94)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "mm/memory.c":472:15 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (parallel [
            (set (reg/f:SI 95)
                (plus:SI (reg:SI 93)
                    (reg:SI 94)))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":472:15 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 94)
        (expr_list:REG_DEAD (reg:SI 93)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 13 12 14 3 (set (reg:QI 83 [ _1 ])
        (mem:QI (reg/f:SI 95) [0 mem_map[i_11]+0 S1 A8])) "mm/memory.c":472:15 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95)
        (nil)))
(insn 14 13 15 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _1 ])
            (const_int 0 [0]))) "mm/memory.c":472:6 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 83 [ _1 ])
        (nil)))
(jump_insn 15 14 16 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "mm/memory.c":472:6 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 18)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -16 [0xfffffffffffffff0])) [2 free+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [2 free+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":473:8 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 18 17 19 5 109 (nil) [1 uses])
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":471:34 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 21 20 22 6 108 (nil) [1 uses])
(note 22 21 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 22 27 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
            (const_int 3839 [0xeff]))) "mm/memory.c":471:16 11 {*cmpsi_1}
     (nil))
(jump_insn 27 26 28 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "mm/memory.c":471:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 23)
(note 28 27 29 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":474:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 30 29 31 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (const_int 3840 [0xf00])) "mm/memory.c":474:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 31 30 32 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 free+0 S4 A32])) "mm/memory.c":474:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 32 31 33 7 (set (reg/f:SI 96)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x739b83b9dab0 *.LC10>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":474:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x739b83b9dab0 *.LC10>)
        (nil)))
(insn 33 32 34 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [15  S4 A32])
        (reg/f:SI 96)) "mm/memory.c":474:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 96)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 34 33 35 7 (set (reg:SI 3 bx)
        (reg:SI 82)) "mm/memory.c":474:2 75 {*movsi_internal}
     (nil))
(call_insn 35 34 36 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x739b83ad2700 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "mm/memory.c":474:2 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 36 35 37 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":474:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 37 36 103 7 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "mm/memory.c":475:9 75 {*movsi_internal}
     (nil))
(jump_insn 103 37 104 7 (set (pc)
        (label_ref 91)) "mm/memory.c":475:2 807 {jump}
     (nil)
 -> 91)
(barrier 104 103 93)
(code_label 93 104 40 8 116 (nil) [1 uses])
(note 40 93 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 8 (set (reg/f:SI 97)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pg_dir") [flags 0x40]  <var_decl 0x739b8530eb40 pg_dir>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "mm/memory.c":476:17 75 {*movsi_internal}
     (nil))
(insn 42 41 43 8 (set (reg:SI 98)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "mm/memory.c":476:17 75 {*movsi_internal}
     (nil))
(insn 43 42 44 8 (set (reg:SI 84 [ _2 ])
        (mem:SI (plus:SI (mult:SI (reg:SI 98)
                    (const_int 4 [0x4]))
                (reg/f:SI 97)) [1 pg_dir[i_12]+0 S4 A32])) "mm/memory.c":476:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98)
        (expr_list:REG_DEAD (reg/f:SI 97)
            (nil))))
(insn 44 43 45 8 (parallel [
            (set (reg:SI 85 [ _3 ])
                (and:SI (reg:SI 84 [ _2 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":476:9 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 45 44 46 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ _3 ])
            (const_int 0 [0]))) "mm/memory.c":476:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (nil)))
(jump_insn 46 45 47 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) "mm/memory.c":476:6 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 88)
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 9 (set (reg/f:SI 99)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("pg_dir") [flags 0x40]  <var_decl 0x739b8530eb40 pg_dir>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "mm/memory.c":477:41 75 {*movsi_internal}
     (nil))
(insn 49 48 50 9 (set (reg:SI 100)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "mm/memory.c":477:41 75 {*movsi_internal}
     (nil))
(insn 50 49 51 9 (set (reg:SI 86 [ _4 ])
        (mem:SI (plus:SI (mult:SI (reg:SI 100)
                    (const_int 4 [0x4]))
                (reg/f:SI 99)) [1 pg_dir[i_12]+0 S4 A32])) "mm/memory.c":477:41 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100)
        (expr_list:REG_DEAD (reg/f:SI 99)
            (nil))))
(insn 51 50 52 9 (parallel [
            (set (reg:SI 87 [ _5 ])
                (and:SI (reg:SI 86 [ _4 ])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":477:33 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 52 51 53 9 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [20 pg_tbl+0 S4 A32])
        (reg:SI 87 [ _5 ])) "mm/memory.c":477:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (nil)))
(insn 53 52 54 9 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 k+0 S4 A32])
        (const_int 0 [0])) "mm/memory.c":478:15 75 {*movsi_internal}
     (nil))
(insn 54 53 55 9 (set (reg:SI 101)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 k+0 S4 A32])) "mm/memory.c":478:11 75 {*movsi_internal}
     (nil))
(insn 55 54 105 9 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A32])
        (reg:SI 101)) "mm/memory.c":478:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 101)
        (nil)))
(jump_insn 105 55 106 9 (set (pc)
        (label_ref 72)) "mm/memory.c":478:4 807 {jump}
     (nil)
 -> 72)
(barrier 106 105 74)
(code_label 74 106 58 10 115 (nil) [1 uses])
(note 58 74 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 10 (set (reg:SI 88 [ j.37_6 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A32])) "mm/memory.c":479:15 75 {*movsi_internal}
     (nil))
(insn 60 59 61 10 (parallel [
            (set (reg:SI 89 [ _7 ])
                (ashift:SI (reg:SI 88 [ j.37_6 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":479:15 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 88 [ j.37_6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 61 60 62 10 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [20 pg_tbl+0 S4 A32])) "mm/memory.c":479:15 75 {*movsi_internal}
     (nil))
(insn 62 61 63 10 (parallel [
            (set (reg/f:SI 90 [ _8 ])
                (plus:SI (reg:SI 89 [ _7 ])
                    (reg/f:SI 102)))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":479:15 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                                (const_int -20 [0xffffffffffffffec])) [20 pg_tbl+0 S4 A32])
                        (reg:SI 89 [ _7 ]))
                    (nil))))))
(insn 63 62 64 10 (set (reg:SI 91 [ _9 ])
        (mem:SI (reg/f:SI 90 [ _8 ]) [1 *_8+0 S4 A32])) "mm/memory.c":479:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90 [ _8 ])
        (nil)))
(insn 64 63 65 10 (parallel [
            (set (reg:SI 92 [ _10 ])
                (and:SI (reg:SI 91 [ _9 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":479:19 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 65 64 66 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ _10 ])
            (const_int 0 [0]))) "mm/memory.c":479:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (nil)))
(jump_insn 66 65 67 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "mm/memory.c":479:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 69)
(note 67 66 68 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 11 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [2 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [2 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":480:7 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 69 68 70 12 114 (nil) [1 uses])
(note 70 69 71 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 12 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":478:31 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 72 71 73 13 113 (nil) [1 uses])
(note 73 72 77 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 77 73 78 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A32])
            (const_int 1023 [0x3ff]))) "mm/memory.c":478:22 11 {*cmpsi_1}
     (nil))
(jump_insn 78 77 79 13 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) "mm/memory.c":478:22 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 74)
(note 79 78 80 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":481:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 81 80 82 14 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 k+0 S4 A32])) "mm/memory.c":481:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 82 81 83 14 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "mm/memory.c":481:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 83 82 84 14 (set (reg/f:SI 103)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0x739b8380f000 *.LC11>)
                    ] UNSPEC_GOTOFF)))) "mm/memory.c":481:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0x739b8380f000 *.LC11>)
        (nil)))
(insn 84 83 85 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [15  S4 A32])
        (reg/f:SI 103)) "mm/memory.c":481:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 85 84 86 14 (set (reg:SI 3 bx)
        (reg:SI 82)) "mm/memory.c":481:5 75 {*movsi_internal}
     (nil))
(call_insn 86 85 87 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x739b83ad2700 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "mm/memory.c":481:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 87 86 88 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":481:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 88 87 89 15 112 (nil) [1 uses])
(note 89 88 90 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 15 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":475:25 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 91 90 92 16 111 (nil) [1 uses])
(note 92 91 96 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 96 92 97 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
            (const_int 1023 [0x3ff]))) "mm/memory.c":475:16 11 {*cmpsi_1}
     (nil))
(jump_insn 97 96 107 16 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) "mm/memory.c":475:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 93)
(note 107 97 108 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 98 18 (const_int 0 [0]) "mm/memory.c":484:1 843 {nop}
     (nil))
(note 98 108 109 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(note 109 98 110 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 0 19 (const_int 0 [0]) "mm/memory.c":484:1 843 {nop}
     (nil))

;; Function write_verify (write_verify, funcdef_no=16, decl_uid=1467, cgraph_uid=17, symbol_order=18)

scanning new insn with uid = 52.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 6 7 5
;; 2 succs { 6 3 }
;; 3 succs { 4 7 }
;; 4 succs { 7 }
;; 6 succs { 5 }
;; 7 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a6(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a11(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a12(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a13(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 51(l0): point = 1
   Insn 47(l0): point = 4
   Insn 46(l0): point = 6
   Insn 42(l0): point = 9
   Insn 35(l0): point = 11
   Insn 34(l0): point = 13
   Insn 33(l0): point = 15
   Insn 32(l0): point = 17
   Insn 31(l0): point = 19
   Insn 29(l0): point = 22
   Insn 28(l0): point = 24
   Insn 27(l0): point = 26
   Insn 26(l0): point = 28
   Insn 25(l0): point = 30
   Insn 24(l0): point = 32
   Insn 23(l0): point = 34
   Insn 22(l0): point = 36
   Insn 21(l0): point = 38
   Insn 20(l0): point = 40
   Insn 14(l0): point = 43
   Insn 13(l0): point = 45
   Insn 12(l0): point = 47
   Insn 11(l0): point = 49
   Insn 10(l0): point = 51
   Insn 9(l0): point = 53
   Insn 8(l0): point = 55
   Insn 7(l0): point = 57
   Insn 6(l0): point = 59
   Insn 5(l0): point = 61
   Insn 52(l0): point = 63
 a0(r92): [16..19]
 a1(r91): [25..26]
 a2(r90): [27..28]
 a3(r89): [29..30]
 a4(r88): [33..34]
 a5(r87): [35..36]
 a6(r96): [37..38]
 a7(r86): [46..47]
 a8(r95): [48..49]
 a9(r94): [52..53]
 a10(r85): [54..55]
 a11(r84): [56..57]
 a12(r83): [58..59]
 a13(r93): [60..61]
 a14(r82): [63..63]
Compressing live ranges: from 66 to 29 - 43%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [2..3]
 a2(r90): [4..5]
 a3(r89): [6..7]
 a4(r88): [8..9]
 a5(r87): [10..11]
 a6(r96): [12..13]
 a7(r86): [14..15]
 a8(r95): [16..17]
 a9(r94): [18..19]
 a10(r85): [20..21]
 a11(r84): [22..23]
 a12(r83): [24..25]
 a13(r93): [26..27]
 a14(r82): [28..28]
  regions=1, blocks=8, points=29
    allocnos=15 (big 0), copies=0, conflicts=0, ranges=15
Disposition:
   14:r82  l0     0   12:r83  l0     0   11:r84  l0     0   10:r85  l0     0
    7:r86  l0     0    5:r87  l0     0    4:r88  l0     0    3:r89  l0     0
    2:r90  l0     0    1:r91  l0     0    0:r92  l0     0   13:r93  l0     0
    9:r94  l0     0    8:r95  l0     0    6:r96  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


write_verify

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,7u} r7={4d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,8u,2e} r17={14d,2u} r18={1d} r19={1d,15u,1e} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 169{107d,59u,3e} in 30{29 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 52 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 52 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 52 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 93)
        (mem/c:SI (reg/f:SI 16 argp) [1 address+0 S4 A32])) "mm/memory.c":490:48 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 83 [ _1 ])
                (lshiftrt:SI (reg:SI 93)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":490:48 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 93)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (reg/f:SI 16 argp) [1 address+0 S4 A32])
                    (const_int 20 [0x14]))
                (nil)))))
(insn 7 6 8 2 (parallel [
            (set (reg:SI 84 [ _2 ])
                (and:SI (reg:SI 83 [ _1 ])
                    (const_int 4092 [0xffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":490:55 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 8 7 9 2 (set (reg/f:SI 85 [ _3 ])
        (reg:SI 84 [ _2 ])) "mm/memory.c":490:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(insn 9 8 10 2 (set (reg:SI 94)
        (mem:SI (reg/f:SI 85 [ _3 ]) [1 *_3+0 S4 A32])) "mm/memory.c":490:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ _3 ])
        (nil)))
(insn 10 9 11 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 page+0 S4 A32])
        (reg:SI 94)) "mm/memory.c":490:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 95)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 page+0 S4 A32])) "mm/memory.c":490:66 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 86 [ _4 ])
                (and:SI (reg:SI 95)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":490:66 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 page+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 86 [ _4 ])
            (const_int 0 [0]))) "mm/memory.c":490:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(jump_insn 14 13 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 45)
            (pc))) "mm/memory.c":490:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 45)
(note 19 14 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 3 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 page+0 S4 A32])
                (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 page+0 S4 A32])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":492:10 490 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 21 20 22 3 (set (reg:SI 96)
        (mem/c:SI (reg/f:SI 16 argp) [1 address+0 S4 A32])) "mm/memory.c":493:23 75 {*movsi_internal}
     (nil))
(insn 22 21 23 3 (parallel [
            (set (reg:SI 87 [ _5 ])
                (lshiftrt:SI (reg:SI 96)
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":493:23 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 96)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (reg/f:SI 16 argp) [1 address+0 S4 A32])
                    (const_int 10 [0xa]))
                (nil)))))
(insn 23 22 24 3 (parallel [
            (set (reg:SI 88 [ _6 ])
                (and:SI (reg:SI 87 [ _5 ])
                    (const_int 4092 [0xffc])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":493:30 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 24 23 25 3 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 page+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 page+0 S4 A32])
                    (reg:SI 88 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":493:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 25 24 26 3 (set (reg/f:SI 89 [ page.38_7 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 page+0 S4 A32])) "mm/memory.c":494:15 75 {*movsi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:SI 90 [ _8 ])
        (mem:SI (reg/f:SI 89 [ page.38_7 ]) [1 *page.38_7+0 S4 A32])) "mm/memory.c":494:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89 [ page.38_7 ])
        (nil)))
(insn 27 26 28 3 (parallel [
            (set (reg:SI 91 [ _9 ])
                (and:SI (reg:SI 90 [ _8 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":494:12 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ _9 ])
            (const_int 1 [0x1]))) "mm/memory.c":494:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (nil)))
(jump_insn 29 28 30 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 50)
            (pc))) "mm/memory.c":494:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 50)
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 4 (set (reg/f:SI 92 [ page.39_10 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 page+0 S4 A32])) "mm/memory.c":495:9 75 {*movsi_internal}
     (nil))
(insn 32 31 33 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":495:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 33 32 34 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [16  S4 A32])
        (reg/f:SI 92 [ page.39_10 ])) "mm/memory.c":495:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 92 [ page.39_10 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 34 33 35 4 (call (mem:QI (symbol_ref:SI ("un_wp_page") [flags 0x3]  <function_decl 0x739b83b4c400 un_wp_page>) [0 un_wp_page S1 A8])
        (const_int 16 [0x10])) "mm/memory.c":495:9 812 {*call}
     (nil)
    (nil))
(insn 35 34 42 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mm/memory.c":495:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 42 35 43 4 (set (pc)
        (label_ref:SI 50)) "mm/memory.c":496:5 807 {jump}
     (nil)
 -> 50)
(barrier 43 42 45)
(code_label 45 43 44 6 121 (nil) [1 uses])
(note 44 45 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 44 47 6 (const_int 0 [0]) "mm/memory.c":491:9 843 {nop}
     (nil))
(jump_insn 47 46 48 6 (set (pc)
        (label_ref 40)) 807 {jump}
     (nil)
 -> 40)
(barrier 48 47 50)
(code_label 50 48 49 7 122 (nil) [2 uses])
(note 49 50 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 49 40 7 (const_int 0 [0]) "mm/memory.c":496:5 843 {nop}
     (nil))
(code_label 40 51 41 5 117 (nil) [1 uses])
(note 41 40 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
